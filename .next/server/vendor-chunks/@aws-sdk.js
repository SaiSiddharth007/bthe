/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@aws-sdk";
exports.ids = ["vendor-chunks/@aws-sdk"];
exports.modules = {

/***/ "(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/CognitoIdentityClient.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-cognito-identity/dist/es/CognitoIdentityClient.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CognitoIdentityClient: () => (/* binding */ CognitoIdentityClient)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _runtimeConfig__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./runtimeConfig */ \"(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/runtimeConfig.js\");\n/* harmony import */ var _aws_sdk_config_resolver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/config-resolver */ \"(ssr)/./node_modules/@aws-sdk/config-resolver/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_middleware_content_length__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/middleware-content-length */ \"(ssr)/./node_modules/@aws-sdk/middleware-content-length/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_middleware_host_header__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/middleware-host-header */ \"(ssr)/./node_modules/@aws-sdk/middleware-host-header/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_middleware_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/middleware-logger */ \"(ssr)/./node_modules/@aws-sdk/middleware-logger/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_middleware_retry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-sdk/middleware-retry */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_middleware_signing__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aws-sdk/middleware-signing */ \"(ssr)/./node_modules/@aws-sdk/middleware-signing/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_middleware_user_agent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aws-sdk/middleware-user-agent */ \"(ssr)/./node_modules/@aws-sdk/middleware-user-agent/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @aws-sdk/smithy-client */ \"(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/index.js\");\n\n\n\n\n\n\n\n\n\n\n/**\n * <fullname>Amazon Cognito Federated Identities</fullname>\n *          <p>Amazon Cognito Federated Identities is a web service that delivers scoped temporary\n *          credentials to mobile devices and other untrusted environments. It uniquely identifies a\n *          device and supplies the user with a consistent identity over the lifetime of an\n *          application.</p>\n *          <p>Using Amazon Cognito Federated Identities, you can enable authentication with one or\n *          more third-party identity providers (Facebook, Google, or Login with Amazon) or an Amazon\n *          Cognito user pool, and you can also choose to support unauthenticated access from your app.\n *          Cognito delivers a unique identifier for each user and acts as an OpenID token provider\n *          trusted by AWS Security Token Service (STS) to access temporary, limited-privilege AWS\n *          credentials.</p>\n *          <p>For a description of the authentication flow from the Amazon Cognito Developer Guide\n *          see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/authentication-flow.html\">Authentication Flow</a>.</p>\n *          <p>For more information see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-identity.html\">Amazon Cognito Federated Identities</a>.</p>\n */\nvar CognitoIdentityClient = /** @class */ (function (_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__extends)(CognitoIdentityClient, _super);\n    function CognitoIdentityClient(configuration) {\n        var _this = this;\n        var _config_0 = (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_8__.__assign)({}, _runtimeConfig__WEBPACK_IMPORTED_MODULE_9__.ClientDefaultValues), configuration);\n        var _config_1 = (0,_aws_sdk_config_resolver__WEBPACK_IMPORTED_MODULE_0__.resolveRegionConfig)(_config_0);\n        var _config_2 = (0,_aws_sdk_config_resolver__WEBPACK_IMPORTED_MODULE_0__.resolveEndpointsConfig)(_config_1);\n        var _config_3 = (0,_aws_sdk_middleware_signing__WEBPACK_IMPORTED_MODULE_5__.resolveAwsAuthConfig)(_config_2);\n        var _config_4 = (0,_aws_sdk_middleware_retry__WEBPACK_IMPORTED_MODULE_4__.resolveRetryConfig)(_config_3);\n        var _config_5 = (0,_aws_sdk_middleware_host_header__WEBPACK_IMPORTED_MODULE_2__.resolveHostHeaderConfig)(_config_4);\n        var _config_6 = (0,_aws_sdk_middleware_user_agent__WEBPACK_IMPORTED_MODULE_6__.resolveUserAgentConfig)(_config_5);\n        _this = _super.call(this, _config_6) || this;\n        _this.config = _config_6;\n        _this.middlewareStack.use((0,_aws_sdk_middleware_retry__WEBPACK_IMPORTED_MODULE_4__.getRetryPlugin)(_this.config));\n        _this.middlewareStack.use((0,_aws_sdk_middleware_content_length__WEBPACK_IMPORTED_MODULE_1__.getContentLengthPlugin)(_this.config));\n        _this.middlewareStack.use((0,_aws_sdk_middleware_host_header__WEBPACK_IMPORTED_MODULE_2__.getHostHeaderPlugin)(_this.config));\n        _this.middlewareStack.use((0,_aws_sdk_middleware_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerPlugin)(_this.config));\n        _this.middlewareStack.use((0,_aws_sdk_middleware_user_agent__WEBPACK_IMPORTED_MODULE_6__.getUserAgentPlugin)(_this.config));\n        return _this;\n    }\n    CognitoIdentityClient.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    return CognitoIdentityClient;\n}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_7__.Client));\n\n//# sourceMappingURL=CognitoIdentityClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LWNvZ25pdG8taWRlbnRpdHkvZGlzdC9lcy9Db2duaXRvSWRlbnRpdHlDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBNEM7QUFDbUM7QUFDUztBQUNaO0FBQ29CO0FBQ25DO0FBQ2tCO0FBQ1o7QUFDMEI7QUFDaEM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksZ0RBQVM7QUFDYjtBQUNBO0FBQ0Esd0JBQXdCLCtDQUFRLENBQUMsK0NBQVEsR0FBRyxFQUFFLCtEQUFxQjtBQUNuRSx3QkFBd0IsNkVBQW1CO0FBQzNDLHdCQUF3QixnRkFBc0I7QUFDOUMsd0JBQXdCLGlGQUFvQjtBQUM1Qyx3QkFBd0IsNkVBQWtCO0FBQzFDLHdCQUF3Qix3RkFBdUI7QUFDL0Msd0JBQXdCLHNGQUFzQjtBQUM5QztBQUNBO0FBQ0Esa0NBQWtDLHlFQUFjO0FBQ2hELGtDQUFrQywwRkFBc0I7QUFDeEQsa0NBQWtDLG9GQUFtQjtBQUNyRCxrQ0FBa0MsMkVBQWU7QUFDakQsa0NBQWtDLGtGQUFrQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLENBQUMsMERBQVE7QUFDdUI7QUFDakMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NsaWVudC1jb2duaXRvLWlkZW50aXR5L2Rpc3QvZXMvQ29nbml0b0lkZW50aXR5Q2xpZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fYXNzaWduLCBfX2V4dGVuZHMgfSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IENsaWVudERlZmF1bHRWYWx1ZXMgYXMgX19DbGllbnREZWZhdWx0VmFsdWVzIH0gZnJvbSBcIi4vcnVudGltZUNvbmZpZ1wiO1xuaW1wb3J0IHsgcmVzb2x2ZUVuZHBvaW50c0NvbmZpZywgcmVzb2x2ZVJlZ2lvbkNvbmZpZywgfSBmcm9tIFwiQGF3cy1zZGsvY29uZmlnLXJlc29sdmVyXCI7XG5pbXBvcnQgeyBnZXRDb250ZW50TGVuZ3RoUGx1Z2luIH0gZnJvbSBcIkBhd3Mtc2RrL21pZGRsZXdhcmUtY29udGVudC1sZW5ndGhcIjtcbmltcG9ydCB7IGdldEhvc3RIZWFkZXJQbHVnaW4sIHJlc29sdmVIb3N0SGVhZGVyQ29uZmlnLCB9IGZyb20gXCJAYXdzLXNkay9taWRkbGV3YXJlLWhvc3QtaGVhZGVyXCI7XG5pbXBvcnQgeyBnZXRMb2dnZXJQbHVnaW4gfSBmcm9tIFwiQGF3cy1zZGsvbWlkZGxld2FyZS1sb2dnZXJcIjtcbmltcG9ydCB7IGdldFJldHJ5UGx1Z2luLCByZXNvbHZlUmV0cnlDb25maWcgfSBmcm9tIFwiQGF3cy1zZGsvbWlkZGxld2FyZS1yZXRyeVwiO1xuaW1wb3J0IHsgcmVzb2x2ZUF3c0F1dGhDb25maWcgfSBmcm9tIFwiQGF3cy1zZGsvbWlkZGxld2FyZS1zaWduaW5nXCI7XG5pbXBvcnQgeyBnZXRVc2VyQWdlbnRQbHVnaW4sIHJlc29sdmVVc2VyQWdlbnRDb25maWcsIH0gZnJvbSBcIkBhd3Mtc2RrL21pZGRsZXdhcmUtdXNlci1hZ2VudFwiO1xuaW1wb3J0IHsgQ2xpZW50IGFzIF9fQ2xpZW50LCB9IGZyb20gXCJAYXdzLXNkay9zbWl0aHktY2xpZW50XCI7XG4vKipcbiAqIDxmdWxsbmFtZT5BbWF6b24gQ29nbml0byBGZWRlcmF0ZWQgSWRlbnRpdGllczwvZnVsbG5hbWU+XG4gKiAgICAgICAgICA8cD5BbWF6b24gQ29nbml0byBGZWRlcmF0ZWQgSWRlbnRpdGllcyBpcyBhIHdlYiBzZXJ2aWNlIHRoYXQgZGVsaXZlcnMgc2NvcGVkIHRlbXBvcmFyeVxuICogICAgICAgICAgY3JlZGVudGlhbHMgdG8gbW9iaWxlIGRldmljZXMgYW5kIG90aGVyIHVudHJ1c3RlZCBlbnZpcm9ubWVudHMuIEl0IHVuaXF1ZWx5IGlkZW50aWZpZXMgYVxuICogICAgICAgICAgZGV2aWNlIGFuZCBzdXBwbGllcyB0aGUgdXNlciB3aXRoIGEgY29uc2lzdGVudCBpZGVudGl0eSBvdmVyIHRoZSBsaWZldGltZSBvZiBhblxuICogICAgICAgICAgYXBwbGljYXRpb24uPC9wPlxuICogICAgICAgICAgPHA+VXNpbmcgQW1hem9uIENvZ25pdG8gRmVkZXJhdGVkIElkZW50aXRpZXMsIHlvdSBjYW4gZW5hYmxlIGF1dGhlbnRpY2F0aW9uIHdpdGggb25lIG9yXG4gKiAgICAgICAgICBtb3JlIHRoaXJkLXBhcnR5IGlkZW50aXR5IHByb3ZpZGVycyAoRmFjZWJvb2ssIEdvb2dsZSwgb3IgTG9naW4gd2l0aCBBbWF6b24pIG9yIGFuIEFtYXpvblxuICogICAgICAgICAgQ29nbml0byB1c2VyIHBvb2wsIGFuZCB5b3UgY2FuIGFsc28gY2hvb3NlIHRvIHN1cHBvcnQgdW5hdXRoZW50aWNhdGVkIGFjY2VzcyBmcm9tIHlvdXIgYXBwLlxuICogICAgICAgICAgQ29nbml0byBkZWxpdmVycyBhIHVuaXF1ZSBpZGVudGlmaWVyIGZvciBlYWNoIHVzZXIgYW5kIGFjdHMgYXMgYW4gT3BlbklEIHRva2VuIHByb3ZpZGVyXG4gKiAgICAgICAgICB0cnVzdGVkIGJ5IEFXUyBTZWN1cml0eSBUb2tlbiBTZXJ2aWNlIChTVFMpIHRvIGFjY2VzcyB0ZW1wb3JhcnksIGxpbWl0ZWQtcHJpdmlsZWdlIEFXU1xuICogICAgICAgICAgY3JlZGVudGlhbHMuPC9wPlxuICogICAgICAgICAgPHA+Rm9yIGEgZGVzY3JpcHRpb24gb2YgdGhlIGF1dGhlbnRpY2F0aW9uIGZsb3cgZnJvbSB0aGUgQW1hem9uIENvZ25pdG8gRGV2ZWxvcGVyIEd1aWRlXG4gKiAgICAgICAgICBzZWUgPGEgaHJlZj1cImh0dHBzOi8vZG9jcy5hd3MuYW1hem9uLmNvbS9jb2duaXRvL2xhdGVzdC9kZXZlbG9wZXJndWlkZS9hdXRoZW50aWNhdGlvbi1mbG93Lmh0bWxcIj5BdXRoZW50aWNhdGlvbiBGbG93PC9hPi48L3A+XG4gKiAgICAgICAgICA8cD5Gb3IgbW9yZSBpbmZvcm1hdGlvbiBzZWUgPGEgaHJlZj1cImh0dHBzOi8vZG9jcy5hd3MuYW1hem9uLmNvbS9jb2duaXRvL2xhdGVzdC9kZXZlbG9wZXJndWlkZS9jb2duaXRvLWlkZW50aXR5Lmh0bWxcIj5BbWF6b24gQ29nbml0byBGZWRlcmF0ZWQgSWRlbnRpdGllczwvYT4uPC9wPlxuICovXG52YXIgQ29nbml0b0lkZW50aXR5Q2xpZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhDb2duaXRvSWRlbnRpdHlDbGllbnQsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gQ29nbml0b0lkZW50aXR5Q2xpZW50KGNvbmZpZ3VyYXRpb24pIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdmFyIF9jb25maWdfMCA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCBfX0NsaWVudERlZmF1bHRWYWx1ZXMpLCBjb25maWd1cmF0aW9uKTtcbiAgICAgICAgdmFyIF9jb25maWdfMSA9IHJlc29sdmVSZWdpb25Db25maWcoX2NvbmZpZ18wKTtcbiAgICAgICAgdmFyIF9jb25maWdfMiA9IHJlc29sdmVFbmRwb2ludHNDb25maWcoX2NvbmZpZ18xKTtcbiAgICAgICAgdmFyIF9jb25maWdfMyA9IHJlc29sdmVBd3NBdXRoQ29uZmlnKF9jb25maWdfMik7XG4gICAgICAgIHZhciBfY29uZmlnXzQgPSByZXNvbHZlUmV0cnlDb25maWcoX2NvbmZpZ18zKTtcbiAgICAgICAgdmFyIF9jb25maWdfNSA9IHJlc29sdmVIb3N0SGVhZGVyQ29uZmlnKF9jb25maWdfNCk7XG4gICAgICAgIHZhciBfY29uZmlnXzYgPSByZXNvbHZlVXNlckFnZW50Q29uZmlnKF9jb25maWdfNSk7XG4gICAgICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgX2NvbmZpZ182KSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5jb25maWcgPSBfY29uZmlnXzY7XG4gICAgICAgIF90aGlzLm1pZGRsZXdhcmVTdGFjay51c2UoZ2V0UmV0cnlQbHVnaW4oX3RoaXMuY29uZmlnKSk7XG4gICAgICAgIF90aGlzLm1pZGRsZXdhcmVTdGFjay51c2UoZ2V0Q29udGVudExlbmd0aFBsdWdpbihfdGhpcy5jb25maWcpKTtcbiAgICAgICAgX3RoaXMubWlkZGxld2FyZVN0YWNrLnVzZShnZXRIb3N0SGVhZGVyUGx1Z2luKF90aGlzLmNvbmZpZykpO1xuICAgICAgICBfdGhpcy5taWRkbGV3YXJlU3RhY2sudXNlKGdldExvZ2dlclBsdWdpbihfdGhpcy5jb25maWcpKTtcbiAgICAgICAgX3RoaXMubWlkZGxld2FyZVN0YWNrLnVzZShnZXRVc2VyQWdlbnRQbHVnaW4oX3RoaXMuY29uZmlnKSk7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgQ29nbml0b0lkZW50aXR5Q2xpZW50LnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBfc3VwZXIucHJvdG90eXBlLmRlc3Ryb3kuY2FsbCh0aGlzKTtcbiAgICB9O1xuICAgIHJldHVybiBDb2duaXRvSWRlbnRpdHlDbGllbnQ7XG59KF9fQ2xpZW50KSk7XG5leHBvcnQgeyBDb2duaXRvSWRlbnRpdHlDbGllbnQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvZ25pdG9JZGVudGl0eUNsaWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/CognitoIdentityClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/commands/GetCredentialsForIdentityCommand.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-cognito-identity/dist/es/commands/GetCredentialsForIdentityCommand.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GetCredentialsForIdentityCommand: () => (/* binding */ GetCredentialsForIdentityCommand)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/models_0 */ \"(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/models/models_0.js\");\n/* harmony import */ var _protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../protocols/Aws_json1_1 */ \"(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/protocols/Aws_json1_1.js\");\n/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ \"(ssr)/./node_modules/@aws-sdk/middleware-serde/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/smithy-client */ \"(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/index.js\");\n\n\n\n\n\n/**\n * <p>Returns credentials for the provided identity ID. Any provided logins will be\n *          validated against supported login providers. If the token is for\n *          cognito-identity.amazonaws.com, it will be passed through to AWS Security Token Service\n *          with the appropriate role for the token.</p>\n *          <p>This is a public API. You do not need any credentials to call this API.</p>\n */\nvar GetCredentialsForIdentityCommand = /** @class */ (function (_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(GetCredentialsForIdentityCommand, _super);\n    // Start section: command_properties\n    // End section: command_properties\n    function GetCredentialsForIdentityCommand(input) {\n        var _this = \n        // Start section: command_constructor\n        _super.call(this) || this;\n        _this.input = input;\n        return _this;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    GetCredentialsForIdentityCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n        this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_0__.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        var stack = clientStack.concat(this.middlewareStack);\n        var logger = configuration.logger;\n        var clientName = \"CognitoIdentityClient\";\n        var commandName = \"GetCredentialsForIdentityCommand\";\n        var handlerExecutionContext = {\n            logger: logger,\n            clientName: clientName,\n            commandName: commandName,\n            inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_3__.GetCredentialsForIdentityInput.filterSensitiveLog,\n            outputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_3__.GetCredentialsForIdentityResponse.filterSensitiveLog,\n        };\n        var requestHandler = configuration.requestHandler;\n        return stack.resolve(function (request) {\n            return requestHandler.handle(request.request, options || {});\n        }, handlerExecutionContext);\n    };\n    GetCredentialsForIdentityCommand.prototype.serialize = function (input, context) {\n        return (0,_protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_4__.serializeAws_json1_1GetCredentialsForIdentityCommand)(input, context);\n    };\n    GetCredentialsForIdentityCommand.prototype.deserialize = function (output, context) {\n        return (0,_protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_4__.deserializeAws_json1_1GetCredentialsForIdentityCommand)(output, context);\n    };\n    return GetCredentialsForIdentityCommand;\n}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.Command));\n\n//# sourceMappingURL=GetCredentialsForIdentityCommand.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LWNvZ25pdG8taWRlbnRpdHkvZGlzdC9lcy9jb21tYW5kcy9HZXRDcmVkZW50aWFsc0ZvcklkZW50aXR5Q29tbWFuZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBa0M7QUFDcUU7QUFDa0Q7QUFDOUY7QUFDRTtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxnREFBUztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMseUVBQWM7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyw0RUFBOEI7QUFDbkUsc0NBQXNDLCtFQUFpQztBQUN2RTtBQUNBO0FBQ0E7QUFDQSx1RUFBdUU7QUFDdkUsU0FBUztBQUNUO0FBQ0E7QUFDQSxlQUFlLDRHQUFvRDtBQUNuRTtBQUNBO0FBQ0EsZUFBZSw4R0FBc0Q7QUFDckU7QUFDQTtBQUNBLENBQUMsQ0FBQywyREFBUTtBQUNrQztBQUM1QyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LWNvZ25pdG8taWRlbnRpdHkvZGlzdC9lcy9jb21tYW5kcy9HZXRDcmVkZW50aWFsc0ZvcklkZW50aXR5Q29tbWFuZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX2V4dGVuZHMgfSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IEdldENyZWRlbnRpYWxzRm9ySWRlbnRpdHlJbnB1dCwgR2V0Q3JlZGVudGlhbHNGb3JJZGVudGl0eVJlc3BvbnNlIH0gZnJvbSBcIi4uL21vZGVscy9tb2RlbHNfMFwiO1xuaW1wb3J0IHsgZGVzZXJpYWxpemVBd3NfanNvbjFfMUdldENyZWRlbnRpYWxzRm9ySWRlbnRpdHlDb21tYW5kLCBzZXJpYWxpemVBd3NfanNvbjFfMUdldENyZWRlbnRpYWxzRm9ySWRlbnRpdHlDb21tYW5kLCB9IGZyb20gXCIuLi9wcm90b2NvbHMvQXdzX2pzb24xXzFcIjtcbmltcG9ydCB7IGdldFNlcmRlUGx1Z2luIH0gZnJvbSBcIkBhd3Mtc2RrL21pZGRsZXdhcmUtc2VyZGVcIjtcbmltcG9ydCB7IENvbW1hbmQgYXMgJENvbW1hbmQgfSBmcm9tIFwiQGF3cy1zZGsvc21pdGh5LWNsaWVudFwiO1xuLyoqXG4gKiA8cD5SZXR1cm5zIGNyZWRlbnRpYWxzIGZvciB0aGUgcHJvdmlkZWQgaWRlbnRpdHkgSUQuIEFueSBwcm92aWRlZCBsb2dpbnMgd2lsbCBiZVxuICogICAgICAgICAgdmFsaWRhdGVkIGFnYWluc3Qgc3VwcG9ydGVkIGxvZ2luIHByb3ZpZGVycy4gSWYgdGhlIHRva2VuIGlzIGZvclxuICogICAgICAgICAgY29nbml0by1pZGVudGl0eS5hbWF6b25hd3MuY29tLCBpdCB3aWxsIGJlIHBhc3NlZCB0aHJvdWdoIHRvIEFXUyBTZWN1cml0eSBUb2tlbiBTZXJ2aWNlXG4gKiAgICAgICAgICB3aXRoIHRoZSBhcHByb3ByaWF0ZSByb2xlIGZvciB0aGUgdG9rZW4uPC9wPlxuICogICAgICAgICAgPHA+VGhpcyBpcyBhIHB1YmxpYyBBUEkuIFlvdSBkbyBub3QgbmVlZCBhbnkgY3JlZGVudGlhbHMgdG8gY2FsbCB0aGlzIEFQSS48L3A+XG4gKi9cbnZhciBHZXRDcmVkZW50aWFsc0ZvcklkZW50aXR5Q29tbWFuZCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoR2V0Q3JlZGVudGlhbHNGb3JJZGVudGl0eUNvbW1hbmQsIF9zdXBlcik7XG4gICAgLy8gU3RhcnQgc2VjdGlvbjogY29tbWFuZF9wcm9wZXJ0aWVzXG4gICAgLy8gRW5kIHNlY3Rpb246IGNvbW1hbmRfcHJvcGVydGllc1xuICAgIGZ1bmN0aW9uIEdldENyZWRlbnRpYWxzRm9ySWRlbnRpdHlDb21tYW5kKGlucHV0KSB7XG4gICAgICAgIHZhciBfdGhpcyA9IFxuICAgICAgICAvLyBTdGFydCBzZWN0aW9uOiBjb21tYW5kX2NvbnN0cnVjdG9yXG4gICAgICAgIF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLmlucHV0ID0gaW5wdXQ7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICAgICAgLy8gRW5kIHNlY3Rpb246IGNvbW1hbmRfY29uc3RydWN0b3JcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgR2V0Q3JlZGVudGlhbHNGb3JJZGVudGl0eUNvbW1hbmQucHJvdG90eXBlLnJlc29sdmVNaWRkbGV3YXJlID0gZnVuY3Rpb24gKGNsaWVudFN0YWNrLCBjb25maWd1cmF0aW9uLCBvcHRpb25zKSB7XG4gICAgICAgIHRoaXMubWlkZGxld2FyZVN0YWNrLnVzZShnZXRTZXJkZVBsdWdpbihjb25maWd1cmF0aW9uLCB0aGlzLnNlcmlhbGl6ZSwgdGhpcy5kZXNlcmlhbGl6ZSkpO1xuICAgICAgICB2YXIgc3RhY2sgPSBjbGllbnRTdGFjay5jb25jYXQodGhpcy5taWRkbGV3YXJlU3RhY2spO1xuICAgICAgICB2YXIgbG9nZ2VyID0gY29uZmlndXJhdGlvbi5sb2dnZXI7XG4gICAgICAgIHZhciBjbGllbnROYW1lID0gXCJDb2duaXRvSWRlbnRpdHlDbGllbnRcIjtcbiAgICAgICAgdmFyIGNvbW1hbmROYW1lID0gXCJHZXRDcmVkZW50aWFsc0ZvcklkZW50aXR5Q29tbWFuZFwiO1xuICAgICAgICB2YXIgaGFuZGxlckV4ZWN1dGlvbkNvbnRleHQgPSB7XG4gICAgICAgICAgICBsb2dnZXI6IGxvZ2dlcixcbiAgICAgICAgICAgIGNsaWVudE5hbWU6IGNsaWVudE5hbWUsXG4gICAgICAgICAgICBjb21tYW5kTmFtZTogY29tbWFuZE5hbWUsXG4gICAgICAgICAgICBpbnB1dEZpbHRlclNlbnNpdGl2ZUxvZzogR2V0Q3JlZGVudGlhbHNGb3JJZGVudGl0eUlucHV0LmZpbHRlclNlbnNpdGl2ZUxvZyxcbiAgICAgICAgICAgIG91dHB1dEZpbHRlclNlbnNpdGl2ZUxvZzogR2V0Q3JlZGVudGlhbHNGb3JJZGVudGl0eVJlc3BvbnNlLmZpbHRlclNlbnNpdGl2ZUxvZyxcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIHJlcXVlc3RIYW5kbGVyID0gY29uZmlndXJhdGlvbi5yZXF1ZXN0SGFuZGxlcjtcbiAgICAgICAgcmV0dXJuIHN0YWNrLnJlc29sdmUoZnVuY3Rpb24gKHJlcXVlc3QpIHtcbiAgICAgICAgICAgIHJldHVybiByZXF1ZXN0SGFuZGxlci5oYW5kbGUocmVxdWVzdC5yZXF1ZXN0LCBvcHRpb25zIHx8IHt9KTtcbiAgICAgICAgfSwgaGFuZGxlckV4ZWN1dGlvbkNvbnRleHQpO1xuICAgIH07XG4gICAgR2V0Q3JlZGVudGlhbHNGb3JJZGVudGl0eUNvbW1hbmQucHJvdG90eXBlLnNlcmlhbGl6ZSA9IGZ1bmN0aW9uIChpbnB1dCwgY29udGV4dCkge1xuICAgICAgICByZXR1cm4gc2VyaWFsaXplQXdzX2pzb24xXzFHZXRDcmVkZW50aWFsc0ZvcklkZW50aXR5Q29tbWFuZChpbnB1dCwgY29udGV4dCk7XG4gICAgfTtcbiAgICBHZXRDcmVkZW50aWFsc0ZvcklkZW50aXR5Q29tbWFuZC5wcm90b3R5cGUuZGVzZXJpYWxpemUgPSBmdW5jdGlvbiAob3V0cHV0LCBjb250ZXh0KSB7XG4gICAgICAgIHJldHVybiBkZXNlcmlhbGl6ZUF3c19qc29uMV8xR2V0Q3JlZGVudGlhbHNGb3JJZGVudGl0eUNvbW1hbmQob3V0cHV0LCBjb250ZXh0KTtcbiAgICB9O1xuICAgIHJldHVybiBHZXRDcmVkZW50aWFsc0ZvcklkZW50aXR5Q29tbWFuZDtcbn0oJENvbW1hbmQpKTtcbmV4cG9ydCB7IEdldENyZWRlbnRpYWxzRm9ySWRlbnRpdHlDb21tYW5kIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1HZXRDcmVkZW50aWFsc0ZvcklkZW50aXR5Q29tbWFuZC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/commands/GetCredentialsForIdentityCommand.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/commands/GetIdCommand.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-cognito-identity/dist/es/commands/GetIdCommand.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GetIdCommand: () => (/* binding */ GetIdCommand)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/models_0 */ \"(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/models/models_0.js\");\n/* harmony import */ var _protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../protocols/Aws_json1_1 */ \"(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/protocols/Aws_json1_1.js\");\n/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ \"(ssr)/./node_modules/@aws-sdk/middleware-serde/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/smithy-client */ \"(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/index.js\");\n\n\n\n\n\n/**\n * <p>Generates (or retrieves) a Cognito ID. Supplying multiple logins will create an\n *          implicit linked account.</p>\n *          <p>This is a public API. You do not need any credentials to call this API.</p>\n */\nvar GetIdCommand = /** @class */ (function (_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(GetIdCommand, _super);\n    // Start section: command_properties\n    // End section: command_properties\n    function GetIdCommand(input) {\n        var _this = \n        // Start section: command_constructor\n        _super.call(this) || this;\n        _this.input = input;\n        return _this;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    GetIdCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n        this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_0__.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        var stack = clientStack.concat(this.middlewareStack);\n        var logger = configuration.logger;\n        var clientName = \"CognitoIdentityClient\";\n        var commandName = \"GetIdCommand\";\n        var handlerExecutionContext = {\n            logger: logger,\n            clientName: clientName,\n            commandName: commandName,\n            inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_3__.GetIdInput.filterSensitiveLog,\n            outputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_3__.GetIdResponse.filterSensitiveLog,\n        };\n        var requestHandler = configuration.requestHandler;\n        return stack.resolve(function (request) {\n            return requestHandler.handle(request.request, options || {});\n        }, handlerExecutionContext);\n    };\n    GetIdCommand.prototype.serialize = function (input, context) {\n        return (0,_protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_4__.serializeAws_json1_1GetIdCommand)(input, context);\n    };\n    GetIdCommand.prototype.deserialize = function (output, context) {\n        return (0,_protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_4__.deserializeAws_json1_1GetIdCommand)(output, context);\n    };\n    return GetIdCommand;\n}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.Command));\n\n//# sourceMappingURL=GetIdCommand.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LWNvZ25pdG8taWRlbnRpdHkvZGlzdC9lcy9jb21tYW5kcy9HZXRJZENvbW1hbmQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWtDO0FBQzZCO0FBQ2lEO0FBQ3JEO0FBQ0U7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxnREFBUztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMseUVBQWM7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyx3REFBVTtBQUMvQyxzQ0FBc0MsMkRBQWE7QUFDbkQ7QUFDQTtBQUNBO0FBQ0EsdUVBQXVFO0FBQ3ZFLFNBQVM7QUFDVDtBQUNBO0FBQ0EsZUFBZSx3RkFBZ0M7QUFDL0M7QUFDQTtBQUNBLGVBQWUsMEZBQWtDO0FBQ2pEO0FBQ0E7QUFDQSxDQUFDLENBQUMsMkRBQVE7QUFDYztBQUN4QiIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LWNvZ25pdG8taWRlbnRpdHkvZGlzdC9lcy9jb21tYW5kcy9HZXRJZENvbW1hbmQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19leHRlbmRzIH0gZnJvbSBcInRzbGliXCI7XG5pbXBvcnQgeyBHZXRJZElucHV0LCBHZXRJZFJlc3BvbnNlIH0gZnJvbSBcIi4uL21vZGVscy9tb2RlbHNfMFwiO1xuaW1wb3J0IHsgZGVzZXJpYWxpemVBd3NfanNvbjFfMUdldElkQ29tbWFuZCwgc2VyaWFsaXplQXdzX2pzb24xXzFHZXRJZENvbW1hbmQgfSBmcm9tIFwiLi4vcHJvdG9jb2xzL0F3c19qc29uMV8xXCI7XG5pbXBvcnQgeyBnZXRTZXJkZVBsdWdpbiB9IGZyb20gXCJAYXdzLXNkay9taWRkbGV3YXJlLXNlcmRlXCI7XG5pbXBvcnQgeyBDb21tYW5kIGFzICRDb21tYW5kIH0gZnJvbSBcIkBhd3Mtc2RrL3NtaXRoeS1jbGllbnRcIjtcbi8qKlxuICogPHA+R2VuZXJhdGVzIChvciByZXRyaWV2ZXMpIGEgQ29nbml0byBJRC4gU3VwcGx5aW5nIG11bHRpcGxlIGxvZ2lucyB3aWxsIGNyZWF0ZSBhblxuICogICAgICAgICAgaW1wbGljaXQgbGlua2VkIGFjY291bnQuPC9wPlxuICogICAgICAgICAgPHA+VGhpcyBpcyBhIHB1YmxpYyBBUEkuIFlvdSBkbyBub3QgbmVlZCBhbnkgY3JlZGVudGlhbHMgdG8gY2FsbCB0aGlzIEFQSS48L3A+XG4gKi9cbnZhciBHZXRJZENvbW1hbmQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKEdldElkQ29tbWFuZCwgX3N1cGVyKTtcbiAgICAvLyBTdGFydCBzZWN0aW9uOiBjb21tYW5kX3Byb3BlcnRpZXNcbiAgICAvLyBFbmQgc2VjdGlvbjogY29tbWFuZF9wcm9wZXJ0aWVzXG4gICAgZnVuY3Rpb24gR2V0SWRDb21tYW5kKGlucHV0KSB7XG4gICAgICAgIHZhciBfdGhpcyA9IFxuICAgICAgICAvLyBTdGFydCBzZWN0aW9uOiBjb21tYW5kX2NvbnN0cnVjdG9yXG4gICAgICAgIF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLmlucHV0ID0gaW5wdXQ7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICAgICAgLy8gRW5kIHNlY3Rpb246IGNvbW1hbmRfY29uc3RydWN0b3JcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgR2V0SWRDb21tYW5kLnByb3RvdHlwZS5yZXNvbHZlTWlkZGxld2FyZSA9IGZ1bmN0aW9uIChjbGllbnRTdGFjaywgY29uZmlndXJhdGlvbiwgb3B0aW9ucykge1xuICAgICAgICB0aGlzLm1pZGRsZXdhcmVTdGFjay51c2UoZ2V0U2VyZGVQbHVnaW4oY29uZmlndXJhdGlvbiwgdGhpcy5zZXJpYWxpemUsIHRoaXMuZGVzZXJpYWxpemUpKTtcbiAgICAgICAgdmFyIHN0YWNrID0gY2xpZW50U3RhY2suY29uY2F0KHRoaXMubWlkZGxld2FyZVN0YWNrKTtcbiAgICAgICAgdmFyIGxvZ2dlciA9IGNvbmZpZ3VyYXRpb24ubG9nZ2VyO1xuICAgICAgICB2YXIgY2xpZW50TmFtZSA9IFwiQ29nbml0b0lkZW50aXR5Q2xpZW50XCI7XG4gICAgICAgIHZhciBjb21tYW5kTmFtZSA9IFwiR2V0SWRDb21tYW5kXCI7XG4gICAgICAgIHZhciBoYW5kbGVyRXhlY3V0aW9uQ29udGV4dCA9IHtcbiAgICAgICAgICAgIGxvZ2dlcjogbG9nZ2VyLFxuICAgICAgICAgICAgY2xpZW50TmFtZTogY2xpZW50TmFtZSxcbiAgICAgICAgICAgIGNvbW1hbmROYW1lOiBjb21tYW5kTmFtZSxcbiAgICAgICAgICAgIGlucHV0RmlsdGVyU2Vuc2l0aXZlTG9nOiBHZXRJZElucHV0LmZpbHRlclNlbnNpdGl2ZUxvZyxcbiAgICAgICAgICAgIG91dHB1dEZpbHRlclNlbnNpdGl2ZUxvZzogR2V0SWRSZXNwb25zZS5maWx0ZXJTZW5zaXRpdmVMb2csXG4gICAgICAgIH07XG4gICAgICAgIHZhciByZXF1ZXN0SGFuZGxlciA9IGNvbmZpZ3VyYXRpb24ucmVxdWVzdEhhbmRsZXI7XG4gICAgICAgIHJldHVybiBzdGFjay5yZXNvbHZlKGZ1bmN0aW9uIChyZXF1ZXN0KSB7XG4gICAgICAgICAgICByZXR1cm4gcmVxdWVzdEhhbmRsZXIuaGFuZGxlKHJlcXVlc3QucmVxdWVzdCwgb3B0aW9ucyB8fCB7fSk7XG4gICAgICAgIH0sIGhhbmRsZXJFeGVjdXRpb25Db250ZXh0KTtcbiAgICB9O1xuICAgIEdldElkQ29tbWFuZC5wcm90b3R5cGUuc2VyaWFsaXplID0gZnVuY3Rpb24gKGlucHV0LCBjb250ZXh0KSB7XG4gICAgICAgIHJldHVybiBzZXJpYWxpemVBd3NfanNvbjFfMUdldElkQ29tbWFuZChpbnB1dCwgY29udGV4dCk7XG4gICAgfTtcbiAgICBHZXRJZENvbW1hbmQucHJvdG90eXBlLmRlc2VyaWFsaXplID0gZnVuY3Rpb24gKG91dHB1dCwgY29udGV4dCkge1xuICAgICAgICByZXR1cm4gZGVzZXJpYWxpemVBd3NfanNvbjFfMUdldElkQ29tbWFuZChvdXRwdXQsIGNvbnRleHQpO1xuICAgIH07XG4gICAgcmV0dXJuIEdldElkQ29tbWFuZDtcbn0oJENvbW1hbmQpKTtcbmV4cG9ydCB7IEdldElkQ29tbWFuZCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9R2V0SWRDb21tYW5kLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/commands/GetIdCommand.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/endpoints.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-cognito-identity/dist/es/endpoints.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultRegionInfoProvider: () => (/* binding */ defaultRegionInfoProvider)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\n\n// Partition default templates\nvar AWS_TEMPLATE = \"cognito-identity.{region}.amazonaws.com\";\nvar AWS_CN_TEMPLATE = \"cognito-identity.{region}.amazonaws.com.cn\";\nvar AWS_ISO_TEMPLATE = \"cognito-identity.{region}.c2s.ic.gov\";\nvar AWS_ISO_B_TEMPLATE = \"cognito-identity.{region}.sc2s.sgov.gov\";\nvar AWS_US_GOV_TEMPLATE = \"cognito-identity.{region}.amazonaws.com\";\n// Partition regions\nvar AWS_REGIONS = new Set([\n    \"af-south-1\",\n    \"ap-east-1\",\n    \"ap-northeast-1\",\n    \"ap-northeast-2\",\n    \"ap-south-1\",\n    \"ap-southeast-1\",\n    \"ap-southeast-2\",\n    \"ca-central-1\",\n    \"eu-central-1\",\n    \"eu-north-1\",\n    \"eu-south-1\",\n    \"eu-west-1\",\n    \"eu-west-2\",\n    \"eu-west-3\",\n    \"me-south-1\",\n    \"sa-east-1\",\n    \"us-east-1\",\n    \"us-east-2\",\n    \"us-west-1\",\n    \"us-west-2\",\n]);\nvar AWS_CN_REGIONS = new Set([\"cn-north-1\", \"cn-northwest-1\"]);\nvar AWS_ISO_REGIONS = new Set([\"us-iso-east-1\"]);\nvar AWS_ISO_B_REGIONS = new Set([\"us-isob-east-1\"]);\nvar AWS_US_GOV_REGIONS = new Set([\"us-gov-east-1\", \"us-gov-west-1\"]);\nvar defaultRegionInfoProvider = function (region, options) {\n    var regionInfo = undefined;\n    switch (region) {\n        // First, try to match exact region names.\n        case \"ap-northeast-1\":\n            regionInfo = {\n                hostname: \"cognito-identity.ap-northeast-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"ap-northeast-2\":\n            regionInfo = {\n                hostname: \"cognito-identity.ap-northeast-2.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"ap-south-1\":\n            regionInfo = {\n                hostname: \"cognito-identity.ap-south-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"ap-southeast-1\":\n            regionInfo = {\n                hostname: \"cognito-identity.ap-southeast-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"ap-southeast-2\":\n            regionInfo = {\n                hostname: \"cognito-identity.ap-southeast-2.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"ca-central-1\":\n            regionInfo = {\n                hostname: \"cognito-identity.ca-central-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"cn-north-1\":\n            regionInfo = {\n                hostname: \"cognito-identity.cn-north-1.amazonaws.com.cn\",\n                partition: \"aws-cn\",\n            };\n            break;\n        case \"eu-central-1\":\n            regionInfo = {\n                hostname: \"cognito-identity.eu-central-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"eu-north-1\":\n            regionInfo = {\n                hostname: \"cognito-identity.eu-north-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"eu-west-1\":\n            regionInfo = {\n                hostname: \"cognito-identity.eu-west-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"eu-west-2\":\n            regionInfo = {\n                hostname: \"cognito-identity.eu-west-2.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"eu-west-3\":\n            regionInfo = {\n                hostname: \"cognito-identity.eu-west-3.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"fips-us-east-1\":\n            regionInfo = {\n                hostname: \"cognito-identity-fips.us-east-1.amazonaws.com\",\n                partition: \"aws\",\n                signingRegion: \"us-east-1\",\n            };\n            break;\n        case \"fips-us-east-2\":\n            regionInfo = {\n                hostname: \"cognito-identity-fips.us-east-2.amazonaws.com\",\n                partition: \"aws\",\n                signingRegion: \"us-east-2\",\n            };\n            break;\n        case \"fips-us-gov-west-1\":\n            regionInfo = {\n                hostname: \"cognito-identity-fips.us-gov-west-1.amazonaws.com\",\n                partition: \"aws-us-gov\",\n                signingRegion: \"us-gov-west-1\",\n            };\n            break;\n        case \"fips-us-west-2\":\n            regionInfo = {\n                hostname: \"cognito-identity-fips.us-west-2.amazonaws.com\",\n                partition: \"aws\",\n                signingRegion: \"us-west-2\",\n            };\n            break;\n        case \"sa-east-1\":\n            regionInfo = {\n                hostname: \"cognito-identity.sa-east-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"us-east-1\":\n            regionInfo = {\n                hostname: \"cognito-identity.us-east-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"us-east-2\":\n            regionInfo = {\n                hostname: \"cognito-identity.us-east-2.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"us-gov-west-1\":\n            regionInfo = {\n                hostname: \"cognito-identity.us-gov-west-1.amazonaws.com\",\n                partition: \"aws-us-gov\",\n            };\n            break;\n        case \"us-west-1\":\n            regionInfo = {\n                hostname: \"cognito-identity.us-west-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"us-west-2\":\n            regionInfo = {\n                hostname: \"cognito-identity.us-west-2.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        // Next, try to match partition endpoints.\n        default:\n            if (AWS_REGIONS.has(region)) {\n                regionInfo = {\n                    hostname: AWS_TEMPLATE.replace(\"{region}\", region),\n                    partition: \"aws\",\n                };\n            }\n            if (AWS_CN_REGIONS.has(region)) {\n                regionInfo = {\n                    hostname: AWS_CN_TEMPLATE.replace(\"{region}\", region),\n                    partition: \"aws-cn\",\n                };\n            }\n            if (AWS_ISO_REGIONS.has(region)) {\n                regionInfo = {\n                    hostname: AWS_ISO_TEMPLATE.replace(\"{region}\", region),\n                    partition: \"aws-iso\",\n                };\n            }\n            if (AWS_ISO_B_REGIONS.has(region)) {\n                regionInfo = {\n                    hostname: AWS_ISO_B_TEMPLATE.replace(\"{region}\", region),\n                    partition: \"aws-iso-b\",\n                };\n            }\n            if (AWS_US_GOV_REGIONS.has(region)) {\n                regionInfo = {\n                    hostname: AWS_US_GOV_TEMPLATE.replace(\"{region}\", region),\n                    partition: \"aws-us-gov\",\n                };\n            }\n            // Finally, assume it's an AWS partition endpoint.\n            if (regionInfo === undefined) {\n                regionInfo = {\n                    hostname: AWS_TEMPLATE.replace(\"{region}\", region),\n                    partition: \"aws\",\n                };\n            }\n    }\n    return Promise.resolve((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({ signingService: \"cognito-identity\" }, regionInfo));\n};\n//# sourceMappingURL=endpoints.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/endpoints.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/models/models_0.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-cognito-identity/dist/es/models/models_0.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AmbiguousRoleResolutionType: () => (/* binding */ AmbiguousRoleResolutionType),\n/* harmony export */   CognitoIdentityProvider: () => (/* binding */ CognitoIdentityProvider),\n/* harmony export */   ConcurrentModificationException: () => (/* binding */ ConcurrentModificationException),\n/* harmony export */   CreateIdentityPoolInput: () => (/* binding */ CreateIdentityPoolInput),\n/* harmony export */   Credentials: () => (/* binding */ Credentials),\n/* harmony export */   DeleteIdentitiesInput: () => (/* binding */ DeleteIdentitiesInput),\n/* harmony export */   DeleteIdentitiesResponse: () => (/* binding */ DeleteIdentitiesResponse),\n/* harmony export */   DeleteIdentityPoolInput: () => (/* binding */ DeleteIdentityPoolInput),\n/* harmony export */   DescribeIdentityInput: () => (/* binding */ DescribeIdentityInput),\n/* harmony export */   DescribeIdentityPoolInput: () => (/* binding */ DescribeIdentityPoolInput),\n/* harmony export */   DeveloperUserAlreadyRegisteredException: () => (/* binding */ DeveloperUserAlreadyRegisteredException),\n/* harmony export */   ErrorCode: () => (/* binding */ ErrorCode),\n/* harmony export */   ExternalServiceException: () => (/* binding */ ExternalServiceException),\n/* harmony export */   GetCredentialsForIdentityInput: () => (/* binding */ GetCredentialsForIdentityInput),\n/* harmony export */   GetCredentialsForIdentityResponse: () => (/* binding */ GetCredentialsForIdentityResponse),\n/* harmony export */   GetIdInput: () => (/* binding */ GetIdInput),\n/* harmony export */   GetIdResponse: () => (/* binding */ GetIdResponse),\n/* harmony export */   GetIdentityPoolRolesInput: () => (/* binding */ GetIdentityPoolRolesInput),\n/* harmony export */   GetIdentityPoolRolesResponse: () => (/* binding */ GetIdentityPoolRolesResponse),\n/* harmony export */   GetOpenIdTokenForDeveloperIdentityInput: () => (/* binding */ GetOpenIdTokenForDeveloperIdentityInput),\n/* harmony export */   GetOpenIdTokenForDeveloperIdentityResponse: () => (/* binding */ GetOpenIdTokenForDeveloperIdentityResponse),\n/* harmony export */   GetOpenIdTokenInput: () => (/* binding */ GetOpenIdTokenInput),\n/* harmony export */   GetOpenIdTokenResponse: () => (/* binding */ GetOpenIdTokenResponse),\n/* harmony export */   IdentityDescription: () => (/* binding */ IdentityDescription),\n/* harmony export */   IdentityPool: () => (/* binding */ IdentityPool),\n/* harmony export */   IdentityPoolShortDescription: () => (/* binding */ IdentityPoolShortDescription),\n/* harmony export */   InternalErrorException: () => (/* binding */ InternalErrorException),\n/* harmony export */   InvalidIdentityPoolConfigurationException: () => (/* binding */ InvalidIdentityPoolConfigurationException),\n/* harmony export */   InvalidParameterException: () => (/* binding */ InvalidParameterException),\n/* harmony export */   LimitExceededException: () => (/* binding */ LimitExceededException),\n/* harmony export */   ListIdentitiesInput: () => (/* binding */ ListIdentitiesInput),\n/* harmony export */   ListIdentitiesResponse: () => (/* binding */ ListIdentitiesResponse),\n/* harmony export */   ListIdentityPoolsInput: () => (/* binding */ ListIdentityPoolsInput),\n/* harmony export */   ListIdentityPoolsResponse: () => (/* binding */ ListIdentityPoolsResponse),\n/* harmony export */   ListTagsForResourceInput: () => (/* binding */ ListTagsForResourceInput),\n/* harmony export */   ListTagsForResourceResponse: () => (/* binding */ ListTagsForResourceResponse),\n/* harmony export */   LookupDeveloperIdentityInput: () => (/* binding */ LookupDeveloperIdentityInput),\n/* harmony export */   LookupDeveloperIdentityResponse: () => (/* binding */ LookupDeveloperIdentityResponse),\n/* harmony export */   MappingRule: () => (/* binding */ MappingRule),\n/* harmony export */   MappingRuleMatchType: () => (/* binding */ MappingRuleMatchType),\n/* harmony export */   MergeDeveloperIdentitiesInput: () => (/* binding */ MergeDeveloperIdentitiesInput),\n/* harmony export */   MergeDeveloperIdentitiesResponse: () => (/* binding */ MergeDeveloperIdentitiesResponse),\n/* harmony export */   NotAuthorizedException: () => (/* binding */ NotAuthorizedException),\n/* harmony export */   ResourceConflictException: () => (/* binding */ ResourceConflictException),\n/* harmony export */   ResourceNotFoundException: () => (/* binding */ ResourceNotFoundException),\n/* harmony export */   RoleMapping: () => (/* binding */ RoleMapping),\n/* harmony export */   RoleMappingType: () => (/* binding */ RoleMappingType),\n/* harmony export */   RulesConfigurationType: () => (/* binding */ RulesConfigurationType),\n/* harmony export */   SetIdentityPoolRolesInput: () => (/* binding */ SetIdentityPoolRolesInput),\n/* harmony export */   TagResourceInput: () => (/* binding */ TagResourceInput),\n/* harmony export */   TagResourceResponse: () => (/* binding */ TagResourceResponse),\n/* harmony export */   TooManyRequestsException: () => (/* binding */ TooManyRequestsException),\n/* harmony export */   UnlinkDeveloperIdentityInput: () => (/* binding */ UnlinkDeveloperIdentityInput),\n/* harmony export */   UnlinkIdentityInput: () => (/* binding */ UnlinkIdentityInput),\n/* harmony export */   UnprocessedIdentityId: () => (/* binding */ UnprocessedIdentityId),\n/* harmony export */   UntagResourceInput: () => (/* binding */ UntagResourceInput),\n/* harmony export */   UntagResourceResponse: () => (/* binding */ UntagResourceResponse)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\n\nvar AmbiguousRoleResolutionType;\n(function (AmbiguousRoleResolutionType) {\n    AmbiguousRoleResolutionType[\"AUTHENTICATED_ROLE\"] = \"AuthenticatedRole\";\n    AmbiguousRoleResolutionType[\"DENY\"] = \"Deny\";\n})(AmbiguousRoleResolutionType || (AmbiguousRoleResolutionType = {}));\nvar CognitoIdentityProvider;\n(function (CognitoIdentityProvider) {\n    CognitoIdentityProvider.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(CognitoIdentityProvider || (CognitoIdentityProvider = {}));\nvar CreateIdentityPoolInput;\n(function (CreateIdentityPoolInput) {\n    CreateIdentityPoolInput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(CreateIdentityPoolInput || (CreateIdentityPoolInput = {}));\nvar IdentityPool;\n(function (IdentityPool) {\n    IdentityPool.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(IdentityPool || (IdentityPool = {}));\nvar InternalErrorException;\n(function (InternalErrorException) {\n    InternalErrorException.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(InternalErrorException || (InternalErrorException = {}));\nvar InvalidParameterException;\n(function (InvalidParameterException) {\n    InvalidParameterException.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(InvalidParameterException || (InvalidParameterException = {}));\nvar LimitExceededException;\n(function (LimitExceededException) {\n    LimitExceededException.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(LimitExceededException || (LimitExceededException = {}));\nvar NotAuthorizedException;\n(function (NotAuthorizedException) {\n    NotAuthorizedException.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(NotAuthorizedException || (NotAuthorizedException = {}));\nvar ResourceConflictException;\n(function (ResourceConflictException) {\n    ResourceConflictException.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(ResourceConflictException || (ResourceConflictException = {}));\nvar TooManyRequestsException;\n(function (TooManyRequestsException) {\n    TooManyRequestsException.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(TooManyRequestsException || (TooManyRequestsException = {}));\nvar DeleteIdentitiesInput;\n(function (DeleteIdentitiesInput) {\n    DeleteIdentitiesInput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(DeleteIdentitiesInput || (DeleteIdentitiesInput = {}));\nvar ErrorCode;\n(function (ErrorCode) {\n    ErrorCode[\"ACCESS_DENIED\"] = \"AccessDenied\";\n    ErrorCode[\"INTERNAL_SERVER_ERROR\"] = \"InternalServerError\";\n})(ErrorCode || (ErrorCode = {}));\nvar UnprocessedIdentityId;\n(function (UnprocessedIdentityId) {\n    UnprocessedIdentityId.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(UnprocessedIdentityId || (UnprocessedIdentityId = {}));\nvar DeleteIdentitiesResponse;\n(function (DeleteIdentitiesResponse) {\n    DeleteIdentitiesResponse.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(DeleteIdentitiesResponse || (DeleteIdentitiesResponse = {}));\nvar DeleteIdentityPoolInput;\n(function (DeleteIdentityPoolInput) {\n    DeleteIdentityPoolInput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(DeleteIdentityPoolInput || (DeleteIdentityPoolInput = {}));\nvar ResourceNotFoundException;\n(function (ResourceNotFoundException) {\n    ResourceNotFoundException.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(ResourceNotFoundException || (ResourceNotFoundException = {}));\nvar DescribeIdentityInput;\n(function (DescribeIdentityInput) {\n    DescribeIdentityInput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(DescribeIdentityInput || (DescribeIdentityInput = {}));\nvar IdentityDescription;\n(function (IdentityDescription) {\n    IdentityDescription.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(IdentityDescription || (IdentityDescription = {}));\nvar DescribeIdentityPoolInput;\n(function (DescribeIdentityPoolInput) {\n    DescribeIdentityPoolInput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(DescribeIdentityPoolInput || (DescribeIdentityPoolInput = {}));\nvar ExternalServiceException;\n(function (ExternalServiceException) {\n    ExternalServiceException.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(ExternalServiceException || (ExternalServiceException = {}));\nvar GetCredentialsForIdentityInput;\n(function (GetCredentialsForIdentityInput) {\n    GetCredentialsForIdentityInput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(GetCredentialsForIdentityInput || (GetCredentialsForIdentityInput = {}));\nvar Credentials;\n(function (Credentials) {\n    Credentials.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(Credentials || (Credentials = {}));\nvar GetCredentialsForIdentityResponse;\n(function (GetCredentialsForIdentityResponse) {\n    GetCredentialsForIdentityResponse.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(GetCredentialsForIdentityResponse || (GetCredentialsForIdentityResponse = {}));\nvar InvalidIdentityPoolConfigurationException;\n(function (InvalidIdentityPoolConfigurationException) {\n    InvalidIdentityPoolConfigurationException.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(InvalidIdentityPoolConfigurationException || (InvalidIdentityPoolConfigurationException = {}));\nvar GetIdInput;\n(function (GetIdInput) {\n    GetIdInput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(GetIdInput || (GetIdInput = {}));\nvar GetIdResponse;\n(function (GetIdResponse) {\n    GetIdResponse.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(GetIdResponse || (GetIdResponse = {}));\nvar GetIdentityPoolRolesInput;\n(function (GetIdentityPoolRolesInput) {\n    GetIdentityPoolRolesInput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(GetIdentityPoolRolesInput || (GetIdentityPoolRolesInput = {}));\nvar MappingRuleMatchType;\n(function (MappingRuleMatchType) {\n    MappingRuleMatchType[\"CONTAINS\"] = \"Contains\";\n    MappingRuleMatchType[\"EQUALS\"] = \"Equals\";\n    MappingRuleMatchType[\"NOT_EQUAL\"] = \"NotEqual\";\n    MappingRuleMatchType[\"STARTS_WITH\"] = \"StartsWith\";\n})(MappingRuleMatchType || (MappingRuleMatchType = {}));\nvar MappingRule;\n(function (MappingRule) {\n    MappingRule.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(MappingRule || (MappingRule = {}));\nvar RulesConfigurationType;\n(function (RulesConfigurationType) {\n    RulesConfigurationType.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(RulesConfigurationType || (RulesConfigurationType = {}));\nvar RoleMappingType;\n(function (RoleMappingType) {\n    RoleMappingType[\"RULES\"] = \"Rules\";\n    RoleMappingType[\"TOKEN\"] = \"Token\";\n})(RoleMappingType || (RoleMappingType = {}));\nvar RoleMapping;\n(function (RoleMapping) {\n    RoleMapping.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(RoleMapping || (RoleMapping = {}));\nvar GetIdentityPoolRolesResponse;\n(function (GetIdentityPoolRolesResponse) {\n    GetIdentityPoolRolesResponse.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(GetIdentityPoolRolesResponse || (GetIdentityPoolRolesResponse = {}));\nvar GetOpenIdTokenInput;\n(function (GetOpenIdTokenInput) {\n    GetOpenIdTokenInput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(GetOpenIdTokenInput || (GetOpenIdTokenInput = {}));\nvar GetOpenIdTokenResponse;\n(function (GetOpenIdTokenResponse) {\n    GetOpenIdTokenResponse.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(GetOpenIdTokenResponse || (GetOpenIdTokenResponse = {}));\nvar DeveloperUserAlreadyRegisteredException;\n(function (DeveloperUserAlreadyRegisteredException) {\n    DeveloperUserAlreadyRegisteredException.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(DeveloperUserAlreadyRegisteredException || (DeveloperUserAlreadyRegisteredException = {}));\nvar GetOpenIdTokenForDeveloperIdentityInput;\n(function (GetOpenIdTokenForDeveloperIdentityInput) {\n    GetOpenIdTokenForDeveloperIdentityInput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(GetOpenIdTokenForDeveloperIdentityInput || (GetOpenIdTokenForDeveloperIdentityInput = {}));\nvar GetOpenIdTokenForDeveloperIdentityResponse;\n(function (GetOpenIdTokenForDeveloperIdentityResponse) {\n    GetOpenIdTokenForDeveloperIdentityResponse.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(GetOpenIdTokenForDeveloperIdentityResponse || (GetOpenIdTokenForDeveloperIdentityResponse = {}));\nvar ListIdentitiesInput;\n(function (ListIdentitiesInput) {\n    ListIdentitiesInput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(ListIdentitiesInput || (ListIdentitiesInput = {}));\nvar ListIdentitiesResponse;\n(function (ListIdentitiesResponse) {\n    ListIdentitiesResponse.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(ListIdentitiesResponse || (ListIdentitiesResponse = {}));\nvar ListIdentityPoolsInput;\n(function (ListIdentityPoolsInput) {\n    ListIdentityPoolsInput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(ListIdentityPoolsInput || (ListIdentityPoolsInput = {}));\nvar IdentityPoolShortDescription;\n(function (IdentityPoolShortDescription) {\n    IdentityPoolShortDescription.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(IdentityPoolShortDescription || (IdentityPoolShortDescription = {}));\nvar ListIdentityPoolsResponse;\n(function (ListIdentityPoolsResponse) {\n    ListIdentityPoolsResponse.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(ListIdentityPoolsResponse || (ListIdentityPoolsResponse = {}));\nvar ListTagsForResourceInput;\n(function (ListTagsForResourceInput) {\n    ListTagsForResourceInput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(ListTagsForResourceInput || (ListTagsForResourceInput = {}));\nvar ListTagsForResourceResponse;\n(function (ListTagsForResourceResponse) {\n    ListTagsForResourceResponse.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(ListTagsForResourceResponse || (ListTagsForResourceResponse = {}));\nvar LookupDeveloperIdentityInput;\n(function (LookupDeveloperIdentityInput) {\n    LookupDeveloperIdentityInput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(LookupDeveloperIdentityInput || (LookupDeveloperIdentityInput = {}));\nvar LookupDeveloperIdentityResponse;\n(function (LookupDeveloperIdentityResponse) {\n    LookupDeveloperIdentityResponse.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(LookupDeveloperIdentityResponse || (LookupDeveloperIdentityResponse = {}));\nvar MergeDeveloperIdentitiesInput;\n(function (MergeDeveloperIdentitiesInput) {\n    MergeDeveloperIdentitiesInput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(MergeDeveloperIdentitiesInput || (MergeDeveloperIdentitiesInput = {}));\nvar MergeDeveloperIdentitiesResponse;\n(function (MergeDeveloperIdentitiesResponse) {\n    MergeDeveloperIdentitiesResponse.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(MergeDeveloperIdentitiesResponse || (MergeDeveloperIdentitiesResponse = {}));\nvar ConcurrentModificationException;\n(function (ConcurrentModificationException) {\n    ConcurrentModificationException.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(ConcurrentModificationException || (ConcurrentModificationException = {}));\nvar SetIdentityPoolRolesInput;\n(function (SetIdentityPoolRolesInput) {\n    SetIdentityPoolRolesInput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(SetIdentityPoolRolesInput || (SetIdentityPoolRolesInput = {}));\nvar TagResourceInput;\n(function (TagResourceInput) {\n    TagResourceInput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(TagResourceInput || (TagResourceInput = {}));\nvar TagResourceResponse;\n(function (TagResourceResponse) {\n    TagResourceResponse.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(TagResourceResponse || (TagResourceResponse = {}));\nvar UnlinkDeveloperIdentityInput;\n(function (UnlinkDeveloperIdentityInput) {\n    UnlinkDeveloperIdentityInput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(UnlinkDeveloperIdentityInput || (UnlinkDeveloperIdentityInput = {}));\nvar UnlinkIdentityInput;\n(function (UnlinkIdentityInput) {\n    UnlinkIdentityInput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(UnlinkIdentityInput || (UnlinkIdentityInput = {}));\nvar UntagResourceInput;\n(function (UntagResourceInput) {\n    UntagResourceInput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(UntagResourceInput || (UntagResourceInput = {}));\nvar UntagResourceResponse;\n(function (UntagResourceResponse) {\n    UntagResourceResponse.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj)); };\n})(UntagResourceResponse || (UntagResourceResponse = {}));\n//# sourceMappingURL=models_0.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/models/models_0.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/package.json":
/*!****************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-cognito-identity/dist/es/package.json ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"name":"@aws-sdk/client-cognito-identity","description":"AWS SDK for JavaScript Cognito Identity Client for Node.js, Browser and React Native","version":"3.6.1","scripts":{"clean":"yarn remove-definitions && yarn remove-dist && yarn remove-documentation","build-documentation":"yarn remove-documentation && typedoc ./","prepublishOnly":"yarn build","pretest":"yarn build:cjs","remove-definitions":"rimraf ./types","remove-dist":"rimraf ./dist","remove-documentation":"rimraf ./docs","test:unit":"mocha **/cjs/**/*.spec.js","test:e2e":"mocha **/cjs/**/*.ispec.js && karma start karma.conf.js","test":"yarn test:unit","build:cjs":"tsc -p tsconfig.json","build:es":"tsc -p tsconfig.es.json","build":"yarn build:cjs && yarn build:es","postbuild":"downlevel-dts types types/ts3.4"},"main":"./dist/cjs/index.js","types":"./types/index.d.ts","module":"./dist/es/index.js","browser":{"./runtimeConfig":"./runtimeConfig.browser"},"react-native":{"./runtimeConfig":"./runtimeConfig.native"},"sideEffects":false,"dependencies":{"@aws-crypto/sha256-browser":"^1.0.0","@aws-crypto/sha256-js":"^1.0.0","@aws-sdk/config-resolver":"3.6.1","@aws-sdk/credential-provider-node":"3.6.1","@aws-sdk/fetch-http-handler":"3.6.1","@aws-sdk/hash-node":"3.6.1","@aws-sdk/invalid-dependency":"3.6.1","@aws-sdk/middleware-content-length":"3.6.1","@aws-sdk/middleware-host-header":"3.6.1","@aws-sdk/middleware-logger":"3.6.1","@aws-sdk/middleware-retry":"3.6.1","@aws-sdk/middleware-serde":"3.6.1","@aws-sdk/middleware-signing":"3.6.1","@aws-sdk/middleware-stack":"3.6.1","@aws-sdk/middleware-user-agent":"3.6.1","@aws-sdk/node-config-provider":"3.6.1","@aws-sdk/node-http-handler":"3.6.1","@aws-sdk/protocol-http":"3.6.1","@aws-sdk/smithy-client":"3.6.1","@aws-sdk/types":"3.6.1","@aws-sdk/url-parser":"3.6.1","@aws-sdk/url-parser-native":"3.6.1","@aws-sdk/util-base64-browser":"3.6.1","@aws-sdk/util-base64-node":"3.6.1","@aws-sdk/util-body-length-browser":"3.6.1","@aws-sdk/util-body-length-node":"3.6.1","@aws-sdk/util-user-agent-browser":"3.6.1","@aws-sdk/util-user-agent-node":"3.6.1","@aws-sdk/util-utf8-browser":"3.6.1","@aws-sdk/util-utf8-node":"3.6.1","tslib":"^2.0.0"},"devDependencies":{"@aws-sdk/client-documentation-generator":"3.6.1","@aws-sdk/client-iam":"3.6.1","@types/chai":"^4.2.11","@types/mocha":"^8.0.4","@types/node":"^12.7.5","downlevel-dts":"0.7.0","jest":"^26.1.0","rimraf":"^3.0.0","typedoc":"^0.19.2","typescript":"~4.1.2"},"engines":{"node":">=10.0.0"},"typesVersions":{"<4.0":{"types/*":["types/ts3.4/*"]}},"author":{"name":"AWS SDK for JavaScript Team","url":"https://aws.amazon.com/javascript/"},"license":"Apache-2.0","homepage":"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-cognito-identity","repository":{"type":"git","url":"https://github.com/aws/aws-sdk-js-v3.git","directory":"clients/client-cognito-identity"}}');

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/protocols/Aws_json1_1.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-cognito-identity/dist/es/protocols/Aws_json1_1.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deserializeAws_json1_1CreateIdentityPoolCommand: () => (/* binding */ deserializeAws_json1_1CreateIdentityPoolCommand),\n/* harmony export */   deserializeAws_json1_1DeleteIdentitiesCommand: () => (/* binding */ deserializeAws_json1_1DeleteIdentitiesCommand),\n/* harmony export */   deserializeAws_json1_1DeleteIdentityPoolCommand: () => (/* binding */ deserializeAws_json1_1DeleteIdentityPoolCommand),\n/* harmony export */   deserializeAws_json1_1DescribeIdentityCommand: () => (/* binding */ deserializeAws_json1_1DescribeIdentityCommand),\n/* harmony export */   deserializeAws_json1_1DescribeIdentityPoolCommand: () => (/* binding */ deserializeAws_json1_1DescribeIdentityPoolCommand),\n/* harmony export */   deserializeAws_json1_1GetCredentialsForIdentityCommand: () => (/* binding */ deserializeAws_json1_1GetCredentialsForIdentityCommand),\n/* harmony export */   deserializeAws_json1_1GetIdCommand: () => (/* binding */ deserializeAws_json1_1GetIdCommand),\n/* harmony export */   deserializeAws_json1_1GetIdentityPoolRolesCommand: () => (/* binding */ deserializeAws_json1_1GetIdentityPoolRolesCommand),\n/* harmony export */   deserializeAws_json1_1GetOpenIdTokenCommand: () => (/* binding */ deserializeAws_json1_1GetOpenIdTokenCommand),\n/* harmony export */   deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand: () => (/* binding */ deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand),\n/* harmony export */   deserializeAws_json1_1ListIdentitiesCommand: () => (/* binding */ deserializeAws_json1_1ListIdentitiesCommand),\n/* harmony export */   deserializeAws_json1_1ListIdentityPoolsCommand: () => (/* binding */ deserializeAws_json1_1ListIdentityPoolsCommand),\n/* harmony export */   deserializeAws_json1_1ListTagsForResourceCommand: () => (/* binding */ deserializeAws_json1_1ListTagsForResourceCommand),\n/* harmony export */   deserializeAws_json1_1LookupDeveloperIdentityCommand: () => (/* binding */ deserializeAws_json1_1LookupDeveloperIdentityCommand),\n/* harmony export */   deserializeAws_json1_1MergeDeveloperIdentitiesCommand: () => (/* binding */ deserializeAws_json1_1MergeDeveloperIdentitiesCommand),\n/* harmony export */   deserializeAws_json1_1SetIdentityPoolRolesCommand: () => (/* binding */ deserializeAws_json1_1SetIdentityPoolRolesCommand),\n/* harmony export */   deserializeAws_json1_1TagResourceCommand: () => (/* binding */ deserializeAws_json1_1TagResourceCommand),\n/* harmony export */   deserializeAws_json1_1UnlinkDeveloperIdentityCommand: () => (/* binding */ deserializeAws_json1_1UnlinkDeveloperIdentityCommand),\n/* harmony export */   deserializeAws_json1_1UnlinkIdentityCommand: () => (/* binding */ deserializeAws_json1_1UnlinkIdentityCommand),\n/* harmony export */   deserializeAws_json1_1UntagResourceCommand: () => (/* binding */ deserializeAws_json1_1UntagResourceCommand),\n/* harmony export */   deserializeAws_json1_1UpdateIdentityPoolCommand: () => (/* binding */ deserializeAws_json1_1UpdateIdentityPoolCommand),\n/* harmony export */   serializeAws_json1_1CreateIdentityPoolCommand: () => (/* binding */ serializeAws_json1_1CreateIdentityPoolCommand),\n/* harmony export */   serializeAws_json1_1DeleteIdentitiesCommand: () => (/* binding */ serializeAws_json1_1DeleteIdentitiesCommand),\n/* harmony export */   serializeAws_json1_1DeleteIdentityPoolCommand: () => (/* binding */ serializeAws_json1_1DeleteIdentityPoolCommand),\n/* harmony export */   serializeAws_json1_1DescribeIdentityCommand: () => (/* binding */ serializeAws_json1_1DescribeIdentityCommand),\n/* harmony export */   serializeAws_json1_1DescribeIdentityPoolCommand: () => (/* binding */ serializeAws_json1_1DescribeIdentityPoolCommand),\n/* harmony export */   serializeAws_json1_1GetCredentialsForIdentityCommand: () => (/* binding */ serializeAws_json1_1GetCredentialsForIdentityCommand),\n/* harmony export */   serializeAws_json1_1GetIdCommand: () => (/* binding */ serializeAws_json1_1GetIdCommand),\n/* harmony export */   serializeAws_json1_1GetIdentityPoolRolesCommand: () => (/* binding */ serializeAws_json1_1GetIdentityPoolRolesCommand),\n/* harmony export */   serializeAws_json1_1GetOpenIdTokenCommand: () => (/* binding */ serializeAws_json1_1GetOpenIdTokenCommand),\n/* harmony export */   serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand: () => (/* binding */ serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand),\n/* harmony export */   serializeAws_json1_1ListIdentitiesCommand: () => (/* binding */ serializeAws_json1_1ListIdentitiesCommand),\n/* harmony export */   serializeAws_json1_1ListIdentityPoolsCommand: () => (/* binding */ serializeAws_json1_1ListIdentityPoolsCommand),\n/* harmony export */   serializeAws_json1_1ListTagsForResourceCommand: () => (/* binding */ serializeAws_json1_1ListTagsForResourceCommand),\n/* harmony export */   serializeAws_json1_1LookupDeveloperIdentityCommand: () => (/* binding */ serializeAws_json1_1LookupDeveloperIdentityCommand),\n/* harmony export */   serializeAws_json1_1MergeDeveloperIdentitiesCommand: () => (/* binding */ serializeAws_json1_1MergeDeveloperIdentitiesCommand),\n/* harmony export */   serializeAws_json1_1SetIdentityPoolRolesCommand: () => (/* binding */ serializeAws_json1_1SetIdentityPoolRolesCommand),\n/* harmony export */   serializeAws_json1_1TagResourceCommand: () => (/* binding */ serializeAws_json1_1TagResourceCommand),\n/* harmony export */   serializeAws_json1_1UnlinkDeveloperIdentityCommand: () => (/* binding */ serializeAws_json1_1UnlinkDeveloperIdentityCommand),\n/* harmony export */   serializeAws_json1_1UnlinkIdentityCommand: () => (/* binding */ serializeAws_json1_1UnlinkIdentityCommand),\n/* harmony export */   serializeAws_json1_1UntagResourceCommand: () => (/* binding */ serializeAws_json1_1UntagResourceCommand),\n/* harmony export */   serializeAws_json1_1UpdateIdentityPoolCommand: () => (/* binding */ serializeAws_json1_1UpdateIdentityPoolCommand)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/protocol-http */ \"(ssr)/./node_modules/@aws-sdk/protocol-http/dist/es/index.js\");\n\n\nvar serializeAws_json1_1CreateIdentityPoolCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var headers, body;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        headers = {\n            \"content-type\": \"application/x-amz-json-1.1\",\n            \"x-amz-target\": \"AWSCognitoIdentityService.CreateIdentityPool\",\n        };\n        body = JSON.stringify(serializeAws_json1_1CreateIdentityPoolInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nvar serializeAws_json1_1DeleteIdentitiesCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var headers, body;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        headers = {\n            \"content-type\": \"application/x-amz-json-1.1\",\n            \"x-amz-target\": \"AWSCognitoIdentityService.DeleteIdentities\",\n        };\n        body = JSON.stringify(serializeAws_json1_1DeleteIdentitiesInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nvar serializeAws_json1_1DeleteIdentityPoolCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var headers, body;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        headers = {\n            \"content-type\": \"application/x-amz-json-1.1\",\n            \"x-amz-target\": \"AWSCognitoIdentityService.DeleteIdentityPool\",\n        };\n        body = JSON.stringify(serializeAws_json1_1DeleteIdentityPoolInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nvar serializeAws_json1_1DescribeIdentityCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var headers, body;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        headers = {\n            \"content-type\": \"application/x-amz-json-1.1\",\n            \"x-amz-target\": \"AWSCognitoIdentityService.DescribeIdentity\",\n        };\n        body = JSON.stringify(serializeAws_json1_1DescribeIdentityInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nvar serializeAws_json1_1DescribeIdentityPoolCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var headers, body;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        headers = {\n            \"content-type\": \"application/x-amz-json-1.1\",\n            \"x-amz-target\": \"AWSCognitoIdentityService.DescribeIdentityPool\",\n        };\n        body = JSON.stringify(serializeAws_json1_1DescribeIdentityPoolInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nvar serializeAws_json1_1GetCredentialsForIdentityCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var headers, body;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        headers = {\n            \"content-type\": \"application/x-amz-json-1.1\",\n            \"x-amz-target\": \"AWSCognitoIdentityService.GetCredentialsForIdentity\",\n        };\n        body = JSON.stringify(serializeAws_json1_1GetCredentialsForIdentityInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nvar serializeAws_json1_1GetIdCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var headers, body;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        headers = {\n            \"content-type\": \"application/x-amz-json-1.1\",\n            \"x-amz-target\": \"AWSCognitoIdentityService.GetId\",\n        };\n        body = JSON.stringify(serializeAws_json1_1GetIdInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nvar serializeAws_json1_1GetIdentityPoolRolesCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var headers, body;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        headers = {\n            \"content-type\": \"application/x-amz-json-1.1\",\n            \"x-amz-target\": \"AWSCognitoIdentityService.GetIdentityPoolRoles\",\n        };\n        body = JSON.stringify(serializeAws_json1_1GetIdentityPoolRolesInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nvar serializeAws_json1_1GetOpenIdTokenCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var headers, body;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        headers = {\n            \"content-type\": \"application/x-amz-json-1.1\",\n            \"x-amz-target\": \"AWSCognitoIdentityService.GetOpenIdToken\",\n        };\n        body = JSON.stringify(serializeAws_json1_1GetOpenIdTokenInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nvar serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var headers, body;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        headers = {\n            \"content-type\": \"application/x-amz-json-1.1\",\n            \"x-amz-target\": \"AWSCognitoIdentityService.GetOpenIdTokenForDeveloperIdentity\",\n        };\n        body = JSON.stringify(serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nvar serializeAws_json1_1ListIdentitiesCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var headers, body;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        headers = {\n            \"content-type\": \"application/x-amz-json-1.1\",\n            \"x-amz-target\": \"AWSCognitoIdentityService.ListIdentities\",\n        };\n        body = JSON.stringify(serializeAws_json1_1ListIdentitiesInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nvar serializeAws_json1_1ListIdentityPoolsCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var headers, body;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        headers = {\n            \"content-type\": \"application/x-amz-json-1.1\",\n            \"x-amz-target\": \"AWSCognitoIdentityService.ListIdentityPools\",\n        };\n        body = JSON.stringify(serializeAws_json1_1ListIdentityPoolsInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nvar serializeAws_json1_1ListTagsForResourceCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var headers, body;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        headers = {\n            \"content-type\": \"application/x-amz-json-1.1\",\n            \"x-amz-target\": \"AWSCognitoIdentityService.ListTagsForResource\",\n        };\n        body = JSON.stringify(serializeAws_json1_1ListTagsForResourceInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nvar serializeAws_json1_1LookupDeveloperIdentityCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var headers, body;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        headers = {\n            \"content-type\": \"application/x-amz-json-1.1\",\n            \"x-amz-target\": \"AWSCognitoIdentityService.LookupDeveloperIdentity\",\n        };\n        body = JSON.stringify(serializeAws_json1_1LookupDeveloperIdentityInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nvar serializeAws_json1_1MergeDeveloperIdentitiesCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var headers, body;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        headers = {\n            \"content-type\": \"application/x-amz-json-1.1\",\n            \"x-amz-target\": \"AWSCognitoIdentityService.MergeDeveloperIdentities\",\n        };\n        body = JSON.stringify(serializeAws_json1_1MergeDeveloperIdentitiesInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nvar serializeAws_json1_1SetIdentityPoolRolesCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var headers, body;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        headers = {\n            \"content-type\": \"application/x-amz-json-1.1\",\n            \"x-amz-target\": \"AWSCognitoIdentityService.SetIdentityPoolRoles\",\n        };\n        body = JSON.stringify(serializeAws_json1_1SetIdentityPoolRolesInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nvar serializeAws_json1_1TagResourceCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var headers, body;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        headers = {\n            \"content-type\": \"application/x-amz-json-1.1\",\n            \"x-amz-target\": \"AWSCognitoIdentityService.TagResource\",\n        };\n        body = JSON.stringify(serializeAws_json1_1TagResourceInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nvar serializeAws_json1_1UnlinkDeveloperIdentityCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var headers, body;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        headers = {\n            \"content-type\": \"application/x-amz-json-1.1\",\n            \"x-amz-target\": \"AWSCognitoIdentityService.UnlinkDeveloperIdentity\",\n        };\n        body = JSON.stringify(serializeAws_json1_1UnlinkDeveloperIdentityInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nvar serializeAws_json1_1UnlinkIdentityCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var headers, body;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        headers = {\n            \"content-type\": \"application/x-amz-json-1.1\",\n            \"x-amz-target\": \"AWSCognitoIdentityService.UnlinkIdentity\",\n        };\n        body = JSON.stringify(serializeAws_json1_1UnlinkIdentityInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nvar serializeAws_json1_1UntagResourceCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var headers, body;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        headers = {\n            \"content-type\": \"application/x-amz-json-1.1\",\n            \"x-amz-target\": \"AWSCognitoIdentityService.UntagResource\",\n        };\n        body = JSON.stringify(serializeAws_json1_1UntagResourceInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nvar serializeAws_json1_1UpdateIdentityPoolCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var headers, body;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        headers = {\n            \"content-type\": \"application/x-amz-json-1.1\",\n            \"x-amz-target\": \"AWSCognitoIdentityService.UpdateIdentityPool\",\n        };\n        body = JSON.stringify(serializeAws_json1_1IdentityPool(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nvar deserializeAws_json1_1CreateIdentityPoolCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_json1_1CreateIdentityPoolCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1IdentityPool(data, context);\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ $metadata: deserializeMetadata(output) }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1CreateIdentityPoolCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, parsedBody, message;\n    var _j;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_k) {\n        switch (_k.label) {\n            case 0:\n                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];\n                _j = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_j.body = _k.sent(), _j)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"InternalErrorException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.cognitoidentity#InternalErrorException\": return [3 /*break*/, 2];\n                    case \"InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.cognitoidentity#InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"LimitExceededException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.cognitoidentity#LimitExceededException\": return [3 /*break*/, 6];\n                    case \"NotAuthorizedException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\": return [3 /*break*/, 8];\n                    case \"ResourceConflictException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.cognitoidentity#ResourceConflictException\": return [3 /*break*/, 10];\n                    case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\": return [3 /*break*/, 12];\n                }\n                return [3 /*break*/, 14];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 6:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 8:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 10:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 12:\n                _h = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 13:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 14:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _k.label = 15;\n            case 15:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_json1_1DeleteIdentitiesCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_json1_1DeleteIdentitiesCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1DeleteIdentitiesResponse(data, context);\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ $metadata: deserializeMetadata(output) }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1DeleteIdentitiesCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];\n                _f = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"InternalErrorException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.cognitoidentity#InternalErrorException\": return [3 /*break*/, 2];\n                    case \"InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.cognitoidentity#InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"TooManyRequestsException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\": return [3 /*break*/, 6];\n                }\n                return [3 /*break*/, 8];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 9];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 9];\n            case 6:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_json1_1DeleteIdentityPoolCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var response;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_json1_1DeleteIdentityPoolCommandError(output, context)];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                response = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1DeleteIdentityPoolCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_j) {\n        switch (_j.label) {\n            case 0:\n                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];\n                _h = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"InternalErrorException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.cognitoidentity#InternalErrorException\": return [3 /*break*/, 2];\n                    case \"InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.cognitoidentity#InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"NotAuthorizedException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\": return [3 /*break*/, 6];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"TooManyRequestsException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\": return [3 /*break*/, 10];\n                }\n                return [3 /*break*/, 12];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 6:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 8:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 10:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 12:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _j.label = 13;\n            case 13:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_json1_1DescribeIdentityCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_json1_1DescribeIdentityCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1IdentityDescription(data, context);\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ $metadata: deserializeMetadata(output) }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1DescribeIdentityCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_j) {\n        switch (_j.label) {\n            case 0:\n                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];\n                _h = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"InternalErrorException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.cognitoidentity#InternalErrorException\": return [3 /*break*/, 2];\n                    case \"InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.cognitoidentity#InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"NotAuthorizedException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\": return [3 /*break*/, 6];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"TooManyRequestsException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\": return [3 /*break*/, 10];\n                }\n                return [3 /*break*/, 12];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 6:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 8:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 10:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 12:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _j.label = 13;\n            case 13:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_json1_1DescribeIdentityPoolCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_json1_1DescribeIdentityPoolCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1IdentityPool(data, context);\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ $metadata: deserializeMetadata(output) }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1DescribeIdentityPoolCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_j) {\n        switch (_j.label) {\n            case 0:\n                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];\n                _h = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"InternalErrorException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.cognitoidentity#InternalErrorException\": return [3 /*break*/, 2];\n                    case \"InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.cognitoidentity#InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"NotAuthorizedException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\": return [3 /*break*/, 6];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"TooManyRequestsException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\": return [3 /*break*/, 10];\n                }\n                return [3 /*break*/, 12];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 6:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 8:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 10:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 12:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _j.label = 13;\n            case 13:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_json1_1GetCredentialsForIdentityCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_json1_1GetCredentialsForIdentityCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1GetCredentialsForIdentityResponse(data, context);\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ $metadata: deserializeMetadata(output) }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1GetCredentialsForIdentityCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;\n    var _l;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_m) {\n        switch (_m.label) {\n            case 0:\n                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];\n                _l = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_l.body = _m.sent(), _l)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"ExternalServiceException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.cognitoidentity#ExternalServiceException\": return [3 /*break*/, 2];\n                    case \"InternalErrorException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.cognitoidentity#InternalErrorException\": return [3 /*break*/, 4];\n                    case \"InvalidIdentityPoolConfigurationException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.cognitoidentity#InvalidIdentityPoolConfigurationException\": return [3 /*break*/, 6];\n                    case \"InvalidParameterException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.cognitoidentity#InvalidParameterException\": return [3 /*break*/, 8];\n                    case \"NotAuthorizedException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\": return [3 /*break*/, 10];\n                    case \"ResourceConflictException\": return [3 /*break*/, 12];\n                    case \"com.amazonaws.cognitoidentity#ResourceConflictException\": return [3 /*break*/, 12];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 14];\n                    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\": return [3 /*break*/, 14];\n                    case \"TooManyRequestsException\": return [3 /*break*/, 16];\n                    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\": return [3 /*break*/, 16];\n                }\n                return [3 /*break*/, 18];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 6:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidIdentityPoolConfigurationExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 8:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 10:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 12:\n                _h = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)];\n            case 13:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _h.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 14:\n                _j = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 15:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _j.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 16:\n                _k = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 17:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _k.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 18:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _m.label = 19;\n            case 19:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_json1_1GetIdCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_json1_1GetIdCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1GetIdResponse(data, context);\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ $metadata: deserializeMetadata(output) }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1GetIdCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;\n    var _l;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_m) {\n        switch (_m.label) {\n            case 0:\n                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];\n                _l = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_l.body = _m.sent(), _l)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"ExternalServiceException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.cognitoidentity#ExternalServiceException\": return [3 /*break*/, 2];\n                    case \"InternalErrorException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.cognitoidentity#InternalErrorException\": return [3 /*break*/, 4];\n                    case \"InvalidParameterException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.cognitoidentity#InvalidParameterException\": return [3 /*break*/, 6];\n                    case \"LimitExceededException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.cognitoidentity#LimitExceededException\": return [3 /*break*/, 8];\n                    case \"NotAuthorizedException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\": return [3 /*break*/, 10];\n                    case \"ResourceConflictException\": return [3 /*break*/, 12];\n                    case \"com.amazonaws.cognitoidentity#ResourceConflictException\": return [3 /*break*/, 12];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 14];\n                    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\": return [3 /*break*/, 14];\n                    case \"TooManyRequestsException\": return [3 /*break*/, 16];\n                    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\": return [3 /*break*/, 16];\n                }\n                return [3 /*break*/, 18];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 6:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 8:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 10:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 12:\n                _h = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)];\n            case 13:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _h.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 14:\n                _j = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 15:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _j.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 16:\n                _k = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 17:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _k.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 18:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _m.label = 19;\n            case 19:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_json1_1GetIdentityPoolRolesCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_json1_1GetIdentityPoolRolesCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1GetIdentityPoolRolesResponse(data, context);\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ $metadata: deserializeMetadata(output) }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1GetIdentityPoolRolesCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, parsedBody, message;\n    var _j;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_k) {\n        switch (_k.label) {\n            case 0:\n                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];\n                _j = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_j.body = _k.sent(), _j)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"InternalErrorException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.cognitoidentity#InternalErrorException\": return [3 /*break*/, 2];\n                    case \"InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.cognitoidentity#InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"NotAuthorizedException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\": return [3 /*break*/, 6];\n                    case \"ResourceConflictException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.cognitoidentity#ResourceConflictException\": return [3 /*break*/, 8];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\": return [3 /*break*/, 10];\n                    case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\": return [3 /*break*/, 12];\n                }\n                return [3 /*break*/, 14];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 6:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 8:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 10:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 12:\n                _h = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 13:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 14:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _k.label = 15;\n            case 15:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_json1_1GetOpenIdTokenCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_json1_1GetOpenIdTokenCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1GetOpenIdTokenResponse(data, context);\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ $metadata: deserializeMetadata(output) }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1GetOpenIdTokenCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_l) {\n        switch (_l.label) {\n            case 0:\n                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];\n                _k = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"ExternalServiceException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.cognitoidentity#ExternalServiceException\": return [3 /*break*/, 2];\n                    case \"InternalErrorException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.cognitoidentity#InternalErrorException\": return [3 /*break*/, 4];\n                    case \"InvalidParameterException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.cognitoidentity#InvalidParameterException\": return [3 /*break*/, 6];\n                    case \"NotAuthorizedException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\": return [3 /*break*/, 8];\n                    case \"ResourceConflictException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.cognitoidentity#ResourceConflictException\": return [3 /*break*/, 10];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 12];\n                    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\": return [3 /*break*/, 12];\n                    case \"TooManyRequestsException\": return [3 /*break*/, 14];\n                    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\": return [3 /*break*/, 14];\n                }\n                return [3 /*break*/, 16];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 6:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 8:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 10:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 12:\n                _h = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 13:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _h.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 14:\n                _j = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 15:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _j.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 16:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _l.label = 17;\n            case 17:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityResponse(data, context);\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ $metadata: deserializeMetadata(output) }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_l) {\n        switch (_l.label) {\n            case 0:\n                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];\n                _k = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"DeveloperUserAlreadyRegisteredException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.cognitoidentity#DeveloperUserAlreadyRegisteredException\": return [3 /*break*/, 2];\n                    case \"InternalErrorException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.cognitoidentity#InternalErrorException\": return [3 /*break*/, 4];\n                    case \"InvalidParameterException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.cognitoidentity#InvalidParameterException\": return [3 /*break*/, 6];\n                    case \"NotAuthorizedException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\": return [3 /*break*/, 8];\n                    case \"ResourceConflictException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.cognitoidentity#ResourceConflictException\": return [3 /*break*/, 10];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 12];\n                    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\": return [3 /*break*/, 12];\n                    case \"TooManyRequestsException\": return [3 /*break*/, 14];\n                    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\": return [3 /*break*/, 14];\n                }\n                return [3 /*break*/, 16];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1DeveloperUserAlreadyRegisteredExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 6:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 8:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 10:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 12:\n                _h = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 13:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _h.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 14:\n                _j = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 15:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _j.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 16:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _l.label = 17;\n            case 17:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_json1_1ListIdentitiesCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_json1_1ListIdentitiesCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1ListIdentitiesResponse(data, context);\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ $metadata: deserializeMetadata(output) }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1ListIdentitiesCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_j) {\n        switch (_j.label) {\n            case 0:\n                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];\n                _h = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"InternalErrorException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.cognitoidentity#InternalErrorException\": return [3 /*break*/, 2];\n                    case \"InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.cognitoidentity#InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"NotAuthorizedException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\": return [3 /*break*/, 6];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"TooManyRequestsException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\": return [3 /*break*/, 10];\n                }\n                return [3 /*break*/, 12];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 6:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 8:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 10:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 12:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _j.label = 13;\n            case 13:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_json1_1ListIdentityPoolsCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_json1_1ListIdentityPoolsCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1ListIdentityPoolsResponse(data, context);\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ $metadata: deserializeMetadata(output) }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1ListIdentityPoolsCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_j) {\n        switch (_j.label) {\n            case 0:\n                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];\n                _h = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"InternalErrorException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.cognitoidentity#InternalErrorException\": return [3 /*break*/, 2];\n                    case \"InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.cognitoidentity#InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"NotAuthorizedException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\": return [3 /*break*/, 6];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"TooManyRequestsException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\": return [3 /*break*/, 10];\n                }\n                return [3 /*break*/, 12];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 6:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 8:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 10:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 12:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _j.label = 13;\n            case 13:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_json1_1ListTagsForResourceCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_json1_1ListTagsForResourceCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1ListTagsForResourceResponse(data, context);\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ $metadata: deserializeMetadata(output) }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1ListTagsForResourceCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_j) {\n        switch (_j.label) {\n            case 0:\n                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];\n                _h = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"InternalErrorException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.cognitoidentity#InternalErrorException\": return [3 /*break*/, 2];\n                    case \"InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.cognitoidentity#InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"NotAuthorizedException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\": return [3 /*break*/, 6];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"TooManyRequestsException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\": return [3 /*break*/, 10];\n                }\n                return [3 /*break*/, 12];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 6:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 8:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 10:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 12:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _j.label = 13;\n            case 13:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_json1_1LookupDeveloperIdentityCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_json1_1LookupDeveloperIdentityCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1LookupDeveloperIdentityResponse(data, context);\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ $metadata: deserializeMetadata(output) }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1LookupDeveloperIdentityCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, parsedBody, message;\n    var _j;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_k) {\n        switch (_k.label) {\n            case 0:\n                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];\n                _j = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_j.body = _k.sent(), _j)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"InternalErrorException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.cognitoidentity#InternalErrorException\": return [3 /*break*/, 2];\n                    case \"InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.cognitoidentity#InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"NotAuthorizedException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\": return [3 /*break*/, 6];\n                    case \"ResourceConflictException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.cognitoidentity#ResourceConflictException\": return [3 /*break*/, 8];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\": return [3 /*break*/, 10];\n                    case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\": return [3 /*break*/, 12];\n                }\n                return [3 /*break*/, 14];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 6:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 8:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 10:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 12:\n                _h = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 13:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 14:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _k.label = 15;\n            case 15:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_json1_1MergeDeveloperIdentitiesCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_json1_1MergeDeveloperIdentitiesCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1MergeDeveloperIdentitiesResponse(data, context);\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ $metadata: deserializeMetadata(output) }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1MergeDeveloperIdentitiesCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, parsedBody, message;\n    var _j;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_k) {\n        switch (_k.label) {\n            case 0:\n                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];\n                _j = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_j.body = _k.sent(), _j)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"InternalErrorException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.cognitoidentity#InternalErrorException\": return [3 /*break*/, 2];\n                    case \"InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.cognitoidentity#InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"NotAuthorizedException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\": return [3 /*break*/, 6];\n                    case \"ResourceConflictException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.cognitoidentity#ResourceConflictException\": return [3 /*break*/, 8];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\": return [3 /*break*/, 10];\n                    case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\": return [3 /*break*/, 12];\n                }\n                return [3 /*break*/, 14];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 6:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 8:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 10:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 12:\n                _h = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 13:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 14:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _k.label = 15;\n            case 15:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_json1_1SetIdentityPoolRolesCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var response;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_json1_1SetIdentityPoolRolesCommandError(output, context)];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                response = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1SetIdentityPoolRolesCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_l) {\n        switch (_l.label) {\n            case 0:\n                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];\n                _k = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"ConcurrentModificationException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.cognitoidentity#ConcurrentModificationException\": return [3 /*break*/, 2];\n                    case \"InternalErrorException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.cognitoidentity#InternalErrorException\": return [3 /*break*/, 4];\n                    case \"InvalidParameterException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.cognitoidentity#InvalidParameterException\": return [3 /*break*/, 6];\n                    case \"NotAuthorizedException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\": return [3 /*break*/, 8];\n                    case \"ResourceConflictException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.cognitoidentity#ResourceConflictException\": return [3 /*break*/, 10];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 12];\n                    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\": return [3 /*break*/, 12];\n                    case \"TooManyRequestsException\": return [3 /*break*/, 14];\n                    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\": return [3 /*break*/, 14];\n                }\n                return [3 /*break*/, 16];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 6:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 8:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 10:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 12:\n                _h = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 13:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _h.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 14:\n                _j = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 15:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _j.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 16:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _l.label = 17;\n            case 17:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_json1_1TagResourceCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_json1_1TagResourceCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1TagResourceResponse(data, context);\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ $metadata: deserializeMetadata(output) }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1TagResourceCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_j) {\n        switch (_j.label) {\n            case 0:\n                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];\n                _h = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"InternalErrorException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.cognitoidentity#InternalErrorException\": return [3 /*break*/, 2];\n                    case \"InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.cognitoidentity#InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"NotAuthorizedException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\": return [3 /*break*/, 6];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"TooManyRequestsException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\": return [3 /*break*/, 10];\n                }\n                return [3 /*break*/, 12];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 6:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 8:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 10:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 12:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _j.label = 13;\n            case 13:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_json1_1UnlinkDeveloperIdentityCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var response;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_json1_1UnlinkDeveloperIdentityCommandError(output, context)];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                response = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1UnlinkDeveloperIdentityCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, parsedBody, message;\n    var _j;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_k) {\n        switch (_k.label) {\n            case 0:\n                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];\n                _j = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_j.body = _k.sent(), _j)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"InternalErrorException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.cognitoidentity#InternalErrorException\": return [3 /*break*/, 2];\n                    case \"InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.cognitoidentity#InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"NotAuthorizedException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\": return [3 /*break*/, 6];\n                    case \"ResourceConflictException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.cognitoidentity#ResourceConflictException\": return [3 /*break*/, 8];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\": return [3 /*break*/, 10];\n                    case \"TooManyRequestsException\": return [3 /*break*/, 12];\n                    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\": return [3 /*break*/, 12];\n                }\n                return [3 /*break*/, 14];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 6:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 8:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 10:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 12:\n                _h = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 13:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 15];\n            case 14:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _k.label = 15;\n            case 15:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_json1_1UnlinkIdentityCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var response;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_json1_1UnlinkIdentityCommandError(output, context)];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                response = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1UnlinkIdentityCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_l) {\n        switch (_l.label) {\n            case 0:\n                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];\n                _k = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"ExternalServiceException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.cognitoidentity#ExternalServiceException\": return [3 /*break*/, 2];\n                    case \"InternalErrorException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.cognitoidentity#InternalErrorException\": return [3 /*break*/, 4];\n                    case \"InvalidParameterException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.cognitoidentity#InvalidParameterException\": return [3 /*break*/, 6];\n                    case \"NotAuthorizedException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\": return [3 /*break*/, 8];\n                    case \"ResourceConflictException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.cognitoidentity#ResourceConflictException\": return [3 /*break*/, 10];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 12];\n                    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\": return [3 /*break*/, 12];\n                    case \"TooManyRequestsException\": return [3 /*break*/, 14];\n                    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\": return [3 /*break*/, 14];\n                }\n                return [3 /*break*/, 16];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 6:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 8:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 10:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 12:\n                _h = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 13:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _h.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 14:\n                _j = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 15:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _j.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 16:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _l.label = 17;\n            case 17:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_json1_1UntagResourceCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_json1_1UntagResourceCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1UntagResourceResponse(data, context);\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ $metadata: deserializeMetadata(output) }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1UntagResourceCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_j) {\n        switch (_j.label) {\n            case 0:\n                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];\n                _h = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"InternalErrorException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.cognitoidentity#InternalErrorException\": return [3 /*break*/, 2];\n                    case \"InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.cognitoidentity#InvalidParameterException\": return [3 /*break*/, 4];\n                    case \"NotAuthorizedException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\": return [3 /*break*/, 6];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"TooManyRequestsException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\": return [3 /*break*/, 10];\n                }\n                return [3 /*break*/, 12];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 6:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 8:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 10:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 12:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _j.label = 13;\n            case 13:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_json1_1UpdateIdentityPoolCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_json1_1UpdateIdentityPoolCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1IdentityPool(data, context);\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ $metadata: deserializeMetadata(output) }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1UpdateIdentityPoolCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;\n    var _l;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_m) {\n        switch (_m.label) {\n            case 0:\n                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];\n                _l = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_l.body = _m.sent(), _l)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"ConcurrentModificationException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.cognitoidentity#ConcurrentModificationException\": return [3 /*break*/, 2];\n                    case \"InternalErrorException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.cognitoidentity#InternalErrorException\": return [3 /*break*/, 4];\n                    case \"InvalidParameterException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.cognitoidentity#InvalidParameterException\": return [3 /*break*/, 6];\n                    case \"LimitExceededException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.cognitoidentity#LimitExceededException\": return [3 /*break*/, 8];\n                    case \"NotAuthorizedException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\": return [3 /*break*/, 10];\n                    case \"ResourceConflictException\": return [3 /*break*/, 12];\n                    case \"com.amazonaws.cognitoidentity#ResourceConflictException\": return [3 /*break*/, 12];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 14];\n                    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\": return [3 /*break*/, 14];\n                    case \"TooManyRequestsException\": return [3 /*break*/, 16];\n                    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\": return [3 /*break*/, 16];\n                }\n                return [3 /*break*/, 18];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 6:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 8:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 10:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 12:\n                _h = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)];\n            case 13:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _h.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 14:\n                _j = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 15:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _j.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 16:\n                _k = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 17:\n                response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _k.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 18:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _m.label = 19;\n            case 19:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_json1_1ConcurrentModificationExceptionResponse = function (parsedOutput, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1ConcurrentModificationException(body, context);\n        contents = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ name: \"ConcurrentModificationException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1DeveloperUserAlreadyRegisteredExceptionResponse = function (parsedOutput, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1DeveloperUserAlreadyRegisteredException(body, context);\n        contents = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ name: \"DeveloperUserAlreadyRegisteredException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1ExternalServiceExceptionResponse = function (parsedOutput, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1ExternalServiceException(body, context);\n        contents = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ name: \"ExternalServiceException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1InternalErrorExceptionResponse = function (parsedOutput, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1InternalErrorException(body, context);\n        contents = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ name: \"InternalErrorException\", $fault: \"server\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1InvalidIdentityPoolConfigurationExceptionResponse = function (parsedOutput, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1InvalidIdentityPoolConfigurationException(body, context);\n        contents = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ name: \"InvalidIdentityPoolConfigurationException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1InvalidParameterExceptionResponse = function (parsedOutput, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1InvalidParameterException(body, context);\n        contents = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ name: \"InvalidParameterException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1LimitExceededExceptionResponse = function (parsedOutput, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1LimitExceededException(body, context);\n        contents = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ name: \"LimitExceededException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1NotAuthorizedExceptionResponse = function (parsedOutput, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1NotAuthorizedException(body, context);\n        contents = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ name: \"NotAuthorizedException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1ResourceConflictExceptionResponse = function (parsedOutput, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1ResourceConflictException(body, context);\n        contents = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ name: \"ResourceConflictException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1ResourceNotFoundExceptionResponse = function (parsedOutput, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1ResourceNotFoundException(body, context);\n        contents = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ name: \"ResourceNotFoundException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1TooManyRequestsExceptionResponse = function (parsedOutput, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1TooManyRequestsException(body, context);\n        contents = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ name: \"TooManyRequestsException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar serializeAws_json1_1CognitoIdentityProvider = function (input, context) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (input.ClientId !== undefined && input.ClientId !== null && { ClientId: input.ClientId })), (input.ProviderName !== undefined && input.ProviderName !== null && { ProviderName: input.ProviderName })), (input.ServerSideTokenCheck !== undefined &&\n        input.ServerSideTokenCheck !== null && { ServerSideTokenCheck: input.ServerSideTokenCheck }));\n};\nvar serializeAws_json1_1CognitoIdentityProviderList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1CognitoIdentityProvider(entry, context);\n    });\n};\nvar serializeAws_json1_1CreateIdentityPoolInput = function (input, context) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (input.AllowClassicFlow !== undefined &&\n        input.AllowClassicFlow !== null && { AllowClassicFlow: input.AllowClassicFlow })), (input.AllowUnauthenticatedIdentities !== undefined &&\n        input.AllowUnauthenticatedIdentities !== null && {\n        AllowUnauthenticatedIdentities: input.AllowUnauthenticatedIdentities,\n    })), (input.CognitoIdentityProviders !== undefined &&\n        input.CognitoIdentityProviders !== null && {\n        CognitoIdentityProviders: serializeAws_json1_1CognitoIdentityProviderList(input.CognitoIdentityProviders, context),\n    })), (input.DeveloperProviderName !== undefined &&\n        input.DeveloperProviderName !== null && { DeveloperProviderName: input.DeveloperProviderName })), (input.IdentityPoolName !== undefined &&\n        input.IdentityPoolName !== null && { IdentityPoolName: input.IdentityPoolName })), (input.IdentityPoolTags !== undefined &&\n        input.IdentityPoolTags !== null && {\n        IdentityPoolTags: serializeAws_json1_1IdentityPoolTagsType(input.IdentityPoolTags, context),\n    })), (input.OpenIdConnectProviderARNs !== undefined &&\n        input.OpenIdConnectProviderARNs !== null && {\n        OpenIdConnectProviderARNs: serializeAws_json1_1OIDCProviderList(input.OpenIdConnectProviderARNs, context),\n    })), (input.SamlProviderARNs !== undefined &&\n        input.SamlProviderARNs !== null && {\n        SamlProviderARNs: serializeAws_json1_1SAMLProviderList(input.SamlProviderARNs, context),\n    })), (input.SupportedLoginProviders !== undefined &&\n        input.SupportedLoginProviders !== null && {\n        SupportedLoginProviders: serializeAws_json1_1IdentityProviders(input.SupportedLoginProviders, context),\n    }));\n};\nvar serializeAws_json1_1DeleteIdentitiesInput = function (input, context) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (input.IdentityIdsToDelete !== undefined &&\n        input.IdentityIdsToDelete !== null && {\n        IdentityIdsToDelete: serializeAws_json1_1IdentityIdList(input.IdentityIdsToDelete, context),\n    }));\n};\nvar serializeAws_json1_1DeleteIdentityPoolInput = function (input, context) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (input.IdentityPoolId !== undefined &&\n        input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }));\n};\nvar serializeAws_json1_1DescribeIdentityInput = function (input, context) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (input.IdentityId !== undefined && input.IdentityId !== null && { IdentityId: input.IdentityId }));\n};\nvar serializeAws_json1_1DescribeIdentityPoolInput = function (input, context) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (input.IdentityPoolId !== undefined &&\n        input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }));\n};\nvar serializeAws_json1_1GetCredentialsForIdentityInput = function (input, context) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (input.CustomRoleArn !== undefined && input.CustomRoleArn !== null && { CustomRoleArn: input.CustomRoleArn })), (input.IdentityId !== undefined && input.IdentityId !== null && { IdentityId: input.IdentityId })), (input.Logins !== undefined &&\n        input.Logins !== null && { Logins: serializeAws_json1_1LoginsMap(input.Logins, context) }));\n};\nvar serializeAws_json1_1GetIdentityPoolRolesInput = function (input, context) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (input.IdentityPoolId !== undefined &&\n        input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }));\n};\nvar serializeAws_json1_1GetIdInput = function (input, context) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (input.AccountId !== undefined && input.AccountId !== null && { AccountId: input.AccountId })), (input.IdentityPoolId !== undefined &&\n        input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId })), (input.Logins !== undefined &&\n        input.Logins !== null && { Logins: serializeAws_json1_1LoginsMap(input.Logins, context) }));\n};\nvar serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityInput = function (input, context) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (input.IdentityId !== undefined && input.IdentityId !== null && { IdentityId: input.IdentityId })), (input.IdentityPoolId !== undefined &&\n        input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId })), (input.Logins !== undefined &&\n        input.Logins !== null && { Logins: serializeAws_json1_1LoginsMap(input.Logins, context) })), (input.TokenDuration !== undefined && input.TokenDuration !== null && { TokenDuration: input.TokenDuration }));\n};\nvar serializeAws_json1_1GetOpenIdTokenInput = function (input, context) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (input.IdentityId !== undefined && input.IdentityId !== null && { IdentityId: input.IdentityId })), (input.Logins !== undefined &&\n        input.Logins !== null && { Logins: serializeAws_json1_1LoginsMap(input.Logins, context) }));\n};\nvar serializeAws_json1_1IdentityIdList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar serializeAws_json1_1IdentityPool = function (input, context) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (input.AllowClassicFlow !== undefined &&\n        input.AllowClassicFlow !== null && { AllowClassicFlow: input.AllowClassicFlow })), (input.AllowUnauthenticatedIdentities !== undefined &&\n        input.AllowUnauthenticatedIdentities !== null && {\n        AllowUnauthenticatedIdentities: input.AllowUnauthenticatedIdentities,\n    })), (input.CognitoIdentityProviders !== undefined &&\n        input.CognitoIdentityProviders !== null && {\n        CognitoIdentityProviders: serializeAws_json1_1CognitoIdentityProviderList(input.CognitoIdentityProviders, context),\n    })), (input.DeveloperProviderName !== undefined &&\n        input.DeveloperProviderName !== null && { DeveloperProviderName: input.DeveloperProviderName })), (input.IdentityPoolId !== undefined &&\n        input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId })), (input.IdentityPoolName !== undefined &&\n        input.IdentityPoolName !== null && { IdentityPoolName: input.IdentityPoolName })), (input.IdentityPoolTags !== undefined &&\n        input.IdentityPoolTags !== null && {\n        IdentityPoolTags: serializeAws_json1_1IdentityPoolTagsType(input.IdentityPoolTags, context),\n    })), (input.OpenIdConnectProviderARNs !== undefined &&\n        input.OpenIdConnectProviderARNs !== null && {\n        OpenIdConnectProviderARNs: serializeAws_json1_1OIDCProviderList(input.OpenIdConnectProviderARNs, context),\n    })), (input.SamlProviderARNs !== undefined &&\n        input.SamlProviderARNs !== null && {\n        SamlProviderARNs: serializeAws_json1_1SAMLProviderList(input.SamlProviderARNs, context),\n    })), (input.SupportedLoginProviders !== undefined &&\n        input.SupportedLoginProviders !== null && {\n        SupportedLoginProviders: serializeAws_json1_1IdentityProviders(input.SupportedLoginProviders, context),\n    }));\n};\nvar serializeAws_json1_1IdentityPoolTagsListType = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar serializeAws_json1_1IdentityPoolTagsType = function (input, context) {\n    return Object.entries(input).reduce(function (acc, _a) {\n        var _b;\n        var _c = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(_a, 2), key = _c[0], value = _c[1];\n        if (value === null) {\n            return acc;\n        }\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, acc), (_b = {}, _b[key] = value, _b));\n    }, {});\n};\nvar serializeAws_json1_1IdentityProviders = function (input, context) {\n    return Object.entries(input).reduce(function (acc, _a) {\n        var _b;\n        var _c = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(_a, 2), key = _c[0], value = _c[1];\n        if (value === null) {\n            return acc;\n        }\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, acc), (_b = {}, _b[key] = value, _b));\n    }, {});\n};\nvar serializeAws_json1_1ListIdentitiesInput = function (input, context) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (input.HideDisabled !== undefined && input.HideDisabled !== null && { HideDisabled: input.HideDisabled })), (input.IdentityPoolId !== undefined &&\n        input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId })), (input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults })), (input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }));\n};\nvar serializeAws_json1_1ListIdentityPoolsInput = function (input, context) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults })), (input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }));\n};\nvar serializeAws_json1_1ListTagsForResourceInput = function (input, context) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (input.ResourceArn !== undefined && input.ResourceArn !== null && { ResourceArn: input.ResourceArn }));\n};\nvar serializeAws_json1_1LoginsList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar serializeAws_json1_1LoginsMap = function (input, context) {\n    return Object.entries(input).reduce(function (acc, _a) {\n        var _b;\n        var _c = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(_a, 2), key = _c[0], value = _c[1];\n        if (value === null) {\n            return acc;\n        }\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, acc), (_b = {}, _b[key] = value, _b));\n    }, {});\n};\nvar serializeAws_json1_1LookupDeveloperIdentityInput = function (input, context) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (input.DeveloperUserIdentifier !== undefined &&\n        input.DeveloperUserIdentifier !== null && { DeveloperUserIdentifier: input.DeveloperUserIdentifier })), (input.IdentityId !== undefined && input.IdentityId !== null && { IdentityId: input.IdentityId })), (input.IdentityPoolId !== undefined &&\n        input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId })), (input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults })), (input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }));\n};\nvar serializeAws_json1_1MappingRule = function (input, context) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (input.Claim !== undefined && input.Claim !== null && { Claim: input.Claim })), (input.MatchType !== undefined && input.MatchType !== null && { MatchType: input.MatchType })), (input.RoleARN !== undefined && input.RoleARN !== null && { RoleARN: input.RoleARN })), (input.Value !== undefined && input.Value !== null && { Value: input.Value }));\n};\nvar serializeAws_json1_1MappingRulesList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1MappingRule(entry, context);\n    });\n};\nvar serializeAws_json1_1MergeDeveloperIdentitiesInput = function (input, context) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (input.DestinationUserIdentifier !== undefined &&\n        input.DestinationUserIdentifier !== null && { DestinationUserIdentifier: input.DestinationUserIdentifier })), (input.DeveloperProviderName !== undefined &&\n        input.DeveloperProviderName !== null && { DeveloperProviderName: input.DeveloperProviderName })), (input.IdentityPoolId !== undefined &&\n        input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId })), (input.SourceUserIdentifier !== undefined &&\n        input.SourceUserIdentifier !== null && { SourceUserIdentifier: input.SourceUserIdentifier }));\n};\nvar serializeAws_json1_1OIDCProviderList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar serializeAws_json1_1RoleMapping = function (input, context) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (input.AmbiguousRoleResolution !== undefined &&\n        input.AmbiguousRoleResolution !== null && { AmbiguousRoleResolution: input.AmbiguousRoleResolution })), (input.RulesConfiguration !== undefined &&\n        input.RulesConfiguration !== null && {\n        RulesConfiguration: serializeAws_json1_1RulesConfigurationType(input.RulesConfiguration, context),\n    })), (input.Type !== undefined && input.Type !== null && { Type: input.Type }));\n};\nvar serializeAws_json1_1RoleMappingMap = function (input, context) {\n    return Object.entries(input).reduce(function (acc, _a) {\n        var _b;\n        var _c = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(_a, 2), key = _c[0], value = _c[1];\n        if (value === null) {\n            return acc;\n        }\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, acc), (_b = {}, _b[key] = serializeAws_json1_1RoleMapping(value, context), _b));\n    }, {});\n};\nvar serializeAws_json1_1RolesMap = function (input, context) {\n    return Object.entries(input).reduce(function (acc, _a) {\n        var _b;\n        var _c = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(_a, 2), key = _c[0], value = _c[1];\n        if (value === null) {\n            return acc;\n        }\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, acc), (_b = {}, _b[key] = value, _b));\n    }, {});\n};\nvar serializeAws_json1_1RulesConfigurationType = function (input, context) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (input.Rules !== undefined &&\n        input.Rules !== null && { Rules: serializeAws_json1_1MappingRulesList(input.Rules, context) }));\n};\nvar serializeAws_json1_1SAMLProviderList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar serializeAws_json1_1SetIdentityPoolRolesInput = function (input, context) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (input.IdentityPoolId !== undefined &&\n        input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId })), (input.RoleMappings !== undefined &&\n        input.RoleMappings !== null && { RoleMappings: serializeAws_json1_1RoleMappingMap(input.RoleMappings, context) })), (input.Roles !== undefined &&\n        input.Roles !== null && { Roles: serializeAws_json1_1RolesMap(input.Roles, context) }));\n};\nvar serializeAws_json1_1TagResourceInput = function (input, context) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (input.ResourceArn !== undefined && input.ResourceArn !== null && { ResourceArn: input.ResourceArn })), (input.Tags !== undefined &&\n        input.Tags !== null && { Tags: serializeAws_json1_1IdentityPoolTagsType(input.Tags, context) }));\n};\nvar serializeAws_json1_1UnlinkDeveloperIdentityInput = function (input, context) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (input.DeveloperProviderName !== undefined &&\n        input.DeveloperProviderName !== null && { DeveloperProviderName: input.DeveloperProviderName })), (input.DeveloperUserIdentifier !== undefined &&\n        input.DeveloperUserIdentifier !== null && { DeveloperUserIdentifier: input.DeveloperUserIdentifier })), (input.IdentityId !== undefined && input.IdentityId !== null && { IdentityId: input.IdentityId })), (input.IdentityPoolId !== undefined &&\n        input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }));\n};\nvar serializeAws_json1_1UnlinkIdentityInput = function (input, context) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (input.IdentityId !== undefined && input.IdentityId !== null && { IdentityId: input.IdentityId })), (input.Logins !== undefined &&\n        input.Logins !== null && { Logins: serializeAws_json1_1LoginsMap(input.Logins, context) })), (input.LoginsToRemove !== undefined &&\n        input.LoginsToRemove !== null && {\n        LoginsToRemove: serializeAws_json1_1LoginsList(input.LoginsToRemove, context),\n    }));\n};\nvar serializeAws_json1_1UntagResourceInput = function (input, context) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (input.ResourceArn !== undefined && input.ResourceArn !== null && { ResourceArn: input.ResourceArn })), (input.TagKeys !== undefined &&\n        input.TagKeys !== null && { TagKeys: serializeAws_json1_1IdentityPoolTagsListType(input.TagKeys, context) }));\n};\nvar deserializeAws_json1_1CognitoIdentityProvider = function (output, context) {\n    return {\n        ClientId: output.ClientId !== undefined && output.ClientId !== null ? output.ClientId : undefined,\n        ProviderName: output.ProviderName !== undefined && output.ProviderName !== null ? output.ProviderName : undefined,\n        ServerSideTokenCheck: output.ServerSideTokenCheck !== undefined && output.ServerSideTokenCheck !== null\n            ? output.ServerSideTokenCheck\n            : undefined,\n    };\n};\nvar deserializeAws_json1_1CognitoIdentityProviderList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1CognitoIdentityProvider(entry, context);\n    });\n};\nvar deserializeAws_json1_1ConcurrentModificationException = function (output, context) {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nvar deserializeAws_json1_1Credentials = function (output, context) {\n    return {\n        AccessKeyId: output.AccessKeyId !== undefined && output.AccessKeyId !== null ? output.AccessKeyId : undefined,\n        Expiration: output.Expiration !== undefined && output.Expiration !== null\n            ? new Date(Math.round(output.Expiration * 1000))\n            : undefined,\n        SecretKey: output.SecretKey !== undefined && output.SecretKey !== null ? output.SecretKey : undefined,\n        SessionToken: output.SessionToken !== undefined && output.SessionToken !== null ? output.SessionToken : undefined,\n    };\n};\nvar deserializeAws_json1_1DeleteIdentitiesResponse = function (output, context) {\n    return {\n        UnprocessedIdentityIds: output.UnprocessedIdentityIds !== undefined && output.UnprocessedIdentityIds !== null\n            ? deserializeAws_json1_1UnprocessedIdentityIdList(output.UnprocessedIdentityIds, context)\n            : undefined,\n    };\n};\nvar deserializeAws_json1_1DeveloperUserAlreadyRegisteredException = function (output, context) {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nvar deserializeAws_json1_1DeveloperUserIdentifierList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar deserializeAws_json1_1ExternalServiceException = function (output, context) {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nvar deserializeAws_json1_1GetCredentialsForIdentityResponse = function (output, context) {\n    return {\n        Credentials: output.Credentials !== undefined && output.Credentials !== null\n            ? deserializeAws_json1_1Credentials(output.Credentials, context)\n            : undefined,\n        IdentityId: output.IdentityId !== undefined && output.IdentityId !== null ? output.IdentityId : undefined,\n    };\n};\nvar deserializeAws_json1_1GetIdentityPoolRolesResponse = function (output, context) {\n    return {\n        IdentityPoolId: output.IdentityPoolId !== undefined && output.IdentityPoolId !== null ? output.IdentityPoolId : undefined,\n        RoleMappings: output.RoleMappings !== undefined && output.RoleMappings !== null\n            ? deserializeAws_json1_1RoleMappingMap(output.RoleMappings, context)\n            : undefined,\n        Roles: output.Roles !== undefined && output.Roles !== null\n            ? deserializeAws_json1_1RolesMap(output.Roles, context)\n            : undefined,\n    };\n};\nvar deserializeAws_json1_1GetIdResponse = function (output, context) {\n    return {\n        IdentityId: output.IdentityId !== undefined && output.IdentityId !== null ? output.IdentityId : undefined,\n    };\n};\nvar deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityResponse = function (output, context) {\n    return {\n        IdentityId: output.IdentityId !== undefined && output.IdentityId !== null ? output.IdentityId : undefined,\n        Token: output.Token !== undefined && output.Token !== null ? output.Token : undefined,\n    };\n};\nvar deserializeAws_json1_1GetOpenIdTokenResponse = function (output, context) {\n    return {\n        IdentityId: output.IdentityId !== undefined && output.IdentityId !== null ? output.IdentityId : undefined,\n        Token: output.Token !== undefined && output.Token !== null ? output.Token : undefined,\n    };\n};\nvar deserializeAws_json1_1IdentitiesList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1IdentityDescription(entry, context);\n    });\n};\nvar deserializeAws_json1_1IdentityDescription = function (output, context) {\n    return {\n        CreationDate: output.CreationDate !== undefined && output.CreationDate !== null\n            ? new Date(Math.round(output.CreationDate * 1000))\n            : undefined,\n        IdentityId: output.IdentityId !== undefined && output.IdentityId !== null ? output.IdentityId : undefined,\n        LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null\n            ? new Date(Math.round(output.LastModifiedDate * 1000))\n            : undefined,\n        Logins: output.Logins !== undefined && output.Logins !== null\n            ? deserializeAws_json1_1LoginsList(output.Logins, context)\n            : undefined,\n    };\n};\nvar deserializeAws_json1_1IdentityPool = function (output, context) {\n    return {\n        AllowClassicFlow: output.AllowClassicFlow !== undefined && output.AllowClassicFlow !== null ? output.AllowClassicFlow : undefined,\n        AllowUnauthenticatedIdentities: output.AllowUnauthenticatedIdentities !== undefined && output.AllowUnauthenticatedIdentities !== null\n            ? output.AllowUnauthenticatedIdentities\n            : undefined,\n        CognitoIdentityProviders: output.CognitoIdentityProviders !== undefined && output.CognitoIdentityProviders !== null\n            ? deserializeAws_json1_1CognitoIdentityProviderList(output.CognitoIdentityProviders, context)\n            : undefined,\n        DeveloperProviderName: output.DeveloperProviderName !== undefined && output.DeveloperProviderName !== null\n            ? output.DeveloperProviderName\n            : undefined,\n        IdentityPoolId: output.IdentityPoolId !== undefined && output.IdentityPoolId !== null ? output.IdentityPoolId : undefined,\n        IdentityPoolName: output.IdentityPoolName !== undefined && output.IdentityPoolName !== null ? output.IdentityPoolName : undefined,\n        IdentityPoolTags: output.IdentityPoolTags !== undefined && output.IdentityPoolTags !== null\n            ? deserializeAws_json1_1IdentityPoolTagsType(output.IdentityPoolTags, context)\n            : undefined,\n        OpenIdConnectProviderARNs: output.OpenIdConnectProviderARNs !== undefined && output.OpenIdConnectProviderARNs !== null\n            ? deserializeAws_json1_1OIDCProviderList(output.OpenIdConnectProviderARNs, context)\n            : undefined,\n        SamlProviderARNs: output.SamlProviderARNs !== undefined && output.SamlProviderARNs !== null\n            ? deserializeAws_json1_1SAMLProviderList(output.SamlProviderARNs, context)\n            : undefined,\n        SupportedLoginProviders: output.SupportedLoginProviders !== undefined && output.SupportedLoginProviders !== null\n            ? deserializeAws_json1_1IdentityProviders(output.SupportedLoginProviders, context)\n            : undefined,\n    };\n};\nvar deserializeAws_json1_1IdentityPoolShortDescription = function (output, context) {\n    return {\n        IdentityPoolId: output.IdentityPoolId !== undefined && output.IdentityPoolId !== null ? output.IdentityPoolId : undefined,\n        IdentityPoolName: output.IdentityPoolName !== undefined && output.IdentityPoolName !== null ? output.IdentityPoolName : undefined,\n    };\n};\nvar deserializeAws_json1_1IdentityPoolsList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1IdentityPoolShortDescription(entry, context);\n    });\n};\nvar deserializeAws_json1_1IdentityPoolTagsType = function (output, context) {\n    return Object.entries(output).reduce(function (acc, _a) {\n        var _b;\n        var _c = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(_a, 2), key = _c[0], value = _c[1];\n        if (value === null) {\n            return acc;\n        }\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, acc), (_b = {}, _b[key] = value, _b));\n    }, {});\n};\nvar deserializeAws_json1_1IdentityProviders = function (output, context) {\n    return Object.entries(output).reduce(function (acc, _a) {\n        var _b;\n        var _c = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(_a, 2), key = _c[0], value = _c[1];\n        if (value === null) {\n            return acc;\n        }\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, acc), (_b = {}, _b[key] = value, _b));\n    }, {});\n};\nvar deserializeAws_json1_1InternalErrorException = function (output, context) {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nvar deserializeAws_json1_1InvalidIdentityPoolConfigurationException = function (output, context) {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nvar deserializeAws_json1_1InvalidParameterException = function (output, context) {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nvar deserializeAws_json1_1LimitExceededException = function (output, context) {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nvar deserializeAws_json1_1ListIdentitiesResponse = function (output, context) {\n    return {\n        Identities: output.Identities !== undefined && output.Identities !== null\n            ? deserializeAws_json1_1IdentitiesList(output.Identities, context)\n            : undefined,\n        IdentityPoolId: output.IdentityPoolId !== undefined && output.IdentityPoolId !== null ? output.IdentityPoolId : undefined,\n        NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    };\n};\nvar deserializeAws_json1_1ListIdentityPoolsResponse = function (output, context) {\n    return {\n        IdentityPools: output.IdentityPools !== undefined && output.IdentityPools !== null\n            ? deserializeAws_json1_1IdentityPoolsList(output.IdentityPools, context)\n            : undefined,\n        NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    };\n};\nvar deserializeAws_json1_1ListTagsForResourceResponse = function (output, context) {\n    return {\n        Tags: output.Tags !== undefined && output.Tags !== null\n            ? deserializeAws_json1_1IdentityPoolTagsType(output.Tags, context)\n            : undefined,\n    };\n};\nvar deserializeAws_json1_1LoginsList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar deserializeAws_json1_1LookupDeveloperIdentityResponse = function (output, context) {\n    return {\n        DeveloperUserIdentifierList: output.DeveloperUserIdentifierList !== undefined && output.DeveloperUserIdentifierList !== null\n            ? deserializeAws_json1_1DeveloperUserIdentifierList(output.DeveloperUserIdentifierList, context)\n            : undefined,\n        IdentityId: output.IdentityId !== undefined && output.IdentityId !== null ? output.IdentityId : undefined,\n        NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    };\n};\nvar deserializeAws_json1_1MappingRule = function (output, context) {\n    return {\n        Claim: output.Claim !== undefined && output.Claim !== null ? output.Claim : undefined,\n        MatchType: output.MatchType !== undefined && output.MatchType !== null ? output.MatchType : undefined,\n        RoleARN: output.RoleARN !== undefined && output.RoleARN !== null ? output.RoleARN : undefined,\n        Value: output.Value !== undefined && output.Value !== null ? output.Value : undefined,\n    };\n};\nvar deserializeAws_json1_1MappingRulesList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1MappingRule(entry, context);\n    });\n};\nvar deserializeAws_json1_1MergeDeveloperIdentitiesResponse = function (output, context) {\n    return {\n        IdentityId: output.IdentityId !== undefined && output.IdentityId !== null ? output.IdentityId : undefined,\n    };\n};\nvar deserializeAws_json1_1NotAuthorizedException = function (output, context) {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nvar deserializeAws_json1_1OIDCProviderList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar deserializeAws_json1_1ResourceConflictException = function (output, context) {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nvar deserializeAws_json1_1ResourceNotFoundException = function (output, context) {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nvar deserializeAws_json1_1RoleMapping = function (output, context) {\n    return {\n        AmbiguousRoleResolution: output.AmbiguousRoleResolution !== undefined && output.AmbiguousRoleResolution !== null\n            ? output.AmbiguousRoleResolution\n            : undefined,\n        RulesConfiguration: output.RulesConfiguration !== undefined && output.RulesConfiguration !== null\n            ? deserializeAws_json1_1RulesConfigurationType(output.RulesConfiguration, context)\n            : undefined,\n        Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined,\n    };\n};\nvar deserializeAws_json1_1RoleMappingMap = function (output, context) {\n    return Object.entries(output).reduce(function (acc, _a) {\n        var _b;\n        var _c = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(_a, 2), key = _c[0], value = _c[1];\n        if (value === null) {\n            return acc;\n        }\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, acc), (_b = {}, _b[key] = deserializeAws_json1_1RoleMapping(value, context), _b));\n    }, {});\n};\nvar deserializeAws_json1_1RolesMap = function (output, context) {\n    return Object.entries(output).reduce(function (acc, _a) {\n        var _b;\n        var _c = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(_a, 2), key = _c[0], value = _c[1];\n        if (value === null) {\n            return acc;\n        }\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, acc), (_b = {}, _b[key] = value, _b));\n    }, {});\n};\nvar deserializeAws_json1_1RulesConfigurationType = function (output, context) {\n    return {\n        Rules: output.Rules !== undefined && output.Rules !== null\n            ? deserializeAws_json1_1MappingRulesList(output.Rules, context)\n            : undefined,\n    };\n};\nvar deserializeAws_json1_1SAMLProviderList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar deserializeAws_json1_1TagResourceResponse = function (output, context) {\n    return {};\n};\nvar deserializeAws_json1_1TooManyRequestsException = function (output, context) {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nvar deserializeAws_json1_1UnprocessedIdentityId = function (output, context) {\n    return {\n        ErrorCode: output.ErrorCode !== undefined && output.ErrorCode !== null ? output.ErrorCode : undefined,\n        IdentityId: output.IdentityId !== undefined && output.IdentityId !== null ? output.IdentityId : undefined,\n    };\n};\nvar deserializeAws_json1_1UnprocessedIdentityIdList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1UnprocessedIdentityId(entry, context);\n    });\n};\nvar deserializeAws_json1_1UntagResourceResponse = function (output, context) {\n    return {};\n};\nvar deserializeMetadata = function (output) {\n    var _a;\n    return ({\n        httpStatusCode: output.statusCode,\n        requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"],\n    });\n};\n// Collect low-level response body stream to Uint8Array.\nvar collectBody = function (streamBody, context) {\n    if (streamBody === void 0) { streamBody = new Uint8Array(); }\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n// Encode Uint8Array data into string with utf-8.\nvar collectBodyString = function (streamBody, context) {\n    return collectBody(streamBody, context).then(function (body) { return context.utf8Encoder(body); });\n};\nvar buildHttpRpcRequest = function (context, headers, path, resolvedHostname, body) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, contents;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                contents = {\n                    protocol: protocol,\n                    hostname: hostname,\n                    port: port,\n                    method: \"POST\",\n                    path: path,\n                    headers: headers,\n                };\n                if (resolvedHostname !== undefined) {\n                    contents.hostname = resolvedHostname;\n                }\n                if (body !== undefined) {\n                    contents.body = body;\n                }\n                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest(contents)];\n        }\n    });\n}); };\nvar parseBody = function (streamBody, context) {\n    return collectBodyString(streamBody, context).then(function (encoded) {\n        if (encoded.length) {\n            return JSON.parse(encoded);\n        }\n        return {};\n    });\n};\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nvar loadRestJsonErrorCode = function (output, data) {\n    var findKey = function (object, key) { return Object.keys(object).find(function (k) { return k.toLowerCase() === key.toLowerCase(); }); };\n    var sanitizeErrorCode = function (rawValue) {\n        var cleanValue = rawValue;\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n    return \"\";\n};\n//# sourceMappingURL=Aws_json1_1.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/protocols/Aws_json1_1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/runtimeConfig.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-cognito-identity/dist/es/runtimeConfig.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientDefaultValues: () => (/* binding */ ClientDefaultValues)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _package_json__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./package.json */ \"(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/package.json\");\n/* harmony import */ var _aws_sdk_config_resolver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/config-resolver */ \"(ssr)/./node_modules/@aws-sdk/config-resolver/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_credential_provider_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/credential-provider-node */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-node/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_hash_node__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/hash-node */ \"(ssr)/./node_modules/@aws-sdk/hash-node/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_middleware_retry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/middleware-retry */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_node_config_provider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-sdk/node-config-provider */ \"(ssr)/./node_modules/@aws-sdk/node-config-provider/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_node_http_handler__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aws-sdk/node-http-handler */ \"(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_util_base64_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aws-sdk/util-base64-node */ \"(ssr)/./node_modules/@aws-sdk/util-base64-node/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_util_body_length_node__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @aws-sdk/util-body-length-node */ \"(ssr)/./node_modules/@aws-sdk/util-body-length-node/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_util_user_agent_node__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @aws-sdk/util-user-agent-node */ \"(ssr)/./node_modules/@aws-sdk/util-user-agent-node/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_util_utf8_node__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @aws-sdk/util-utf8-node */ \"(ssr)/./node_modules/@aws-sdk/util-utf8-node/dist/es/index.js\");\n/* harmony import */ var _runtimeConfig_shared__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./runtimeConfig.shared */ \"(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/runtimeConfig.shared.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @internal\n */\nvar ClientDefaultValues = (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_10__.__assign)({}, _runtimeConfig_shared__WEBPACK_IMPORTED_MODULE_11__.ClientSharedValues), { runtime: \"node\", base64Decoder: _aws_sdk_util_base64_node__WEBPACK_IMPORTED_MODULE_6__.fromBase64, base64Encoder: _aws_sdk_util_base64_node__WEBPACK_IMPORTED_MODULE_6__.toBase64, bodyLengthChecker: _aws_sdk_util_body_length_node__WEBPACK_IMPORTED_MODULE_7__.calculateBodyLength, credentialDefaultProvider: _aws_sdk_credential_provider_node__WEBPACK_IMPORTED_MODULE_1__.defaultProvider, defaultUserAgentProvider: (0,_aws_sdk_util_user_agent_node__WEBPACK_IMPORTED_MODULE_8__.defaultUserAgent)({\n        serviceId: _runtimeConfig_shared__WEBPACK_IMPORTED_MODULE_11__.ClientSharedValues.serviceId,\n        clientVersion: _package_json__WEBPACK_IMPORTED_MODULE_12__.version,\n    }), maxAttempts: (0,_aws_sdk_node_config_provider__WEBPACK_IMPORTED_MODULE_4__.loadConfig)(_aws_sdk_middleware_retry__WEBPACK_IMPORTED_MODULE_3__.NODE_MAX_ATTEMPT_CONFIG_OPTIONS), region: (0,_aws_sdk_node_config_provider__WEBPACK_IMPORTED_MODULE_4__.loadConfig)(_aws_sdk_config_resolver__WEBPACK_IMPORTED_MODULE_0__.NODE_REGION_CONFIG_OPTIONS, _aws_sdk_config_resolver__WEBPACK_IMPORTED_MODULE_0__.NODE_REGION_CONFIG_FILE_OPTIONS), requestHandler: new _aws_sdk_node_http_handler__WEBPACK_IMPORTED_MODULE_5__.NodeHttpHandler(), sha256: _aws_sdk_hash_node__WEBPACK_IMPORTED_MODULE_2__.Hash.bind(null, \"sha256\"), streamCollector: _aws_sdk_node_http_handler__WEBPACK_IMPORTED_MODULE_5__.streamCollector, utf8Decoder: _aws_sdk_util_utf8_node__WEBPACK_IMPORTED_MODULE_9__.fromUtf8, utf8Encoder: _aws_sdk_util_utf8_node__WEBPACK_IMPORTED_MODULE_9__.toUtf8 });\n//# sourceMappingURL=runtimeConfig.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LWNvZ25pdG8taWRlbnRpdHkvZGlzdC9lcy9ydW50aW1lQ29uZmlnLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWlDO0FBQ1E7QUFDOEQ7QUFDTjtBQUN2RDtBQUNrQztBQUNDO0FBQ0M7QUFDYjtBQUNJO0FBQ0o7QUFDTjtBQUNDO0FBQzVEO0FBQ0E7QUFDQTtBQUNPLDBCQUEwQixnREFBUSxDQUFDLGdEQUFRLEdBQUcsRUFBRSxzRUFBa0IsS0FBSyxnQ0FBZ0MsaUVBQVUsaUJBQWlCLCtEQUFRLHFCQUFxQiwrRUFBbUIsNkJBQTZCLDhFQUF5Qiw0QkFBNEIsK0VBQWdCO0FBQzNSLG1CQUFtQixzRUFBa0I7QUFDckMsdUJBQXVCLG1EQUFtQjtBQUMxQyxLQUFLLGdCQUFnQix5RUFBYyxDQUFDLHNGQUErQixXQUFXLHlFQUFjLENBQUMsZ0ZBQTBCLEVBQUUscUZBQStCLHVCQUF1Qix1RUFBZSxZQUFZLG9EQUFJLHdDQUF3Qyx1RUFBZSxlQUFlLDZEQUFRLGVBQWUsMkRBQU0sRUFBRTtBQUNuVCIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LWNvZ25pdG8taWRlbnRpdHkvZGlzdC9lcy9ydW50aW1lQ29uZmlnLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fYXNzaWduIH0gZnJvbSBcInRzbGliXCI7XG5pbXBvcnQgcGFja2FnZUluZm8gZnJvbSBcIi4vcGFja2FnZS5qc29uXCI7XG5pbXBvcnQgeyBOT0RFX1JFR0lPTl9DT05GSUdfRklMRV9PUFRJT05TLCBOT0RFX1JFR0lPTl9DT05GSUdfT1BUSU9OUyB9IGZyb20gXCJAYXdzLXNkay9jb25maWctcmVzb2x2ZXJcIjtcbmltcG9ydCB7IGRlZmF1bHRQcm92aWRlciBhcyBjcmVkZW50aWFsRGVmYXVsdFByb3ZpZGVyIH0gZnJvbSBcIkBhd3Mtc2RrL2NyZWRlbnRpYWwtcHJvdmlkZXItbm9kZVwiO1xuaW1wb3J0IHsgSGFzaCB9IGZyb20gXCJAYXdzLXNkay9oYXNoLW5vZGVcIjtcbmltcG9ydCB7IE5PREVfTUFYX0FUVEVNUFRfQ09ORklHX09QVElPTlMgfSBmcm9tIFwiQGF3cy1zZGsvbWlkZGxld2FyZS1yZXRyeVwiO1xuaW1wb3J0IHsgbG9hZENvbmZpZyBhcyBsb2FkTm9kZUNvbmZpZyB9IGZyb20gXCJAYXdzLXNkay9ub2RlLWNvbmZpZy1wcm92aWRlclwiO1xuaW1wb3J0IHsgTm9kZUh0dHBIYW5kbGVyLCBzdHJlYW1Db2xsZWN0b3IgfSBmcm9tIFwiQGF3cy1zZGsvbm9kZS1odHRwLWhhbmRsZXJcIjtcbmltcG9ydCB7IGZyb21CYXNlNjQsIHRvQmFzZTY0IH0gZnJvbSBcIkBhd3Mtc2RrL3V0aWwtYmFzZTY0LW5vZGVcIjtcbmltcG9ydCB7IGNhbGN1bGF0ZUJvZHlMZW5ndGggfSBmcm9tIFwiQGF3cy1zZGsvdXRpbC1ib2R5LWxlbmd0aC1ub2RlXCI7XG5pbXBvcnQgeyBkZWZhdWx0VXNlckFnZW50IH0gZnJvbSBcIkBhd3Mtc2RrL3V0aWwtdXNlci1hZ2VudC1ub2RlXCI7XG5pbXBvcnQgeyBmcm9tVXRmOCwgdG9VdGY4IH0gZnJvbSBcIkBhd3Mtc2RrL3V0aWwtdXRmOC1ub2RlXCI7XG5pbXBvcnQgeyBDbGllbnRTaGFyZWRWYWx1ZXMgfSBmcm9tIFwiLi9ydW50aW1lQ29uZmlnLnNoYXJlZFwiO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IHZhciBDbGllbnREZWZhdWx0VmFsdWVzID0gX19hc3NpZ24oX19hc3NpZ24oe30sIENsaWVudFNoYXJlZFZhbHVlcyksIHsgcnVudGltZTogXCJub2RlXCIsIGJhc2U2NERlY29kZXI6IGZyb21CYXNlNjQsIGJhc2U2NEVuY29kZXI6IHRvQmFzZTY0LCBib2R5TGVuZ3RoQ2hlY2tlcjogY2FsY3VsYXRlQm9keUxlbmd0aCwgY3JlZGVudGlhbERlZmF1bHRQcm92aWRlcjogY3JlZGVudGlhbERlZmF1bHRQcm92aWRlciwgZGVmYXVsdFVzZXJBZ2VudFByb3ZpZGVyOiBkZWZhdWx0VXNlckFnZW50KHtcbiAgICAgICAgc2VydmljZUlkOiBDbGllbnRTaGFyZWRWYWx1ZXMuc2VydmljZUlkLFxuICAgICAgICBjbGllbnRWZXJzaW9uOiBwYWNrYWdlSW5mby52ZXJzaW9uLFxuICAgIH0pLCBtYXhBdHRlbXB0czogbG9hZE5vZGVDb25maWcoTk9ERV9NQVhfQVRURU1QVF9DT05GSUdfT1BUSU9OUyksIHJlZ2lvbjogbG9hZE5vZGVDb25maWcoTk9ERV9SRUdJT05fQ09ORklHX09QVElPTlMsIE5PREVfUkVHSU9OX0NPTkZJR19GSUxFX09QVElPTlMpLCByZXF1ZXN0SGFuZGxlcjogbmV3IE5vZGVIdHRwSGFuZGxlcigpLCBzaGEyNTY6IEhhc2guYmluZChudWxsLCBcInNoYTI1NlwiKSwgc3RyZWFtQ29sbGVjdG9yOiBzdHJlYW1Db2xsZWN0b3IsIHV0ZjhEZWNvZGVyOiBmcm9tVXRmOCwgdXRmOEVuY29kZXI6IHRvVXRmOCB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJ1bnRpbWVDb25maWcuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/runtimeConfig.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/runtimeConfig.shared.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-cognito-identity/dist/es/runtimeConfig.shared.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientSharedValues: () => (/* binding */ ClientSharedValues)\n/* harmony export */ });\n/* harmony import */ var _endpoints__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./endpoints */ \"(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/endpoints.js\");\n/* harmony import */ var _aws_sdk_url_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/url-parser */ \"(ssr)/./node_modules/@aws-sdk/url-parser/dist/es/index.js\");\n\n\n/**\n * @internal\n */\nvar ClientSharedValues = {\n    apiVersion: \"2014-06-30\",\n    disableHostPrefix: false,\n    logger: {},\n    regionInfoProvider: _endpoints__WEBPACK_IMPORTED_MODULE_1__.defaultRegionInfoProvider,\n    serviceId: \"Cognito Identity\",\n    urlParser: _aws_sdk_url_parser__WEBPACK_IMPORTED_MODULE_0__.parseUrl,\n};\n//# sourceMappingURL=runtimeConfig.shared.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LWNvZ25pdG8taWRlbnRpdHkvZGlzdC9lcy9ydW50aW1lQ29uZmlnLnNoYXJlZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0Q7QUFDVDtBQUMvQztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxjQUFjO0FBQ2Qsd0JBQXdCLGlFQUF5QjtBQUNqRDtBQUNBLGVBQWUseURBQVE7QUFDdkI7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LWNvZ25pdG8taWRlbnRpdHkvZGlzdC9lcy9ydW50aW1lQ29uZmlnLnNoYXJlZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWZhdWx0UmVnaW9uSW5mb1Byb3ZpZGVyIH0gZnJvbSBcIi4vZW5kcG9pbnRzXCI7XG5pbXBvcnQgeyBwYXJzZVVybCB9IGZyb20gXCJAYXdzLXNkay91cmwtcGFyc2VyXCI7XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgdmFyIENsaWVudFNoYXJlZFZhbHVlcyA9IHtcbiAgICBhcGlWZXJzaW9uOiBcIjIwMTQtMDYtMzBcIixcbiAgICBkaXNhYmxlSG9zdFByZWZpeDogZmFsc2UsXG4gICAgbG9nZ2VyOiB7fSxcbiAgICByZWdpb25JbmZvUHJvdmlkZXI6IGRlZmF1bHRSZWdpb25JbmZvUHJvdmlkZXIsXG4gICAgc2VydmljZUlkOiBcIkNvZ25pdG8gSWRlbnRpdHlcIixcbiAgICB1cmxQYXJzZXI6IHBhcnNlVXJsLFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJ1bnRpbWVDb25maWcuc2hhcmVkLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/runtimeConfig.shared.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/config-resolver/dist/es/EndpointsConfig.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@aws-sdk/config-resolver/dist/es/EndpointsConfig.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resolveEndpointsConfig: () => (/* binding */ resolveEndpointsConfig)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/config-resolver/node_modules/tslib/tslib.es6.js\");\n\nvar resolveEndpointsConfig = function (input) {\n    var _a;\n    return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, input), { tls: (_a = input.tls) !== null && _a !== void 0 ? _a : true, endpoint: input.endpoint ? normalizeEndpoint(input) : function () { return getEndPointFromRegion(input); }, isCustomEndpoint: input.endpoint ? true : false }));\n};\nvar normalizeEndpoint = function (input) {\n    var endpoint = input.endpoint, urlParser = input.urlParser;\n    if (typeof endpoint === \"string\") {\n        var promisified_1 = Promise.resolve(urlParser(endpoint));\n        return function () { return promisified_1; };\n    }\n    else if (typeof endpoint === \"object\") {\n        var promisified_2 = Promise.resolve(endpoint);\n        return function () { return promisified_2; };\n    }\n    return endpoint;\n};\nvar getEndPointFromRegion = function (input) { return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(void 0, void 0, void 0, function () {\n    var _a, tls, region, dnsHostRegex, hostname;\n    var _b;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = input.tls, tls = _a === void 0 ? true : _a;\n                return [4 /*yield*/, input.region()];\n            case 1:\n                region = _c.sent();\n                dnsHostRegex = new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);\n                if (!dnsHostRegex.test(region)) {\n                    throw new Error(\"Invalid region in client config\");\n                }\n                return [4 /*yield*/, input.regionInfoProvider(region)];\n            case 2:\n                hostname = ((_b = (_c.sent())) !== null && _b !== void 0 ? _b : {}).hostname;\n                if (!hostname) {\n                    throw new Error(\"Cannot resolve hostname from client config\");\n                }\n                return [2 /*return*/, input.urlParser((tls ? \"https:\" : \"http:\") + \"//\" + hostname)];\n        }\n    });\n}); };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW5kcG9pbnRzQ29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL0VuZHBvaW50c0NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBeUJBLE1BQU0sQ0FBQyxJQUFNLHNCQUFzQixHQUFHLFVBQ3BDLEtBQW9EOztJQUNwQixPQUFBLHVCQUM3QixLQUFLLEtBQ1IsR0FBRyxRQUFFLEtBQUssQ0FBQyxHQUFHLG1DQUFJLElBQUksRUFDdEIsUUFBUSxFQUFFLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxjQUFNLE9BQUEscUJBQXFCLENBQUMsS0FBSyxDQUFDLEVBQTVCLENBQTRCLEVBQ3hGLGdCQUFnQixFQUFFLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxJQUMvQyxDQUFBO0NBQUEsQ0FBQztBQUVILElBQU0saUJBQWlCLEdBQUcsVUFBQyxLQUFnRDtJQUNqRSxJQUFBLFFBQVEsR0FBZ0IsS0FBSyxTQUFyQixFQUFFLFNBQVMsR0FBSyxLQUFLLFVBQVYsQ0FBVztJQUN0QyxJQUFJLE9BQU8sUUFBUSxLQUFLLFFBQVEsRUFBRTtRQUNoQyxJQUFNLGFBQVcsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1FBQ3pELE9BQU8sY0FBTSxPQUFBLGFBQVcsRUFBWCxDQUFXLENBQUM7S0FDMUI7U0FBTSxJQUFJLE9BQU8sUUFBUSxLQUFLLFFBQVEsRUFBRTtRQUN2QyxJQUFNLGFBQVcsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzlDLE9BQU8sY0FBTSxPQUFBLGFBQVcsRUFBWCxDQUFXLENBQUM7S0FDMUI7SUFDRCxPQUFPLFFBQVMsQ0FBQztBQUNuQixDQUFDLENBQUM7QUFFRixJQUFNLHFCQUFxQixHQUFHLFVBQU8sS0FBZ0Q7Ozs7OztnQkFDM0UsS0FBZSxLQUFLLElBQVYsRUFBVixHQUFHLG1CQUFHLElBQUksS0FBQSxDQUFXO2dCQUNkLHFCQUFNLEtBQUssQ0FBQyxNQUFNLEVBQUUsRUFBQTs7Z0JBQTdCLE1BQU0sR0FBRyxTQUFvQjtnQkFFN0IsWUFBWSxHQUFHLElBQUksTUFBTSxDQUFDLDBEQUEwRCxDQUFDLENBQUM7Z0JBQzVGLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFO29CQUM5QixNQUFNLElBQUksS0FBSyxDQUFDLGlDQUFpQyxDQUFDLENBQUM7aUJBQ3BEO2dCQUVxQixxQkFBTSxLQUFLLENBQUMsa0JBQWtCLENBQUMsTUFBTSxDQUFDLEVBQUE7O2dCQUFwRCxRQUFRLFVBQUssQ0FBQyxTQUFzQyxDQUFDLG1DQUFJLEVBQUUsVUFBbkQ7Z0JBQ2hCLElBQUksQ0FBQyxRQUFRLEVBQUU7b0JBQ2IsTUFBTSxJQUFJLEtBQUssQ0FBQyw0Q0FBNEMsQ0FBQyxDQUFDO2lCQUMvRDtnQkFFRCxzQkFBTyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLE9BQU8sV0FBSyxRQUFVLENBQUMsRUFBQzs7O0tBQ3BFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbmRwb2ludCwgUHJvdmlkZXIsIFJlZ2lvbkluZm9Qcm92aWRlciwgVXJsUGFyc2VyIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRW5kcG9pbnRzSW5wdXRDb25maWcge1xuICAvKipcbiAgICogVGhlIGZ1bGx5IHF1YWxpZmllZCBlbmRwb2ludCBvZiB0aGUgd2Vic2VydmljZS4gVGhpcyBpcyBvbmx5IHJlcXVpcmVkIHdoZW4gdXNpbmcgYSBjdXN0b20gZW5kcG9pbnQgKGZvciBleGFtcGxlLCB3aGVuIHVzaW5nIGEgbG9jYWwgdmVyc2lvbiBvZiBTMykuXG4gICAqL1xuICBlbmRwb2ludD86IHN0cmluZyB8IEVuZHBvaW50IHwgUHJvdmlkZXI8RW5kcG9pbnQ+O1xuXG4gIC8qKlxuICAgKiBXaGV0aGVyIFRMUyBpcyBlbmFibGVkIGZvciByZXF1ZXN0cy5cbiAgICovXG4gIHRscz86IGJvb2xlYW47XG59XG5cbmludGVyZmFjZSBQcmV2aW91c2x5UmVzb2x2ZWQge1xuICByZWdpb25JbmZvUHJvdmlkZXI6IFJlZ2lvbkluZm9Qcm92aWRlcjtcbiAgdXJsUGFyc2VyOiBVcmxQYXJzZXI7XG4gIHJlZ2lvbjogUHJvdmlkZXI8c3RyaW5nPjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBFbmRwb2ludHNSZXNvbHZlZENvbmZpZyBleHRlbmRzIFJlcXVpcmVkPEVuZHBvaW50c0lucHV0Q29uZmlnPiB7XG4gIGVuZHBvaW50OiBQcm92aWRlcjxFbmRwb2ludD47XG4gIGlzQ3VzdG9tRW5kcG9pbnQ6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBjb25zdCByZXNvbHZlRW5kcG9pbnRzQ29uZmlnID0gPFQ+KFxuICBpbnB1dDogVCAmIEVuZHBvaW50c0lucHV0Q29uZmlnICYgUHJldmlvdXNseVJlc29sdmVkXG4pOiBUICYgRW5kcG9pbnRzUmVzb2x2ZWRDb25maWcgPT4gKHtcbiAgLi4uaW5wdXQsXG4gIHRsczogaW5wdXQudGxzID8/IHRydWUsXG4gIGVuZHBvaW50OiBpbnB1dC5lbmRwb2ludCA/IG5vcm1hbGl6ZUVuZHBvaW50KGlucHV0KSA6ICgpID0+IGdldEVuZFBvaW50RnJvbVJlZ2lvbihpbnB1dCksXG4gIGlzQ3VzdG9tRW5kcG9pbnQ6IGlucHV0LmVuZHBvaW50ID8gdHJ1ZSA6IGZhbHNlLFxufSk7XG5cbmNvbnN0IG5vcm1hbGl6ZUVuZHBvaW50ID0gKGlucHV0OiBFbmRwb2ludHNJbnB1dENvbmZpZyAmIFByZXZpb3VzbHlSZXNvbHZlZCk6IFByb3ZpZGVyPEVuZHBvaW50PiA9PiB7XG4gIGNvbnN0IHsgZW5kcG9pbnQsIHVybFBhcnNlciB9ID0gaW5wdXQ7XG4gIGlmICh0eXBlb2YgZW5kcG9pbnQgPT09IFwic3RyaW5nXCIpIHtcbiAgICBjb25zdCBwcm9taXNpZmllZCA9IFByb21pc2UucmVzb2x2ZSh1cmxQYXJzZXIoZW5kcG9pbnQpKTtcbiAgICByZXR1cm4gKCkgPT4gcHJvbWlzaWZpZWQ7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGVuZHBvaW50ID09PSBcIm9iamVjdFwiKSB7XG4gICAgY29uc3QgcHJvbWlzaWZpZWQgPSBQcm9taXNlLnJlc29sdmUoZW5kcG9pbnQpO1xuICAgIHJldHVybiAoKSA9PiBwcm9taXNpZmllZDtcbiAgfVxuICByZXR1cm4gZW5kcG9pbnQhO1xufTtcblxuY29uc3QgZ2V0RW5kUG9pbnRGcm9tUmVnaW9uID0gYXN5bmMgKGlucHV0OiBFbmRwb2ludHNJbnB1dENvbmZpZyAmIFByZXZpb3VzbHlSZXNvbHZlZCkgPT4ge1xuICBjb25zdCB7IHRscyA9IHRydWUgfSA9IGlucHV0O1xuICBjb25zdCByZWdpb24gPSBhd2FpdCBpbnB1dC5yZWdpb24oKTtcblxuICBjb25zdCBkbnNIb3N0UmVnZXggPSBuZXcgUmVnRXhwKC9eKFthLXpBLVowLTldfFthLXpBLVowLTldW2EtekEtWjAtOS1dezAsNjF9W2EtekEtWjAtOV0pJC8pO1xuICBpZiAoIWRuc0hvc3RSZWdleC50ZXN0KHJlZ2lvbikpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHJlZ2lvbiBpbiBjbGllbnQgY29uZmlnXCIpO1xuICB9XG5cbiAgY29uc3QgeyBob3N0bmFtZSB9ID0gKGF3YWl0IGlucHV0LnJlZ2lvbkluZm9Qcm92aWRlcihyZWdpb24pKSA/PyB7fTtcbiAgaWYgKCFob3N0bmFtZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCByZXNvbHZlIGhvc3RuYW1lIGZyb20gY2xpZW50IGNvbmZpZ1wiKTtcbiAgfVxuXG4gIHJldHVybiBpbnB1dC51cmxQYXJzZXIoYCR7dGxzID8gXCJodHRwczpcIiA6IFwiaHR0cDpcIn0vLyR7aG9zdG5hbWV9YCk7XG59O1xuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/config-resolver/dist/es/EndpointsConfig.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/config-resolver/dist/es/RegionConfig.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@aws-sdk/config-resolver/dist/es/RegionConfig.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NODE_REGION_CONFIG_FILE_OPTIONS: () => (/* binding */ NODE_REGION_CONFIG_FILE_OPTIONS),\n/* harmony export */   NODE_REGION_CONFIG_OPTIONS: () => (/* binding */ NODE_REGION_CONFIG_OPTIONS),\n/* harmony export */   REGION_ENV_NAME: () => (/* binding */ REGION_ENV_NAME),\n/* harmony export */   REGION_INI_NAME: () => (/* binding */ REGION_INI_NAME),\n/* harmony export */   resolveRegionConfig: () => (/* binding */ resolveRegionConfig)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/config-resolver/node_modules/tslib/tslib.es6.js\");\n\nvar REGION_ENV_NAME = \"AWS_REGION\";\nvar REGION_INI_NAME = \"region\";\nvar NODE_REGION_CONFIG_OPTIONS = {\n    environmentVariableSelector: function (env) { return env[REGION_ENV_NAME]; },\n    configFileSelector: function (profile) { return profile[REGION_INI_NAME]; },\n    default: function () {\n        throw new Error(\"Region is missing\");\n    },\n};\nvar NODE_REGION_CONFIG_FILE_OPTIONS = {\n    preferredFile: \"credentials\",\n};\nvar resolveRegionConfig = function (input) {\n    if (!input.region) {\n        throw new Error(\"Region is missing\");\n    }\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, input), { region: normalizeRegion(input.region) });\n};\nvar normalizeRegion = function (region) {\n    if (typeof region === \"string\") {\n        var promisified_1 = Promise.resolve(region);\n        return function () { return promisified_1; };\n    }\n    return region;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVnaW9uQ29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL1JlZ2lvbkNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBR0EsTUFBTSxDQUFDLElBQU0sZUFBZSxHQUFHLFlBQVksQ0FBQztBQUM1QyxNQUFNLENBQUMsSUFBTSxlQUFlLEdBQUcsUUFBUSxDQUFDO0FBRXhDLE1BQU0sQ0FBQyxJQUFNLDBCQUEwQixHQUFrQztJQUN2RSwyQkFBMkIsRUFBRSxVQUFDLEdBQUcsSUFBSyxPQUFBLEdBQUcsQ0FBQyxlQUFlLENBQUMsRUFBcEIsQ0FBb0I7SUFDMUQsa0JBQWtCLEVBQUUsVUFBQyxPQUFPLElBQUssT0FBQSxPQUFPLENBQUMsZUFBZSxDQUFDLEVBQXhCLENBQXdCO0lBQ3pELE9BQU8sRUFBRTtRQUNQLE1BQU0sSUFBSSxLQUFLLENBQUMsbUJBQW1CLENBQUMsQ0FBQztJQUN2QyxDQUFDO0NBQ0YsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLCtCQUErQixHQUF1QjtJQUNqRSxhQUFhLEVBQUUsYUFBYTtDQUM3QixDQUFDO0FBZUYsTUFBTSxDQUFDLElBQU0sbUJBQW1CLEdBQUcsVUFBSSxLQUFpRDtJQUN0RixJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRTtRQUNqQixNQUFNLElBQUksS0FBSyxDQUFDLG1CQUFtQixDQUFDLENBQUM7S0FDdEM7SUFDRCw2QkFDSyxLQUFLLEtBQ1IsTUFBTSxFQUFFLGVBQWUsQ0FBQyxLQUFLLENBQUMsTUFBTyxDQUFDLElBQ3RDO0FBQ0osQ0FBQyxDQUFDO0FBRUYsSUFBTSxlQUFlLEdBQUcsVUFBQyxNQUFpQztJQUN4RCxJQUFJLE9BQU8sTUFBTSxLQUFLLFFBQVEsRUFBRTtRQUM5QixJQUFNLGFBQVcsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzVDLE9BQU8sY0FBTSxPQUFBLGFBQVcsRUFBWCxDQUFXLENBQUM7S0FDMUI7SUFDRCxPQUFPLE1BQTBCLENBQUM7QUFDcEMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTG9hZGVkQ29uZmlnU2VsZWN0b3JzLCBMb2NhbENvbmZpZ09wdGlvbnMgfSBmcm9tIFwiQGF3cy1zZGsvbm9kZS1jb25maWctcHJvdmlkZXJcIjtcbmltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmV4cG9ydCBjb25zdCBSRUdJT05fRU5WX05BTUUgPSBcIkFXU19SRUdJT05cIjtcbmV4cG9ydCBjb25zdCBSRUdJT05fSU5JX05BTUUgPSBcInJlZ2lvblwiO1xuXG5leHBvcnQgY29uc3QgTk9ERV9SRUdJT05fQ09ORklHX09QVElPTlM6IExvYWRlZENvbmZpZ1NlbGVjdG9yczxzdHJpbmc+ID0ge1xuICBlbnZpcm9ubWVudFZhcmlhYmxlU2VsZWN0b3I6IChlbnYpID0+IGVudltSRUdJT05fRU5WX05BTUVdLFxuICBjb25maWdGaWxlU2VsZWN0b3I6IChwcm9maWxlKSA9PiBwcm9maWxlW1JFR0lPTl9JTklfTkFNRV0sXG4gIGRlZmF1bHQ6ICgpID0+IHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJSZWdpb24gaXMgbWlzc2luZ1wiKTtcbiAgfSxcbn07XG5cbmV4cG9ydCBjb25zdCBOT0RFX1JFR0lPTl9DT05GSUdfRklMRV9PUFRJT05TOiBMb2NhbENvbmZpZ09wdGlvbnMgPSB7XG4gIHByZWZlcnJlZEZpbGU6IFwiY3JlZGVudGlhbHNcIixcbn07XG5cbmV4cG9ydCBpbnRlcmZhY2UgUmVnaW9uSW5wdXRDb25maWcge1xuICAvKipcbiAgICogVGhlIEFXUyByZWdpb24gdG8gd2hpY2ggdGhpcyBjbGllbnQgd2lsbCBzZW5kIHJlcXVlc3RzXG4gICAqL1xuICByZWdpb24/OiBzdHJpbmcgfCBQcm92aWRlcjxzdHJpbmc+O1xufVxuXG5pbnRlcmZhY2UgUHJldmlvdXNseVJlc29sdmVkIHt9XG5cbmV4cG9ydCBpbnRlcmZhY2UgUmVnaW9uUmVzb2x2ZWRDb25maWcge1xuICByZWdpb246IFByb3ZpZGVyPHN0cmluZz47XG59XG5cbmV4cG9ydCBjb25zdCByZXNvbHZlUmVnaW9uQ29uZmlnID0gPFQ+KGlucHV0OiBUICYgUmVnaW9uSW5wdXRDb25maWcgJiBQcmV2aW91c2x5UmVzb2x2ZWQpOiBUICYgUmVnaW9uUmVzb2x2ZWRDb25maWcgPT4ge1xuICBpZiAoIWlucHV0LnJlZ2lvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihcIlJlZ2lvbiBpcyBtaXNzaW5nXCIpO1xuICB9XG4gIHJldHVybiB7XG4gICAgLi4uaW5wdXQsXG4gICAgcmVnaW9uOiBub3JtYWxpemVSZWdpb24oaW5wdXQucmVnaW9uISksXG4gIH07XG59O1xuXG5jb25zdCBub3JtYWxpemVSZWdpb24gPSAocmVnaW9uOiBzdHJpbmcgfCBQcm92aWRlcjxzdHJpbmc+KTogUHJvdmlkZXI8c3RyaW5nPiA9PiB7XG4gIGlmICh0eXBlb2YgcmVnaW9uID09PSBcInN0cmluZ1wiKSB7XG4gICAgY29uc3QgcHJvbWlzaWZpZWQgPSBQcm9taXNlLnJlc29sdmUocmVnaW9uKTtcbiAgICByZXR1cm4gKCkgPT4gcHJvbWlzaWZpZWQ7XG4gIH1cbiAgcmV0dXJuIHJlZ2lvbiBhcyBQcm92aWRlcjxzdHJpbmc+O1xufTtcbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29uZmlnLXJlc29sdmVyL2Rpc3QvZXMvUmVnaW9uQ29uZmlnLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFpQztBQUMxQjtBQUNBO0FBQ0E7QUFDUCxrREFBa0QsOEJBQThCO0FBQ2hGLDZDQUE2QyxrQ0FBa0M7QUFDL0U7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsV0FBVywrQ0FBUSxDQUFDLCtDQUFRLEdBQUcsWUFBWSx1Q0FBdUM7QUFDbEY7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jb25maWctcmVzb2x2ZXIvZGlzdC9lcy9SZWdpb25Db25maWcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19hc3NpZ24gfSBmcm9tIFwidHNsaWJcIjtcbmV4cG9ydCB2YXIgUkVHSU9OX0VOVl9OQU1FID0gXCJBV1NfUkVHSU9OXCI7XG5leHBvcnQgdmFyIFJFR0lPTl9JTklfTkFNRSA9IFwicmVnaW9uXCI7XG5leHBvcnQgdmFyIE5PREVfUkVHSU9OX0NPTkZJR19PUFRJT05TID0ge1xuICAgIGVudmlyb25tZW50VmFyaWFibGVTZWxlY3RvcjogZnVuY3Rpb24gKGVudikgeyByZXR1cm4gZW52W1JFR0lPTl9FTlZfTkFNRV07IH0sXG4gICAgY29uZmlnRmlsZVNlbGVjdG9yOiBmdW5jdGlvbiAocHJvZmlsZSkgeyByZXR1cm4gcHJvZmlsZVtSRUdJT05fSU5JX05BTUVdOyB9LFxuICAgIGRlZmF1bHQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUmVnaW9uIGlzIG1pc3NpbmdcIik7XG4gICAgfSxcbn07XG5leHBvcnQgdmFyIE5PREVfUkVHSU9OX0NPTkZJR19GSUxFX09QVElPTlMgPSB7XG4gICAgcHJlZmVycmVkRmlsZTogXCJjcmVkZW50aWFsc1wiLFxufTtcbmV4cG9ydCB2YXIgcmVzb2x2ZVJlZ2lvbkNvbmZpZyA9IGZ1bmN0aW9uIChpbnB1dCkge1xuICAgIGlmICghaW5wdXQucmVnaW9uKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlJlZ2lvbiBpcyBtaXNzaW5nXCIpO1xuICAgIH1cbiAgICByZXR1cm4gX19hc3NpZ24oX19hc3NpZ24oe30sIGlucHV0KSwgeyByZWdpb246IG5vcm1hbGl6ZVJlZ2lvbihpbnB1dC5yZWdpb24pIH0pO1xufTtcbnZhciBub3JtYWxpemVSZWdpb24gPSBmdW5jdGlvbiAocmVnaW9uKSB7XG4gICAgaWYgKHR5cGVvZiByZWdpb24gPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdmFyIHByb21pc2lmaWVkXzEgPSBQcm9taXNlLnJlc29sdmUocmVnaW9uKTtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHByb21pc2lmaWVkXzE7IH07XG4gICAgfVxuICAgIHJldHVybiByZWdpb247XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pVW1WbmFXOXVRMjl1Wm1sbkxtcHpJaXdpYzI5MWNtTmxVbTl2ZENJNklpSXNJbk52ZFhKalpYTWlPbHNpTGk0dkxpNHZjM0pqTDFKbFoybHZia052Ym1acFp5NTBjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lPMEZCUjBFc1RVRkJUU3hEUVVGRExFbEJRVTBzWlVGQlpTeEhRVUZITEZsQlFWa3NRMEZCUXp0QlFVTTFReXhOUVVGTkxFTkJRVU1zU1VGQlRTeGxRVUZsTEVkQlFVY3NVVUZCVVN4RFFVRkRPMEZCUlhoRExFMUJRVTBzUTBGQlF5eEpRVUZOTERCQ1FVRXdRaXhIUVVGclF6dEpRVU4yUlN3eVFrRkJNa0lzUlVGQlJTeFZRVUZETEVkQlFVY3NTVUZCU3l4UFFVRkJMRWRCUVVjc1EwRkJReXhsUVVGbExFTkJRVU1zUlVGQmNFSXNRMEZCYjBJN1NVRkRNVVFzYTBKQlFXdENMRVZCUVVVc1ZVRkJReXhQUVVGUExFbEJRVXNzVDBGQlFTeFBRVUZQTEVOQlFVTXNaVUZCWlN4RFFVRkRMRVZCUVhoQ0xFTkJRWGRDTzBsQlEzcEVMRTlCUVU4c1JVRkJSVHRSUVVOUUxFMUJRVTBzU1VGQlNTeExRVUZMTEVOQlFVTXNiVUpCUVcxQ0xFTkJRVU1zUTBGQlF6dEpRVU4yUXl4RFFVRkRPME5CUTBZc1EwRkJRenRCUVVWR0xFMUJRVTBzUTBGQlF5eEpRVUZOTEN0Q1FVRXJRaXhIUVVGMVFqdEpRVU5xUlN4aFFVRmhMRVZCUVVVc1lVRkJZVHREUVVNM1FpeERRVUZETzBGQlpVWXNUVUZCVFN4RFFVRkRMRWxCUVUwc2JVSkJRVzFDTEVkQlFVY3NWVUZCU1N4TFFVRnBSRHRKUVVOMFJpeEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRTFCUVUwc1JVRkJSVHRSUVVOcVFpeE5RVUZOTEVsQlFVa3NTMEZCU3l4RFFVRkRMRzFDUVVGdFFpeERRVUZETEVOQlFVTTdTMEZEZEVNN1NVRkRSQ3cyUWtGRFN5eExRVUZMTEV0QlExSXNUVUZCVFN4RlFVRkZMR1ZCUVdVc1EwRkJReXhMUVVGTExFTkJRVU1zVFVGQlR5eERRVUZETEVsQlEzUkRPMEZCUTBvc1EwRkJReXhEUVVGRE8wRkJSVVlzU1VGQlRTeGxRVUZsTEVkQlFVY3NWVUZCUXl4TlFVRnBRenRKUVVONFJDeEpRVUZKTEU5QlFVOHNUVUZCVFN4TFFVRkxMRkZCUVZFc1JVRkJSVHRSUVVNNVFpeEpRVUZOTEdGQlFWY3NSMEZCUnl4UFFVRlBMRU5CUVVNc1QwRkJUeXhEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETzFGQlF6VkRMRTlCUVU4c1kwRkJUU3hQUVVGQkxHRkJRVmNzUlVGQldDeERRVUZYTEVOQlFVTTdTMEZETVVJN1NVRkRSQ3hQUVVGUExFMUJRVEJDTEVOQlFVTTdRVUZEY0VNc1EwRkJReXhEUVVGRElpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lhVzF3YjNKMElIc2dURzloWkdWa1EyOXVabWxuVTJWc1pXTjBiM0p6TENCTWIyTmhiRU52Ym1acFowOXdkR2x2Ym5NZ2ZTQm1jbTl0SUZ3aVFHRjNjeTF6WkdzdmJtOWtaUzFqYjI1bWFXY3RjSEp2ZG1sa1pYSmNJanRjYm1sdGNHOXlkQ0I3SUZCeWIzWnBaR1Z5SUgwZ1puSnZiU0JjSWtCaGQzTXRjMlJyTDNSNWNHVnpYQ0k3WEc1Y2JtVjRjRzl5ZENCamIyNXpkQ0JTUlVkSlQwNWZSVTVXWDA1QlRVVWdQU0JjSWtGWFUxOVNSVWRKVDA1Y0lqdGNibVY0Y0c5eWRDQmpiMjV6ZENCU1JVZEpUMDVmU1U1SlgwNUJUVVVnUFNCY0luSmxaMmx2Ymx3aU8xeHVYRzVsZUhCdmNuUWdZMjl1YzNRZ1RrOUVSVjlTUlVkSlQwNWZRMDlPUmtsSFgwOVFWRWxQVGxNNklFeHZZV1JsWkVOdmJtWnBaMU5sYkdWamRHOXljenh6ZEhKcGJtYytJRDBnZTF4dUlDQmxiblpwY205dWJXVnVkRlpoY21saFlteGxVMlZzWldOMGIzSTZJQ2hsYm5ZcElEMCtJR1Z1ZGx0U1JVZEpUMDVmUlU1V1gwNUJUVVZkTEZ4dUlDQmpiMjVtYVdkR2FXeGxVMlZzWldOMGIzSTZJQ2h3Y205bWFXeGxLU0E5UGlCd2NtOW1hV3hsVzFKRlIwbFBUbDlKVGtsZlRrRk5SVjBzWEc0Z0lHUmxabUYxYkhRNklDZ3BJRDArSUh0Y2JpQWdJQ0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9YQ0pTWldkcGIyNGdhWE1nYldsemMybHVaMXdpS1R0Y2JpQWdmU3hjYm4wN1hHNWNibVY0Y0c5eWRDQmpiMjV6ZENCT1QwUkZYMUpGUjBsUFRsOURUMDVHU1VkZlJrbE1SVjlQVUZSSlQwNVRPaUJNYjJOaGJFTnZibVpwWjA5d2RHbHZibk1nUFNCN1hHNGdJSEJ5WldabGNuSmxaRVpwYkdVNklGd2lZM0psWkdWdWRHbGhiSE5jSWl4Y2JuMDdYRzVjYm1WNGNHOXlkQ0JwYm5SbGNtWmhZMlVnVW1WbmFXOXVTVzV3ZFhSRGIyNW1hV2NnZTF4dUlDQXZLaXBjYmlBZ0lDb2dWR2hsSUVGWFV5QnlaV2RwYjI0Z2RHOGdkMmhwWTJnZ2RHaHBjeUJqYkdsbGJuUWdkMmxzYkNCelpXNWtJSEpsY1hWbGMzUnpYRzRnSUNBcUwxeHVJQ0J5WldkcGIyNC9PaUJ6ZEhKcGJtY2dmQ0JRY205MmFXUmxjanh6ZEhKcGJtYytPMXh1ZlZ4dVhHNXBiblJsY21aaFkyVWdVSEpsZG1sdmRYTnNlVkpsYzI5c2RtVmtJSHQ5WEc1Y2JtVjRjRzl5ZENCcGJuUmxjbVpoWTJVZ1VtVm5hVzl1VW1WemIyeDJaV1JEYjI1bWFXY2dlMXh1SUNCeVpXZHBiMjQ2SUZCeWIzWnBaR1Z5UEhOMGNtbHVaejQ3WEc1OVhHNWNibVY0Y0c5eWRDQmpiMjV6ZENCeVpYTnZiSFpsVW1WbmFXOXVRMjl1Wm1sbklEMGdQRlErS0dsdWNIVjBPaUJVSUNZZ1VtVm5hVzl1U1c1d2RYUkRiMjVtYVdjZ0ppQlFjbVYyYVc5MWMyeDVVbVZ6YjJ4MlpXUXBPaUJVSUNZZ1VtVm5hVzl1VW1WemIyeDJaV1JEYjI1bWFXY2dQVDRnZTF4dUlDQnBaaUFvSVdsdWNIVjBMbkpsWjJsdmJpa2dlMXh1SUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2loY0lsSmxaMmx2YmlCcGN5QnRhWE56YVc1blhDSXBPMXh1SUNCOVhHNGdJSEpsZEhWeWJpQjdYRzRnSUNBZ0xpNHVhVzV3ZFhRc1hHNGdJQ0FnY21WbmFXOXVPaUJ1YjNKdFlXeHBlbVZTWldkcGIyNG9hVzV3ZFhRdWNtVm5hVzl1SVNrc1hHNGdJSDA3WEc1OU8xeHVYRzVqYjI1emRDQnViM0p0WVd4cGVtVlNaV2RwYjI0Z1BTQW9jbVZuYVc5dU9pQnpkSEpwYm1jZ2ZDQlFjbTkyYVdSbGNqeHpkSEpwYm1jK0tUb2dVSEp2ZG1sa1pYSThjM1J5YVc1blBpQTlQaUI3WEc0Z0lHbG1JQ2gwZVhCbGIyWWdjbVZuYVc5dUlEMDlQU0JjSW5OMGNtbHVaMXdpS1NCN1hHNGdJQ0FnWTI5dWMzUWdjSEp2YldsemFXWnBaV1FnUFNCUWNtOXRhWE5sTG5KbGMyOXNkbVVvY21WbmFXOXVLVHRjYmlBZ0lDQnlaWFIxY200Z0tDa2dQVDRnY0hKdmJXbHphV1pwWldRN1hHNGdJSDFjYmlBZ2NtVjBkWEp1SUhKbFoybHZiaUJoY3lCUWNtOTJhV1JsY2p4emRISnBibWMrTzF4dWZUdGNiaUpkZlE9PSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/config-resolver/dist/es/RegionConfig.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/config-resolver/dist/es/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@aws-sdk/config-resolver/dist/es/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NODE_REGION_CONFIG_FILE_OPTIONS: () => (/* reexport safe */ _RegionConfig__WEBPACK_IMPORTED_MODULE_1__.NODE_REGION_CONFIG_FILE_OPTIONS),\n/* harmony export */   NODE_REGION_CONFIG_OPTIONS: () => (/* reexport safe */ _RegionConfig__WEBPACK_IMPORTED_MODULE_1__.NODE_REGION_CONFIG_OPTIONS),\n/* harmony export */   REGION_ENV_NAME: () => (/* reexport safe */ _RegionConfig__WEBPACK_IMPORTED_MODULE_1__.REGION_ENV_NAME),\n/* harmony export */   REGION_INI_NAME: () => (/* reexport safe */ _RegionConfig__WEBPACK_IMPORTED_MODULE_1__.REGION_INI_NAME),\n/* harmony export */   resolveEndpointsConfig: () => (/* reexport safe */ _EndpointsConfig__WEBPACK_IMPORTED_MODULE_0__.resolveEndpointsConfig),\n/* harmony export */   resolveRegionConfig: () => (/* reexport safe */ _RegionConfig__WEBPACK_IMPORTED_MODULE_1__.resolveRegionConfig)\n/* harmony export */ });\n/* harmony import */ var _EndpointsConfig__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EndpointsConfig */ \"(ssr)/./node_modules/@aws-sdk/config-resolver/dist/es/EndpointsConfig.js\");\n/* harmony import */ var _RegionConfig__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RegionConfig */ \"(ssr)/./node_modules/@aws-sdk/config-resolver/dist/es/RegionConfig.js\");\n\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxtQkFBbUIsQ0FBQztBQUNsQyxjQUFjLGdCQUFnQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vRW5kcG9pbnRzQ29uZmlnXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9SZWdpb25Db25maWdcIjtcbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29uZmlnLXJlc29sdmVyL2Rpc3QvZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBa0M7QUFDSDtBQUMvQiwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NvbmZpZy1yZXNvbHZlci9kaXN0L2VzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL0VuZHBvaW50c0NvbmZpZ1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vUmVnaW9uQ29uZmlnXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lhVzVrWlhndWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12YVc1a1pYZ3VkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1kwRkJZeXh0UWtGQmJVSXNRMEZCUXp0QlFVTnNReXhqUVVGakxHZENRVUZuUWl4RFFVRkRJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpWlhod2IzSjBJQ29nWm5KdmJTQmNJaTR2Ulc1a2NHOXBiblJ6UTI5dVptbG5YQ0k3WEc1bGVIQnZjblFnS2lCbWNtOXRJRndpTGk5U1pXZHBiMjVEYjI1bWFXZGNJanRjYmlKZGZRPT0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/config-resolver/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/config-resolver/node_modules/tslib/tslib.es6.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@aws-sdk/config-resolver/node_modules/tslib/tslib.es6.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/config-resolver/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/InMemoryStorage.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/InMemoryStorage.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InMemoryStorage: () => (/* binding */ InMemoryStorage)\n/* harmony export */ });\nvar InMemoryStorage = /** @class */ (function () {\n    function InMemoryStorage(store) {\n        if (store === void 0) { store = {}; }\n        this.store = store;\n    }\n    InMemoryStorage.prototype.getItem = function (key) {\n        if (key in this.store) {\n            return this.store[key];\n        }\n        return null;\n    };\n    InMemoryStorage.prototype.removeItem = function (key) {\n        delete this.store[key];\n    };\n    InMemoryStorage.prototype.setItem = function (key, value) {\n        this.store[key] = value;\n    };\n    return InMemoryStorage;\n}());\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW5NZW1vcnlTdG9yYWdlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL0luTWVtb3J5U3RvcmFnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtJQUNFLHlCQUFvQixLQUFxQztRQUFyQyxzQkFBQSxFQUFBLFVBQXFDO1FBQXJDLFVBQUssR0FBTCxLQUFLLENBQWdDO0lBQUcsQ0FBQztJQUU3RCxpQ0FBTyxHQUFQLFVBQVEsR0FBVztRQUNqQixJQUFJLEdBQUcsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ3JCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUN4QjtRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELG9DQUFVLEdBQVYsVUFBVyxHQUFXO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN6QixDQUFDO0lBRUQsaUNBQU8sR0FBUCxVQUFRLEdBQVcsRUFBRSxLQUFhO1FBQ2hDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQzFCLENBQUM7SUFDSCxzQkFBQztBQUFELENBQUMsQUFsQkQsSUFrQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdG9yYWdlIH0gZnJvbSBcIi4vU3RvcmFnZVwiO1xuXG5leHBvcnQgY2xhc3MgSW5NZW1vcnlTdG9yYWdlIGltcGxlbWVudHMgU3RvcmFnZSB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgc3RvcmU6IHsgW2tleTogc3RyaW5nXTogc3RyaW5nIH0gPSB7fSkge31cblxuICBnZXRJdGVtKGtleTogc3RyaW5nKTogc3RyaW5nIHwgbnVsbCB7XG4gICAgaWYgKGtleSBpbiB0aGlzLnN0b3JlKSB7XG4gICAgICByZXR1cm4gdGhpcy5zdG9yZVtrZXldO1xuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmVtb3ZlSXRlbShrZXk6IHN0cmluZyk6IHZvaWQge1xuICAgIGRlbGV0ZSB0aGlzLnN0b3JlW2tleV07XG4gIH1cblxuICBzZXRJdGVtKGtleTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nKTogdm9pZCB7XG4gICAgdGhpcy5zdG9yZVtrZXldID0gdmFsdWU7XG4gIH1cbn1cbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1jb2duaXRvLWlkZW50aXR5L2Rpc3QvZXMvSW5NZW1vcnlTdG9yYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDMEI7QUFDM0IsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLWNvZ25pdG8taWRlbnRpdHkvZGlzdC9lcy9Jbk1lbW9yeVN0b3JhZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEluTWVtb3J5U3RvcmFnZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBJbk1lbW9yeVN0b3JhZ2Uoc3RvcmUpIHtcbiAgICAgICAgaWYgKHN0b3JlID09PSB2b2lkIDApIHsgc3RvcmUgPSB7fTsgfVxuICAgICAgICB0aGlzLnN0b3JlID0gc3RvcmU7XG4gICAgfVxuICAgIEluTWVtb3J5U3RvcmFnZS5wcm90b3R5cGUuZ2V0SXRlbSA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgaWYgKGtleSBpbiB0aGlzLnN0b3JlKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5zdG9yZVtrZXldO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH07XG4gICAgSW5NZW1vcnlTdG9yYWdlLnByb3RvdHlwZS5yZW1vdmVJdGVtID0gZnVuY3Rpb24gKGtleSkge1xuICAgICAgICBkZWxldGUgdGhpcy5zdG9yZVtrZXldO1xuICAgIH07XG4gICAgSW5NZW1vcnlTdG9yYWdlLnByb3RvdHlwZS5zZXRJdGVtID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgICAgICAgdGhpcy5zdG9yZVtrZXldID0gdmFsdWU7XG4gICAgfTtcbiAgICByZXR1cm4gSW5NZW1vcnlTdG9yYWdlO1xufSgpKTtcbmV4cG9ydCB7IEluTWVtb3J5U3RvcmFnZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pU1c1TlpXMXZjbmxUZEc5eVlXZGxMbXB6SWl3aWMyOTFjbU5sVW05dmRDSTZJaUlzSW5OdmRYSmpaWE1pT2xzaUxpNHZMaTR2YzNKakwwbHVUV1Z0YjNKNVUzUnZjbUZuWlM1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkZRVHRKUVVORkxIbENRVUZ2UWl4TFFVRnhRenRSUVVGeVF5eHpRa0ZCUVN4RlFVRkJMRlZCUVhGRE8xRkJRWEpETEZWQlFVc3NSMEZCVEN4TFFVRkxMRU5CUVdkRE8wbEJRVWNzUTBGQlF6dEpRVVUzUkN4cFEwRkJUeXhIUVVGUUxGVkJRVkVzUjBGQlZ6dFJRVU5xUWl4SlFVRkpMRWRCUVVjc1NVRkJTU3hKUVVGSkxFTkJRVU1zUzBGQlN5eEZRVUZGTzFsQlEzSkNMRTlCUVU4c1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXp0VFFVTjRRanRSUVVWRUxFOUJRVThzU1VGQlNTeERRVUZETzBsQlEyUXNRMEZCUXp0SlFVVkVMRzlEUVVGVkxFZEJRVllzVlVGQlZ5eEhRVUZYTzFGQlEzQkNMRTlCUVU4c1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXp0SlFVTjZRaXhEUVVGRE8wbEJSVVFzYVVOQlFVOHNSMEZCVUN4VlFVRlJMRWRCUVZjc1JVRkJSU3hMUVVGaE8xRkJRMmhETEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1IwRkJSeXhEUVVGRExFZEJRVWNzUzBGQlN5eERRVUZETzBsQlF6RkNMRU5CUVVNN1NVRkRTQ3h6UWtGQlF6dEJRVUZFTEVOQlFVTXNRVUZzUWtRc1NVRnJRa01pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKcGJYQnZjblFnZXlCVGRHOXlZV2RsSUgwZ1puSnZiU0JjSWk0dlUzUnZjbUZuWlZ3aU8xeHVYRzVsZUhCdmNuUWdZMnhoYzNNZ1NXNU5aVzF2Y25sVGRHOXlZV2RsSUdsdGNHeGxiV1Z1ZEhNZ1UzUnZjbUZuWlNCN1hHNGdJR052Ym5OMGNuVmpkRzl5S0hCeWFYWmhkR1VnYzNSdmNtVTZJSHNnVzJ0bGVUb2djM1J5YVc1blhUb2djM1J5YVc1bklIMGdQU0I3ZlNrZ2UzMWNibHh1SUNCblpYUkpkR1Z0S0d0bGVUb2djM1J5YVc1bktUb2djM1J5YVc1bklId2diblZzYkNCN1hHNGdJQ0FnYVdZZ0tHdGxlU0JwYmlCMGFHbHpMbk4wYjNKbEtTQjdYRzRnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6ZEc5eVpWdHJaWGxkTzF4dUlDQWdJSDFjYmx4dUlDQWdJSEpsZEhWeWJpQnVkV3hzTzF4dUlDQjlYRzVjYmlBZ2NtVnRiM1psU1hSbGJTaHJaWGs2SUhOMGNtbHVaeWs2SUhadmFXUWdlMXh1SUNBZ0lHUmxiR1YwWlNCMGFHbHpMbk4wYjNKbFcydGxlVjA3WEc0Z0lIMWNibHh1SUNCelpYUkpkR1Z0S0d0bGVUb2djM1J5YVc1bkxDQjJZV3gxWlRvZ2MzUnlhVzVuS1RvZ2RtOXBaQ0I3WEc0Z0lDQWdkR2hwY3k1emRHOXlaVnRyWlhsZElEMGdkbUZzZFdVN1hHNGdJSDFjYm4xY2JpSmRmUT09Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/InMemoryStorage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/IndexedDbStorage.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/IndexedDbStorage.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IndexedDbStorage: () => (/* binding */ IndexedDbStorage)\n/* harmony export */ });\nvar STORE_NAME = \"IdentityIds\";\nvar IndexedDbStorage = /** @class */ (function () {\n    function IndexedDbStorage(dbName) {\n        if (dbName === void 0) { dbName = \"aws:cognito-identity-ids\"; }\n        this.dbName = dbName;\n    }\n    IndexedDbStorage.prototype.getItem = function (key) {\n        return this.withObjectStore(\"readonly\", function (store) {\n            var req = store.get(key);\n            return new Promise(function (resolve) {\n                req.onerror = function () { return resolve(null); };\n                req.onsuccess = function () { return resolve(req.result ? req.result.value : null); };\n            });\n        }).catch(function () { return null; });\n    };\n    IndexedDbStorage.prototype.removeItem = function (key) {\n        return this.withObjectStore(\"readwrite\", function (store) {\n            var req = store.delete(key);\n            return new Promise(function (resolve, reject) {\n                req.onerror = function () { return reject(req.error); };\n                req.onsuccess = function () { return resolve(); };\n            });\n        });\n    };\n    IndexedDbStorage.prototype.setItem = function (id, value) {\n        return this.withObjectStore(\"readwrite\", function (store) {\n            var req = store.put({ id: id, value: value });\n            return new Promise(function (resolve, reject) {\n                req.onerror = function () { return reject(req.error); };\n                req.onsuccess = function () { return resolve(); };\n            });\n        });\n    };\n    IndexedDbStorage.prototype.getDb = function () {\n        var openDbRequest = self.indexedDB.open(this.dbName, 1);\n        return new Promise(function (resolve, reject) {\n            openDbRequest.onsuccess = function () {\n                resolve(openDbRequest.result);\n            };\n            openDbRequest.onerror = function () {\n                reject(openDbRequest.error);\n            };\n            openDbRequest.onblocked = function () {\n                reject(new Error(\"Unable to access DB\"));\n            };\n            openDbRequest.onupgradeneeded = function () {\n                var db = openDbRequest.result;\n                db.onerror = function () {\n                    reject(new Error(\"Failed to create object store\"));\n                };\n                db.createObjectStore(STORE_NAME, { keyPath: \"id\" });\n            };\n        });\n    };\n    IndexedDbStorage.prototype.withObjectStore = function (mode, action) {\n        return this.getDb().then(function (db) {\n            var tx = db.transaction(STORE_NAME, mode);\n            tx.oncomplete = function () { return db.close(); };\n            return new Promise(function (resolve, reject) {\n                tx.onerror = function () { return reject(tx.error); };\n                resolve(action(tx.objectStore(STORE_NAME)));\n            }).catch(function (err) {\n                db.close();\n                throw err;\n            });\n        });\n    };\n    return IndexedDbStorage;\n}());\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW5kZXhlZERiU3RvcmFnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9JbmRleGVkRGJTdG9yYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLElBQU0sVUFBVSxHQUFHLGFBQWEsQ0FBQztBQUVqQztJQUNFLDBCQUE2QixNQUEyQztRQUEzQyx1QkFBQSxFQUFBLG1DQUEyQztRQUEzQyxXQUFNLEdBQU4sTUFBTSxDQUFxQztJQUFHLENBQUM7SUFFNUUsa0NBQU8sR0FBUCxVQUFRLEdBQVc7UUFDakIsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLFVBQVUsRUFBRSxVQUFDLEtBQUs7WUFDNUMsSUFBTSxHQUFHLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUUzQixPQUFPLElBQUksT0FBTyxDQUFnQixVQUFDLE9BQU87Z0JBQ3hDLEdBQUcsQ0FBQyxPQUFPLEdBQUcsY0FBTSxPQUFBLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBYixDQUFhLENBQUM7Z0JBRWxDLEdBQUcsQ0FBQyxTQUFTLEdBQUcsY0FBTSxPQUFBLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQTdDLENBQTZDLENBQUM7WUFDdEUsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsY0FBTSxPQUFBLElBQUksRUFBSixDQUFJLENBQUMsQ0FBQztJQUN2QixDQUFDO0lBRUQscUNBQVUsR0FBVixVQUFXLEdBQVc7UUFDcEIsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLFdBQVcsRUFBRSxVQUFDLEtBQUs7WUFDN0MsSUFBTSxHQUFHLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUU5QixPQUFPLElBQUksT0FBTyxDQUFPLFVBQUMsT0FBTyxFQUFFLE1BQU07Z0JBQ3ZDLEdBQUcsQ0FBQyxPQUFPLEdBQUcsY0FBTSxPQUFBLE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQWpCLENBQWlCLENBQUM7Z0JBRXRDLEdBQUcsQ0FBQyxTQUFTLEdBQUcsY0FBTSxPQUFBLE9BQU8sRUFBRSxFQUFULENBQVMsQ0FBQztZQUNsQyxDQUFDLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELGtDQUFPLEdBQVAsVUFBUSxFQUFVLEVBQUUsS0FBYTtRQUMvQixPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsV0FBVyxFQUFFLFVBQUMsS0FBSztZQUM3QyxJQUFNLEdBQUcsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxJQUFBLEVBQUUsS0FBSyxPQUFBLEVBQUUsQ0FBQyxDQUFDO1lBRXJDLE9BQU8sSUFBSSxPQUFPLENBQU8sVUFBQyxPQUFPLEVBQUUsTUFBTTtnQkFDdkMsR0FBRyxDQUFDLE9BQU8sR0FBRyxjQUFNLE9BQUEsTUFBTSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBakIsQ0FBaUIsQ0FBQztnQkFFdEMsR0FBRyxDQUFDLFNBQVMsR0FBRyxjQUFNLE9BQUEsT0FBTyxFQUFFLEVBQVQsQ0FBUyxDQUFDO1lBQ2xDLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRU8sZ0NBQUssR0FBYjtRQUNFLElBQU0sYUFBYSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDMUQsT0FBTyxJQUFJLE9BQU8sQ0FBQyxVQUFDLE9BQU8sRUFBRSxNQUFNO1lBQ2pDLGFBQWEsQ0FBQyxTQUFTLEdBQUc7Z0JBQ3hCLE9BQU8sQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDaEMsQ0FBQyxDQUFDO1lBRUYsYUFBYSxDQUFDLE9BQU8sR0FBRztnQkFDdEIsTUFBTSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUM5QixDQUFDLENBQUM7WUFFRixhQUFhLENBQUMsU0FBUyxHQUFHO2dCQUN4QixNQUFNLENBQUMsSUFBSSxLQUFLLENBQUMscUJBQXFCLENBQUMsQ0FBQyxDQUFDO1lBQzNDLENBQUMsQ0FBQztZQUVGLGFBQWEsQ0FBQyxlQUFlLEdBQUc7Z0JBQzlCLElBQU0sRUFBRSxHQUFHLGFBQWEsQ0FBQyxNQUFNLENBQUM7Z0JBQ2hDLEVBQUUsQ0FBQyxPQUFPLEdBQUc7b0JBQ1gsTUFBTSxDQUFDLElBQUksS0FBSyxDQUFDLCtCQUErQixDQUFDLENBQUMsQ0FBQztnQkFDckQsQ0FBQyxDQUFDO2dCQUVGLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxVQUFVLEVBQUUsRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztZQUN0RCxDQUFDLENBQUM7UUFDSixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFTywwQ0FBZSxHQUF2QixVQUEyQixJQUF3QixFQUFFLE1BQTZDO1FBQ2hHLE9BQU8sSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFDLEVBQUU7WUFDMUIsSUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFDNUMsRUFBRSxDQUFDLFVBQVUsR0FBRyxjQUFNLE9BQUEsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFWLENBQVUsQ0FBQztZQUVqQyxPQUFPLElBQUksT0FBTyxDQUFJLFVBQUMsT0FBTyxFQUFFLE1BQU07Z0JBQ3BDLEVBQUUsQ0FBQyxPQUFPLEdBQUcsY0FBTSxPQUFBLE1BQU0sQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLEVBQWhCLENBQWdCLENBQUM7Z0JBRXBDLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDOUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFVBQUMsR0FBRztnQkFDWCxFQUFFLENBQUMsS0FBSyxFQUFFLENBQUM7Z0JBQ1gsTUFBTSxHQUFHLENBQUM7WUFDWixDQUFDLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUNILHVCQUFDO0FBQUQsQ0FBQyxBQWhGRCxJQWdGQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0b3JhZ2UgfSBmcm9tIFwiLi9TdG9yYWdlXCI7XG5cbmNvbnN0IFNUT1JFX05BTUUgPSBcIklkZW50aXR5SWRzXCI7XG5cbmV4cG9ydCBjbGFzcyBJbmRleGVkRGJTdG9yYWdlIGltcGxlbWVudHMgU3RvcmFnZSB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgZGJOYW1lOiBzdHJpbmcgPSBcImF3czpjb2duaXRvLWlkZW50aXR5LWlkc1wiKSB7fVxuXG4gIGdldEl0ZW0oa2V5OiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZyB8IG51bGw+IHtcbiAgICByZXR1cm4gdGhpcy53aXRoT2JqZWN0U3RvcmUoXCJyZWFkb25seVwiLCAoc3RvcmUpID0+IHtcbiAgICAgIGNvbnN0IHJlcSA9IHN0b3JlLmdldChrZXkpO1xuXG4gICAgICByZXR1cm4gbmV3IFByb21pc2U8c3RyaW5nIHwgbnVsbD4oKHJlc29sdmUpID0+IHtcbiAgICAgICAgcmVxLm9uZXJyb3IgPSAoKSA9PiByZXNvbHZlKG51bGwpO1xuXG4gICAgICAgIHJlcS5vbnN1Y2Nlc3MgPSAoKSA9PiByZXNvbHZlKHJlcS5yZXN1bHQgPyByZXEucmVzdWx0LnZhbHVlIDogbnVsbCk7XG4gICAgICB9KTtcbiAgICB9KS5jYXRjaCgoKSA9PiBudWxsKTtcbiAgfVxuXG4gIHJlbW92ZUl0ZW0oa2V5OiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICByZXR1cm4gdGhpcy53aXRoT2JqZWN0U3RvcmUoXCJyZWFkd3JpdGVcIiwgKHN0b3JlKSA9PiB7XG4gICAgICBjb25zdCByZXEgPSBzdG9yZS5kZWxldGUoa2V5KTtcblxuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlPHZvaWQ+KChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgcmVxLm9uZXJyb3IgPSAoKSA9PiByZWplY3QocmVxLmVycm9yKTtcblxuICAgICAgICByZXEub25zdWNjZXNzID0gKCkgPT4gcmVzb2x2ZSgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBzZXRJdGVtKGlkOiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICByZXR1cm4gdGhpcy53aXRoT2JqZWN0U3RvcmUoXCJyZWFkd3JpdGVcIiwgKHN0b3JlKSA9PiB7XG4gICAgICBjb25zdCByZXEgPSBzdG9yZS5wdXQoeyBpZCwgdmFsdWUgfSk7XG5cbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZTx2b2lkPigocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIHJlcS5vbmVycm9yID0gKCkgPT4gcmVqZWN0KHJlcS5lcnJvcik7XG5cbiAgICAgICAgcmVxLm9uc3VjY2VzcyA9ICgpID0+IHJlc29sdmUoKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXREYigpOiBQcm9taXNlPElEQkRhdGFiYXNlPiB7XG4gICAgY29uc3Qgb3BlbkRiUmVxdWVzdCA9IHNlbGYuaW5kZXhlZERCLm9wZW4odGhpcy5kYk5hbWUsIDEpO1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBvcGVuRGJSZXF1ZXN0Lm9uc3VjY2VzcyA9ICgpID0+IHtcbiAgICAgICAgcmVzb2x2ZShvcGVuRGJSZXF1ZXN0LnJlc3VsdCk7XG4gICAgICB9O1xuXG4gICAgICBvcGVuRGJSZXF1ZXN0Lm9uZXJyb3IgPSAoKSA9PiB7XG4gICAgICAgIHJlamVjdChvcGVuRGJSZXF1ZXN0LmVycm9yKTtcbiAgICAgIH07XG5cbiAgICAgIG9wZW5EYlJlcXVlc3Qub25ibG9ja2VkID0gKCkgPT4ge1xuICAgICAgICByZWplY3QobmV3IEVycm9yKFwiVW5hYmxlIHRvIGFjY2VzcyBEQlwiKSk7XG4gICAgICB9O1xuXG4gICAgICBvcGVuRGJSZXF1ZXN0Lm9udXBncmFkZW5lZWRlZCA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgZGIgPSBvcGVuRGJSZXF1ZXN0LnJlc3VsdDtcbiAgICAgICAgZGIub25lcnJvciA9ICgpID0+IHtcbiAgICAgICAgICByZWplY3QobmV3IEVycm9yKFwiRmFpbGVkIHRvIGNyZWF0ZSBvYmplY3Qgc3RvcmVcIikpO1xuICAgICAgICB9O1xuXG4gICAgICAgIGRiLmNyZWF0ZU9iamVjdFN0b3JlKFNUT1JFX05BTUUsIHsga2V5UGF0aDogXCJpZFwiIH0pO1xuICAgICAgfTtcbiAgICB9KTtcbiAgfVxuXG4gIHByaXZhdGUgd2l0aE9iamVjdFN0b3JlPFI+KG1vZGU6IElEQlRyYW5zYWN0aW9uTW9kZSwgYWN0aW9uOiAoc3RvcmU6IElEQk9iamVjdFN0b3JlKSA9PiBQcm9taXNlPFI+KTogUHJvbWlzZTxSPiB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0RGIoKS50aGVuKChkYikgPT4ge1xuICAgICAgY29uc3QgdHggPSBkYi50cmFuc2FjdGlvbihTVE9SRV9OQU1FLCBtb2RlKTtcbiAgICAgIHR4Lm9uY29tcGxldGUgPSAoKSA9PiBkYi5jbG9zZSgpO1xuXG4gICAgICByZXR1cm4gbmV3IFByb21pc2U8Uj4oKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICB0eC5vbmVycm9yID0gKCkgPT4gcmVqZWN0KHR4LmVycm9yKTtcblxuICAgICAgICByZXNvbHZlKGFjdGlvbih0eC5vYmplY3RTdG9yZShTVE9SRV9OQU1FKSkpO1xuICAgICAgfSkuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBkYi5jbG9zZSgpO1xuICAgICAgICB0aHJvdyBlcnI7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufVxuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/IndexedDbStorage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/fromCognitoIdentity.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/fromCognitoIdentity.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromCognitoIdentity: () => (/* binding */ fromCognitoIdentity)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-cognito-identity/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_client_cognito_identity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/client-cognito-identity */ \"(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/commands/GetCredentialsForIdentityCommand.js\");\n/* harmony import */ var _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/property-provider */ \"(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/index.js\");\n/* harmony import */ var _resolveLogins__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./resolveLogins */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/resolveLogins.js\");\n\n\n\n\n/**\n * Retrieves temporary AWS credentials using Amazon Cognito's\n * `GetCredentialsForIdentity` operation.\n *\n * Results from this function call are not cached internally.\n */\nfunction fromCognitoIdentity(parameters) {\n    var _this = this;\n    return function () { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(_this, void 0, void 0, function () {\n        var _a, _b, _c, AccessKeyId, Expiration, _d, SecretKey, SessionToken, _e, _f, _g, _h;\n        var _j;\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _f = (_e = parameters.client).send;\n                    _g = _aws_sdk_client_cognito_identity__WEBPACK_IMPORTED_MODULE_2__.GetCredentialsForIdentityCommand.bind;\n                    _j = {\n                        CustomRoleArn: parameters.customRoleArn,\n                        IdentityId: parameters.identityId\n                    };\n                    if (!parameters.logins) return [3 /*break*/, 2];\n                    return [4 /*yield*/, (0,_resolveLogins__WEBPACK_IMPORTED_MODULE_3__.resolveLogins)(parameters.logins)];\n                case 1:\n                    _h = _k.sent();\n                    return [3 /*break*/, 3];\n                case 2:\n                    _h = undefined;\n                    _k.label = 3;\n                case 3: return [4 /*yield*/, _f.apply(_e, [new (_g.apply(_aws_sdk_client_cognito_identity__WEBPACK_IMPORTED_MODULE_2__.GetCredentialsForIdentityCommand, [void 0, (_j.Logins = _h,\n                                _j)]))()])];\n                case 4:\n                    _a = (_k.sent()).Credentials, _b = _a === void 0 ? throwOnMissingCredentials() : _a, _c = _b.AccessKeyId, AccessKeyId = _c === void 0 ? throwOnMissingAccessKeyId() : _c, Expiration = _b.Expiration, _d = _b.SecretKey, SecretKey = _d === void 0 ? throwOnMissingSecretKey() : _d, SessionToken = _b.SessionToken;\n                    return [2 /*return*/, {\n                            identityId: parameters.identityId,\n                            accessKeyId: AccessKeyId,\n                            secretAccessKey: SecretKey,\n                            sessionToken: SessionToken,\n                            expiration: Expiration,\n                        }];\n            }\n        });\n    }); };\n}\nfunction throwOnMissingAccessKeyId() {\n    throw new _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__.ProviderError(\"Response from Amazon Cognito contained no access key ID\");\n}\nfunction throwOnMissingCredentials() {\n    throw new _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__.ProviderError(\"Response from Amazon Cognito contained no credentials\");\n}\nfunction throwOnMissingSecretKey() {\n    throw new _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__.ProviderError(\"Response from Amazon Cognito contained no secret key\");\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbUNvZ25pdG9JZGVudGl0eS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9mcm9tQ29nbml0b0lkZW50aXR5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUNwRixPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFJM0QsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBU2hEOzs7OztHQUtHO0FBQ0gsTUFBTSxVQUFVLG1CQUFtQixDQUFDLFVBQXlDO0lBQTdFLGlCQXlCQztJQXhCQyxPQUFPOzs7Ozs7b0JBUUssS0FBQSxDQUFBLEtBQUEsVUFBVSxDQUFDLE1BQU0sQ0FBQSxDQUFDLElBQUksQ0FBQTt5QkFDMUIsZ0NBQWdDOzt3QkFDbEMsYUFBYSxFQUFFLFVBQVUsQ0FBQyxhQUFhO3dCQUN2QyxVQUFVLEVBQUUsVUFBVSxDQUFDLFVBQVU7O3lCQUN6QixVQUFVLENBQUMsTUFBTSxFQUFqQix3QkFBaUI7b0JBQUcscUJBQU0sYUFBYSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsRUFBQTs7b0JBQXRDLEtBQUEsU0FBc0MsQ0FBQTs7O29CQUFHLEtBQUEsU0FBUyxDQUFBOzt3QkFKOUUscUJBQU0sY0FDUixjQUFJLGdDQUFnQyxZQUdsQyxTQUFNLEtBQXdFO3dDQUM5RSxFQUNILEVBQUE7O29CQVpDLEtBTUUsQ0FBQSxTQU1ILENBQUEsWUFQZ0MsRUFML0IscUJBS0kseUJBQXlCLEVBQUUsS0FBQSxFQUo3QixtQkFBeUMsRUFBekMsV0FBVyxtQkFBRyx5QkFBeUIsRUFBRSxLQUFBLEVBQ3pDLFVBQVUsZ0JBQUEsRUFDVixpQkFBcUMsRUFBckMsU0FBUyxtQkFBRyx1QkFBdUIsRUFBRSxLQUFBLEVBQ3JDLFlBQVksa0JBQUE7b0JBVWhCLHNCQUFPOzRCQUNMLFVBQVUsRUFBRSxVQUFVLENBQUMsVUFBVTs0QkFDakMsV0FBVyxFQUFFLFdBQVc7NEJBQ3hCLGVBQWUsRUFBRSxTQUFTOzRCQUMxQixZQUFZLEVBQUUsWUFBWTs0QkFDMUIsVUFBVSxFQUFFLFVBQVU7eUJBQ3ZCLEVBQUM7OztTQUNILENBQUM7QUFDSixDQUFDO0FBVUQsU0FBUyx5QkFBeUI7SUFDaEMsTUFBTSxJQUFJLGFBQWEsQ0FBQyx5REFBeUQsQ0FBQyxDQUFDO0FBQ3JGLENBQUM7QUFFRCxTQUFTLHlCQUF5QjtJQUNoQyxNQUFNLElBQUksYUFBYSxDQUFDLHVEQUF1RCxDQUFDLENBQUM7QUFDbkYsQ0FBQztBQUVELFNBQVMsdUJBQXVCO0lBQzlCLE1BQU0sSUFBSSxhQUFhLENBQUMsc0RBQXNELENBQUMsQ0FBQztBQUNsRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR2V0Q3JlZGVudGlhbHNGb3JJZGVudGl0eUNvbW1hbmQgfSBmcm9tIFwiQGF3cy1zZGsvY2xpZW50LWNvZ25pdG8taWRlbnRpdHlcIjtcbmltcG9ydCB7IFByb3ZpZGVyRXJyb3IgfSBmcm9tIFwiQGF3cy1zZGsvcHJvcGVydHktcHJvdmlkZXJcIjtcbmltcG9ydCB7IENyZWRlbnRpYWxQcm92aWRlciwgQ3JlZGVudGlhbHMgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuaW1wb3J0IHsgQ29nbml0b1Byb3ZpZGVyUGFyYW1ldGVycyB9IGZyb20gXCIuL0NvZ25pdG9Qcm92aWRlclBhcmFtZXRlcnNcIjtcbmltcG9ydCB7IHJlc29sdmVMb2dpbnMgfSBmcm9tIFwiLi9yZXNvbHZlTG9naW5zXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29nbml0b0lkZW50aXR5Q3JlZGVudGlhbHMgZXh0ZW5kcyBDcmVkZW50aWFscyB7XG4gIC8qKlxuICAgKiBUaGUgQ29nbml0byBJRCByZXR1cm5lZCBieSB0aGUgbGFzdCBjYWxsIHRvIEFXUy5Db2duaXRvSWRlbnRpdHkuZ2V0T3BlbklkVG9rZW4oKS5cbiAgICovXG4gIGlkZW50aXR5SWQ6IHN0cmluZztcbn1cblxuLyoqXG4gKiBSZXRyaWV2ZXMgdGVtcG9yYXJ5IEFXUyBjcmVkZW50aWFscyB1c2luZyBBbWF6b24gQ29nbml0bydzXG4gKiBgR2V0Q3JlZGVudGlhbHNGb3JJZGVudGl0eWAgb3BlcmF0aW9uLlxuICpcbiAqIFJlc3VsdHMgZnJvbSB0aGlzIGZ1bmN0aW9uIGNhbGwgYXJlIG5vdCBjYWNoZWQgaW50ZXJuYWxseS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZyb21Db2duaXRvSWRlbnRpdHkocGFyYW1ldGVyczogRnJvbUNvZ25pdG9JZGVudGl0eVBhcmFtZXRlcnMpOiBDcmVkZW50aWFsUHJvdmlkZXIge1xuICByZXR1cm4gYXN5bmMgKCk6IFByb21pc2U8Q29nbml0b0lkZW50aXR5Q3JlZGVudGlhbHM+ID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBDcmVkZW50aWFsczoge1xuICAgICAgICBBY2Nlc3NLZXlJZCA9IHRocm93T25NaXNzaW5nQWNjZXNzS2V5SWQoKSxcbiAgICAgICAgRXhwaXJhdGlvbixcbiAgICAgICAgU2VjcmV0S2V5ID0gdGhyb3dPbk1pc3NpbmdTZWNyZXRLZXkoKSxcbiAgICAgICAgU2Vzc2lvblRva2VuLFxuICAgICAgfSA9IHRocm93T25NaXNzaW5nQ3JlZGVudGlhbHMoKSxcbiAgICB9ID0gYXdhaXQgcGFyYW1ldGVycy5jbGllbnQuc2VuZChcbiAgICAgIG5ldyBHZXRDcmVkZW50aWFsc0ZvcklkZW50aXR5Q29tbWFuZCh7XG4gICAgICAgIEN1c3RvbVJvbGVBcm46IHBhcmFtZXRlcnMuY3VzdG9tUm9sZUFybixcbiAgICAgICAgSWRlbnRpdHlJZDogcGFyYW1ldGVycy5pZGVudGl0eUlkLFxuICAgICAgICBMb2dpbnM6IHBhcmFtZXRlcnMubG9naW5zID8gYXdhaXQgcmVzb2x2ZUxvZ2lucyhwYXJhbWV0ZXJzLmxvZ2lucykgOiB1bmRlZmluZWQsXG4gICAgICB9KVxuICAgICk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgaWRlbnRpdHlJZDogcGFyYW1ldGVycy5pZGVudGl0eUlkLFxuICAgICAgYWNjZXNzS2V5SWQ6IEFjY2Vzc0tleUlkLFxuICAgICAgc2VjcmV0QWNjZXNzS2V5OiBTZWNyZXRLZXksXG4gICAgICBzZXNzaW9uVG9rZW46IFNlc3Npb25Ub2tlbixcbiAgICAgIGV4cGlyYXRpb246IEV4cGlyYXRpb24sXG4gICAgfTtcbiAgfTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBGcm9tQ29nbml0b0lkZW50aXR5UGFyYW1ldGVycyBleHRlbmRzIENvZ25pdG9Qcm92aWRlclBhcmFtZXRlcnMge1xuICAvKipcbiAgICogVGhlIHVuaXF1ZSBpZGVudGlmaWVyIGZvciB0aGUgaWRlbnRpdHkgYWdhaW5zdCB3aGljaCBjcmVkZW50aWFscyB3aWxsIGJlXG4gICAqIGlzc3VlZC5cbiAgICovXG4gIGlkZW50aXR5SWQ6IHN0cmluZztcbn1cblxuZnVuY3Rpb24gdGhyb3dPbk1pc3NpbmdBY2Nlc3NLZXlJZCgpOiBuZXZlciB7XG4gIHRocm93IG5ldyBQcm92aWRlckVycm9yKFwiUmVzcG9uc2UgZnJvbSBBbWF6b24gQ29nbml0byBjb250YWluZWQgbm8gYWNjZXNzIGtleSBJRFwiKTtcbn1cblxuZnVuY3Rpb24gdGhyb3dPbk1pc3NpbmdDcmVkZW50aWFscygpOiBuZXZlciB7XG4gIHRocm93IG5ldyBQcm92aWRlckVycm9yKFwiUmVzcG9uc2UgZnJvbSBBbWF6b24gQ29nbml0byBjb250YWluZWQgbm8gY3JlZGVudGlhbHNcIik7XG59XG5cbmZ1bmN0aW9uIHRocm93T25NaXNzaW5nU2VjcmV0S2V5KCk6IG5ldmVyIHtcbiAgdGhyb3cgbmV3IFByb3ZpZGVyRXJyb3IoXCJSZXNwb25zZSBmcm9tIEFtYXpvbiBDb2duaXRvIGNvbnRhaW5lZCBubyBzZWNyZXQga2V5XCIpO1xufVxuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1jb2duaXRvLWlkZW50aXR5L2Rpc3QvZXMvZnJvbUNvZ25pdG9JZGVudGl0eS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUErQztBQUNxQztBQUN6QjtBQUNYO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSx5QkFBeUIsT0FBTyxnREFBUztBQUN6QztBQUNBO0FBQ0EsZUFBZSxrREFBVztBQUMxQjtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsOEZBQWdDO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsNkRBQWE7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUVBQXlFLDhGQUFnQztBQUN6RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQSxjQUFjLHFFQUFhO0FBQzNCO0FBQ0E7QUFDQSxjQUFjLHFFQUFhO0FBQzNCO0FBQ0E7QUFDQSxjQUFjLHFFQUFhO0FBQzNCO0FBQ0EsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLWNvZ25pdG8taWRlbnRpdHkvZGlzdC9lcy9mcm9tQ29nbml0b0lkZW50aXR5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fYXdhaXRlciwgX19nZW5lcmF0b3IgfSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IEdldENyZWRlbnRpYWxzRm9ySWRlbnRpdHlDb21tYW5kIH0gZnJvbSBcIkBhd3Mtc2RrL2NsaWVudC1jb2duaXRvLWlkZW50aXR5XCI7XG5pbXBvcnQgeyBQcm92aWRlckVycm9yIH0gZnJvbSBcIkBhd3Mtc2RrL3Byb3BlcnR5LXByb3ZpZGVyXCI7XG5pbXBvcnQgeyByZXNvbHZlTG9naW5zIH0gZnJvbSBcIi4vcmVzb2x2ZUxvZ2luc1wiO1xuLyoqXG4gKiBSZXRyaWV2ZXMgdGVtcG9yYXJ5IEFXUyBjcmVkZW50aWFscyB1c2luZyBBbWF6b24gQ29nbml0bydzXG4gKiBgR2V0Q3JlZGVudGlhbHNGb3JJZGVudGl0eWAgb3BlcmF0aW9uLlxuICpcbiAqIFJlc3VsdHMgZnJvbSB0aGlzIGZ1bmN0aW9uIGNhbGwgYXJlIG5vdCBjYWNoZWQgaW50ZXJuYWxseS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZyb21Db2duaXRvSWRlbnRpdHkocGFyYW1ldGVycykge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIF9fYXdhaXRlcihfdGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF9hLCBfYiwgX2MsIEFjY2Vzc0tleUlkLCBFeHBpcmF0aW9uLCBfZCwgU2VjcmV0S2V5LCBTZXNzaW9uVG9rZW4sIF9lLCBfZiwgX2csIF9oO1xuICAgICAgICB2YXIgX2o7XG4gICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2spIHtcbiAgICAgICAgICAgIHN3aXRjaCAoX2subGFiZWwpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICAgIF9mID0gKF9lID0gcGFyYW1ldGVycy5jbGllbnQpLnNlbmQ7XG4gICAgICAgICAgICAgICAgICAgIF9nID0gR2V0Q3JlZGVudGlhbHNGb3JJZGVudGl0eUNvbW1hbmQuYmluZDtcbiAgICAgICAgICAgICAgICAgICAgX2ogPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBDdXN0b21Sb2xlQXJuOiBwYXJhbWV0ZXJzLmN1c3RvbVJvbGVBcm4sXG4gICAgICAgICAgICAgICAgICAgICAgICBJZGVudGl0eUlkOiBwYXJhbWV0ZXJzLmlkZW50aXR5SWRcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFwYXJhbWV0ZXJzLmxvZ2lucykgcmV0dXJuIFszIC8qYnJlYWsqLywgMl07XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIHJlc29sdmVMb2dpbnMocGFyYW1ldGVycy5sb2dpbnMpXTtcbiAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgIF9oID0gX2suc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzMgLypicmVhayovLCAzXTtcbiAgICAgICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgICAgIF9oID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgICAgICBfay5sYWJlbCA9IDM7XG4gICAgICAgICAgICAgICAgY2FzZSAzOiByZXR1cm4gWzQgLyp5aWVsZCovLCBfZi5hcHBseShfZSwgW25ldyAoX2cuYXBwbHkoR2V0Q3JlZGVudGlhbHNGb3JJZGVudGl0eUNvbW1hbmQsIFt2b2lkIDAsIChfai5Mb2dpbnMgPSBfaCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2opXSkpKCldKV07XG4gICAgICAgICAgICAgICAgY2FzZSA0OlxuICAgICAgICAgICAgICAgICAgICBfYSA9IChfay5zZW50KCkpLkNyZWRlbnRpYWxzLCBfYiA9IF9hID09PSB2b2lkIDAgPyB0aHJvd09uTWlzc2luZ0NyZWRlbnRpYWxzKCkgOiBfYSwgX2MgPSBfYi5BY2Nlc3NLZXlJZCwgQWNjZXNzS2V5SWQgPSBfYyA9PT0gdm9pZCAwID8gdGhyb3dPbk1pc3NpbmdBY2Nlc3NLZXlJZCgpIDogX2MsIEV4cGlyYXRpb24gPSBfYi5FeHBpcmF0aW9uLCBfZCA9IF9iLlNlY3JldEtleSwgU2VjcmV0S2V5ID0gX2QgPT09IHZvaWQgMCA/IHRocm93T25NaXNzaW5nU2VjcmV0S2V5KCkgOiBfZCwgU2Vzc2lvblRva2VuID0gX2IuU2Vzc2lvblRva2VuO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkZW50aXR5SWQ6IHBhcmFtZXRlcnMuaWRlbnRpdHlJZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY2Nlc3NLZXlJZDogQWNjZXNzS2V5SWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VjcmV0QWNjZXNzS2V5OiBTZWNyZXRLZXksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Vzc2lvblRva2VuOiBTZXNzaW9uVG9rZW4sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogRXhwaXJhdGlvbixcbiAgICAgICAgICAgICAgICAgICAgICAgIH1dO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9KTsgfTtcbn1cbmZ1bmN0aW9uIHRocm93T25NaXNzaW5nQWNjZXNzS2V5SWQoKSB7XG4gICAgdGhyb3cgbmV3IFByb3ZpZGVyRXJyb3IoXCJSZXNwb25zZSBmcm9tIEFtYXpvbiBDb2duaXRvIGNvbnRhaW5lZCBubyBhY2Nlc3Mga2V5IElEXCIpO1xufVxuZnVuY3Rpb24gdGhyb3dPbk1pc3NpbmdDcmVkZW50aWFscygpIHtcbiAgICB0aHJvdyBuZXcgUHJvdmlkZXJFcnJvcihcIlJlc3BvbnNlIGZyb20gQW1hem9uIENvZ25pdG8gY29udGFpbmVkIG5vIGNyZWRlbnRpYWxzXCIpO1xufVxuZnVuY3Rpb24gdGhyb3dPbk1pc3NpbmdTZWNyZXRLZXkoKSB7XG4gICAgdGhyb3cgbmV3IFByb3ZpZGVyRXJyb3IoXCJSZXNwb25zZSBmcm9tIEFtYXpvbiBDb2duaXRvIGNvbnRhaW5lZCBubyBzZWNyZXQga2V5XCIpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pWm5KdmJVTnZaMjVwZEc5SlpHVnVkR2wwZVM1cWN5SXNJbk52ZFhKalpWSnZiM1FpT2lJaUxDSnpiM1Z5WTJWeklqcGJJaTR1THk0dUwzTnlZeTltY205dFEyOW5ibWwwYjBsa1pXNTBhWFI1TG5SeklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lJN1FVRkJRU3hQUVVGUExFVkJRVVVzWjBOQlFXZERMRVZCUVVVc1RVRkJUU3hyUTBGQmEwTXNRMEZCUXp0QlFVTndSaXhQUVVGUExFVkJRVVVzWVVGQllTeEZRVUZGTEUxQlFVMHNORUpCUVRSQ0xFTkJRVU03UVVGSk0wUXNUMEZCVHl4RlFVRkZMR0ZCUVdFc1JVRkJSU3hOUVVGTkxHbENRVUZwUWl4RFFVRkRPMEZCVTJoRU96czdPenRIUVV0SE8wRkJRMGdzVFVGQlRTeFZRVUZWTEcxQ1FVRnRRaXhEUVVGRExGVkJRWGxETzBsQlFUZEZMR2xDUVhsQ1F6dEpRWGhDUXl4UFFVRlBPenM3T3pzN2IwSkJVVXNzUzBGQlFTeERRVUZCTEV0QlFVRXNWVUZCVlN4RFFVRkRMRTFCUVUwc1EwRkJRU3hEUVVGRExFbEJRVWtzUTBGQlFUdDVRa0ZETVVJc1owTkJRV2RET3p0M1FrRkRiRU1zWVVGQllTeEZRVUZGTEZWQlFWVXNRMEZCUXl4aFFVRmhPM2RDUVVOMlF5eFZRVUZWTEVWQlFVVXNWVUZCVlN4RFFVRkRMRlZCUVZVN08zbENRVU42UWl4VlFVRlZMRU5CUVVNc1RVRkJUU3hGUVVGcVFpeDNRa0ZCYVVJN2IwSkJRVWNzY1VKQlFVMHNZVUZCWVN4RFFVRkRMRlZCUVZVc1EwRkJReXhOUVVGTkxFTkJRVU1zUlVGQlFUczdiMEpCUVhSRExFdEJRVUVzVTBGQmMwTXNRMEZCUVRzN08yOUNRVUZITEV0QlFVRXNVMEZCVXl4RFFVRkJPenQzUWtGS09VVXNjVUpCUVUwc1kwRkRVaXhqUVVGSkxHZERRVUZuUXl4WlFVZHNReXhUUVVGTkxFdEJRWGRGTzNkRFFVTTVSU3hGUVVOSUxFVkJRVUU3TzI5Q1FWcERMRXRCVFVVc1EwRkJRU3hUUVUxSUxFTkJRVUVzV1VGUVowTXNSVUZNTDBJc2NVSkJTMGtzZVVKQlFYbENMRVZCUVVVc1MwRkJRU3hGUVVvM1FpeHRRa0ZCZVVNc1JVRkJla01zVjBGQlZ5eHRRa0ZCUnl4NVFrRkJlVUlzUlVGQlJTeExRVUZCTEVWQlEzcERMRlZCUVZVc1owSkJRVUVzUlVGRFZpeHBRa0ZCY1VNc1JVRkJja01zVTBGQlV5eHRRa0ZCUnl4MVFrRkJkVUlzUlVGQlJTeExRVUZCTEVWQlEzSkRMRmxCUVZrc2EwSkJRVUU3YjBKQlZXaENMSE5DUVVGUE96UkNRVU5NTEZWQlFWVXNSVUZCUlN4VlFVRlZMRU5CUVVNc1ZVRkJWVHMwUWtGRGFrTXNWMEZCVnl4RlFVRkZMRmRCUVZjN05FSkJRM2hDTEdWQlFXVXNSVUZCUlN4VFFVRlRPelJDUVVNeFFpeFpRVUZaTEVWQlFVVXNXVUZCV1RzMFFrRkRNVUlzVlVGQlZTeEZRVUZGTEZWQlFWVTdlVUpCUTNaQ0xFVkJRVU03T3p0VFFVTklMRU5CUVVNN1FVRkRTaXhEUVVGRE8wRkJWVVFzVTBGQlV5eDVRa0ZCZVVJN1NVRkRhRU1zVFVGQlRTeEpRVUZKTEdGQlFXRXNRMEZCUXl4NVJFRkJlVVFzUTBGQlF5eERRVUZETzBGQlEzSkdMRU5CUVVNN1FVRkZSQ3hUUVVGVExIbENRVUY1UWp0SlFVTm9ReXhOUVVGTkxFbEJRVWtzWVVGQllTeERRVUZETEhWRVFVRjFSQ3hEUVVGRExFTkJRVU03UVVGRGJrWXNRMEZCUXp0QlFVVkVMRk5CUVZNc2RVSkJRWFZDTzBsQlF6bENMRTFCUVUwc1NVRkJTU3hoUVVGaExFTkJRVU1zYzBSQlFYTkVMRU5CUVVNc1EwRkJRenRCUVVOc1JpeERRVUZESWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaWFXMXdiM0owSUhzZ1IyVjBRM0psWkdWdWRHbGhiSE5HYjNKSlpHVnVkR2wwZVVOdmJXMWhibVFnZlNCbWNtOXRJRndpUUdGM2N5MXpaR3N2WTJ4cFpXNTBMV052WjI1cGRHOHRhV1JsYm5ScGRIbGNJanRjYm1sdGNHOXlkQ0I3SUZCeWIzWnBaR1Z5UlhKeWIzSWdmU0JtY205dElGd2lRR0YzY3kxelpHc3ZjSEp2Y0dWeWRIa3RjSEp2ZG1sa1pYSmNJanRjYm1sdGNHOXlkQ0I3SUVOeVpXUmxiblJwWVd4UWNtOTJhV1JsY2l3Z1EzSmxaR1Z1ZEdsaGJITWdmU0JtY205dElGd2lRR0YzY3kxelpHc3ZkSGx3WlhOY0lqdGNibHh1YVcxd2IzSjBJSHNnUTI5bmJtbDBiMUJ5YjNacFpHVnlVR0Z5WVcxbGRHVnljeUI5SUdaeWIyMGdYQ0l1TDBOdloyNXBkRzlRY205MmFXUmxjbEJoY21GdFpYUmxjbk5jSWp0Y2JtbHRjRzl5ZENCN0lISmxjMjlzZG1WTWIyZHBibk1nZlNCbWNtOXRJRndpTGk5eVpYTnZiSFpsVEc5bmFXNXpYQ0k3WEc1Y2JtVjRjRzl5ZENCcGJuUmxjbVpoWTJVZ1EyOW5ibWwwYjBsa1pXNTBhWFI1UTNKbFpHVnVkR2xoYkhNZ1pYaDBaVzVrY3lCRGNtVmtaVzUwYVdGc2N5QjdYRzRnSUM4cUtseHVJQ0FnS2lCVWFHVWdRMjluYm1sMGJ5QkpSQ0J5WlhSMWNtNWxaQ0JpZVNCMGFHVWdiR0Z6ZENCallXeHNJSFJ2SUVGWFV5NURiMmR1YVhSdlNXUmxiblJwZEhrdVoyVjBUM0JsYmtsa1ZHOXJaVzRvS1M1Y2JpQWdJQ292WEc0Z0lHbGtaVzUwYVhSNVNXUTZJSE4wY21sdVp6dGNibjFjYmx4dUx5b3FYRzRnS2lCU1pYUnlhV1YyWlhNZ2RHVnRjRzl5WVhKNUlFRlhVeUJqY21Wa1pXNTBhV0ZzY3lCMWMybHVaeUJCYldGNmIyNGdRMjluYm1sMGJ5ZHpYRzRnS2lCZ1IyVjBRM0psWkdWdWRHbGhiSE5HYjNKSlpHVnVkR2wwZVdBZ2IzQmxjbUYwYVc5dUxseHVJQ3BjYmlBcUlGSmxjM1ZzZEhNZ1puSnZiU0IwYUdseklHWjFibU4wYVc5dUlHTmhiR3dnWVhKbElHNXZkQ0JqWVdOb1pXUWdhVzUwWlhKdVlXeHNlUzVjYmlBcUwxeHVaWGh3YjNKMElHWjFibU4wYVc5dUlHWnliMjFEYjJkdWFYUnZTV1JsYm5ScGRIa29jR0Z5WVcxbGRHVnljem9nUm5KdmJVTnZaMjVwZEc5SlpHVnVkR2wwZVZCaGNtRnRaWFJsY25NcE9pQkRjbVZrWlc1MGFXRnNVSEp2ZG1sa1pYSWdlMXh1SUNCeVpYUjFjbTRnWVhONWJtTWdLQ2s2SUZCeWIyMXBjMlU4UTI5bmJtbDBiMGxrWlc1MGFYUjVRM0psWkdWdWRHbGhiSE0rSUQwK0lIdGNiaUFnSUNCamIyNXpkQ0I3WEc0Z0lDQWdJQ0JEY21Wa1pXNTBhV0ZzY3pvZ2UxeHVJQ0FnSUNBZ0lDQkJZMk5sYzNOTFpYbEpaQ0E5SUhSb2NtOTNUMjVOYVhOemFXNW5RV05qWlhOelMyVjVTV1FvS1N4Y2JpQWdJQ0FnSUNBZ1JYaHdhWEpoZEdsdmJpeGNiaUFnSUNBZ0lDQWdVMlZqY21WMFMyVjVJRDBnZEdoeWIzZFBiazFwYzNOcGJtZFRaV055WlhSTFpYa29LU3hjYmlBZ0lDQWdJQ0FnVTJWemMybHZibFJ2YTJWdUxGeHVJQ0FnSUNBZ2ZTQTlJSFJvY205M1QyNU5hWE56YVc1blEzSmxaR1Z1ZEdsaGJITW9LU3hjYmlBZ0lDQjlJRDBnWVhkaGFYUWdjR0Z5WVcxbGRHVnljeTVqYkdsbGJuUXVjMlZ1WkNoY2JpQWdJQ0FnSUc1bGR5QkhaWFJEY21Wa1pXNTBhV0ZzYzBadmNrbGtaVzUwYVhSNVEyOXRiV0Z1WkNoN1hHNGdJQ0FnSUNBZ0lFTjFjM1J2YlZKdmJHVkJjbTQ2SUhCaGNtRnRaWFJsY25NdVkzVnpkRzl0VW05c1pVRnliaXhjYmlBZ0lDQWdJQ0FnU1dSbGJuUnBkSGxKWkRvZ2NHRnlZVzFsZEdWeWN5NXBaR1Z1ZEdsMGVVbGtMRnh1SUNBZ0lDQWdJQ0JNYjJkcGJuTTZJSEJoY21GdFpYUmxjbk11Ykc5bmFXNXpJRDhnWVhkaGFYUWdjbVZ6YjJ4MlpVeHZaMmx1Y3lod1lYSmhiV1YwWlhKekxteHZaMmx1Y3lrZ09pQjFibVJsWm1sdVpXUXNYRzRnSUNBZ0lDQjlLVnh1SUNBZ0lDazdYRzVjYmlBZ0lDQnlaWFIxY200Z2UxeHVJQ0FnSUNBZ2FXUmxiblJwZEhsSlpEb2djR0Z5WVcxbGRHVnljeTVwWkdWdWRHbDBlVWxrTEZ4dUlDQWdJQ0FnWVdOalpYTnpTMlY1U1dRNklFRmpZMlZ6YzB0bGVVbGtMRnh1SUNBZ0lDQWdjMlZqY21WMFFXTmpaWE56UzJWNU9pQlRaV055WlhSTFpYa3NYRzRnSUNBZ0lDQnpaWE56YVc5dVZHOXJaVzQ2SUZObGMzTnBiMjVVYjJ0bGJpeGNiaUFnSUNBZ0lHVjRjR2x5WVhScGIyNDZJRVY0Y0dseVlYUnBiMjRzWEc0Z0lDQWdmVHRjYmlBZ2ZUdGNibjFjYmx4dVpYaHdiM0owSUdsdWRHVnlabUZqWlNCR2NtOXRRMjluYm1sMGIwbGtaVzUwYVhSNVVHRnlZVzFsZEdWeWN5QmxlSFJsYm1SeklFTnZaMjVwZEc5UWNtOTJhV1JsY2xCaGNtRnRaWFJsY25NZ2UxeHVJQ0F2S2lwY2JpQWdJQ29nVkdobElIVnVhWEYxWlNCcFpHVnVkR2xtYVdWeUlHWnZjaUIwYUdVZ2FXUmxiblJwZEhrZ1lXZGhhVzV6ZENCM2FHbGphQ0JqY21Wa1pXNTBhV0ZzY3lCM2FXeHNJR0psWEc0Z0lDQXFJR2x6YzNWbFpDNWNiaUFnSUNvdlhHNGdJR2xrWlc1MGFYUjVTV1E2SUhOMGNtbHVaenRjYm4xY2JseHVablZ1WTNScGIyNGdkR2h5YjNkUGJrMXBjM05wYm1kQlkyTmxjM05MWlhsSlpDZ3BPaUJ1WlhabGNpQjdYRzRnSUhSb2NtOTNJRzVsZHlCUWNtOTJhV1JsY2tWeWNtOXlLRndpVW1WemNHOXVjMlVnWm5KdmJTQkJiV0Y2YjI0Z1EyOW5ibWwwYnlCamIyNTBZV2x1WldRZ2JtOGdZV05qWlhOeklHdGxlU0JKUkZ3aUtUdGNibjFjYmx4dVpuVnVZM1JwYjI0Z2RHaHliM2RQYmsxcGMzTnBibWREY21Wa1pXNTBhV0ZzY3lncE9pQnVaWFpsY2lCN1hHNGdJSFJvY205M0lHNWxkeUJRY205MmFXUmxja1Z5Y205eUtGd2lVbVZ6Y0c5dWMyVWdabkp2YlNCQmJXRjZiMjRnUTI5bmJtbDBieUJqYjI1MFlXbHVaV1FnYm04Z1kzSmxaR1Z1ZEdsaGJITmNJaWs3WEc1OVhHNWNibVoxYm1OMGFXOXVJSFJvY205M1QyNU5hWE56YVc1blUyVmpjbVYwUzJWNUtDazZJRzVsZG1WeUlIdGNiaUFnZEdoeWIzY2dibVYzSUZCeWIzWnBaR1Z5UlhKeWIzSW9YQ0pTWlhOd2IyNXpaU0JtY205dElFRnRZWHB2YmlCRGIyZHVhWFJ2SUdOdmJuUmhhVzVsWkNCdWJ5QnpaV055WlhRZ2EyVjVYQ0lwTzF4dWZWeHVJbDE5Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/fromCognitoIdentity.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/fromCognitoIdentityPool.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/fromCognitoIdentityPool.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromCognitoIdentityPool: () => (/* binding */ fromCognitoIdentityPool)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-cognito-identity/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_client_cognito_identity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/client-cognito-identity */ \"(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/commands/GetIdCommand.js\");\n/* harmony import */ var _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/property-provider */ \"(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/index.js\");\n/* harmony import */ var _fromCognitoIdentity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./fromCognitoIdentity */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/fromCognitoIdentity.js\");\n/* harmony import */ var _localStorage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./localStorage */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/localStorage.js\");\n/* harmony import */ var _resolveLogins__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./resolveLogins */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/resolveLogins.js\");\n\n\n\n\n\n\n/**\n * Retrieves or generates a unique identifier using Amazon Cognito's `GetId`\n * operation, then generates temporary AWS credentials using Amazon Cognito's\n * `GetCredentialsForIdentity` operation.\n *\n * Results from `GetId` are cached internally, but results from\n * `GetCredentialsForIdentity` are not.\n */\nfunction fromCognitoIdentityPool(_a) {\n    var _this = this;\n    var accountId = _a.accountId, _b = _a.cache, cache = _b === void 0 ? (0,_localStorage__WEBPACK_IMPORTED_MODULE_1__.localStorage)() : _b, client = _a.client, customRoleArn = _a.customRoleArn, identityPoolId = _a.identityPoolId, logins = _a.logins, _c = _a.userIdentifier, userIdentifier = _c === void 0 ? !logins || Object.keys(logins).length === 0 ? \"ANONYMOUS\" : undefined : _c;\n    var cacheKey = userIdentifier ? \"aws:cognito-identity-credentials:\" + identityPoolId + \":\" + userIdentifier : undefined;\n    var provider = function () { return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(_this, void 0, void 0, function () {\n        var identityId, _a, _b, IdentityId, _c, _d, _e, _f;\n        var _g;\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__generator)(this, function (_h) {\n            switch (_h.label) {\n                case 0:\n                    _a = cacheKey;\n                    if (!_a) return [3 /*break*/, 2];\n                    return [4 /*yield*/, cache.getItem(cacheKey)];\n                case 1:\n                    _a = (_h.sent());\n                    _h.label = 2;\n                case 2:\n                    identityId = _a;\n                    if (!!identityId) return [3 /*break*/, 7];\n                    _d = (_c = client).send;\n                    _e = _aws_sdk_client_cognito_identity__WEBPACK_IMPORTED_MODULE_3__.GetIdCommand.bind;\n                    _g = {\n                        AccountId: accountId,\n                        IdentityPoolId: identityPoolId\n                    };\n                    if (!logins) return [3 /*break*/, 4];\n                    return [4 /*yield*/, (0,_resolveLogins__WEBPACK_IMPORTED_MODULE_4__.resolveLogins)(logins)];\n                case 3:\n                    _f = _h.sent();\n                    return [3 /*break*/, 5];\n                case 4:\n                    _f = undefined;\n                    _h.label = 5;\n                case 5: return [4 /*yield*/, _d.apply(_c, [new (_e.apply(_aws_sdk_client_cognito_identity__WEBPACK_IMPORTED_MODULE_3__.GetIdCommand, [void 0, (_g.Logins = _f,\n                                _g)]))()])];\n                case 6:\n                    _b = (_h.sent()).IdentityId, IdentityId = _b === void 0 ? throwOnMissingId() : _b;\n                    identityId = IdentityId;\n                    if (cacheKey) {\n                        Promise.resolve(cache.setItem(cacheKey, identityId)).catch(function () { });\n                    }\n                    _h.label = 7;\n                case 7:\n                    provider = (0,_fromCognitoIdentity__WEBPACK_IMPORTED_MODULE_5__.fromCognitoIdentity)({\n                        client: client,\n                        customRoleArn: customRoleArn,\n                        logins: logins,\n                        identityId: identityId,\n                    });\n                    return [2 /*return*/, provider()];\n            }\n        });\n    }); };\n    return function () {\n        return provider().catch(function (err) { return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(_this, void 0, void 0, function () {\n            return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__generator)(this, function (_a) {\n                if (cacheKey) {\n                    Promise.resolve(cache.removeItem(cacheKey)).catch(function () { });\n                }\n                throw err;\n            });\n        }); });\n    };\n}\nfunction throwOnMissingId() {\n    throw new _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__.ProviderError(\"Response from Amazon Cognito contained no identity ID\");\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbUNvZ25pdG9JZGVudGl0eVBvb2wuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZnJvbUNvZ25pdG9JZGVudGl0eVBvb2wudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUNoRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFJM0QsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDNUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUdoRDs7Ozs7OztHQU9HO0FBQ0gsTUFBTSxVQUFVLHVCQUF1QixDQUFDLEVBUUo7SUFScEMsaUJBNkNDO1FBNUNDLFNBQVMsZUFBQSxFQUNULGFBQXNCLEVBQXRCLEtBQUssbUJBQUcsWUFBWSxFQUFFLEtBQUEsRUFDdEIsTUFBTSxZQUFBLEVBQ04sYUFBYSxtQkFBQSxFQUNiLGNBQWMsb0JBQUEsRUFDZCxNQUFNLFlBQUEsRUFDTixzQkFBc0YsRUFBdEYsY0FBYyxtQkFBRyxDQUFDLE1BQU0sSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsU0FBUyxLQUFBO0lBRXRGLElBQU0sUUFBUSxHQUFHLGNBQWMsQ0FBQyxDQUFDLENBQUMsc0NBQW9DLGNBQWMsU0FBSSxjQUFnQixDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7SUFFckgsSUFBSSxRQUFRLEdBQXVCOzs7Ozs7b0JBQ2hCLEtBQUEsUUFBUSxDQUFBOzZCQUFSLHdCQUFRO29CQUFLLHFCQUFNLEtBQUssQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQUE7O29CQUE5QixLQUFBLENBQUMsU0FBNkIsQ0FBQyxDQUFBOzs7b0JBQXhELFVBQVUsS0FBOEM7eUJBQ3hELENBQUMsVUFBVSxFQUFYLHdCQUFXO29CQUNxQyxLQUFBLENBQUEsS0FBQSxNQUFNLENBQUEsQ0FBQyxJQUFJLENBQUE7eUJBQ3ZELFlBQVk7O3dCQUNkLFNBQVMsRUFBRSxTQUFTO3dCQUNwQixjQUFjLEVBQUUsY0FBYzs7eUJBQ3RCLE1BQU0sRUFBTix3QkFBTTtvQkFBRyxxQkFBTSxhQUFhLENBQUMsTUFBTSxDQUFDLEVBQUE7O29CQUEzQixLQUFBLFNBQTJCLENBQUE7OztvQkFBRyxLQUFBLFNBQVMsQ0FBQTs7d0JBSmhCLHFCQUFNLGNBQ2hELGNBQUksWUFBWSxZQUdkLFNBQU0sS0FBa0Q7d0NBQ3hELEVBQ0gsRUFBQTs7b0JBTk8sS0FBb0MsQ0FBQSxTQU0zQyxDQUFBLFdBTnNDLEVBQS9CLFVBQVUsbUJBQUcsZ0JBQWdCLEVBQUUsS0FBQTtvQkFPdkMsVUFBVSxHQUFHLFVBQVUsQ0FBQztvQkFDeEIsSUFBSSxRQUFRLEVBQUU7d0JBQ1osT0FBTyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxjQUFPLENBQUMsQ0FBQyxDQUFDO3FCQUN0RTs7O29CQUdILFFBQVEsR0FBRyxtQkFBbUIsQ0FBQzt3QkFDN0IsTUFBTSxRQUFBO3dCQUNOLGFBQWEsZUFBQTt3QkFDYixNQUFNLFFBQUE7d0JBQ04sVUFBVSxZQUFBO3FCQUNYLENBQUMsQ0FBQztvQkFFSCxzQkFBTyxRQUFRLEVBQUUsRUFBQzs7O1NBQ25CLENBQUM7SUFFRixPQUFPO1FBQ0wsT0FBQSxRQUFRLEVBQUUsQ0FBQyxLQUFLLENBQUMsVUFBTyxHQUFHOztnQkFDekIsSUFBSSxRQUFRLEVBQUU7b0JBQ1osT0FBTyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLGNBQU8sQ0FBQyxDQUFDLENBQUM7aUJBQzdEO2dCQUVELE1BQU0sR0FBRyxDQUFDOzthQUNYLENBQUM7SUFORixDQU1FLENBQUM7QUFDUCxDQUFDO0FBc0NELFNBQVMsZ0JBQWdCO0lBQ3ZCLE1BQU0sSUFBSSxhQUFhLENBQUMsdURBQXVELENBQUMsQ0FBQztBQUNuRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR2V0SWRDb21tYW5kIH0gZnJvbSBcIkBhd3Mtc2RrL2NsaWVudC1jb2duaXRvLWlkZW50aXR5XCI7XG5pbXBvcnQgeyBQcm92aWRlckVycm9yIH0gZnJvbSBcIkBhd3Mtc2RrL3Byb3BlcnR5LXByb3ZpZGVyXCI7XG5pbXBvcnQgeyBDcmVkZW50aWFsUHJvdmlkZXIgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuaW1wb3J0IHsgQ29nbml0b1Byb3ZpZGVyUGFyYW1ldGVycyB9IGZyb20gXCIuL0NvZ25pdG9Qcm92aWRlclBhcmFtZXRlcnNcIjtcbmltcG9ydCB7IGZyb21Db2duaXRvSWRlbnRpdHkgfSBmcm9tIFwiLi9mcm9tQ29nbml0b0lkZW50aXR5XCI7XG5pbXBvcnQgeyBsb2NhbFN0b3JhZ2UgfSBmcm9tIFwiLi9sb2NhbFN0b3JhZ2VcIjtcbmltcG9ydCB7IHJlc29sdmVMb2dpbnMgfSBmcm9tIFwiLi9yZXNvbHZlTG9naW5zXCI7XG5pbXBvcnQgeyBTdG9yYWdlIH0gZnJvbSBcIi4vU3RvcmFnZVwiO1xuXG4vKipcbiAqIFJldHJpZXZlcyBvciBnZW5lcmF0ZXMgYSB1bmlxdWUgaWRlbnRpZmllciB1c2luZyBBbWF6b24gQ29nbml0bydzIGBHZXRJZGBcbiAqIG9wZXJhdGlvbiwgdGhlbiBnZW5lcmF0ZXMgdGVtcG9yYXJ5IEFXUyBjcmVkZW50aWFscyB1c2luZyBBbWF6b24gQ29nbml0bydzXG4gKiBgR2V0Q3JlZGVudGlhbHNGb3JJZGVudGl0eWAgb3BlcmF0aW9uLlxuICpcbiAqIFJlc3VsdHMgZnJvbSBgR2V0SWRgIGFyZSBjYWNoZWQgaW50ZXJuYWxseSwgYnV0IHJlc3VsdHMgZnJvbVxuICogYEdldENyZWRlbnRpYWxzRm9ySWRlbnRpdHlgIGFyZSBub3QuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmcm9tQ29nbml0b0lkZW50aXR5UG9vbCh7XG4gIGFjY291bnRJZCxcbiAgY2FjaGUgPSBsb2NhbFN0b3JhZ2UoKSxcbiAgY2xpZW50LFxuICBjdXN0b21Sb2xlQXJuLFxuICBpZGVudGl0eVBvb2xJZCxcbiAgbG9naW5zLFxuICB1c2VySWRlbnRpZmllciA9ICFsb2dpbnMgfHwgT2JqZWN0LmtleXMobG9naW5zKS5sZW5ndGggPT09IDAgPyBcIkFOT05ZTU9VU1wiIDogdW5kZWZpbmVkLFxufTogRnJvbUNvZ25pdG9JZGVudGl0eVBvb2xQYXJhbWV0ZXJzKTogQ3JlZGVudGlhbFByb3ZpZGVyIHtcbiAgY29uc3QgY2FjaGVLZXkgPSB1c2VySWRlbnRpZmllciA/IGBhd3M6Y29nbml0by1pZGVudGl0eS1jcmVkZW50aWFsczoke2lkZW50aXR5UG9vbElkfToke3VzZXJJZGVudGlmaWVyfWAgOiB1bmRlZmluZWQ7XG5cbiAgbGV0IHByb3ZpZGVyOiBDcmVkZW50aWFsUHJvdmlkZXIgPSBhc3luYyAoKSA9PiB7XG4gICAgbGV0IGlkZW50aXR5SWQgPSBjYWNoZUtleSAmJiAoYXdhaXQgY2FjaGUuZ2V0SXRlbShjYWNoZUtleSkpO1xuICAgIGlmICghaWRlbnRpdHlJZCkge1xuICAgICAgY29uc3QgeyBJZGVudGl0eUlkID0gdGhyb3dPbk1pc3NpbmdJZCgpIH0gPSBhd2FpdCBjbGllbnQuc2VuZChcbiAgICAgICAgbmV3IEdldElkQ29tbWFuZCh7XG4gICAgICAgICAgQWNjb3VudElkOiBhY2NvdW50SWQsXG4gICAgICAgICAgSWRlbnRpdHlQb29sSWQ6IGlkZW50aXR5UG9vbElkLFxuICAgICAgICAgIExvZ2luczogbG9naW5zID8gYXdhaXQgcmVzb2x2ZUxvZ2lucyhsb2dpbnMpIDogdW5kZWZpbmVkLFxuICAgICAgICB9KVxuICAgICAgKTtcbiAgICAgIGlkZW50aXR5SWQgPSBJZGVudGl0eUlkO1xuICAgICAgaWYgKGNhY2hlS2V5KSB7XG4gICAgICAgIFByb21pc2UucmVzb2x2ZShjYWNoZS5zZXRJdGVtKGNhY2hlS2V5LCBpZGVudGl0eUlkKSkuY2F0Y2goKCkgPT4ge30pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHByb3ZpZGVyID0gZnJvbUNvZ25pdG9JZGVudGl0eSh7XG4gICAgICBjbGllbnQsXG4gICAgICBjdXN0b21Sb2xlQXJuLFxuICAgICAgbG9naW5zLFxuICAgICAgaWRlbnRpdHlJZCxcbiAgICB9KTtcblxuICAgIHJldHVybiBwcm92aWRlcigpO1xuICB9O1xuXG4gIHJldHVybiAoKSA9PlxuICAgIHByb3ZpZGVyKCkuY2F0Y2goYXN5bmMgKGVycikgPT4ge1xuICAgICAgaWYgKGNhY2hlS2V5KSB7XG4gICAgICAgIFByb21pc2UucmVzb2x2ZShjYWNoZS5yZW1vdmVJdGVtKGNhY2hlS2V5KSkuY2F0Y2goKCkgPT4ge30pO1xuICAgICAgfVxuXG4gICAgICB0aHJvdyBlcnI7XG4gICAgfSk7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRnJvbUNvZ25pdG9JZGVudGl0eVBvb2xQYXJhbWV0ZXJzIGV4dGVuZHMgQ29nbml0b1Byb3ZpZGVyUGFyYW1ldGVycyB7XG4gIC8qKlxuICAgKiBBIHN0YW5kYXJkIEFXUyBhY2NvdW50IElEICg5KyBkaWdpdHMpLlxuICAgKi9cbiAgYWNjb3VudElkPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBBIGNhY2hlIGluIHdoaWNoIHRvIHN0b3JlIHJlc29sdmVkIENvZ25pdG8gSWRlbnRpdHlJZHMuIElmIG5vdCBzdXBwbGllZCxcbiAgICogdGhlIGNyZWRlbnRpYWwgcHJvdmlkZXIgd2lsbCBhdHRlbXB0IHRvIHN0b3JlIElkZW50aXR5SWRzIGluIG9uZSBvZiB0aGVcbiAgICogZm9sbG93aW5nIChpbiBvcmRlciBvZiBwcmVmZXJlbmNlKTpcbiAgICogICAxLiBJbmRleGVkREJcbiAgICogICAyLiBMb2NhbFN0b3JhZ2VcbiAgICogICAzLiBBbiBpbi1tZW1vcnkgY2FjaGUgb2JqZWN0IHRoYXQgd2lsbCBub3QgcGVyc2lzdCBiZXR3ZWVuIHBhZ2VzLlxuICAgKlxuICAgKiBJbmRleGVkREIgaXMgcHJlZmVycmVkIHRvIG1heGltaXplIGRhdGEgc2hhcmluZyBiZXR3ZWVuIHRvcC1sZXZlbFxuICAgKiBicm93c2luZyBjb250ZXh0cyBhbmQgd2ViIHdvcmtlcnMuXG4gICAqXG4gICAqIFRoZSBwcm92aWRlciB3aWxsIG5vdCBjYWNoZSBJZGVudGl0eUlkcyBvZiBhdXRoZW50aWNhdGVkIHVzZXJzIHVubGVzcyBhXG4gICAqIHNlcGFyYXRlIGB1c2VySWRlbnRpdGlmZXJgIHBhcmFtZXRlciBpcyBzdXBwbGllZC5cbiAgICovXG4gIGNhY2hlPzogU3RvcmFnZTtcblxuICAvKipcbiAgICogVGhlIHVuaXF1ZSBpZGVudGlmaWVyIGZvciB0aGUgaWRlbnRpdHkgcG9vbCBmcm9tIHdoaWNoIGFuIGlkZW50aXR5IHNob3VsZFxuICAgKiBiZSByZXRyaWV2ZWQgb3IgZ2VuZXJhdGVkLlxuICAgKi9cbiAgaWRlbnRpdHlQb29sSWQ6IHN0cmluZztcblxuICAvKipcbiAgICogQSB1bmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIHVzZXIuIFRoaXMgaXMgZGlzdGluY3QgZnJvbSBhIENvZ25pdG9cbiAgICogSWRlbnRpdHlJZCBhbmQgc2hvdWxkIGluc3RlYWQgYmUgYW4gaWRlbnRpZmllciBtZWFuaW5nZnVsIHRvIHlvdXJcbiAgICogYXBwbGljYXRpb24uIFVzZWQgdG8gY2FjaGUgQ29nbml0byBJZGVudGl0eUlkcyBvbiBhIHBlci11c2VyIGJhc2lzLlxuICAgKi9cbiAgdXNlcklkZW50aWZpZXI/OiBzdHJpbmc7XG59XG5cbmZ1bmN0aW9uIHRocm93T25NaXNzaW5nSWQoKTogbmV2ZXIge1xuICB0aHJvdyBuZXcgUHJvdmlkZXJFcnJvcihcIlJlc3BvbnNlIGZyb20gQW1hem9uIENvZ25pdG8gY29udGFpbmVkIG5vIGlkZW50aXR5IElEXCIpO1xufVxuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/fromCognitoIdentityPool.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/localStorage.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/localStorage.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   localStorage: () => (/* binding */ localStorage)\n/* harmony export */ });\n/* harmony import */ var _IndexedDbStorage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./IndexedDbStorage */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/IndexedDbStorage.js\");\n/* harmony import */ var _InMemoryStorage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./InMemoryStorage */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/InMemoryStorage.js\");\n\n\nvar inMemoryStorage = new _InMemoryStorage__WEBPACK_IMPORTED_MODULE_0__.InMemoryStorage();\nfunction localStorage() {\n    if (typeof self === \"object\" && self.indexedDB) {\n        return new _IndexedDbStorage__WEBPACK_IMPORTED_MODULE_1__.IndexedDbStorage();\n    }\n    if (typeof window === \"object\" && window.localStorage) {\n        return window.localStorage;\n    }\n    return inMemoryStorage;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWxTdG9yYWdlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2xvY2FsU3RvcmFnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFHcEQsSUFBTSxlQUFlLEdBQUcsSUFBSSxlQUFlLEVBQUUsQ0FBQztBQUU5QyxNQUFNLFVBQVUsWUFBWTtJQUMxQixJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO1FBQzlDLE9BQU8sSUFBSSxnQkFBZ0IsRUFBRSxDQUFDO0tBQy9CO0lBRUQsSUFBSSxPQUFPLE1BQU0sS0FBSyxRQUFRLElBQUksTUFBTSxDQUFDLFlBQVksRUFBRTtRQUNyRCxPQUFPLE1BQU0sQ0FBQyxZQUFZLENBQUM7S0FDNUI7SUFFRCxPQUFPLGVBQWUsQ0FBQztBQUN6QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5kZXhlZERiU3RvcmFnZSB9IGZyb20gXCIuL0luZGV4ZWREYlN0b3JhZ2VcIjtcbmltcG9ydCB7IEluTWVtb3J5U3RvcmFnZSB9IGZyb20gXCIuL0luTWVtb3J5U3RvcmFnZVwiO1xuaW1wb3J0IHsgU3RvcmFnZSB9IGZyb20gXCIuL1N0b3JhZ2VcIjtcblxuY29uc3QgaW5NZW1vcnlTdG9yYWdlID0gbmV3IEluTWVtb3J5U3RvcmFnZSgpO1xuXG5leHBvcnQgZnVuY3Rpb24gbG9jYWxTdG9yYWdlKCk6IFN0b3JhZ2Uge1xuICBpZiAodHlwZW9mIHNlbGYgPT09IFwib2JqZWN0XCIgJiYgc2VsZi5pbmRleGVkREIpIHtcbiAgICByZXR1cm4gbmV3IEluZGV4ZWREYlN0b3JhZ2UoKTtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiICYmIHdpbmRvdy5sb2NhbFN0b3JhZ2UpIHtcbiAgICByZXR1cm4gd2luZG93LmxvY2FsU3RvcmFnZTtcbiAgfVxuXG4gIHJldHVybiBpbk1lbW9yeVN0b3JhZ2U7XG59XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1jb2duaXRvLWlkZW50aXR5L2Rpc3QvZXMvbG9jYWxTdG9yYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFzRDtBQUNGO0FBQ3BELDBCQUEwQiw2REFBZTtBQUNsQztBQUNQO0FBQ0EsbUJBQW1CLCtEQUFnQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NyZWRlbnRpYWwtcHJvdmlkZXItY29nbml0by1pZGVudGl0eS9kaXN0L2VzL2xvY2FsU3RvcmFnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmRleGVkRGJTdG9yYWdlIH0gZnJvbSBcIi4vSW5kZXhlZERiU3RvcmFnZVwiO1xuaW1wb3J0IHsgSW5NZW1vcnlTdG9yYWdlIH0gZnJvbSBcIi4vSW5NZW1vcnlTdG9yYWdlXCI7XG52YXIgaW5NZW1vcnlTdG9yYWdlID0gbmV3IEluTWVtb3J5U3RvcmFnZSgpO1xuZXhwb3J0IGZ1bmN0aW9uIGxvY2FsU3RvcmFnZSgpIHtcbiAgICBpZiAodHlwZW9mIHNlbGYgPT09IFwib2JqZWN0XCIgJiYgc2VsZi5pbmRleGVkREIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBJbmRleGVkRGJTdG9yYWdlKCk7XG4gICAgfVxuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiICYmIHdpbmRvdy5sb2NhbFN0b3JhZ2UpIHtcbiAgICAgICAgcmV0dXJuIHdpbmRvdy5sb2NhbFN0b3JhZ2U7XG4gICAgfVxuICAgIHJldHVybiBpbk1lbW9yeVN0b3JhZ2U7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2liRzlqWVd4VGRHOXlZV2RsTG1weklpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhNaU9sc2lMaTR2TGk0dmMzSmpMMnh2WTJGc1UzUnZjbUZuWlM1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hQUVVGUExFVkJRVVVzWjBKQlFXZENMRVZCUVVVc1RVRkJUU3h2UWtGQmIwSXNRMEZCUXp0QlFVTjBSQ3hQUVVGUExFVkJRVVVzWlVGQlpTeEZRVUZGTEUxQlFVMHNiVUpCUVcxQ0xFTkJRVU03UVVGSGNFUXNTVUZCVFN4bFFVRmxMRWRCUVVjc1NVRkJTU3hsUVVGbExFVkJRVVVzUTBGQlF6dEJRVVU1UXl4TlFVRk5MRlZCUVZVc1dVRkJXVHRKUVVNeFFpeEpRVUZKTEU5QlFVOHNTVUZCU1N4TFFVRkxMRkZCUVZFc1NVRkJTU3hKUVVGSkxFTkJRVU1zVTBGQlV5eEZRVUZGTzFGQlF6bERMRTlCUVU4c1NVRkJTU3huUWtGQlowSXNSVUZCUlN4RFFVRkRPMHRCUXk5Q08wbEJSVVFzU1VGQlNTeFBRVUZQTEUxQlFVMHNTMEZCU3l4UlFVRlJMRWxCUVVrc1RVRkJUU3hEUVVGRExGbEJRVmtzUlVGQlJUdFJRVU55UkN4UFFVRlBMRTFCUVUwc1EwRkJReXhaUVVGWkxFTkJRVU03UzBGRE5VSTdTVUZGUkN4UFFVRlBMR1ZCUVdVc1EwRkJRenRCUVVONlFpeERRVUZESWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaWFXMXdiM0owSUhzZ1NXNWtaWGhsWkVSaVUzUnZjbUZuWlNCOUlHWnliMjBnWENJdUwwbHVaR1Y0WldSRVlsTjBiM0poWjJWY0lqdGNibWx0Y0c5eWRDQjdJRWx1VFdWdGIzSjVVM1J2Y21GblpTQjlJR1p5YjIwZ1hDSXVMMGx1VFdWdGIzSjVVM1J2Y21GblpWd2lPMXh1YVcxd2IzSjBJSHNnVTNSdmNtRm5aU0I5SUdaeWIyMGdYQ0l1TDFOMGIzSmhaMlZjSWp0Y2JseHVZMjl1YzNRZ2FXNU5aVzF2Y25sVGRHOXlZV2RsSUQwZ2JtVjNJRWx1VFdWdGIzSjVVM1J2Y21GblpTZ3BPMXh1WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnYkc5allXeFRkRzl5WVdkbEtDazZJRk4wYjNKaFoyVWdlMXh1SUNCcFppQW9kSGx3Wlc5bUlITmxiR1lnUFQwOUlGd2liMkpxWldOMFhDSWdKaVlnYzJWc1ppNXBibVJsZUdWa1JFSXBJSHRjYmlBZ0lDQnlaWFIxY200Z2JtVjNJRWx1WkdWNFpXUkVZbE4wYjNKaFoyVW9LVHRjYmlBZ2ZWeHVYRzRnSUdsbUlDaDBlWEJsYjJZZ2QybHVaRzkzSUQwOVBTQmNJbTlpYW1WamRGd2lJQ1ltSUhkcGJtUnZkeTVzYjJOaGJGTjBiM0poWjJVcElIdGNiaUFnSUNCeVpYUjFjbTRnZDJsdVpHOTNMbXh2WTJGc1UzUnZjbUZuWlR0Y2JpQWdmVnh1WEc0Z0lISmxkSFZ5YmlCcGJrMWxiVzl5ZVZOMGIzSmhaMlU3WEc1OVhHNGlYWDA9Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/localStorage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/resolveLogins.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/resolveLogins.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resolveLogins: () => (/* binding */ resolveLogins)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-cognito-identity/node_modules/tslib/tslib.es6.js\");\n\n/**\n * @internal\n */\nfunction resolveLogins(logins) {\n    return Promise.all(Object.keys(logins).reduce(function (arr, name) {\n        var tokenOrProvider = logins[name];\n        if (typeof tokenOrProvider === \"string\") {\n            arr.push([name, tokenOrProvider]);\n        }\n        else {\n            arr.push(tokenOrProvider().then(function (token) { return [name, token]; }));\n        }\n        return arr;\n    }, [])).then(function (resolvedPairs) {\n        return resolvedPairs.reduce(function (logins, _a) {\n            var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__read)(_a, 2), key = _b[0], value = _b[1];\n            logins[key] = value;\n            return logins;\n        }, {});\n    });\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzb2x2ZUxvZ2lucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9yZXNvbHZlTG9naW5zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFFQTs7R0FFRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQUMsTUFBYztJQUMxQyxPQUFPLE9BQU8sQ0FBQyxHQUFHLENBQ2hCLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQUMsR0FBd0QsRUFBRSxJQUFZO1FBQ2hHLElBQU0sZUFBZSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNyQyxJQUFJLE9BQU8sZUFBZSxLQUFLLFFBQVEsRUFBRTtZQUN2QyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxFQUFFLGVBQWUsQ0FBcUIsQ0FBQyxDQUFDO1NBQ3ZEO2FBQU07WUFDTCxHQUFHLENBQUMsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFDLEtBQUssSUFBSyxPQUFBLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBcUIsRUFBakMsQ0FBaUMsQ0FBQyxDQUFDLENBQUM7U0FDaEY7UUFDRCxPQUFPLEdBQUcsQ0FBQztJQUNiLENBQUMsRUFBRSxFQUFzQyxDQUFDLENBQzNDLENBQUMsSUFBSSxDQUFDLFVBQUMsYUFBYTtRQUNuQixPQUFBLGFBQWEsQ0FBQyxNQUFNLENBQUMsVUFBQyxNQUFzQixFQUFFLEVBQVk7Z0JBQVosS0FBQSxhQUFZLEVBQVgsR0FBRyxRQUFBLEVBQUUsS0FBSyxRQUFBO1lBQ3ZELE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUM7WUFDcEIsT0FBTyxNQUFNLENBQUM7UUFDaEIsQ0FBQyxFQUFFLEVBQW9CLENBQUM7SUFIeEIsQ0FHd0IsQ0FDekIsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMb2dpbnMsIFJlc29sdmVkTG9naW5zIH0gZnJvbSBcIi4vTG9naW5zXCI7XG5cbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZXNvbHZlTG9naW5zKGxvZ2luczogTG9naW5zKTogUHJvbWlzZTxSZXNvbHZlZExvZ2lucz4ge1xuICByZXR1cm4gUHJvbWlzZS5hbGwoXG4gICAgT2JqZWN0LmtleXMobG9naW5zKS5yZWR1Y2UoKGFycjogQXJyYXk8W3N0cmluZywgc3RyaW5nXSB8IFByb21pc2U8W3N0cmluZywgc3RyaW5nXT4+LCBuYW1lOiBzdHJpbmcpID0+IHtcbiAgICAgIGNvbnN0IHRva2VuT3JQcm92aWRlciA9IGxvZ2luc1tuYW1lXTtcbiAgICAgIGlmICh0eXBlb2YgdG9rZW5PclByb3ZpZGVyID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGFyci5wdXNoKFtuYW1lLCB0b2tlbk9yUHJvdmlkZXJdIGFzIFtzdHJpbmcsIHN0cmluZ10pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYXJyLnB1c2godG9rZW5PclByb3ZpZGVyKCkudGhlbigodG9rZW4pID0+IFtuYW1lLCB0b2tlbl0gYXMgW3N0cmluZywgc3RyaW5nXSkpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGFycjtcbiAgICB9LCBbXSBhcyBBcnJheTxQcm9taXNlPFtzdHJpbmcsIHN0cmluZ10+PilcbiAgKS50aGVuKChyZXNvbHZlZFBhaXJzKSA9PlxuICAgIHJlc29sdmVkUGFpcnMucmVkdWNlKChsb2dpbnM6IFJlc29sdmVkTG9naW5zLCBba2V5LCB2YWx1ZV0pID0+IHtcbiAgICAgIGxvZ2luc1trZXldID0gdmFsdWU7XG4gICAgICByZXR1cm4gbG9naW5zO1xuICAgIH0sIHt9IGFzIFJlc29sdmVkTG9naW5zKVxuICApO1xufVxuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1jb2duaXRvLWlkZW50aXR5L2Rpc3QvZXMvcmVzb2x2ZUxvZ2lucy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtEQUErRCx1QkFBdUI7QUFDdEY7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHFCQUFxQiw2Q0FBTTtBQUMzQjtBQUNBO0FBQ0EsU0FBUyxJQUFJO0FBQ2IsS0FBSztBQUNMO0FBQ0EsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLWNvZ25pdG8taWRlbnRpdHkvZGlzdC9lcy9yZXNvbHZlTG9naW5zLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fcmVhZCB9IGZyb20gXCJ0c2xpYlwiO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlc29sdmVMb2dpbnMobG9naW5zKSB7XG4gICAgcmV0dXJuIFByb21pc2UuYWxsKE9iamVjdC5rZXlzKGxvZ2lucykucmVkdWNlKGZ1bmN0aW9uIChhcnIsIG5hbWUpIHtcbiAgICAgICAgdmFyIHRva2VuT3JQcm92aWRlciA9IGxvZ2luc1tuYW1lXTtcbiAgICAgICAgaWYgKHR5cGVvZiB0b2tlbk9yUHJvdmlkZXIgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIGFyci5wdXNoKFtuYW1lLCB0b2tlbk9yUHJvdmlkZXJdKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGFyci5wdXNoKHRva2VuT3JQcm92aWRlcigpLnRoZW4oZnVuY3Rpb24gKHRva2VuKSB7IHJldHVybiBbbmFtZSwgdG9rZW5dOyB9KSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFycjtcbiAgICB9LCBbXSkpLnRoZW4oZnVuY3Rpb24gKHJlc29sdmVkUGFpcnMpIHtcbiAgICAgICAgcmV0dXJuIHJlc29sdmVkUGFpcnMucmVkdWNlKGZ1bmN0aW9uIChsb2dpbnMsIF9hKSB7XG4gICAgICAgICAgICB2YXIgX2IgPSBfX3JlYWQoX2EsIDIpLCBrZXkgPSBfYlswXSwgdmFsdWUgPSBfYlsxXTtcbiAgICAgICAgICAgIGxvZ2luc1trZXldID0gdmFsdWU7XG4gICAgICAgICAgICByZXR1cm4gbG9naW5zO1xuICAgICAgICB9LCB7fSk7XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2ljbVZ6YjJ4MlpVeHZaMmx1Y3k1cWN5SXNJbk52ZFhKalpWSnZiM1FpT2lJaUxDSnpiM1Z5WTJWeklqcGJJaTR1THk0dUwzTnlZeTl5WlhOdmJIWmxURzluYVc1ekxuUnpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSTdRVUZGUVRzN1IwRkZSenRCUVVOSUxFMUJRVTBzVlVGQlZTeGhRVUZoTEVOQlFVTXNUVUZCWXp0SlFVTXhReXhQUVVGUExFOUJRVThzUTBGQlF5eEhRVUZITEVOQlEyaENMRTFCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTXNUVUZCVFN4RFFVRkRMRlZCUVVNc1IwRkJkMFFzUlVGQlJTeEpRVUZaTzFGQlEyaEhMRWxCUVUwc1pVRkJaU3hIUVVGSExFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0UlFVTnlReXhKUVVGSkxFOUJRVThzWlVGQlpTeExRVUZMTEZGQlFWRXNSVUZCUlR0WlFVTjJReXhIUVVGSExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNTVUZCU1N4RlFVRkZMR1ZCUVdVc1EwRkJjVUlzUTBGQlF5eERRVUZETzFOQlEzWkVPMkZCUVUwN1dVRkRUQ3hIUVVGSExFTkJRVU1zU1VGQlNTeERRVUZETEdWQlFXVXNSVUZCUlN4RFFVRkRMRWxCUVVrc1EwRkJReXhWUVVGRExFdEJRVXNzU1VGQlN5eFBRVUZCTEVOQlFVTXNTVUZCU1N4RlFVRkZMRXRCUVVzc1EwRkJjVUlzUlVGQmFrTXNRMEZCYVVNc1EwRkJReXhEUVVGRExFTkJRVU03VTBGRGFFWTdVVUZEUkN4UFFVRlBMRWRCUVVjc1EwRkJRenRKUVVOaUxFTkJRVU1zUlVGQlJTeEZRVUZ6UXl4RFFVRkRMRU5CUXpORExFTkJRVU1zU1VGQlNTeERRVUZETEZWQlFVTXNZVUZCWVR0UlFVTnVRaXhQUVVGQkxHRkJRV0VzUTBGQlF5eE5RVUZOTEVOQlFVTXNWVUZCUXl4TlFVRnpRaXhGUVVGRkxFVkJRVms3WjBKQlFWb3NTMEZCUVN4aFFVRlpMRVZCUVZnc1IwRkJSeXhSUVVGQkxFVkJRVVVzUzBGQlN5eFJRVUZCTzFsQlEzWkVMRTFCUVUwc1EwRkJReXhIUVVGSExFTkJRVU1zUjBGQlJ5eExRVUZMTEVOQlFVTTdXVUZEY0VJc1QwRkJUeXhOUVVGTkxFTkJRVU03VVVGRGFFSXNRMEZCUXl4RlFVRkZMRVZCUVc5Q0xFTkJRVU03U1VGSWVFSXNRMEZIZDBJc1EwRkRla0lzUTBGQlF6dEJRVU5LTEVOQlFVTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpwYlhCdmNuUWdleUJNYjJkcGJuTXNJRkpsYzI5c2RtVmtURzluYVc1eklIMGdabkp2YlNCY0lpNHZURzluYVc1elhDSTdYRzVjYmk4cUtseHVJQ29nUUdsdWRHVnlibUZzWEc0Z0tpOWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQnlaWE52YkhabFRHOW5hVzV6S0d4dloybHVjem9nVEc5bmFXNXpLVG9nVUhKdmJXbHpaVHhTWlhOdmJIWmxaRXh2WjJsdWN6NGdlMXh1SUNCeVpYUjFjbTRnVUhKdmJXbHpaUzVoYkd3b1hHNGdJQ0FnVDJKcVpXTjBMbXRsZVhNb2JHOW5hVzV6S1M1eVpXUjFZMlVvS0dGeWNqb2dRWEp5WVhrOFczTjBjbWx1Wnl3Z2MzUnlhVzVuWFNCOElGQnliMjFwYzJVOFczTjBjbWx1Wnl3Z2MzUnlhVzVuWFQ0K0xDQnVZVzFsT2lCemRISnBibWNwSUQwK0lIdGNiaUFnSUNBZ0lHTnZibk4wSUhSdmEyVnVUM0pRY205MmFXUmxjaUE5SUd4dloybHVjMXR1WVcxbFhUdGNiaUFnSUNBZ0lHbG1JQ2gwZVhCbGIyWWdkRzlyWlc1UGNsQnliM1pwWkdWeUlEMDlQU0JjSW5OMGNtbHVaMXdpS1NCN1hHNGdJQ0FnSUNBZ0lHRnljaTV3ZFhOb0tGdHVZVzFsTENCMGIydGxiazl5VUhKdmRtbGtaWEpkSUdGeklGdHpkSEpwYm1jc0lITjBjbWx1WjEwcE8xeHVJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ1lYSnlMbkIxYzJnb2RHOXJaVzVQY2xCeWIzWnBaR1Z5S0NrdWRHaGxiaWdvZEc5clpXNHBJRDArSUZ0dVlXMWxMQ0IwYjJ0bGJsMGdZWE1nVzNOMGNtbHVaeXdnYzNSeWFXNW5YU2twTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJQ0FnY21WMGRYSnVJR0Z5Y2p0Y2JpQWdJQ0I5TENCYlhTQmhjeUJCY25KaGVUeFFjbTl0YVhObFBGdHpkSEpwYm1jc0lITjBjbWx1WjEwK1BpbGNiaUFnS1M1MGFHVnVLQ2h5WlhOdmJIWmxaRkJoYVhKektTQTlQbHh1SUNBZ0lISmxjMjlzZG1Wa1VHRnBjbk11Y21Wa2RXTmxLQ2hzYjJkcGJuTTZJRkpsYzI5c2RtVmtURzluYVc1ekxDQmJhMlY1TENCMllXeDFaVjBwSUQwK0lIdGNiaUFnSUNBZ0lHeHZaMmx1YzF0clpYbGRJRDBnZG1Gc2RXVTdYRzRnSUNBZ0lDQnlaWFIxY200Z2JHOW5hVzV6TzF4dUlDQWdJSDBzSUh0OUlHRnpJRkpsYzI5c2RtVmtURzluYVc1ektWeHVJQ0FwTzF4dWZWeHVJbDE5Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/resolveLogins.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/credential-provider-cognito-identity/node_modules/tslib/tslib.es6.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-cognito-identity/node_modules/tslib/tslib.es6.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1jb2duaXRvLWlkZW50aXR5L25vZGVfbW9kdWxlcy90c2xpYi90c2xpYi5lczYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdCQUFnQixzQ0FBc0Msa0JBQWtCO0FBQ25GLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxpREFBaUQsT0FBTztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RCxjQUFjO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLDZDQUE2QyxRQUFRO0FBQ3JEO0FBQ0E7QUFDQTtBQUNPO0FBQ1Asb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNPO0FBQ1AsY0FBYyw2QkFBNkIsMEJBQTBCLGNBQWMscUJBQXFCO0FBQ3hHLGlCQUFpQixvREFBb0QscUVBQXFFLGNBQWM7QUFDeEosdUJBQXVCLHNCQUFzQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0M7QUFDeEMsbUNBQW1DLFNBQVM7QUFDNUMsbUNBQW1DLFdBQVcsVUFBVTtBQUN4RCwwQ0FBMEMsY0FBYztBQUN4RDtBQUNBLDhHQUE4RyxPQUFPO0FBQ3JILGlGQUFpRixpQkFBaUI7QUFDbEcseURBQXlELGdCQUFnQixRQUFRO0FBQ2pGLCtDQUErQyxnQkFBZ0IsZ0JBQWdCO0FBQy9FO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQSxVQUFVLFlBQVksYUFBYSxTQUFTLFVBQVU7QUFDdEQsb0NBQW9DLFNBQVM7QUFDN0M7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixNQUFNO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCw2QkFBNkIsc0JBQXNCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxrREFBa0QsUUFBUTtBQUMxRCx5Q0FBeUMsUUFBUTtBQUNqRCx5REFBeUQsUUFBUTtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsaUJBQWlCLHVGQUF1RixjQUFjO0FBQ3RILHVCQUF1QixnQ0FBZ0MscUNBQXFDLDJDQUEyQztBQUN2SSw0QkFBNEIsTUFBTSxpQkFBaUIsWUFBWTtBQUMvRCx1QkFBdUI7QUFDdkIsOEJBQThCO0FBQzlCLDZCQUE2QjtBQUM3Qiw0QkFBNEI7QUFDNUI7QUFDQTtBQUNPO0FBQ1A7QUFDQSxpQkFBaUIsNkNBQTZDLFVBQVUsc0RBQXNELGNBQWM7QUFDNUksMEJBQTBCLDZCQUE2QixvQkFBb0IsZ0RBQWdELGtCQUFrQjtBQUM3STtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsMkdBQTJHLHVGQUF1RixjQUFjO0FBQ2hOLHVCQUF1Qiw4QkFBOEIsZ0RBQWdELHdEQUF3RDtBQUM3Siw2Q0FBNkMsc0NBQXNDLFVBQVUsbUJBQW1CLElBQUk7QUFDcEg7QUFDQTtBQUNPO0FBQ1AsaUNBQWlDLHVDQUF1QyxZQUFZLEtBQUssT0FBTztBQUNoRztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NyZWRlbnRpYWwtcHJvdmlkZXItY29nbml0by1pZGVudGl0eS9ub2RlX21vZHVsZXMvdHNsaWIvdHNsaWIuZXM2LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5Db3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cclxuXHJcblBlcm1pc3Npb24gdG8gdXNlLCBjb3B5LCBtb2RpZnksIGFuZC9vciBkaXN0cmlidXRlIHRoaXMgc29mdHdhcmUgZm9yIGFueVxyXG5wdXJwb3NlIHdpdGggb3Igd2l0aG91dCBmZWUgaXMgaGVyZWJ5IGdyYW50ZWQuXHJcblxyXG5USEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiIEFORCBUSEUgQVVUSE9SIERJU0NMQUlNUyBBTEwgV0FSUkFOVElFUyBXSVRIXHJcblJFR0FSRCBUTyBUSElTIFNPRlRXQVJFIElOQ0xVRElORyBBTEwgSU1QTElFRCBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWVxyXG5BTkQgRklUTkVTUy4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUiBCRSBMSUFCTEUgRk9SIEFOWSBTUEVDSUFMLCBESVJFQ1QsXHJcbklORElSRUNULCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVMgT1IgQU5ZIERBTUFHRVMgV0hBVFNPRVZFUiBSRVNVTFRJTkcgRlJPTVxyXG5MT1NTIE9GIFVTRSwgREFUQSBPUiBQUk9GSVRTLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgTkVHTElHRU5DRSBPUlxyXG5PVEhFUiBUT1JUSU9VUyBBQ1RJT04sIEFSSVNJTkcgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgVVNFIE9SXHJcblBFUkZPUk1BTkNFIE9GIFRISVMgU09GVFdBUkUuXHJcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICovXHJcbi8qIGdsb2JhbCBSZWZsZWN0LCBQcm9taXNlICovXHJcblxyXG52YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uKGQsIGIpIHtcclxuICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcclxuICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XHJcbiAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XHJcbiAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxufTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2V4dGVuZHMoZCwgYikge1xyXG4gICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxuICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxyXG4gICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xyXG59XHJcblxyXG5leHBvcnQgdmFyIF9fYXNzaWduID0gZnVuY3Rpb24oKSB7XHJcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gX19hc3NpZ24odCkge1xyXG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xyXG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xyXG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpIHRbcF0gPSBzW3BdO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdDtcclxuICAgIH1cclxuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19yZXN0KHMsIGUpIHtcclxuICAgIHZhciB0ID0ge307XHJcbiAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkgJiYgZS5pbmRleE9mKHApIDwgMClcclxuICAgICAgICB0W3BdID0gc1twXTtcclxuICAgIGlmIChzICE9IG51bGwgJiYgdHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09IFwiZnVuY3Rpb25cIilcclxuICAgICAgICBmb3IgKHZhciBpID0gMCwgcCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMocyk7IGkgPCBwLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGlmIChlLmluZGV4T2YocFtpXSkgPCAwICYmIE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzLCBwW2ldKSlcclxuICAgICAgICAgICAgICAgIHRbcFtpXV0gPSBzW3BbaV1dO1xyXG4gICAgICAgIH1cclxuICAgIHJldHVybiB0O1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19kZWNvcmF0ZShkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xyXG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcclxuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSA9PT0gXCJmdW5jdGlvblwiKSByID0gUmVmbGVjdC5kZWNvcmF0ZShkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYyk7XHJcbiAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xyXG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fcGFyYW0ocGFyYW1JbmRleCwgZGVjb3JhdG9yKSB7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKHRhcmdldCwga2V5KSB7IGRlY29yYXRvcih0YXJnZXQsIGtleSwgcGFyYW1JbmRleCk7IH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fbWV0YWRhdGEobWV0YWRhdGFLZXksIG1ldGFkYXRhVmFsdWUpIHtcclxuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5tZXRhZGF0YSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gUmVmbGVjdC5tZXRhZGF0YShtZXRhZGF0YUtleSwgbWV0YWRhdGFWYWx1ZSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2F3YWl0ZXIodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XHJcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cclxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xyXG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cclxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cclxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxyXG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19nZW5lcmF0b3IodGhpc0FyZywgYm9keSkge1xyXG4gICAgdmFyIF8gPSB7IGxhYmVsOiAwLCBzZW50OiBmdW5jdGlvbigpIHsgaWYgKHRbMF0gJiAxKSB0aHJvdyB0WzFdOyByZXR1cm4gdFsxXTsgfSwgdHJ5czogW10sIG9wczogW10gfSwgZiwgeSwgdCwgZztcclxuICAgIHJldHVybiBnID0geyBuZXh0OiB2ZXJiKDApLCBcInRocm93XCI6IHZlcmIoMSksIFwicmV0dXJuXCI6IHZlcmIoMikgfSwgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIChnW1N5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXM7IH0pLCBnO1xyXG4gICAgZnVuY3Rpb24gdmVyYihuKSB7IHJldHVybiBmdW5jdGlvbiAodikgeyByZXR1cm4gc3RlcChbbiwgdl0pOyB9OyB9XHJcbiAgICBmdW5jdGlvbiBzdGVwKG9wKSB7XHJcbiAgICAgICAgaWYgKGYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBleGVjdXRpbmcuXCIpO1xyXG4gICAgICAgIHdoaWxlIChfKSB0cnkge1xyXG4gICAgICAgICAgICBpZiAoZiA9IDEsIHkgJiYgKHQgPSBvcFswXSAmIDIgPyB5W1wicmV0dXJuXCJdIDogb3BbMF0gPyB5W1widGhyb3dcIl0gfHwgKCh0ID0geVtcInJldHVyblwiXSkgJiYgdC5jYWxsKHkpLCAwKSA6IHkubmV4dCkgJiYgISh0ID0gdC5jYWxsKHksIG9wWzFdKSkuZG9uZSkgcmV0dXJuIHQ7XHJcbiAgICAgICAgICAgIGlmICh5ID0gMCwgdCkgb3AgPSBbb3BbMF0gJiAyLCB0LnZhbHVlXTtcclxuICAgICAgICAgICAgc3dpdGNoIChvcFswXSkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSAwOiBjYXNlIDE6IHQgPSBvcDsgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIDQ6IF8ubGFiZWwrKzsgcmV0dXJuIHsgdmFsdWU6IG9wWzFdLCBkb25lOiBmYWxzZSB9O1xyXG4gICAgICAgICAgICAgICAgY2FzZSA1OiBfLmxhYmVsKys7IHkgPSBvcFsxXTsgb3AgPSBbMF07IGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgY2FzZSA3OiBvcCA9IF8ub3BzLnBvcCgpOyBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICBpZiAoISh0ID0gXy50cnlzLCB0ID0gdC5sZW5ndGggPiAwICYmIHRbdC5sZW5ndGggLSAxXSkgJiYgKG9wWzBdID09PSA2IHx8IG9wWzBdID09PSAyKSkgeyBfID0gMDsgY29udGludWU7IH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDMgJiYgKCF0IHx8IChvcFsxXSA+IHRbMF0gJiYgb3BbMV0gPCB0WzNdKSkpIHsgXy5sYWJlbCA9IG9wWzFdOyBicmVhazsgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gNiAmJiBfLmxhYmVsIDwgdFsxXSkgeyBfLmxhYmVsID0gdFsxXTsgdCA9IG9wOyBicmVhazsgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0ICYmIF8ubGFiZWwgPCB0WzJdKSB7IF8ubGFiZWwgPSB0WzJdOyBfLm9wcy5wdXNoKG9wKTsgYnJlYWs7IH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAodFsyXSkgXy5vcHMucG9wKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBvcCA9IGJvZHkuY2FsbCh0aGlzQXJnLCBfKTtcclxuICAgICAgICB9IGNhdGNoIChlKSB7IG9wID0gWzYsIGVdOyB5ID0gMDsgfSBmaW5hbGx5IHsgZiA9IHQgPSAwOyB9XHJcbiAgICAgICAgaWYgKG9wWzBdICYgNSkgdGhyb3cgb3BbMV07IHJldHVybiB7IHZhbHVlOiBvcFswXSA/IG9wWzFdIDogdm9pZCAwLCBkb25lOiB0cnVlIH07XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2NyZWF0ZUJpbmRpbmcobywgbSwgaywgazIpIHtcclxuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XHJcbiAgICBvW2syXSA9IG1ba107XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2V4cG9ydFN0YXIobSwgZXhwb3J0cykge1xyXG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIWV4cG9ydHMuaGFzT3duUHJvcGVydHkocCkpIGV4cG9ydHNbcF0gPSBtW3BdO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX192YWx1ZXMobykge1xyXG4gICAgdmFyIHMgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgU3ltYm9sLml0ZXJhdG9yLCBtID0gcyAmJiBvW3NdLCBpID0gMDtcclxuICAgIGlmIChtKSByZXR1cm4gbS5jYWxsKG8pO1xyXG4gICAgaWYgKG8gJiYgdHlwZW9mIG8ubGVuZ3RoID09PSBcIm51bWJlclwiKSByZXR1cm4ge1xyXG4gICAgICAgIG5leHQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKG8gJiYgaSA+PSBvLmxlbmd0aCkgbyA9IHZvaWQgMDtcclxuICAgICAgICAgICAgcmV0dXJuIHsgdmFsdWU6IG8gJiYgb1tpKytdLCBkb25lOiAhbyB9O1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKHMgPyBcIk9iamVjdCBpcyBub3QgaXRlcmFibGUuXCIgOiBcIlN5bWJvbC5pdGVyYXRvciBpcyBub3QgZGVmaW5lZC5cIik7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX3JlYWQobywgbikge1xyXG4gICAgdmFyIG0gPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb1tTeW1ib2wuaXRlcmF0b3JdO1xyXG4gICAgaWYgKCFtKSByZXR1cm4gbztcclxuICAgIHZhciBpID0gbS5jYWxsKG8pLCByLCBhciA9IFtdLCBlO1xyXG4gICAgdHJ5IHtcclxuICAgICAgICB3aGlsZSAoKG4gPT09IHZvaWQgMCB8fCBuLS0gPiAwKSAmJiAhKHIgPSBpLm5leHQoKSkuZG9uZSkgYXIucHVzaChyLnZhbHVlKTtcclxuICAgIH1cclxuICAgIGNhdGNoIChlcnJvcikgeyBlID0geyBlcnJvcjogZXJyb3IgfTsgfVxyXG4gICAgZmluYWxseSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgaWYgKHIgJiYgIXIuZG9uZSAmJiAobSA9IGlbXCJyZXR1cm5cIl0pKSBtLmNhbGwoaSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZpbmFsbHkgeyBpZiAoZSkgdGhyb3cgZS5lcnJvcjsgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGFyO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19zcHJlYWQoKSB7XHJcbiAgICBmb3IgKHZhciBhciA9IFtdLCBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKylcclxuICAgICAgICBhciA9IGFyLmNvbmNhdChfX3JlYWQoYXJndW1lbnRzW2ldKSk7XHJcbiAgICByZXR1cm4gYXI7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX3NwcmVhZEFycmF5cygpIHtcclxuICAgIGZvciAodmFyIHMgPSAwLCBpID0gMCwgaWwgPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgaWw7IGkrKykgcyArPSBhcmd1bWVudHNbaV0ubGVuZ3RoO1xyXG4gICAgZm9yICh2YXIgciA9IEFycmF5KHMpLCBrID0gMCwgaSA9IDA7IGkgPCBpbDsgaSsrKVxyXG4gICAgICAgIGZvciAodmFyIGEgPSBhcmd1bWVudHNbaV0sIGogPSAwLCBqbCA9IGEubGVuZ3RoOyBqIDwgamw7IGorKywgaysrKVxyXG4gICAgICAgICAgICByW2tdID0gYVtqXTtcclxuICAgIHJldHVybiByO1xyXG59O1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fYXdhaXQodikge1xyXG4gICAgcmV0dXJuIHRoaXMgaW5zdGFuY2VvZiBfX2F3YWl0ID8gKHRoaXMudiA9IHYsIHRoaXMpIDogbmV3IF9fYXdhaXQodik7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2FzeW5jR2VuZXJhdG9yKHRoaXNBcmcsIF9hcmd1bWVudHMsIGdlbmVyYXRvcikge1xyXG4gICAgaWYgKCFTeW1ib2wuYXN5bmNJdGVyYXRvcikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN5bWJvbC5hc3luY0l0ZXJhdG9yIGlzIG5vdCBkZWZpbmVkLlwiKTtcclxuICAgIHZhciBnID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pLCBpLCBxID0gW107XHJcbiAgICByZXR1cm4gaSA9IHt9LCB2ZXJiKFwibmV4dFwiKSwgdmVyYihcInRocm93XCIpLCB2ZXJiKFwicmV0dXJuXCIpLCBpW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH0sIGk7XHJcbiAgICBmdW5jdGlvbiB2ZXJiKG4pIHsgaWYgKGdbbl0pIGlbbl0gPSBmdW5jdGlvbiAodikgeyByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKGEsIGIpIHsgcS5wdXNoKFtuLCB2LCBhLCBiXSkgPiAxIHx8IHJlc3VtZShuLCB2KTsgfSk7IH07IH1cclxuICAgIGZ1bmN0aW9uIHJlc3VtZShuLCB2KSB7IHRyeSB7IHN0ZXAoZ1tuXSh2KSk7IH0gY2F0Y2ggKGUpIHsgc2V0dGxlKHFbMF1bM10sIGUpOyB9IH1cclxuICAgIGZ1bmN0aW9uIHN0ZXAocikgeyByLnZhbHVlIGluc3RhbmNlb2YgX19hd2FpdCA/IFByb21pc2UucmVzb2x2ZShyLnZhbHVlLnYpLnRoZW4oZnVsZmlsbCwgcmVqZWN0KSA6IHNldHRsZShxWzBdWzJdLCByKTsgfVxyXG4gICAgZnVuY3Rpb24gZnVsZmlsbCh2YWx1ZSkgeyByZXN1bWUoXCJuZXh0XCIsIHZhbHVlKTsgfVxyXG4gICAgZnVuY3Rpb24gcmVqZWN0KHZhbHVlKSB7IHJlc3VtZShcInRocm93XCIsIHZhbHVlKTsgfVxyXG4gICAgZnVuY3Rpb24gc2V0dGxlKGYsIHYpIHsgaWYgKGYodiksIHEuc2hpZnQoKSwgcS5sZW5ndGgpIHJlc3VtZShxWzBdWzBdLCBxWzBdWzFdKTsgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19hc3luY0RlbGVnYXRvcihvKSB7XHJcbiAgICB2YXIgaSwgcDtcclxuICAgIHJldHVybiBpID0ge30sIHZlcmIoXCJuZXh0XCIpLCB2ZXJiKFwidGhyb3dcIiwgZnVuY3Rpb24gKGUpIHsgdGhyb3cgZTsgfSksIHZlcmIoXCJyZXR1cm5cIiksIGlbU3ltYm9sLml0ZXJhdG9yXSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH0sIGk7XHJcbiAgICBmdW5jdGlvbiB2ZXJiKG4sIGYpIHsgaVtuXSA9IG9bbl0gPyBmdW5jdGlvbiAodikgeyByZXR1cm4gKHAgPSAhcCkgPyB7IHZhbHVlOiBfX2F3YWl0KG9bbl0odikpLCBkb25lOiBuID09PSBcInJldHVyblwiIH0gOiBmID8gZih2KSA6IHY7IH0gOiBmOyB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2FzeW5jVmFsdWVzKG8pIHtcclxuICAgIGlmICghU3ltYm9sLmFzeW5jSXRlcmF0b3IpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTeW1ib2wuYXN5bmNJdGVyYXRvciBpcyBub3QgZGVmaW5lZC5cIik7XHJcbiAgICB2YXIgbSA9IG9bU3ltYm9sLmFzeW5jSXRlcmF0b3JdLCBpO1xyXG4gICAgcmV0dXJuIG0gPyBtLmNhbGwobykgOiAobyA9IHR5cGVvZiBfX3ZhbHVlcyA9PT0gXCJmdW5jdGlvblwiID8gX192YWx1ZXMobykgOiBvW1N5bWJvbC5pdGVyYXRvcl0oKSwgaSA9IHt9LCB2ZXJiKFwibmV4dFwiKSwgdmVyYihcInRocm93XCIpLCB2ZXJiKFwicmV0dXJuXCIpLCBpW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH0sIGkpO1xyXG4gICAgZnVuY3Rpb24gdmVyYihuKSB7IGlbbl0gPSBvW25dICYmIGZ1bmN0aW9uICh2KSB7IHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7IHYgPSBvW25dKHYpLCBzZXR0bGUocmVzb2x2ZSwgcmVqZWN0LCB2LmRvbmUsIHYudmFsdWUpOyB9KTsgfTsgfVxyXG4gICAgZnVuY3Rpb24gc2V0dGxlKHJlc29sdmUsIHJlamVjdCwgZCwgdikgeyBQcm9taXNlLnJlc29sdmUodikudGhlbihmdW5jdGlvbih2KSB7IHJlc29sdmUoeyB2YWx1ZTogdiwgZG9uZTogZCB9KTsgfSwgcmVqZWN0KTsgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19tYWtlVGVtcGxhdGVPYmplY3QoY29va2VkLCByYXcpIHtcclxuICAgIGlmIChPYmplY3QuZGVmaW5lUHJvcGVydHkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KGNvb2tlZCwgXCJyYXdcIiwgeyB2YWx1ZTogcmF3IH0pOyB9IGVsc2UgeyBjb29rZWQucmF3ID0gcmF3OyB9XHJcbiAgICByZXR1cm4gY29va2VkO1xyXG59O1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9faW1wb3J0U3Rhcihtb2QpIHtcclxuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XHJcbiAgICB2YXIgcmVzdWx0ID0ge307XHJcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoT2JqZWN0Lmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgcmVzdWx0W2tdID0gbW9kW2tdO1xyXG4gICAgcmVzdWx0LmRlZmF1bHQgPSBtb2Q7XHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19pbXBvcnREZWZhdWx0KG1vZCkge1xyXG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBkZWZhdWx0OiBtb2QgfTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fY2xhc3NQcml2YXRlRmllbGRHZXQocmVjZWl2ZXIsIHByaXZhdGVNYXApIHtcclxuICAgIGlmICghcHJpdmF0ZU1hcC5oYXMocmVjZWl2ZXIpKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcImF0dGVtcHRlZCB0byBnZXQgcHJpdmF0ZSBmaWVsZCBvbiBub24taW5zdGFuY2VcIik7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcHJpdmF0ZU1hcC5nZXQocmVjZWl2ZXIpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19jbGFzc1ByaXZhdGVGaWVsZFNldChyZWNlaXZlciwgcHJpdmF0ZU1hcCwgdmFsdWUpIHtcclxuICAgIGlmICghcHJpdmF0ZU1hcC5oYXMocmVjZWl2ZXIpKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcImF0dGVtcHRlZCB0byBzZXQgcHJpdmF0ZSBmaWVsZCBvbiBub24taW5zdGFuY2VcIik7XHJcbiAgICB9XHJcbiAgICBwcml2YXRlTWFwLnNldChyZWNlaXZlciwgdmFsdWUpO1xyXG4gICAgcmV0dXJuIHZhbHVlO1xyXG59XHJcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/credential-provider-cognito-identity/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/credential-provider-env/dist/es/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-env/dist/es/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ENV_EXPIRATION: () => (/* binding */ ENV_EXPIRATION),\n/* harmony export */   ENV_KEY: () => (/* binding */ ENV_KEY),\n/* harmony export */   ENV_SECRET: () => (/* binding */ ENV_SECRET),\n/* harmony export */   ENV_SESSION: () => (/* binding */ ENV_SESSION),\n/* harmony export */   fromEnv: () => (/* binding */ fromEnv)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/property-provider */ \"(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/index.js\");\n\nvar ENV_KEY = \"AWS_ACCESS_KEY_ID\";\nvar ENV_SECRET = \"AWS_SECRET_ACCESS_KEY\";\nvar ENV_SESSION = \"AWS_SESSION_TOKEN\";\nvar ENV_EXPIRATION = \"AWS_CREDENTIAL_EXPIRATION\";\n/**\n * Source AWS credentials from known environment variables. If either the\n * `AWS_ACCESS_KEY_ID` or `AWS_SECRET_ACCESS_KEY` environment variable is not\n * set in this process, the provider will return a rejected promise.\n */\nfunction fromEnv() {\n    return function () {\n        var accessKeyId = process.env[ENV_KEY];\n        var secretAccessKey = process.env[ENV_SECRET];\n        var expiry = process.env[ENV_EXPIRATION];\n        if (accessKeyId && secretAccessKey) {\n            return Promise.resolve({\n                accessKeyId: accessKeyId,\n                secretAccessKey: secretAccessKey,\n                sessionToken: process.env[ENV_SESSION],\n                expiration: expiry ? new Date(expiry) : undefined,\n            });\n        }\n        return Promise.reject(new _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__.ProviderError(\"Unable to find environment variable credentials.\"));\n    };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRzNELE1BQU0sQ0FBQyxJQUFNLE9BQU8sR0FBRyxtQkFBbUIsQ0FBQztBQUMzQyxNQUFNLENBQUMsSUFBTSxVQUFVLEdBQUcsdUJBQXVCLENBQUM7QUFDbEQsTUFBTSxDQUFDLElBQU0sV0FBVyxHQUFHLG1CQUFtQixDQUFDO0FBQy9DLE1BQU0sQ0FBQyxJQUFNLGNBQWMsR0FBRywyQkFBMkIsQ0FBQztBQUUxRDs7OztHQUlHO0FBQ0gsTUFBTSxVQUFVLE9BQU87SUFDckIsT0FBTztRQUNMLElBQU0sV0FBVyxHQUF1QixPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzdELElBQU0sZUFBZSxHQUF1QixPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3BFLElBQU0sTUFBTSxHQUF1QixPQUFPLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQy9ELElBQUksV0FBVyxJQUFJLGVBQWUsRUFBRTtZQUNsQyxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUM7Z0JBQ3JCLFdBQVcsYUFBQTtnQkFDWCxlQUFlLGlCQUFBO2dCQUNmLFlBQVksRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQztnQkFDdEMsVUFBVSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVM7YUFDbEQsQ0FBQyxDQUFDO1NBQ0o7UUFFRCxPQUFPLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxhQUFhLENBQUMsa0RBQWtELENBQUMsQ0FBQyxDQUFDO0lBQy9GLENBQUMsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcm92aWRlckVycm9yIH0gZnJvbSBcIkBhd3Mtc2RrL3Byb3BlcnR5LXByb3ZpZGVyXCI7XG5pbXBvcnQgeyBDcmVkZW50aWFsUHJvdmlkZXIgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuZXhwb3J0IGNvbnN0IEVOVl9LRVkgPSBcIkFXU19BQ0NFU1NfS0VZX0lEXCI7XG5leHBvcnQgY29uc3QgRU5WX1NFQ1JFVCA9IFwiQVdTX1NFQ1JFVF9BQ0NFU1NfS0VZXCI7XG5leHBvcnQgY29uc3QgRU5WX1NFU1NJT04gPSBcIkFXU19TRVNTSU9OX1RPS0VOXCI7XG5leHBvcnQgY29uc3QgRU5WX0VYUElSQVRJT04gPSBcIkFXU19DUkVERU5USUFMX0VYUElSQVRJT05cIjtcblxuLyoqXG4gKiBTb3VyY2UgQVdTIGNyZWRlbnRpYWxzIGZyb20ga25vd24gZW52aXJvbm1lbnQgdmFyaWFibGVzLiBJZiBlaXRoZXIgdGhlXG4gKiBgQVdTX0FDQ0VTU19LRVlfSURgIG9yIGBBV1NfU0VDUkVUX0FDQ0VTU19LRVlgIGVudmlyb25tZW50IHZhcmlhYmxlIGlzIG5vdFxuICogc2V0IGluIHRoaXMgcHJvY2VzcywgdGhlIHByb3ZpZGVyIHdpbGwgcmV0dXJuIGEgcmVqZWN0ZWQgcHJvbWlzZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZyb21FbnYoKTogQ3JlZGVudGlhbFByb3ZpZGVyIHtcbiAgcmV0dXJuICgpID0+IHtcbiAgICBjb25zdCBhY2Nlc3NLZXlJZDogc3RyaW5nIHwgdW5kZWZpbmVkID0gcHJvY2Vzcy5lbnZbRU5WX0tFWV07XG4gICAgY29uc3Qgc2VjcmV0QWNjZXNzS2V5OiBzdHJpbmcgfCB1bmRlZmluZWQgPSBwcm9jZXNzLmVudltFTlZfU0VDUkVUXTtcbiAgICBjb25zdCBleHBpcnk6IHN0cmluZyB8IHVuZGVmaW5lZCA9IHByb2Nlc3MuZW52W0VOVl9FWFBJUkFUSU9OXTtcbiAgICBpZiAoYWNjZXNzS2V5SWQgJiYgc2VjcmV0QWNjZXNzS2V5KSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHtcbiAgICAgICAgYWNjZXNzS2V5SWQsXG4gICAgICAgIHNlY3JldEFjY2Vzc0tleSxcbiAgICAgICAgc2Vzc2lvblRva2VuOiBwcm9jZXNzLmVudltFTlZfU0VTU0lPTl0sXG4gICAgICAgIGV4cGlyYXRpb246IGV4cGlyeSA/IG5ldyBEYXRlKGV4cGlyeSkgOiB1bmRlZmluZWQsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IFByb3ZpZGVyRXJyb3IoXCJVbmFibGUgdG8gZmluZCBlbnZpcm9ubWVudCB2YXJpYWJsZSBjcmVkZW50aWFscy5cIikpO1xuICB9O1xufVxuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1lbnYvZGlzdC9lcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMkQ7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLGtDQUFrQyxxRUFBYTtBQUMvQztBQUNBO0FBQ0EsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLWVudi9kaXN0L2VzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByb3ZpZGVyRXJyb3IgfSBmcm9tIFwiQGF3cy1zZGsvcHJvcGVydHktcHJvdmlkZXJcIjtcbmV4cG9ydCB2YXIgRU5WX0tFWSA9IFwiQVdTX0FDQ0VTU19LRVlfSURcIjtcbmV4cG9ydCB2YXIgRU5WX1NFQ1JFVCA9IFwiQVdTX1NFQ1JFVF9BQ0NFU1NfS0VZXCI7XG5leHBvcnQgdmFyIEVOVl9TRVNTSU9OID0gXCJBV1NfU0VTU0lPTl9UT0tFTlwiO1xuZXhwb3J0IHZhciBFTlZfRVhQSVJBVElPTiA9IFwiQVdTX0NSRURFTlRJQUxfRVhQSVJBVElPTlwiO1xuLyoqXG4gKiBTb3VyY2UgQVdTIGNyZWRlbnRpYWxzIGZyb20ga25vd24gZW52aXJvbm1lbnQgdmFyaWFibGVzLiBJZiBlaXRoZXIgdGhlXG4gKiBgQVdTX0FDQ0VTU19LRVlfSURgIG9yIGBBV1NfU0VDUkVUX0FDQ0VTU19LRVlgIGVudmlyb25tZW50IHZhcmlhYmxlIGlzIG5vdFxuICogc2V0IGluIHRoaXMgcHJvY2VzcywgdGhlIHByb3ZpZGVyIHdpbGwgcmV0dXJuIGEgcmVqZWN0ZWQgcHJvbWlzZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZyb21FbnYoKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFjY2Vzc0tleUlkID0gcHJvY2Vzcy5lbnZbRU5WX0tFWV07XG4gICAgICAgIHZhciBzZWNyZXRBY2Nlc3NLZXkgPSBwcm9jZXNzLmVudltFTlZfU0VDUkVUXTtcbiAgICAgICAgdmFyIGV4cGlyeSA9IHByb2Nlc3MuZW52W0VOVl9FWFBJUkFUSU9OXTtcbiAgICAgICAgaWYgKGFjY2Vzc0tleUlkICYmIHNlY3JldEFjY2Vzc0tleSkge1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh7XG4gICAgICAgICAgICAgICAgYWNjZXNzS2V5SWQ6IGFjY2Vzc0tleUlkLFxuICAgICAgICAgICAgICAgIHNlY3JldEFjY2Vzc0tleTogc2VjcmV0QWNjZXNzS2V5LFxuICAgICAgICAgICAgICAgIHNlc3Npb25Ub2tlbjogcHJvY2Vzcy5lbnZbRU5WX1NFU1NJT05dLFxuICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGV4cGlyeSA/IG5ldyBEYXRlKGV4cGlyeSkgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IFByb3ZpZGVyRXJyb3IoXCJVbmFibGUgdG8gZmluZCBlbnZpcm9ubWVudCB2YXJpYWJsZSBjcmVkZW50aWFscy5cIikpO1xuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lhVzVrWlhndWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12YVc1a1pYZ3VkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1QwRkJUeXhGUVVGRkxHRkJRV0VzUlVGQlJTeE5RVUZOTERSQ1FVRTBRaXhEUVVGRE8wRkJSek5FTEUxQlFVMHNRMEZCUXl4SlFVRk5MRTlCUVU4c1IwRkJSeXh0UWtGQmJVSXNRMEZCUXp0QlFVTXpReXhOUVVGTkxFTkJRVU1zU1VGQlRTeFZRVUZWTEVkQlFVY3NkVUpCUVhWQ0xFTkJRVU03UVVGRGJFUXNUVUZCVFN4RFFVRkRMRWxCUVUwc1YwRkJWeXhIUVVGSExHMUNRVUZ0UWl4RFFVRkRPMEZCUXk5RExFMUJRVTBzUTBGQlF5eEpRVUZOTEdOQlFXTXNSMEZCUnl3eVFrRkJNa0lzUTBGQlF6dEJRVVV4UkRzN096dEhRVWxITzBGQlEwZ3NUVUZCVFN4VlFVRlZMRTlCUVU4N1NVRkRja0lzVDBGQlR6dFJRVU5NTEVsQlFVMHNWMEZCVnl4SFFVRjFRaXhQUVVGUExFTkJRVU1zUjBGQlJ5eERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRPMUZCUXpkRUxFbEJRVTBzWlVGQlpTeEhRVUYxUWl4UFFVRlBMRU5CUVVNc1IwRkJSeXhEUVVGRExGVkJRVlVzUTBGQlF5eERRVUZETzFGQlEzQkZMRWxCUVUwc1RVRkJUU3hIUVVGMVFpeFBRVUZQTEVOQlFVTXNSMEZCUnl4RFFVRkRMR05CUVdNc1EwRkJReXhEUVVGRE8xRkJReTlFTEVsQlFVa3NWMEZCVnl4SlFVRkpMR1ZCUVdVc1JVRkJSVHRaUVVOc1F5eFBRVUZQTEU5QlFVOHNRMEZCUXl4UFFVRlBMRU5CUVVNN1owSkJRM0pDTEZkQlFWY3NZVUZCUVR0blFrRkRXQ3hsUVVGbExHbENRVUZCTzJkQ1FVTm1MRmxCUVZrc1JVRkJSU3hQUVVGUExFTkJRVU1zUjBGQlJ5eERRVUZETEZkQlFWY3NRMEZCUXp0blFrRkRkRU1zVlVGQlZTeEZRVUZGTEUxQlFVMHNRMEZCUXl4RFFVRkRMRU5CUVVNc1NVRkJTU3hKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRk5CUVZNN1lVRkRiRVFzUTBGQlF5eERRVUZETzFOQlEwbzdVVUZGUkN4UFFVRlBMRTlCUVU4c1EwRkJReXhOUVVGTkxFTkJRVU1zU1VGQlNTeGhRVUZoTEVOQlFVTXNhMFJCUVd0RUxFTkJRVU1zUTBGQlF5eERRVUZETzBsQlF5OUdMRU5CUVVNc1EwRkJRenRCUVVOS0xFTkJRVU1pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKcGJYQnZjblFnZXlCUWNtOTJhV1JsY2tWeWNtOXlJSDBnWm5KdmJTQmNJa0JoZDNNdGMyUnJMM0J5YjNCbGNuUjVMWEJ5YjNacFpHVnlYQ0k3WEc1cGJYQnZjblFnZXlCRGNtVmtaVzUwYVdGc1VISnZkbWxrWlhJZ2ZTQm1jbTl0SUZ3aVFHRjNjeTF6WkdzdmRIbHdaWE5jSWp0Y2JseHVaWGh3YjNKMElHTnZibk4wSUVWT1ZsOUxSVmtnUFNCY0lrRlhVMTlCUTBORlUxTmZTMFZaWDBsRVhDSTdYRzVsZUhCdmNuUWdZMjl1YzNRZ1JVNVdYMU5GUTFKRlZDQTlJRndpUVZkVFgxTkZRMUpGVkY5QlEwTkZVMU5mUzBWWlhDSTdYRzVsZUhCdmNuUWdZMjl1YzNRZ1JVNVdYMU5GVTFOSlQwNGdQU0JjSWtGWFUxOVRSVk5UU1U5T1gxUlBTMFZPWENJN1hHNWxlSEJ2Y25RZ1kyOXVjM1FnUlU1V1gwVllVRWxTUVZSSlQwNGdQU0JjSWtGWFUxOURVa1ZFUlU1VVNVRk1YMFZZVUVsU1FWUkpUMDVjSWp0Y2JseHVMeW9xWEc0Z0tpQlRiM1Z5WTJVZ1FWZFRJR055WldSbGJuUnBZV3h6SUdaeWIyMGdhMjV2ZDI0Z1pXNTJhWEp2Ym0xbGJuUWdkbUZ5YVdGaWJHVnpMaUJKWmlCbGFYUm9aWElnZEdobFhHNGdLaUJnUVZkVFgwRkRRMFZUVTE5TFJWbGZTVVJnSUc5eUlHQkJWMU5mVTBWRFVrVlVYMEZEUTBWVFUxOUxSVmxnSUdWdWRtbHliMjV0Wlc1MElIWmhjbWxoWW14bElHbHpJRzV2ZEZ4dUlDb2djMlYwSUdsdUlIUm9hWE1nY0hKdlkyVnpjeXdnZEdobElIQnliM1pwWkdWeUlIZHBiR3dnY21WMGRYSnVJR0VnY21WcVpXTjBaV1FnY0hKdmJXbHpaUzVjYmlBcUwxeHVaWGh3YjNKMElHWjFibU4wYVc5dUlHWnliMjFGYm5Zb0tUb2dRM0psWkdWdWRHbGhiRkJ5YjNacFpHVnlJSHRjYmlBZ2NtVjBkWEp1SUNncElEMCtJSHRjYmlBZ0lDQmpiMjV6ZENCaFkyTmxjM05MWlhsSlpEb2djM1J5YVc1bklId2dkVzVrWldacGJtVmtJRDBnY0hKdlkyVnpjeTVsYm5aYlJVNVdYMHRGV1YwN1hHNGdJQ0FnWTI5dWMzUWdjMlZqY21WMFFXTmpaWE56UzJWNU9pQnpkSEpwYm1jZ2ZDQjFibVJsWm1sdVpXUWdQU0J3Y205alpYTnpMbVZ1ZGx0RlRsWmZVMFZEVWtWVVhUdGNiaUFnSUNCamIyNXpkQ0JsZUhCcGNuazZJSE4wY21sdVp5QjhJSFZ1WkdWbWFXNWxaQ0E5SUhCeWIyTmxjM011Wlc1MlcwVk9WbDlGV0ZCSlVrRlVTVTlPWFR0Y2JpQWdJQ0JwWmlBb1lXTmpaWE56UzJWNVNXUWdKaVlnYzJWamNtVjBRV05qWlhOelMyVjVLU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdVSEp2YldselpTNXlaWE52YkhabEtIdGNiaUFnSUNBZ0lDQWdZV05qWlhOelMyVjVTV1FzWEc0Z0lDQWdJQ0FnSUhObFkzSmxkRUZqWTJWemMwdGxlU3hjYmlBZ0lDQWdJQ0FnYzJWemMybHZibFJ2YTJWdU9pQndjbTlqWlhOekxtVnVkbHRGVGxaZlUwVlRVMGxQVGwwc1hHNGdJQ0FnSUNBZ0lHVjRjR2x5WVhScGIyNDZJR1Y0Y0dseWVTQS9JRzVsZHlCRVlYUmxLR1Y0Y0dseWVTa2dPaUIxYm1SbFptbHVaV1FzWEc0Z0lDQWdJQ0I5S1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0J5WlhSMWNtNGdVSEp2YldselpTNXlaV3BsWTNRb2JtVjNJRkJ5YjNacFpHVnlSWEp5YjNJb1hDSlZibUZpYkdVZ2RHOGdabWx1WkNCbGJuWnBjbTl1YldWdWRDQjJZWEpwWVdKc1pTQmpjbVZrWlc1MGFXRnNjeTVjSWlrcE8xeHVJQ0I5TzF4dWZWeHVJbDE5Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/credential-provider-env/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/fromContainerMetadata.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-imds/dist/es/fromContainerMetadata.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ENV_CMDS_AUTH_TOKEN: () => (/* binding */ ENV_CMDS_AUTH_TOKEN),\n/* harmony export */   ENV_CMDS_FULL_URI: () => (/* binding */ ENV_CMDS_FULL_URI),\n/* harmony export */   ENV_CMDS_RELATIVE_URI: () => (/* binding */ ENV_CMDS_RELATIVE_URI),\n/* harmony export */   fromContainerMetadata: () => (/* binding */ fromContainerMetadata)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-imds/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/property-provider */ \"(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/index.js\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(url__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _remoteProvider_httpRequest__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./remoteProvider/httpRequest */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/remoteProvider/httpRequest.js\");\n/* harmony import */ var _remoteProvider_ImdsCredentials__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./remoteProvider/ImdsCredentials */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/remoteProvider/ImdsCredentials.js\");\n/* harmony import */ var _remoteProvider_RemoteProviderInit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./remoteProvider/RemoteProviderInit */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/remoteProvider/RemoteProviderInit.js\");\n/* harmony import */ var _remoteProvider_retry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./remoteProvider/retry */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/remoteProvider/retry.js\");\n\n\n\n\n\n\n\nvar ENV_CMDS_FULL_URI = \"AWS_CONTAINER_CREDENTIALS_FULL_URI\";\nvar ENV_CMDS_RELATIVE_URI = \"AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\";\nvar ENV_CMDS_AUTH_TOKEN = \"AWS_CONTAINER_AUTHORIZATION_TOKEN\";\n/**\n * Creates a credential provider that will source credentials from the ECS\n * Container Metadata Service\n */\nfunction fromContainerMetadata(init) {\n    var _this = this;\n    if (init === void 0) { init = {}; }\n    var _a = (0,_remoteProvider_RemoteProviderInit__WEBPACK_IMPORTED_MODULE_4__.providerConfigFromInit)(init), timeout = _a.timeout, maxRetries = _a.maxRetries;\n    return function () {\n        return getCmdsUri().then(function (url) {\n            return (0,_remoteProvider_retry__WEBPACK_IMPORTED_MODULE_5__.retry)(function () { return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(_this, void 0, void 0, function () {\n                var credsResponse, _a, _b;\n                return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function (_c) {\n                    switch (_c.label) {\n                        case 0:\n                            _b = (_a = JSON).parse;\n                            return [4 /*yield*/, requestFromEcsImds(timeout, url)];\n                        case 1:\n                            credsResponse = _b.apply(_a, [_c.sent()]);\n                            if (!(0,_remoteProvider_ImdsCredentials__WEBPACK_IMPORTED_MODULE_3__.isImdsCredentials)(credsResponse)) {\n                                throw new _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__.ProviderError(\"Invalid response received from instance metadata service.\");\n                            }\n                            return [2 /*return*/, (0,_remoteProvider_ImdsCredentials__WEBPACK_IMPORTED_MODULE_3__.fromImdsCredentials)(credsResponse)];\n                    }\n                });\n            }); }, maxRetries);\n        });\n    };\n}\nfunction requestFromEcsImds(timeout, options) {\n    if (process.env[ENV_CMDS_AUTH_TOKEN]) {\n        var _a = options.headers, headers = _a === void 0 ? {} : _a;\n        headers.Authorization = process.env[ENV_CMDS_AUTH_TOKEN];\n        options.headers = headers;\n    }\n    return (0,_remoteProvider_httpRequest__WEBPACK_IMPORTED_MODULE_2__.httpRequest)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, options), { timeout: timeout })).then(function (buffer) { return buffer.toString(); });\n}\nvar CMDS_IP = \"169.254.170.2\";\nvar GREENGRASS_HOSTS = {\n    localhost: true,\n    \"127.0.0.1\": true,\n};\nvar GREENGRASS_PROTOCOLS = {\n    \"http:\": true,\n    \"https:\": true,\n};\nfunction getCmdsUri() {\n    if (process.env[ENV_CMDS_RELATIVE_URI]) {\n        return Promise.resolve({\n            hostname: CMDS_IP,\n            path: process.env[ENV_CMDS_RELATIVE_URI],\n        });\n    }\n    if (process.env[ENV_CMDS_FULL_URI]) {\n        var parsed = (0,url__WEBPACK_IMPORTED_MODULE_1__.parse)(process.env[ENV_CMDS_FULL_URI]);\n        if (!parsed.hostname || !(parsed.hostname in GREENGRASS_HOSTS)) {\n            return Promise.reject(new _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__.ProviderError(parsed.hostname + \" is not a valid container metadata service hostname\", false));\n        }\n        if (!parsed.protocol || !(parsed.protocol in GREENGRASS_PROTOCOLS)) {\n            return Promise.reject(new _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__.ProviderError(parsed.protocol + \" is not a valid container metadata service protocol\", false));\n        }\n        return Promise.resolve((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, parsed), { port: parsed.port ? parseInt(parsed.port, 10) : undefined }));\n    }\n    return Promise.reject(new _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__.ProviderError(\"The container metadata credential provider cannot be used unless\" +\n        (\" the \" + ENV_CMDS_RELATIVE_URI + \" or \" + ENV_CMDS_FULL_URI + \" environment\") +\n        \" variable is set\", false));\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbUNvbnRhaW5lck1ldGFkYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2Zyb21Db250YWluZXJNZXRhZGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRzNELE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxLQUFLLENBQUM7QUFFNUIsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQzNELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQzFGLE9BQU8sRUFBRSxzQkFBc0IsRUFBc0IsTUFBTSxxQ0FBcUMsQ0FBQztBQUNqRyxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFL0MsTUFBTSxDQUFDLElBQU0saUJBQWlCLEdBQUcsb0NBQW9DLENBQUM7QUFDdEUsTUFBTSxDQUFDLElBQU0scUJBQXFCLEdBQUcsd0NBQXdDLENBQUM7QUFDOUUsTUFBTSxDQUFDLElBQU0sbUJBQW1CLEdBQUcsbUNBQW1DLENBQUM7QUFFdkU7OztHQUdHO0FBQ0gsTUFBTSxVQUFVLHFCQUFxQixDQUFDLElBQTZCO0lBQW5FLGlCQWNDO0lBZHFDLHFCQUFBLEVBQUEsU0FBNkI7SUFDM0QsSUFBQSxLQUEwQixzQkFBc0IsQ0FBQyxJQUFJLENBQUMsRUFBcEQsT0FBTyxhQUFBLEVBQUUsVUFBVSxnQkFBaUMsQ0FBQztJQUM3RCxPQUFPO1FBQ0wsT0FBTyxVQUFVLEVBQUUsQ0FBQyxJQUFJLENBQUMsVUFBQyxHQUFHO1lBQzNCLE9BQUEsS0FBSyxDQUFDOzs7Ozs0QkFDa0IsS0FBQSxDQUFBLEtBQUEsSUFBSSxDQUFBLENBQUMsS0FBSyxDQUFBOzRCQUFDLHFCQUFNLGtCQUFrQixDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUMsRUFBQTs7NEJBQWpFLGFBQWEsR0FBRyxjQUFXLFNBQXNDLEVBQUM7NEJBQ3hFLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxhQUFhLENBQUMsRUFBRTtnQ0FDckMsTUFBTSxJQUFJLGFBQWEsQ0FBQywyREFBMkQsQ0FBQyxDQUFDOzZCQUN0Rjs0QkFFRCxzQkFBTyxtQkFBbUIsQ0FBQyxhQUFhLENBQUMsRUFBQzs7O2lCQUMzQyxFQUFFLFVBQVUsQ0FBQztRQVBkLENBT2MsQ0FDZixDQUFDO0lBQ0osQ0FBQyxDQUFDO0FBQ0osQ0FBQztBQUVELFNBQVMsa0JBQWtCLENBQUMsT0FBZSxFQUFFLE9BQXVCO0lBQ2xFLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxFQUFFO1FBQzVCLElBQUEsS0FBaUIsT0FBTyxRQUFaLEVBQVosT0FBTyxtQkFBRyxFQUFFLEtBQUEsQ0FBYTtRQUNqQyxPQUFPLENBQUMsYUFBYSxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUMsQ0FBQztRQUN6RCxPQUFPLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztLQUMzQjtJQUVELE9BQU8sV0FBVyx1QkFDYixPQUFPLEtBQ1YsT0FBTyxTQUFBLElBQ1AsQ0FBQyxJQUFJLENBQUMsVUFBQyxNQUFNLElBQUssT0FBQSxNQUFNLENBQUMsUUFBUSxFQUFFLEVBQWpCLENBQWlCLENBQUMsQ0FBQztBQUN6QyxDQUFDO0FBRUQsSUFBTSxPQUFPLEdBQUcsZUFBZSxDQUFDO0FBQ2hDLElBQU0sZ0JBQWdCLEdBQUc7SUFDdkIsU0FBUyxFQUFFLElBQUk7SUFDZixXQUFXLEVBQUUsSUFBSTtDQUNsQixDQUFDO0FBQ0YsSUFBTSxvQkFBb0IsR0FBRztJQUMzQixPQUFPLEVBQUUsSUFBSTtJQUNiLFFBQVEsRUFBRSxJQUFJO0NBQ2YsQ0FBQztBQUVGLFNBQVMsVUFBVTtJQUNqQixJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUMsRUFBRTtRQUN0QyxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUM7WUFDckIsUUFBUSxFQUFFLE9BQU87WUFDakIsSUFBSSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUM7U0FDekMsQ0FBQyxDQUFDO0tBQ0o7SUFFRCxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsaUJBQWlCLENBQUMsRUFBRTtRQUNsQyxJQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBRSxDQUFDLENBQUM7UUFDdEQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLElBQUksZ0JBQWdCLENBQUMsRUFBRTtZQUM5RCxPQUFPLE9BQU8sQ0FBQyxNQUFNLENBQ25CLElBQUksYUFBYSxDQUFJLE1BQU0sQ0FBQyxRQUFRLHdEQUFxRCxFQUFFLEtBQUssQ0FBQyxDQUNsRyxDQUFDO1NBQ0g7UUFFRCxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsSUFBSSxvQkFBb0IsQ0FBQyxFQUFFO1lBQ2xFLE9BQU8sT0FBTyxDQUFDLE1BQU0sQ0FDbkIsSUFBSSxhQUFhLENBQUksTUFBTSxDQUFDLFFBQVEsd0RBQXFELEVBQUUsS0FBSyxDQUFDLENBQ2xHLENBQUM7U0FDSDtRQUVELE9BQU8sT0FBTyxDQUFDLE9BQU8sdUJBQ2pCLE1BQU0sS0FDVCxJQUFJLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsSUFDekQsQ0FBQztLQUNKO0lBRUQsT0FBTyxPQUFPLENBQUMsTUFBTSxDQUNuQixJQUFJLGFBQWEsQ0FDZixrRUFBa0U7U0FDaEUsVUFBUSxxQkFBcUIsWUFBTyxpQkFBaUIsaUJBQWMsQ0FBQTtRQUNuRSxrQkFBa0IsRUFDcEIsS0FBSyxDQUNOLENBQ0YsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcm92aWRlckVycm9yIH0gZnJvbSBcIkBhd3Mtc2RrL3Byb3BlcnR5LXByb3ZpZGVyXCI7XG5pbXBvcnQgeyBDcmVkZW50aWFsUHJvdmlkZXIgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcbmltcG9ydCB7IFJlcXVlc3RPcHRpb25zIH0gZnJvbSBcImh0dHBcIjtcbmltcG9ydCB7IHBhcnNlIH0gZnJvbSBcInVybFwiO1xuXG5pbXBvcnQgeyBodHRwUmVxdWVzdCB9IGZyb20gXCIuL3JlbW90ZVByb3ZpZGVyL2h0dHBSZXF1ZXN0XCI7XG5pbXBvcnQgeyBmcm9tSW1kc0NyZWRlbnRpYWxzLCBpc0ltZHNDcmVkZW50aWFscyB9IGZyb20gXCIuL3JlbW90ZVByb3ZpZGVyL0ltZHNDcmVkZW50aWFsc1wiO1xuaW1wb3J0IHsgcHJvdmlkZXJDb25maWdGcm9tSW5pdCwgUmVtb3RlUHJvdmlkZXJJbml0IH0gZnJvbSBcIi4vcmVtb3RlUHJvdmlkZXIvUmVtb3RlUHJvdmlkZXJJbml0XCI7XG5pbXBvcnQgeyByZXRyeSB9IGZyb20gXCIuL3JlbW90ZVByb3ZpZGVyL3JldHJ5XCI7XG5cbmV4cG9ydCBjb25zdCBFTlZfQ01EU19GVUxMX1VSSSA9IFwiQVdTX0NPTlRBSU5FUl9DUkVERU5USUFMU19GVUxMX1VSSVwiO1xuZXhwb3J0IGNvbnN0IEVOVl9DTURTX1JFTEFUSVZFX1VSSSA9IFwiQVdTX0NPTlRBSU5FUl9DUkVERU5USUFMU19SRUxBVElWRV9VUklcIjtcbmV4cG9ydCBjb25zdCBFTlZfQ01EU19BVVRIX1RPS0VOID0gXCJBV1NfQ09OVEFJTkVSX0FVVEhPUklaQVRJT05fVE9LRU5cIjtcblxuLyoqXG4gKiBDcmVhdGVzIGEgY3JlZGVudGlhbCBwcm92aWRlciB0aGF0IHdpbGwgc291cmNlIGNyZWRlbnRpYWxzIGZyb20gdGhlIEVDU1xuICogQ29udGFpbmVyIE1ldGFkYXRhIFNlcnZpY2VcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZyb21Db250YWluZXJNZXRhZGF0YShpbml0OiBSZW1vdGVQcm92aWRlckluaXQgPSB7fSk6IENyZWRlbnRpYWxQcm92aWRlciB7XG4gIGNvbnN0IHsgdGltZW91dCwgbWF4UmV0cmllcyB9ID0gcHJvdmlkZXJDb25maWdGcm9tSW5pdChpbml0KTtcbiAgcmV0dXJuICgpID0+IHtcbiAgICByZXR1cm4gZ2V0Q21kc1VyaSgpLnRoZW4oKHVybCkgPT5cbiAgICAgIHJldHJ5KGFzeW5jICgpID0+IHtcbiAgICAgICAgY29uc3QgY3JlZHNSZXNwb25zZSA9IEpTT04ucGFyc2UoYXdhaXQgcmVxdWVzdEZyb21FY3NJbWRzKHRpbWVvdXQsIHVybCkpO1xuICAgICAgICBpZiAoIWlzSW1kc0NyZWRlbnRpYWxzKGNyZWRzUmVzcG9uc2UpKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFByb3ZpZGVyRXJyb3IoXCJJbnZhbGlkIHJlc3BvbnNlIHJlY2VpdmVkIGZyb20gaW5zdGFuY2UgbWV0YWRhdGEgc2VydmljZS5cIik7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZnJvbUltZHNDcmVkZW50aWFscyhjcmVkc1Jlc3BvbnNlKTtcbiAgICAgIH0sIG1heFJldHJpZXMpXG4gICAgKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gcmVxdWVzdEZyb21FY3NJbWRzKHRpbWVvdXQ6IG51bWJlciwgb3B0aW9uczogUmVxdWVzdE9wdGlvbnMpOiBQcm9taXNlPHN0cmluZz4ge1xuICBpZiAocHJvY2Vzcy5lbnZbRU5WX0NNRFNfQVVUSF9UT0tFTl0pIHtcbiAgICBjb25zdCB7IGhlYWRlcnMgPSB7fSB9ID0gb3B0aW9ucztcbiAgICBoZWFkZXJzLkF1dGhvcml6YXRpb24gPSBwcm9jZXNzLmVudltFTlZfQ01EU19BVVRIX1RPS0VOXTtcbiAgICBvcHRpb25zLmhlYWRlcnMgPSBoZWFkZXJzO1xuICB9XG5cbiAgcmV0dXJuIGh0dHBSZXF1ZXN0KHtcbiAgICAuLi5vcHRpb25zLFxuICAgIHRpbWVvdXQsXG4gIH0pLnRoZW4oKGJ1ZmZlcikgPT4gYnVmZmVyLnRvU3RyaW5nKCkpO1xufVxuXG5jb25zdCBDTURTX0lQID0gXCIxNjkuMjU0LjE3MC4yXCI7XG5jb25zdCBHUkVFTkdSQVNTX0hPU1RTID0ge1xuICBsb2NhbGhvc3Q6IHRydWUsXG4gIFwiMTI3LjAuMC4xXCI6IHRydWUsXG59O1xuY29uc3QgR1JFRU5HUkFTU19QUk9UT0NPTFMgPSB7XG4gIFwiaHR0cDpcIjogdHJ1ZSxcbiAgXCJodHRwczpcIjogdHJ1ZSxcbn07XG5cbmZ1bmN0aW9uIGdldENtZHNVcmkoKTogUHJvbWlzZTxSZXF1ZXN0T3B0aW9ucz4ge1xuICBpZiAocHJvY2Vzcy5lbnZbRU5WX0NNRFNfUkVMQVRJVkVfVVJJXSkge1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoe1xuICAgICAgaG9zdG5hbWU6IENNRFNfSVAsXG4gICAgICBwYXRoOiBwcm9jZXNzLmVudltFTlZfQ01EU19SRUxBVElWRV9VUkldLFxuICAgIH0pO1xuICB9XG5cbiAgaWYgKHByb2Nlc3MuZW52W0VOVl9DTURTX0ZVTExfVVJJXSkge1xuICAgIGNvbnN0IHBhcnNlZCA9IHBhcnNlKHByb2Nlc3MuZW52W0VOVl9DTURTX0ZVTExfVVJJXSEpO1xuICAgIGlmICghcGFyc2VkLmhvc3RuYW1lIHx8ICEocGFyc2VkLmhvc3RuYW1lIGluIEdSRUVOR1JBU1NfSE9TVFMpKSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoXG4gICAgICAgIG5ldyBQcm92aWRlckVycm9yKGAke3BhcnNlZC5ob3N0bmFtZX0gaXMgbm90IGEgdmFsaWQgY29udGFpbmVyIG1ldGFkYXRhIHNlcnZpY2UgaG9zdG5hbWVgLCBmYWxzZSlcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKCFwYXJzZWQucHJvdG9jb2wgfHwgIShwYXJzZWQucHJvdG9jb2wgaW4gR1JFRU5HUkFTU19QUk9UT0NPTFMpKSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoXG4gICAgICAgIG5ldyBQcm92aWRlckVycm9yKGAke3BhcnNlZC5wcm90b2NvbH0gaXMgbm90IGEgdmFsaWQgY29udGFpbmVyIG1ldGFkYXRhIHNlcnZpY2UgcHJvdG9jb2xgLCBmYWxzZSlcbiAgICAgICk7XG4gICAgfVxuXG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh7XG4gICAgICAuLi5wYXJzZWQsXG4gICAgICBwb3J0OiBwYXJzZWQucG9ydCA/IHBhcnNlSW50KHBhcnNlZC5wb3J0LCAxMCkgOiB1bmRlZmluZWQsXG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gUHJvbWlzZS5yZWplY3QoXG4gICAgbmV3IFByb3ZpZGVyRXJyb3IoXG4gICAgICBcIlRoZSBjb250YWluZXIgbWV0YWRhdGEgY3JlZGVudGlhbCBwcm92aWRlciBjYW5ub3QgYmUgdXNlZCB1bmxlc3NcIiArXG4gICAgICAgIGAgdGhlICR7RU5WX0NNRFNfUkVMQVRJVkVfVVJJfSBvciAke0VOVl9DTURTX0ZVTExfVVJJfSBlbnZpcm9ubWVudGAgK1xuICAgICAgICBcIiB2YXJpYWJsZSBpcyBzZXRcIixcbiAgICAgIGZhbHNlXG4gICAgKVxuICApO1xufVxuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/fromContainerMetadata.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/fromInstanceMetadata.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-imds/dist/es/fromInstanceMetadata.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromInstanceMetadata: () => (/* binding */ fromInstanceMetadata)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-imds/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/property-provider */ \"(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/index.js\");\n/* harmony import */ var _remoteProvider_httpRequest__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./remoteProvider/httpRequest */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/remoteProvider/httpRequest.js\");\n/* harmony import */ var _remoteProvider_ImdsCredentials__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./remoteProvider/ImdsCredentials */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/remoteProvider/ImdsCredentials.js\");\n/* harmony import */ var _remoteProvider_RemoteProviderInit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./remoteProvider/RemoteProviderInit */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/remoteProvider/RemoteProviderInit.js\");\n/* harmony import */ var _remoteProvider_retry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./remoteProvider/retry */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/remoteProvider/retry.js\");\n\n\n\n\n\n\nvar IMDS_IP = \"169.254.169.254\";\nvar IMDS_PATH = \"/latest/meta-data/iam/security-credentials/\";\nvar IMDS_TOKEN_PATH = \"/latest/api/token\";\n/**\n * Creates a credential provider that will source credentials from the EC2\n * Instance Metadata Service\n */\nvar fromInstanceMetadata = function (init) {\n    if (init === void 0) { init = {}; }\n    // when set to true, metadata service will not fetch token\n    var disableFetchToken = false;\n    var _a = (0,_remoteProvider_RemoteProviderInit__WEBPACK_IMPORTED_MODULE_3__.providerConfigFromInit)(init), timeout = _a.timeout, maxRetries = _a.maxRetries;\n    var getCredentials = function (maxRetries, options) { return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(void 0, void 0, void 0, function () {\n        var profile;\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__generator)(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, (0,_remoteProvider_retry__WEBPACK_IMPORTED_MODULE_4__.retry)(function () { return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(void 0, void 0, void 0, function () {\n                        var profile, err_1;\n                        return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__generator)(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    _a.trys.push([0, 2, , 3]);\n                                    return [4 /*yield*/, getProfile(options)];\n                                case 1:\n                                    profile = _a.sent();\n                                    return [3 /*break*/, 3];\n                                case 2:\n                                    err_1 = _a.sent();\n                                    if (err_1.statusCode === 401) {\n                                        disableFetchToken = false;\n                                    }\n                                    throw err_1;\n                                case 3: return [2 /*return*/, profile];\n                            }\n                        });\n                    }); }, maxRetries)];\n                case 1:\n                    profile = (_a.sent()).trim();\n                    return [2 /*return*/, (0,_remoteProvider_retry__WEBPACK_IMPORTED_MODULE_4__.retry)(function () { return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(void 0, void 0, void 0, function () {\n                            var creds, err_2;\n                            return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__generator)(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        _a.trys.push([0, 2, , 3]);\n                                        return [4 /*yield*/, getCredentialsFromProfile(profile, options)];\n                                    case 1:\n                                        creds = _a.sent();\n                                        return [3 /*break*/, 3];\n                                    case 2:\n                                        err_2 = _a.sent();\n                                        if (err_2.statusCode === 401) {\n                                            disableFetchToken = false;\n                                        }\n                                        throw err_2;\n                                    case 3: return [2 /*return*/, creds];\n                                }\n                            });\n                        }); }, maxRetries)];\n            }\n        });\n    }); };\n    return function () { return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(void 0, void 0, void 0, function () {\n        var token, error_1;\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__generator)(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!disableFetchToken) return [3 /*break*/, 1];\n                    return [2 /*return*/, getCredentials(maxRetries, { timeout: timeout })];\n                case 1:\n                    token = void 0;\n                    _a.label = 2;\n                case 2:\n                    _a.trys.push([2, 4, , 5]);\n                    return [4 /*yield*/, getMetadataToken({ timeout: timeout })];\n                case 3:\n                    token = (_a.sent()).toString();\n                    return [3 /*break*/, 5];\n                case 4:\n                    error_1 = _a.sent();\n                    if ((error_1 === null || error_1 === void 0 ? void 0 : error_1.statusCode) === 400) {\n                        throw Object.assign(error_1, {\n                            message: \"EC2 Metadata token request returned error\",\n                        });\n                    }\n                    else if (error_1.message === \"TimeoutError\" || [403, 404, 405].includes(error_1.statusCode)) {\n                        disableFetchToken = true;\n                    }\n                    return [2 /*return*/, getCredentials(maxRetries, { timeout: timeout })];\n                case 5: return [2 /*return*/, getCredentials(maxRetries, {\n                        timeout: timeout,\n                        headers: {\n                            \"x-aws-ec2-metadata-token\": token,\n                        },\n                    })];\n            }\n        });\n    }); };\n};\nvar getMetadataToken = function (options) { return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(void 0, void 0, void 0, function () {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__generator)(this, function (_a) {\n        return [2 /*return*/, (0,_remoteProvider_httpRequest__WEBPACK_IMPORTED_MODULE_1__.httpRequest)((0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)({}, options), { host: IMDS_IP, path: IMDS_TOKEN_PATH, method: \"PUT\", headers: {\n                    \"x-aws-ec2-metadata-token-ttl-seconds\": \"21600\",\n                } }))];\n    });\n}); };\nvar getProfile = function (options) { return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(void 0, void 0, void 0, function () { return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__generator)(this, function (_a) {\n    switch (_a.label) {\n        case 0: return [4 /*yield*/, (0,_remoteProvider_httpRequest__WEBPACK_IMPORTED_MODULE_1__.httpRequest)((0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)({}, options), { host: IMDS_IP, path: IMDS_PATH }))];\n        case 1: return [2 /*return*/, (_a.sent()).toString()];\n    }\n}); }); };\nvar getCredentialsFromProfile = function (profile, options) { return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(void 0, void 0, void 0, function () {\n    var credsResponse, _a, _b;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__generator)(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _b = (_a = JSON).parse;\n                return [4 /*yield*/, (0,_remoteProvider_httpRequest__WEBPACK_IMPORTED_MODULE_1__.httpRequest)((0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)({}, options), { host: IMDS_IP, path: IMDS_PATH + profile }))];\n            case 1:\n                credsResponse = _b.apply(_a, [(_c.sent()).toString()]);\n                if (!(0,_remoteProvider_ImdsCredentials__WEBPACK_IMPORTED_MODULE_2__.isImdsCredentials)(credsResponse)) {\n                    throw new _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__.ProviderError(\"Invalid response received from instance metadata service.\");\n                }\n                return [2 /*return*/, (0,_remoteProvider_ImdsCredentials__WEBPACK_IMPORTED_MODULE_2__.fromImdsCredentials)(credsResponse)];\n        }\n    });\n}); };\n//# sourceMappingURL=data:application/json;base64,# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/fromInstanceMetadata.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-imds/dist/es/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_MAX_RETRIES: () => (/* reexport safe */ _remoteProvider_RemoteProviderInit__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_MAX_RETRIES),\n/* harmony export */   DEFAULT_TIMEOUT: () => (/* reexport safe */ _remoteProvider_RemoteProviderInit__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_TIMEOUT),\n/* harmony export */   ENV_CMDS_AUTH_TOKEN: () => (/* reexport safe */ _fromContainerMetadata__WEBPACK_IMPORTED_MODULE_0__.ENV_CMDS_AUTH_TOKEN),\n/* harmony export */   ENV_CMDS_FULL_URI: () => (/* reexport safe */ _fromContainerMetadata__WEBPACK_IMPORTED_MODULE_0__.ENV_CMDS_FULL_URI),\n/* harmony export */   ENV_CMDS_RELATIVE_URI: () => (/* reexport safe */ _fromContainerMetadata__WEBPACK_IMPORTED_MODULE_0__.ENV_CMDS_RELATIVE_URI),\n/* harmony export */   fromContainerMetadata: () => (/* reexport safe */ _fromContainerMetadata__WEBPACK_IMPORTED_MODULE_0__.fromContainerMetadata),\n/* harmony export */   fromInstanceMetadata: () => (/* reexport safe */ _fromInstanceMetadata__WEBPACK_IMPORTED_MODULE_1__.fromInstanceMetadata),\n/* harmony export */   providerConfigFromInit: () => (/* reexport safe */ _remoteProvider_RemoteProviderInit__WEBPACK_IMPORTED_MODULE_2__.providerConfigFromInit)\n/* harmony export */ });\n/* harmony import */ var _fromContainerMetadata__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fromContainerMetadata */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/fromContainerMetadata.js\");\n/* harmony import */ var _fromInstanceMetadata__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fromInstanceMetadata */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/fromInstanceMetadata.js\");\n/* harmony import */ var _remoteProvider_RemoteProviderInit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./remoteProvider/RemoteProviderInit */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/remoteProvider/RemoteProviderInit.js\");\n\n\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyx5QkFBeUIsQ0FBQztBQUN4QyxjQUFjLHdCQUF3QixDQUFDO0FBQ3ZDLGNBQWMscUNBQXFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9mcm9tQ29udGFpbmVyTWV0YWRhdGFcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Zyb21JbnN0YW5jZU1ldGFkYXRhXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9yZW1vdGVQcm92aWRlci9SZW1vdGVQcm92aWRlckluaXRcIjtcbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1pbWRzL2Rpc3QvZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDRDtBQUNhO0FBQ3BELDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1pbWRzL2Rpc3QvZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vZnJvbUNvbnRhaW5lck1ldGFkYXRhXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9mcm9tSW5zdGFuY2VNZXRhZGF0YVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vcmVtb3RlUHJvdmlkZXIvUmVtb3RlUHJvdmlkZXJJbml0XCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lhVzVrWlhndWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12YVc1a1pYZ3VkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1kwRkJZeXg1UWtGQmVVSXNRMEZCUXp0QlFVTjRReXhqUVVGakxIZENRVUYzUWl4RFFVRkRPMEZCUTNaRExHTkJRV01zY1VOQlFYRkRMRU5CUVVNaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SmxlSEJ2Y25RZ0tpQm1jbTl0SUZ3aUxpOW1jbTl0UTI5dWRHRnBibVZ5VFdWMFlXUmhkR0ZjSWp0Y2JtVjRjRzl5ZENBcUlHWnliMjBnWENJdUwyWnliMjFKYm5OMFlXNWpaVTFsZEdGa1lYUmhYQ0k3WEc1bGVIQnZjblFnS2lCbWNtOXRJRndpTGk5eVpXMXZkR1ZRY205MmFXUmxjaTlTWlcxdmRHVlFjbTkyYVdSbGNrbHVhWFJjSWp0Y2JpSmRmUT09Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/remoteProvider/ImdsCredentials.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-imds/dist/es/remoteProvider/ImdsCredentials.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromImdsCredentials: () => (/* binding */ fromImdsCredentials),\n/* harmony export */   isImdsCredentials: () => (/* binding */ isImdsCredentials)\n/* harmony export */ });\nvar isImdsCredentials = function (arg) {\n    return Boolean(arg) &&\n        typeof arg === \"object\" &&\n        typeof arg.AccessKeyId === \"string\" &&\n        typeof arg.SecretAccessKey === \"string\" &&\n        typeof arg.Token === \"string\" &&\n        typeof arg.Expiration === \"string\";\n};\nvar fromImdsCredentials = function (creds) { return ({\n    accessKeyId: creds.AccessKeyId,\n    secretAccessKey: creds.SecretAccessKey,\n    sessionToken: creds.Token,\n    expiration: new Date(creds.Expiration),\n}); };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW1kc0NyZWRlbnRpYWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JlbW90ZVByb3ZpZGVyL0ltZHNDcmVkZW50aWFscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFTQSxNQUFNLENBQUMsSUFBTSxpQkFBaUIsR0FBRyxVQUFDLEdBQVE7SUFDeEMsT0FBQSxPQUFPLENBQUMsR0FBRyxDQUFDO1FBQ1osT0FBTyxHQUFHLEtBQUssUUFBUTtRQUN2QixPQUFPLEdBQUcsQ0FBQyxXQUFXLEtBQUssUUFBUTtRQUNuQyxPQUFPLEdBQUcsQ0FBQyxlQUFlLEtBQUssUUFBUTtRQUN2QyxPQUFPLEdBQUcsQ0FBQyxLQUFLLEtBQUssUUFBUTtRQUM3QixPQUFPLEdBQUcsQ0FBQyxVQUFVLEtBQUssUUFBUTtBQUxsQyxDQUtrQyxDQUFDO0FBRXJDLE1BQU0sQ0FBQyxJQUFNLG1CQUFtQixHQUFHLFVBQUMsS0FBc0IsSUFBa0IsT0FBQSxDQUFDO0lBQzNFLFdBQVcsRUFBRSxLQUFLLENBQUMsV0FBVztJQUM5QixlQUFlLEVBQUUsS0FBSyxDQUFDLGVBQWU7SUFDdEMsWUFBWSxFQUFFLEtBQUssQ0FBQyxLQUFLO0lBQ3pCLFVBQVUsRUFBRSxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDO0NBQ3ZDLENBQUMsRUFMMEUsQ0FLMUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENyZWRlbnRpYWxzIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSW1kc0NyZWRlbnRpYWxzIHtcbiAgQWNjZXNzS2V5SWQ6IHN0cmluZztcbiAgU2VjcmV0QWNjZXNzS2V5OiBzdHJpbmc7XG4gIFRva2VuOiBzdHJpbmc7XG4gIEV4cGlyYXRpb246IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0IGlzSW1kc0NyZWRlbnRpYWxzID0gKGFyZzogYW55KTogYXJnIGlzIEltZHNDcmVkZW50aWFscyA9PlxuICBCb29sZWFuKGFyZykgJiZcbiAgdHlwZW9mIGFyZyA9PT0gXCJvYmplY3RcIiAmJlxuICB0eXBlb2YgYXJnLkFjY2Vzc0tleUlkID09PSBcInN0cmluZ1wiICYmXG4gIHR5cGVvZiBhcmcuU2VjcmV0QWNjZXNzS2V5ID09PSBcInN0cmluZ1wiICYmXG4gIHR5cGVvZiBhcmcuVG9rZW4gPT09IFwic3RyaW5nXCIgJiZcbiAgdHlwZW9mIGFyZy5FeHBpcmF0aW9uID09PSBcInN0cmluZ1wiO1xuXG5leHBvcnQgY29uc3QgZnJvbUltZHNDcmVkZW50aWFscyA9IChjcmVkczogSW1kc0NyZWRlbnRpYWxzKTogQ3JlZGVudGlhbHMgPT4gKHtcbiAgYWNjZXNzS2V5SWQ6IGNyZWRzLkFjY2Vzc0tleUlkLFxuICBzZWNyZXRBY2Nlc3NLZXk6IGNyZWRzLlNlY3JldEFjY2Vzc0tleSxcbiAgc2Vzc2lvblRva2VuOiBjcmVkcy5Ub2tlbixcbiAgZXhwaXJhdGlvbjogbmV3IERhdGUoY3JlZHMuRXhwaXJhdGlvbiksXG59KTtcbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1pbWRzL2Rpc3QvZXMvcmVtb3RlUHJvdmlkZXIvSW1kc0NyZWRlbnRpYWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDZDQUE2QztBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NyZWRlbnRpYWwtcHJvdmlkZXItaW1kcy9kaXN0L2VzL3JlbW90ZVByb3ZpZGVyL0ltZHNDcmVkZW50aWFscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIGlzSW1kc0NyZWRlbnRpYWxzID0gZnVuY3Rpb24gKGFyZykge1xuICAgIHJldHVybiBCb29sZWFuKGFyZykgJiZcbiAgICAgICAgdHlwZW9mIGFyZyA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICB0eXBlb2YgYXJnLkFjY2Vzc0tleUlkID09PSBcInN0cmluZ1wiICYmXG4gICAgICAgIHR5cGVvZiBhcmcuU2VjcmV0QWNjZXNzS2V5ID09PSBcInN0cmluZ1wiICYmXG4gICAgICAgIHR5cGVvZiBhcmcuVG9rZW4gPT09IFwic3RyaW5nXCIgJiZcbiAgICAgICAgdHlwZW9mIGFyZy5FeHBpcmF0aW9uID09PSBcInN0cmluZ1wiO1xufTtcbmV4cG9ydCB2YXIgZnJvbUltZHNDcmVkZW50aWFscyA9IGZ1bmN0aW9uIChjcmVkcykgeyByZXR1cm4gKHtcbiAgICBhY2Nlc3NLZXlJZDogY3JlZHMuQWNjZXNzS2V5SWQsXG4gICAgc2VjcmV0QWNjZXNzS2V5OiBjcmVkcy5TZWNyZXRBY2Nlc3NLZXksXG4gICAgc2Vzc2lvblRva2VuOiBjcmVkcy5Ub2tlbixcbiAgICBleHBpcmF0aW9uOiBuZXcgRGF0ZShjcmVkcy5FeHBpcmF0aW9uKSxcbn0pOyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pU1cxa2MwTnlaV1JsYm5ScFlXeHpMbXB6SWl3aWMyOTFjbU5sVW05dmRDSTZJaUlzSW5OdmRYSmpaWE1pT2xzaUxpNHZMaTR2TGk0dmMzSmpMM0psYlc5MFpWQnliM1pwWkdWeUwwbHRaSE5EY21Wa1pXNTBhV0ZzY3k1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRlRRU3hOUVVGTkxFTkJRVU1zU1VGQlRTeHBRa0ZCYVVJc1IwRkJSeXhWUVVGRExFZEJRVkU3U1VGRGVFTXNUMEZCUVN4UFFVRlBMRU5CUVVNc1IwRkJSeXhEUVVGRE8xRkJRMW9zVDBGQlR5eEhRVUZITEV0QlFVc3NVVUZCVVR0UlFVTjJRaXhQUVVGUExFZEJRVWNzUTBGQlF5eFhRVUZYTEV0QlFVc3NVVUZCVVR0UlFVTnVReXhQUVVGUExFZEJRVWNzUTBGQlF5eGxRVUZsTEV0QlFVc3NVVUZCVVR0UlFVTjJReXhQUVVGUExFZEJRVWNzUTBGQlF5eExRVUZMTEV0QlFVc3NVVUZCVVR0UlFVTTNRaXhQUVVGUExFZEJRVWNzUTBGQlF5eFZRVUZWTEV0QlFVc3NVVUZCVVR0QlFVeHNReXhEUVV0clF5eERRVUZETzBGQlJYSkRMRTFCUVUwc1EwRkJReXhKUVVGTkxHMUNRVUZ0UWl4SFFVRkhMRlZCUVVNc1MwRkJjMElzU1VGQmEwSXNUMEZCUVN4RFFVRkRPMGxCUXpORkxGZEJRVmNzUlVGQlJTeExRVUZMTEVOQlFVTXNWMEZCVnp0SlFVTTVRaXhsUVVGbExFVkJRVVVzUzBGQlN5eERRVUZETEdWQlFXVTdTVUZEZEVNc1dVRkJXU3hGUVVGRkxFdEJRVXNzUTBGQlF5eExRVUZMTzBsQlEzcENMRlZCUVZVc1JVRkJSU3hKUVVGSkxFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNWVUZCVlN4RFFVRkRPME5CUTNaRExFTkJRVU1zUlVGTU1FVXNRMEZMTVVVc1EwRkJReUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSW1sdGNHOXlkQ0I3SUVOeVpXUmxiblJwWVd4eklIMGdabkp2YlNCY0lrQmhkM010YzJSckwzUjVjR1Z6WENJN1hHNWNibVY0Y0c5eWRDQnBiblJsY21aaFkyVWdTVzFrYzBOeVpXUmxiblJwWVd4eklIdGNiaUFnUVdOalpYTnpTMlY1U1dRNklITjBjbWx1Wnp0Y2JpQWdVMlZqY21WMFFXTmpaWE56UzJWNU9pQnpkSEpwYm1jN1hHNGdJRlJ2YTJWdU9pQnpkSEpwYm1jN1hHNGdJRVY0Y0dseVlYUnBiMjQ2SUhOMGNtbHVaenRjYm4xY2JseHVaWGh3YjNKMElHTnZibk4wSUdselNXMWtjME55WldSbGJuUnBZV3h6SUQwZ0tHRnlaem9nWVc1NUtUb2dZWEpuSUdseklFbHRaSE5EY21Wa1pXNTBhV0ZzY3lBOVBseHVJQ0JDYjI5c1pXRnVLR0Z5WnlrZ0ppWmNiaUFnZEhsd1pXOW1JR0Z5WnlBOVBUMGdYQ0p2WW1wbFkzUmNJaUFtSmx4dUlDQjBlWEJsYjJZZ1lYSm5Ma0ZqWTJWemMwdGxlVWxrSUQwOVBTQmNJbk4wY21sdVoxd2lJQ1ltWEc0Z0lIUjVjR1Z2WmlCaGNtY3VVMlZqY21WMFFXTmpaWE56UzJWNUlEMDlQU0JjSW5OMGNtbHVaMXdpSUNZbVhHNGdJSFI1Y0dWdlppQmhjbWN1Vkc5clpXNGdQVDA5SUZ3aWMzUnlhVzVuWENJZ0ppWmNiaUFnZEhsd1pXOW1JR0Z5Wnk1RmVIQnBjbUYwYVc5dUlEMDlQU0JjSW5OMGNtbHVaMXdpTzF4dVhHNWxlSEJ2Y25RZ1kyOXVjM1FnWm5KdmJVbHRaSE5EY21Wa1pXNTBhV0ZzY3lBOUlDaGpjbVZrY3pvZ1NXMWtjME55WldSbGJuUnBZV3h6S1RvZ1EzSmxaR1Z1ZEdsaGJITWdQVDRnS0h0Y2JpQWdZV05qWlhOelMyVjVTV1E2SUdOeVpXUnpMa0ZqWTJWemMwdGxlVWxrTEZ4dUlDQnpaV055WlhSQlkyTmxjM05MWlhrNklHTnlaV1J6TGxObFkzSmxkRUZqWTJWemMwdGxlU3hjYmlBZ2MyVnpjMmx2YmxSdmEyVnVPaUJqY21Wa2N5NVViMnRsYml4Y2JpQWdaWGh3YVhKaGRHbHZiam9nYm1WM0lFUmhkR1VvWTNKbFpITXVSWGh3YVhKaGRHbHZiaWtzWEc1OUtUdGNiaUpkZlE9PSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/remoteProvider/ImdsCredentials.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/remoteProvider/RemoteProviderInit.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-imds/dist/es/remoteProvider/RemoteProviderInit.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_MAX_RETRIES: () => (/* binding */ DEFAULT_MAX_RETRIES),\n/* harmony export */   DEFAULT_TIMEOUT: () => (/* binding */ DEFAULT_TIMEOUT),\n/* harmony export */   providerConfigFromInit: () => (/* binding */ providerConfigFromInit)\n/* harmony export */ });\nvar DEFAULT_TIMEOUT = 1000;\n// The default in AWS SDK for Python and CLI (botocore) is no retry or one attempt\n// https://github.com/boto/botocore/blob/646c61a7065933e75bab545b785e6098bc94c081/botocore/utils.py#L273\nvar DEFAULT_MAX_RETRIES = 0;\nvar providerConfigFromInit = function (_a) {\n    var _b = _a.maxRetries, maxRetries = _b === void 0 ? DEFAULT_MAX_RETRIES : _b, _c = _a.timeout, timeout = _c === void 0 ? DEFAULT_TIMEOUT : _c;\n    return ({ maxRetries: maxRetries, timeout: timeout });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVtb3RlUHJvdmlkZXJJbml0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JlbW90ZVByb3ZpZGVyL1JlbW90ZVByb3ZpZGVySW5pdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUMsSUFBTSxlQUFlLEdBQUcsSUFBSSxDQUFDO0FBRXBDLGtGQUFrRjtBQUNsRix3R0FBd0c7QUFDeEcsTUFBTSxDQUFDLElBQU0sbUJBQW1CLEdBQUcsQ0FBQyxDQUFDO0FBZ0JyQyxNQUFNLENBQUMsSUFBTSxzQkFBc0IsR0FBRyxVQUFDLEVBR2xCO1FBRm5CLGtCQUFnQyxFQUFoQyxVQUFVLG1CQUFHLG1CQUFtQixLQUFBLEVBQ2hDLGVBQXlCLEVBQXpCLE9BQU8sbUJBQUcsZUFBZSxLQUFBO0lBQ3FCLE9BQUEsQ0FBQyxFQUFFLFVBQVUsWUFBQSxFQUFFLE9BQU8sU0FBQSxFQUFFLENBQUM7QUFBekIsQ0FBeUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBERUZBVUxUX1RJTUVPVVQgPSAxMDAwO1xuXG4vLyBUaGUgZGVmYXVsdCBpbiBBV1MgU0RLIGZvciBQeXRob24gYW5kIENMSSAoYm90b2NvcmUpIGlzIG5vIHJldHJ5IG9yIG9uZSBhdHRlbXB0XG4vLyBodHRwczovL2dpdGh1Yi5jb20vYm90by9ib3RvY29yZS9ibG9iLzY0NmM2MWE3MDY1OTMzZTc1YmFiNTQ1Yjc4NWU2MDk4YmM5NGMwODEvYm90b2NvcmUvdXRpbHMucHkjTDI3M1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfTUFYX1JFVFJJRVMgPSAwO1xuXG5leHBvcnQgaW50ZXJmYWNlIFJlbW90ZVByb3ZpZGVyQ29uZmlnIHtcbiAgLyoqXG4gICAqIFRoZSBjb25uZWN0aW9uIHRpbWVvdXQgKGluIG1pbGxpc2Vjb25kcylcbiAgICovXG4gIHRpbWVvdXQ6IG51bWJlcjtcblxuICAvKipcbiAgICogVGhlIG1heGltdW0gbnVtYmVyIG9mIHRpbWVzIHRoZSBIVFRQIGNvbm5lY3Rpb24gc2hvdWxkIGJlIHJldHJpZWRcbiAgICovXG4gIG1heFJldHJpZXM6IG51bWJlcjtcbn1cblxuZXhwb3J0IHR5cGUgUmVtb3RlUHJvdmlkZXJJbml0ID0gUGFydGlhbDxSZW1vdGVQcm92aWRlckNvbmZpZz47XG5cbmV4cG9ydCBjb25zdCBwcm92aWRlckNvbmZpZ0Zyb21Jbml0ID0gKHtcbiAgbWF4UmV0cmllcyA9IERFRkFVTFRfTUFYX1JFVFJJRVMsXG4gIHRpbWVvdXQgPSBERUZBVUxUX1RJTUVPVVQsXG59OiBSZW1vdGVQcm92aWRlckluaXQpOiBSZW1vdGVQcm92aWRlckNvbmZpZyA9PiAoeyBtYXhSZXRyaWVzLCB0aW1lb3V0IH0pO1xuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1pbWRzL2Rpc3QvZXMvcmVtb3RlUHJvdmlkZXIvUmVtb3RlUHJvdmlkZXJJbml0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPO0FBQ1A7QUFDQTtBQUNPO0FBQ0E7QUFDUDtBQUNBLGNBQWMsMENBQTBDO0FBQ3hEO0FBQ0EsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLWltZHMvZGlzdC9lcy9yZW1vdGVQcm92aWRlci9SZW1vdGVQcm92aWRlckluaXQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBERUZBVUxUX1RJTUVPVVQgPSAxMDAwO1xuLy8gVGhlIGRlZmF1bHQgaW4gQVdTIFNESyBmb3IgUHl0aG9uIGFuZCBDTEkgKGJvdG9jb3JlKSBpcyBubyByZXRyeSBvciBvbmUgYXR0ZW1wdFxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2JvdG8vYm90b2NvcmUvYmxvYi82NDZjNjFhNzA2NTkzM2U3NWJhYjU0NWI3ODVlNjA5OGJjOTRjMDgxL2JvdG9jb3JlL3V0aWxzLnB5I0wyNzNcbmV4cG9ydCB2YXIgREVGQVVMVF9NQVhfUkVUUklFUyA9IDA7XG5leHBvcnQgdmFyIHByb3ZpZGVyQ29uZmlnRnJvbUluaXQgPSBmdW5jdGlvbiAoX2EpIHtcbiAgICB2YXIgX2IgPSBfYS5tYXhSZXRyaWVzLCBtYXhSZXRyaWVzID0gX2IgPT09IHZvaWQgMCA/IERFRkFVTFRfTUFYX1JFVFJJRVMgOiBfYiwgX2MgPSBfYS50aW1lb3V0LCB0aW1lb3V0ID0gX2MgPT09IHZvaWQgMCA/IERFRkFVTFRfVElNRU9VVCA6IF9jO1xuICAgIHJldHVybiAoeyBtYXhSZXRyaWVzOiBtYXhSZXRyaWVzLCB0aW1lb3V0OiB0aW1lb3V0IH0pO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVVtVnRiM1JsVUhKdmRtbGtaWEpKYm1sMExtcHpJaXdpYzI5MWNtTmxVbTl2ZENJNklpSXNJbk52ZFhKalpYTWlPbHNpTGk0dkxpNHZMaTR2YzNKakwzSmxiVzkwWlZCeWIzWnBaR1Z5TDFKbGJXOTBaVkJ5YjNacFpHVnlTVzVwZEM1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hOUVVGTkxFTkJRVU1zU1VGQlRTeGxRVUZsTEVkQlFVY3NTVUZCU1N4RFFVRkRPMEZCUlhCRExHdEdRVUZyUmp0QlFVTnNSaXgzUjBGQmQwYzdRVUZEZUVjc1RVRkJUU3hEUVVGRExFbEJRVTBzYlVKQlFXMUNMRWRCUVVjc1EwRkJReXhEUVVGRE8wRkJaMEp5UXl4TlFVRk5MRU5CUVVNc1NVRkJUU3h6UWtGQmMwSXNSMEZCUnl4VlFVRkRMRVZCUjJ4Q08xRkJSbTVDTEd0Q1FVRm5ReXhGUVVGb1F5eFZRVUZWTEcxQ1FVRkhMRzFDUVVGdFFpeExRVUZCTEVWQlEyaERMR1ZCUVhsQ0xFVkJRWHBDTEU5QlFVOHNiVUpCUVVjc1pVRkJaU3hMUVVGQk8wbEJRM0ZDTEU5QlFVRXNRMEZCUXl4RlFVRkZMRlZCUVZVc1dVRkJRU3hGUVVGRkxFOUJRVThzVTBGQlFTeEZRVUZGTEVOQlFVTTdRVUZCZWtJc1EwRkJlVUlzUTBGQlF5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbVY0Y0c5eWRDQmpiMjV6ZENCRVJVWkJWVXhVWDFSSlRVVlBWVlFnUFNBeE1EQXdPMXh1WEc0dkx5QlVhR1VnWkdWbVlYVnNkQ0JwYmlCQlYxTWdVMFJMSUdadmNpQlFlWFJvYjI0Z1lXNWtJRU5NU1NBb1ltOTBiMk52Y21VcElHbHpJRzV2SUhKbGRISjVJRzl5SUc5dVpTQmhkSFJsYlhCMFhHNHZMeUJvZEhSd2N6b3ZMMmRwZEdoMVlpNWpiMjB2WW05MGJ5OWliM1J2WTI5eVpTOWliRzlpTHpZME5tTTJNV0UzTURZMU9UTXpaVGMxWW1GaU5UUTFZamM0TldVMk1EazRZbU01TkdNd09ERXZZbTkwYjJOdmNtVXZkWFJwYkhNdWNIa2pUREkzTTF4dVpYaHdiM0owSUdOdmJuTjBJRVJGUmtGVlRGUmZUVUZZWDFKRlZGSkpSVk1nUFNBd08xeHVYRzVsZUhCdmNuUWdhVzUwWlhKbVlXTmxJRkpsYlc5MFpWQnliM1pwWkdWeVEyOXVabWxuSUh0Y2JpQWdMeW9xWEc0Z0lDQXFJRlJvWlNCamIyNXVaV04wYVc5dUlIUnBiV1Z2ZFhRZ0tHbHVJRzFwYkd4cGMyVmpiMjVrY3lsY2JpQWdJQ292WEc0Z0lIUnBiV1Z2ZFhRNklHNTFiV0psY2p0Y2JseHVJQ0F2S2lwY2JpQWdJQ29nVkdobElHMWhlR2x0ZFcwZ2JuVnRZbVZ5SUc5bUlIUnBiV1Z6SUhSb1pTQklWRlJRSUdOdmJtNWxZM1JwYjI0Z2MyaHZkV3hrSUdKbElISmxkSEpwWldSY2JpQWdJQ292WEc0Z0lHMWhlRkpsZEhKcFpYTTZJRzUxYldKbGNqdGNibjFjYmx4dVpYaHdiM0owSUhSNWNHVWdVbVZ0YjNSbFVISnZkbWxrWlhKSmJtbDBJRDBnVUdGeWRHbGhiRHhTWlcxdmRHVlFjbTkyYVdSbGNrTnZibVpwWno0N1hHNWNibVY0Y0c5eWRDQmpiMjV6ZENCd2NtOTJhV1JsY2tOdmJtWnBaMFp5YjIxSmJtbDBJRDBnS0h0Y2JpQWdiV0Y0VW1WMGNtbGxjeUE5SUVSRlJrRlZURlJmVFVGWVgxSkZWRkpKUlZNc1hHNGdJSFJwYldWdmRYUWdQU0JFUlVaQlZVeFVYMVJKVFVWUFZWUXNYRzU5T2lCU1pXMXZkR1ZRY205MmFXUmxja2x1YVhRcE9pQlNaVzF2ZEdWUWNtOTJhV1JsY2tOdmJtWnBaeUE5UGlBb2V5QnRZWGhTWlhSeWFXVnpMQ0IwYVcxbGIzVjBJSDBwTzF4dUlsMTkiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/remoteProvider/RemoteProviderInit.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/remoteProvider/httpRequest.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-imds/dist/es/remoteProvider/httpRequest.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   httpRequest: () => (/* binding */ httpRequest)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-imds/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/property-provider */ \"(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/index.js\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(http__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\n/**\n * @internal\n */\nfunction httpRequest(options) {\n    return new Promise(function (resolve, reject) {\n        var req = (0,http__WEBPACK_IMPORTED_MODULE_2__.request)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({ method: \"GET\" }, options));\n        req.on(\"error\", function (err) {\n            reject(Object.assign(new _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__.ProviderError(\"Unable to connect to instance metadata service\"), err));\n        });\n        req.on(\"timeout\", function () {\n            reject(new Error(\"TimeoutError\"));\n        });\n        req.on(\"response\", function (res) {\n            var _a = res.statusCode, statusCode = _a === void 0 ? 400 : _a;\n            if (statusCode < 200 || 300 <= statusCode) {\n                reject(Object.assign(new _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__.ProviderError(\"Error response received from instance metadata service\"), { statusCode: statusCode }));\n            }\n            var chunks = [];\n            res.on(\"data\", function (chunk) {\n                chunks.push(chunk);\n            });\n            res.on(\"end\", function () {\n                resolve(buffer__WEBPACK_IMPORTED_MODULE_1__.Buffer.concat(chunks));\n            });\n        });\n        req.end();\n    });\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cFJlcXVlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcmVtb3RlUHJvdmlkZXIvaHR0cFJlcXVlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQ2hDLE9BQU8sRUFBbUIsT0FBTyxFQUFrQixNQUFNLE1BQU0sQ0FBQztBQUVoRTs7R0FFRztBQUNILE1BQU0sVUFBVSxXQUFXLENBQUMsT0FBdUI7SUFDakQsT0FBTyxJQUFJLE9BQU8sQ0FBQyxVQUFDLE9BQU8sRUFBRSxNQUFNO1FBQ2pDLElBQU0sR0FBRyxHQUFHLE9BQU8sWUFBRyxNQUFNLEVBQUUsS0FBSyxJQUFLLE9BQU8sRUFBRyxDQUFDO1FBRW5ELEdBQUcsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLFVBQUMsR0FBRztZQUNsQixNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLGFBQWEsQ0FBQyxnREFBZ0QsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDbEcsQ0FBQyxDQUFDLENBQUM7UUFFSCxHQUFHLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRTtZQUNoQixNQUFNLENBQUMsSUFBSSxLQUFLLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztRQUNwQyxDQUFDLENBQUMsQ0FBQztRQUVILEdBQUcsQ0FBQyxFQUFFLENBQUMsVUFBVSxFQUFFLFVBQUMsR0FBb0I7WUFDOUIsSUFBQSxLQUFxQixHQUFHLFdBQVIsRUFBaEIsVUFBVSxtQkFBRyxHQUFHLEtBQUEsQ0FBUztZQUNqQyxJQUFJLFVBQVUsR0FBRyxHQUFHLElBQUksR0FBRyxJQUFJLFVBQVUsRUFBRTtnQkFDekMsTUFBTSxDQUNKLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxhQUFhLENBQUMsd0RBQXdELENBQUMsRUFBRSxFQUFFLFVBQVUsWUFBQSxFQUFFLENBQUMsQ0FDM0csQ0FBQzthQUNIO1lBRUQsSUFBTSxNQUFNLEdBQWtCLEVBQUUsQ0FBQztZQUNqQyxHQUFHLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRSxVQUFDLEtBQUs7Z0JBQ25CLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBZSxDQUFDLENBQUM7WUFDL0IsQ0FBQyxDQUFDLENBQUM7WUFDSCxHQUFHLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRTtnQkFDWixPQUFPLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ2pDLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7UUFFSCxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDWixDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcm92aWRlckVycm9yIH0gZnJvbSBcIkBhd3Mtc2RrL3Byb3BlcnR5LXByb3ZpZGVyXCI7XG5pbXBvcnQgeyBCdWZmZXIgfSBmcm9tIFwiYnVmZmVyXCI7XG5pbXBvcnQgeyBJbmNvbWluZ01lc3NhZ2UsIHJlcXVlc3QsIFJlcXVlc3RPcHRpb25zIH0gZnJvbSBcImh0dHBcIjtcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGh0dHBSZXF1ZXN0KG9wdGlvbnM6IFJlcXVlc3RPcHRpb25zKTogUHJvbWlzZTxCdWZmZXI+IHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBjb25zdCByZXEgPSByZXF1ZXN0KHsgbWV0aG9kOiBcIkdFVFwiLCAuLi5vcHRpb25zIH0pO1xuXG4gICAgcmVxLm9uKFwiZXJyb3JcIiwgKGVycikgPT4ge1xuICAgICAgcmVqZWN0KE9iamVjdC5hc3NpZ24obmV3IFByb3ZpZGVyRXJyb3IoXCJVbmFibGUgdG8gY29ubmVjdCB0byBpbnN0YW5jZSBtZXRhZGF0YSBzZXJ2aWNlXCIpLCBlcnIpKTtcbiAgICB9KTtcblxuICAgIHJlcS5vbihcInRpbWVvdXRcIiwgKCkgPT4ge1xuICAgICAgcmVqZWN0KG5ldyBFcnJvcihcIlRpbWVvdXRFcnJvclwiKSk7XG4gICAgfSk7XG5cbiAgICByZXEub24oXCJyZXNwb25zZVwiLCAocmVzOiBJbmNvbWluZ01lc3NhZ2UpID0+IHtcbiAgICAgIGNvbnN0IHsgc3RhdHVzQ29kZSA9IDQwMCB9ID0gcmVzO1xuICAgICAgaWYgKHN0YXR1c0NvZGUgPCAyMDAgfHwgMzAwIDw9IHN0YXR1c0NvZGUpIHtcbiAgICAgICAgcmVqZWN0KFxuICAgICAgICAgIE9iamVjdC5hc3NpZ24obmV3IFByb3ZpZGVyRXJyb3IoXCJFcnJvciByZXNwb25zZSByZWNlaXZlZCBmcm9tIGluc3RhbmNlIG1ldGFkYXRhIHNlcnZpY2VcIiksIHsgc3RhdHVzQ29kZSB9KVxuICAgICAgICApO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBjaHVua3M6IEFycmF5PEJ1ZmZlcj4gPSBbXTtcbiAgICAgIHJlcy5vbihcImRhdGFcIiwgKGNodW5rKSA9PiB7XG4gICAgICAgIGNodW5rcy5wdXNoKGNodW5rIGFzIEJ1ZmZlcik7XG4gICAgICB9KTtcbiAgICAgIHJlcy5vbihcImVuZFwiLCAoKSA9PiB7XG4gICAgICAgIHJlc29sdmUoQnVmZmVyLmNvbmNhdChjaHVua3MpKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgcmVxLmVuZCgpO1xuICB9KTtcbn1cbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1pbWRzL2Rpc3QvZXMvcmVtb3RlUHJvdmlkZXIvaHR0cFJlcXVlc3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFpQztBQUMwQjtBQUMzQjtBQUNEO0FBQy9CO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxrQkFBa0IsNkNBQU8sQ0FBQywrQ0FBUSxHQUFHLGVBQWU7QUFDcEQ7QUFDQSxxQ0FBcUMscUVBQWE7QUFDbEQsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLHFFQUFhLDhEQUE4RCx3QkFBd0I7QUFDNUk7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSx3QkFBd0IsMENBQU07QUFDOUIsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBLDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1pbWRzL2Rpc3QvZXMvcmVtb3RlUHJvdmlkZXIvaHR0cFJlcXVlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19hc3NpZ24gfSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IFByb3ZpZGVyRXJyb3IgfSBmcm9tIFwiQGF3cy1zZGsvcHJvcGVydHktcHJvdmlkZXJcIjtcbmltcG9ydCB7IEJ1ZmZlciB9IGZyb20gXCJidWZmZXJcIjtcbmltcG9ydCB7IHJlcXVlc3QgfSBmcm9tIFwiaHR0cFwiO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGh0dHBSZXF1ZXN0KG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICB2YXIgcmVxID0gcmVxdWVzdChfX2Fzc2lnbih7IG1ldGhvZDogXCJHRVRcIiB9LCBvcHRpb25zKSk7XG4gICAgICAgIHJlcS5vbihcImVycm9yXCIsIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgIHJlamVjdChPYmplY3QuYXNzaWduKG5ldyBQcm92aWRlckVycm9yKFwiVW5hYmxlIHRvIGNvbm5lY3QgdG8gaW5zdGFuY2UgbWV0YWRhdGEgc2VydmljZVwiKSwgZXJyKSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXEub24oXCJ0aW1lb3V0XCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoXCJUaW1lb3V0RXJyb3JcIikpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmVxLm9uKFwicmVzcG9uc2VcIiwgZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgdmFyIF9hID0gcmVzLnN0YXR1c0NvZGUsIHN0YXR1c0NvZGUgPSBfYSA9PT0gdm9pZCAwID8gNDAwIDogX2E7XG4gICAgICAgICAgICBpZiAoc3RhdHVzQ29kZSA8IDIwMCB8fCAzMDAgPD0gc3RhdHVzQ29kZSkge1xuICAgICAgICAgICAgICAgIHJlamVjdChPYmplY3QuYXNzaWduKG5ldyBQcm92aWRlckVycm9yKFwiRXJyb3IgcmVzcG9uc2UgcmVjZWl2ZWQgZnJvbSBpbnN0YW5jZSBtZXRhZGF0YSBzZXJ2aWNlXCIpLCB7IHN0YXR1c0NvZGU6IHN0YXR1c0NvZGUgfSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGNodW5rcyA9IFtdO1xuICAgICAgICAgICAgcmVzLm9uKFwiZGF0YVwiLCBmdW5jdGlvbiAoY2h1bmspIHtcbiAgICAgICAgICAgICAgICBjaHVua3MucHVzaChjaHVuayk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJlcy5vbihcImVuZFwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZShCdWZmZXIuY29uY2F0KGNodW5rcykpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXEuZW5kKCk7XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lhSFIwY0ZKbGNYVmxjM1F1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTh1TGk4dUxpOXpjbU12Y21WdGIzUmxVSEp2ZG1sa1pYSXZhSFIwY0ZKbGNYVmxjM1F1ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWp0QlFVRkJMRTlCUVU4c1JVRkJSU3hoUVVGaExFVkJRVVVzVFVGQlRTdzBRa0ZCTkVJc1EwRkJRenRCUVVNelJDeFBRVUZQTEVWQlFVVXNUVUZCVFN4RlFVRkZMRTFCUVUwc1VVRkJVU3hEUVVGRE8wRkJRMmhETEU5QlFVOHNSVUZCYlVJc1QwRkJUeXhGUVVGclFpeE5RVUZOTEUxQlFVMHNRMEZCUXp0QlFVVm9SVHM3UjBGRlJ6dEJRVU5JTEUxQlFVMHNWVUZCVlN4WFFVRlhMRU5CUVVNc1QwRkJkVUk3U1VGRGFrUXNUMEZCVHl4SlFVRkpMRTlCUVU4c1EwRkJReXhWUVVGRExFOUJRVThzUlVGQlJTeE5RVUZOTzFGQlEycERMRWxCUVUwc1IwRkJSeXhIUVVGSExFOUJRVThzV1VGQlJ5eE5RVUZOTEVWQlFVVXNTMEZCU3l4SlFVRkxMRTlCUVU4c1JVRkJSeXhEUVVGRE8xRkJSVzVFTEVkQlFVY3NRMEZCUXl4RlFVRkZMRU5CUVVNc1QwRkJUeXhGUVVGRkxGVkJRVU1zUjBGQlJ6dFpRVU5zUWl4TlFVRk5MRU5CUVVNc1RVRkJUU3hEUVVGRExFMUJRVTBzUTBGQlF5eEpRVUZKTEdGQlFXRXNRMEZCUXl4blJFRkJaMFFzUTBGQlF5eEZRVUZGTEVkQlFVY3NRMEZCUXl4RFFVRkRMRU5CUVVNN1VVRkRiRWNzUTBGQlF5eERRVUZETEVOQlFVTTdVVUZGU0N4SFFVRkhMRU5CUVVNc1JVRkJSU3hEUVVGRExGTkJRVk1zUlVGQlJUdFpRVU5vUWl4TlFVRk5MRU5CUVVNc1NVRkJTU3hMUVVGTExFTkJRVU1zWTBGQll5eERRVUZETEVOQlFVTXNRMEZCUXp0UlFVTndReXhEUVVGRExFTkJRVU1zUTBGQlF6dFJRVVZJTEVkQlFVY3NRMEZCUXl4RlFVRkZMRU5CUVVNc1ZVRkJWU3hGUVVGRkxGVkJRVU1zUjBGQmIwSTdXVUZET1VJc1NVRkJRU3hMUVVGeFFpeEhRVUZITEZkQlFWSXNSVUZCYUVJc1ZVRkJWU3h0UWtGQlJ5eEhRVUZITEV0QlFVRXNRMEZCVXp0WlFVTnFReXhKUVVGSkxGVkJRVlVzUjBGQlJ5eEhRVUZITEVsQlFVa3NSMEZCUnl4SlFVRkpMRlZCUVZVc1JVRkJSVHRuUWtGRGVrTXNUVUZCVFN4RFFVTktMRTFCUVUwc1EwRkJReXhOUVVGTkxFTkJRVU1zU1VGQlNTeGhRVUZoTEVOQlFVTXNkMFJCUVhkRUxFTkJRVU1zUlVGQlJTeEZRVUZGTEZWQlFWVXNXVUZCUVN4RlFVRkZMRU5CUVVNc1EwRkRNMGNzUTBGQlF6dGhRVU5JTzFsQlJVUXNTVUZCVFN4TlFVRk5MRWRCUVd0Q0xFVkJRVVVzUTBGQlF6dFpRVU5xUXl4SFFVRkhMRU5CUVVNc1JVRkJSU3hEUVVGRExFMUJRVTBzUlVGQlJTeFZRVUZETEV0QlFVczdaMEpCUTI1Q0xFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTXNTMEZCWlN4RFFVRkRMRU5CUVVNN1dVRkRMMElzUTBGQlF5eERRVUZETEVOQlFVTTdXVUZEU0N4SFFVRkhMRU5CUVVNc1JVRkJSU3hEUVVGRExFdEJRVXNzUlVGQlJUdG5Ra0ZEV2l4UFFVRlBMRU5CUVVNc1RVRkJUU3hEUVVGRExFMUJRVTBzUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXl4RFFVRkRPMWxCUTJwRExFTkJRVU1zUTBGQlF5eERRVUZETzFGQlEwd3NRMEZCUXl4RFFVRkRMRU5CUVVNN1VVRkZTQ3hIUVVGSExFTkJRVU1zUjBGQlJ5eEZRVUZGTEVOQlFVTTdTVUZEV2l4RFFVRkRMRU5CUVVNc1EwRkJRenRCUVVOTUxFTkJRVU1pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKcGJYQnZjblFnZXlCUWNtOTJhV1JsY2tWeWNtOXlJSDBnWm5KdmJTQmNJa0JoZDNNdGMyUnJMM0J5YjNCbGNuUjVMWEJ5YjNacFpHVnlYQ0k3WEc1cGJYQnZjblFnZXlCQ2RXWm1aWElnZlNCbWNtOXRJRndpWW5WbVptVnlYQ0k3WEc1cGJYQnZjblFnZXlCSmJtTnZiV2x1WjAxbGMzTmhaMlVzSUhKbGNYVmxjM1FzSUZKbGNYVmxjM1JQY0hScGIyNXpJSDBnWm5KdmJTQmNJbWgwZEhCY0lqdGNibHh1THlvcVhHNGdLaUJBYVc1MFpYSnVZV3hjYmlBcUwxeHVaWGh3YjNKMElHWjFibU4wYVc5dUlHaDBkSEJTWlhGMVpYTjBLRzl3ZEdsdmJuTTZJRkpsY1hWbGMzUlBjSFJwYjI1ektUb2dVSEp2YldselpUeENkV1ptWlhJK0lIdGNiaUFnY21WMGRYSnVJRzVsZHlCUWNtOXRhWE5sS0NoeVpYTnZiSFpsTENCeVpXcGxZM1FwSUQwK0lIdGNiaUFnSUNCamIyNXpkQ0J5WlhFZ1BTQnlaWEYxWlhOMEtIc2diV1YwYUc5a09pQmNJa2RGVkZ3aUxDQXVMaTV2Y0hScGIyNXpJSDBwTzF4dVhHNGdJQ0FnY21WeExtOXVLRndpWlhKeWIzSmNJaXdnS0dWeWNpa2dQVDRnZTF4dUlDQWdJQ0FnY21WcVpXTjBLRTlpYW1WamRDNWhjM05wWjI0b2JtVjNJRkJ5YjNacFpHVnlSWEp5YjNJb1hDSlZibUZpYkdVZ2RHOGdZMjl1Ym1WamRDQjBieUJwYm5OMFlXNWpaU0J0WlhSaFpHRjBZU0J6WlhKMmFXTmxYQ0lwTENCbGNuSXBLVHRjYmlBZ0lDQjlLVHRjYmx4dUlDQWdJSEpsY1M1dmJpaGNJblJwYldWdmRYUmNJaXdnS0NrZ1BUNGdlMXh1SUNBZ0lDQWdjbVZxWldOMEtHNWxkeUJGY25KdmNpaGNJbFJwYldWdmRYUkZjbkp2Y2x3aUtTazdYRzRnSUNBZ2ZTazdYRzVjYmlBZ0lDQnlaWEV1YjI0b1hDSnlaWE53YjI1elpWd2lMQ0FvY21Wek9pQkpibU52YldsdVowMWxjM05oWjJVcElEMCtJSHRjYmlBZ0lDQWdJR052Ym5OMElIc2djM1JoZEhWelEyOWtaU0E5SURRd01DQjlJRDBnY21Wek8xeHVJQ0FnSUNBZ2FXWWdLSE4wWVhSMWMwTnZaR1VnUENBeU1EQWdmSHdnTXpBd0lEdzlJSE4wWVhSMWMwTnZaR1VwSUh0Y2JpQWdJQ0FnSUNBZ2NtVnFaV04wS0Z4dUlDQWdJQ0FnSUNBZ0lFOWlhbVZqZEM1aGMzTnBaMjRvYm1WM0lGQnliM1pwWkdWeVJYSnliM0lvWENKRmNuSnZjaUJ5WlhOd2IyNXpaU0J5WldObGFYWmxaQ0JtY205dElHbHVjM1JoYm1ObElHMWxkR0ZrWVhSaElITmxjblpwWTJWY0lpa3NJSHNnYzNSaGRIVnpRMjlrWlNCOUtWeHVJQ0FnSUNBZ0lDQXBPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0JqYjI1emRDQmphSFZ1YTNNNklFRnljbUY1UEVKMVptWmxjajRnUFNCYlhUdGNiaUFnSUNBZ0lISmxjeTV2YmloY0ltUmhkR0ZjSWl3Z0tHTm9kVzVyS1NBOVBpQjdYRzRnSUNBZ0lDQWdJR05vZFc1cmN5NXdkWE5vS0dOb2RXNXJJR0Z6SUVKMVptWmxjaWs3WEc0Z0lDQWdJQ0I5S1R0Y2JpQWdJQ0FnSUhKbGN5NXZiaWhjSW1WdVpGd2lMQ0FvS1NBOVBpQjdYRzRnSUNBZ0lDQWdJSEpsYzI5c2RtVW9RblZtWm1WeUxtTnZibU5oZENoamFIVnVhM01wS1R0Y2JpQWdJQ0FnSUgwcE8xeHVJQ0FnSUgwcE8xeHVYRzRnSUNBZ2NtVnhMbVZ1WkNncE8xeHVJQ0I5S1R0Y2JuMWNiaUpkZlE9PSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/remoteProvider/httpRequest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/remoteProvider/retry.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-imds/dist/es/remoteProvider/retry.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   retry: () => (/* binding */ retry)\n/* harmony export */ });\n/**\n * @internal\n */\nvar retry = function (toRetry, maxRetries) {\n    var promise = toRetry();\n    for (var i = 0; i < maxRetries; i++) {\n        promise = promise.catch(toRetry);\n    }\n    return promise;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmV0cnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcmVtb3RlUHJvdmlkZXIvcmV0cnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUE7O0dBRUc7QUFDSCxNQUFNLENBQUMsSUFBTSxLQUFLLEdBQUcsVUFBSSxPQUE2QixFQUFFLFVBQWtCO0lBQ3hFLElBQUksT0FBTyxHQUFHLE9BQU8sRUFBRSxDQUFDO0lBQ3hCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxVQUFVLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDbkMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7S0FDbEM7SUFFRCxPQUFPLE9BQU8sQ0FBQztBQUNqQixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIFJldHJ5YWJsZVByb3ZpZGVyPFQ+IHtcbiAgKCk6IFByb21pc2U8VD47XG59XG5cbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBjb25zdCByZXRyeSA9IDxUPih0b1JldHJ5OiBSZXRyeWFibGVQcm92aWRlcjxUPiwgbWF4UmV0cmllczogbnVtYmVyKTogUHJvbWlzZTxUPiA9PiB7XG4gIGxldCBwcm9taXNlID0gdG9SZXRyeSgpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IG1heFJldHJpZXM7IGkrKykge1xuICAgIHByb21pc2UgPSBwcm9taXNlLmNhdGNoKHRvUmV0cnkpO1xuICB9XG5cbiAgcmV0dXJuIHByb21pc2U7XG59O1xuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1pbWRzL2Rpc3QvZXMvcmVtb3RlUHJvdmlkZXIvcmV0cnkuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLWltZHMvZGlzdC9lcy9yZW1vdGVQcm92aWRlci9yZXRyeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgdmFyIHJldHJ5ID0gZnVuY3Rpb24gKHRvUmV0cnksIG1heFJldHJpZXMpIHtcbiAgICB2YXIgcHJvbWlzZSA9IHRvUmV0cnkoKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG1heFJldHJpZXM7IGkrKykge1xuICAgICAgICBwcm9taXNlID0gcHJvbWlzZS5jYXRjaCh0b1JldHJ5KTtcbiAgICB9XG4gICAgcmV0dXJuIHByb21pc2U7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pY21WMGNua3Vhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOHVMaTh1TGk5emNtTXZjbVZ0YjNSbFVISnZkbWxrWlhJdmNtVjBjbmt1ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlNVRTdPMGRCUlVjN1FVRkRTQ3hOUVVGTkxFTkJRVU1zU1VGQlRTeExRVUZMTEVkQlFVY3NWVUZCU1N4UFFVRTJRaXhGUVVGRkxGVkJRV3RDTzBsQlEzaEZMRWxCUVVrc1QwRkJUeXhIUVVGSExFOUJRVThzUlVGQlJTeERRVUZETzBsQlEzaENMRXRCUVVzc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF5eEZRVUZGTEVOQlFVTXNSMEZCUnl4VlFVRlZMRVZCUVVVc1EwRkJReXhGUVVGRkxFVkJRVVU3VVVGRGJrTXNUMEZCVHl4SFFVRkhMRTlCUVU4c1EwRkJReXhMUVVGTExFTkJRVU1zVDBGQlR5eERRVUZETEVOQlFVTTdTMEZEYkVNN1NVRkZSQ3hQUVVGUExFOUJRVThzUTBGQlF6dEJRVU5xUWl4RFFVRkRMRU5CUVVNaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SmxlSEJ2Y25RZ2FXNTBaWEptWVdObElGSmxkSEo1WVdKc1pWQnliM1pwWkdWeVBGUStJSHRjYmlBZ0tDazZJRkJ5YjIxcGMyVThWRDQ3WEc1OVhHNWNiaThxS2x4dUlDb2dRR2x1ZEdWeWJtRnNYRzRnS2k5Y2JtVjRjRzl5ZENCamIyNXpkQ0J5WlhSeWVTQTlJRHhVUGloMGIxSmxkSEo1T2lCU1pYUnllV0ZpYkdWUWNtOTJhV1JsY2p4VVBpd2diV0Y0VW1WMGNtbGxjem9nYm5WdFltVnlLVG9nVUhKdmJXbHpaVHhVUGlBOVBpQjdYRzRnSUd4bGRDQndjbTl0YVhObElEMGdkRzlTWlhSeWVTZ3BPMXh1SUNCbWIzSWdLR3hsZENCcElEMGdNRHNnYVNBOElHMWhlRkpsZEhKcFpYTTdJR2tyS3lrZ2UxeHVJQ0FnSUhCeWIyMXBjMlVnUFNCd2NtOXRhWE5sTG1OaGRHTm9LSFJ2VW1WMGNua3BPMXh1SUNCOVhHNWNiaUFnY21WMGRYSnVJSEJ5YjIxcGMyVTdYRzU5TzF4dUlsMTkiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/remoteProvider/retry.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/credential-provider-imds/node_modules/tslib/tslib.es6.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-imds/node_modules/tslib/tslib.es6.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/credential-provider-imds/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/credential-provider-ini/dist/es/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-ini/dist/es/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ENV_PROFILE: () => (/* binding */ ENV_PROFILE),\n/* harmony export */   fromIni: () => (/* binding */ fromIni),\n/* harmony export */   getMasterProfileName: () => (/* binding */ getMasterProfileName),\n/* harmony export */   parseKnownFiles: () => (/* binding */ parseKnownFiles)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-ini/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/property-provider */ \"(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_shared_ini_file_loader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/shared-ini-file-loader */ \"(ssr)/./node_modules/@aws-sdk/shared-ini-file-loader/dist/es/index.js\");\n\n\n\nvar DEFAULT_PROFILE = \"default\";\nvar ENV_PROFILE = \"AWS_PROFILE\";\nvar isStaticCredsProfile = function (arg) {\n    return Boolean(arg) &&\n        typeof arg === \"object\" &&\n        typeof arg.aws_access_key_id === \"string\" &&\n        typeof arg.aws_secret_access_key === \"string\" &&\n        [\"undefined\", \"string\"].indexOf(typeof arg.aws_session_token) > -1;\n};\nvar isAssumeRoleProfile = function (arg) {\n    return Boolean(arg) &&\n        typeof arg === \"object\" &&\n        typeof arg.role_arn === \"string\" &&\n        typeof arg.source_profile === \"string\" &&\n        [\"undefined\", \"string\"].indexOf(typeof arg.role_session_name) > -1 &&\n        [\"undefined\", \"string\"].indexOf(typeof arg.external_id) > -1 &&\n        [\"undefined\", \"string\"].indexOf(typeof arg.mfa_serial) > -1;\n};\n/**\n * Creates a credential provider that will read from ini files and supports\n * role assumption and multi-factor authentication.\n */\nvar fromIni = function (init) {\n    if (init === void 0) { init = {}; }\n    return function () { return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(void 0, void 0, void 0, function () {\n        var profiles;\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__generator)(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, parseKnownFiles(init)];\n                case 1:\n                    profiles = _a.sent();\n                    return [2 /*return*/, resolveProfileData(getMasterProfileName(init), profiles, init)];\n            }\n        });\n    }); };\n};\n/**\n * Load profiles from credentials and config INI files and normalize them into a\n * single profile list.\n *\n * @internal\n */\nvar parseKnownFiles = function (init) { return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(void 0, void 0, void 0, function () {\n    var _a, loadedConfig, parsedFiles;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__generator)(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                _a = init.loadedConfig, loadedConfig = _a === void 0 ? (0,_aws_sdk_shared_ini_file_loader__WEBPACK_IMPORTED_MODULE_1__.loadSharedConfigFiles)(init) : _a;\n                return [4 /*yield*/, loadedConfig];\n            case 1:\n                parsedFiles = _b.sent();\n                return [2 /*return*/, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, parsedFiles.configFile), parsedFiles.credentialsFile)];\n        }\n    });\n}); };\n/**\n * @internal\n */\nvar getMasterProfileName = function (init) {\n    return init.profile || process.env[ENV_PROFILE] || DEFAULT_PROFILE;\n};\nvar resolveProfileData = function (profileName, profiles, options, visitedProfiles) {\n    if (visitedProfiles === void 0) { visitedProfiles = {}; }\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(void 0, void 0, void 0, function () {\n        var data, ExternalId, mfa_serial, RoleArn, _a, RoleSessionName, source_profile, sourceCreds, params, _b, _c, _d;\n        var _e;\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__generator)(this, function (_f) {\n            switch (_f.label) {\n                case 0:\n                    data = profiles[profileName];\n                    // If this is not the first profile visited, static credentials should be\n                    // preferred over role assumption metadata. This special treatment of\n                    // second and subsequent hops is to ensure compatibility with the AWS CLI.\n                    if (Object.keys(visitedProfiles).length > 0 && isStaticCredsProfile(data)) {\n                        return [2 /*return*/, resolveStaticCredentials(data)];\n                    }\n                    if (!isAssumeRoleProfile(data)) return [3 /*break*/, 4];\n                    ExternalId = data.external_id, mfa_serial = data.mfa_serial, RoleArn = data.role_arn, _a = data.role_session_name, RoleSessionName = _a === void 0 ? \"aws-sdk-js-\" + Date.now() : _a, source_profile = data.source_profile;\n                    if (!options.roleAssumer) {\n                        throw new _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__.ProviderError(\"Profile \" + profileName + \" requires a role to be assumed, but no\" + \" role assumption callback was provided.\", false);\n                    }\n                    if (source_profile in visitedProfiles) {\n                        throw new _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__.ProviderError(\"Detected a cycle attempting to resolve credentials for profile\" +\n                            (\" \" + getMasterProfileName(options) + \". Profiles visited: \") +\n                            Object.keys(visitedProfiles).join(\", \"), false);\n                    }\n                    sourceCreds = resolveProfileData(source_profile, profiles, options, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, visitedProfiles), (_e = {}, _e[source_profile] = true, _e)));\n                    params = { RoleArn: RoleArn, RoleSessionName: RoleSessionName, ExternalId: ExternalId };\n                    if (!mfa_serial) return [3 /*break*/, 2];\n                    if (!options.mfaCodeProvider) {\n                        throw new _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__.ProviderError(\"Profile \" + profileName + \" requires multi-factor authentication,\" + \" but no MFA code callback was provided.\", false);\n                    }\n                    params.SerialNumber = mfa_serial;\n                    _b = params;\n                    return [4 /*yield*/, options.mfaCodeProvider(mfa_serial)];\n                case 1:\n                    _b.TokenCode = _f.sent();\n                    _f.label = 2;\n                case 2:\n                    _d = (_c = options).roleAssumer;\n                    return [4 /*yield*/, sourceCreds];\n                case 3: return [2 /*return*/, _d.apply(_c, [_f.sent(), params])];\n                case 4:\n                    // If no role assumption metadata is present, attempt to load static\n                    // credentials from the selected profile.\n                    if (isStaticCredsProfile(data)) {\n                        return [2 /*return*/, resolveStaticCredentials(data)];\n                    }\n                    // If the profile cannot be parsed or contains neither static credentials\n                    // nor role assumption metadata, throw an error. This should be considered a\n                    // terminal resolution error if a profile has been specified by the user\n                    // (whether via a parameter, an environment variable, or another profile's\n                    // `source_profile` key).\n                    throw new _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__.ProviderError(\"Profile \" + profileName + \" could not be found or parsed in shared\" + \" credentials file.\");\n            }\n        });\n    });\n};\nvar resolveStaticCredentials = function (profile) {\n    return Promise.resolve({\n        accessKeyId: profile.aws_access_key_id,\n        secretAccessKey: profile.aws_secret_access_key,\n        sessionToken: profile.aws_session_token,\n    });\n};\n//# sourceMappingURL=data:application/json;base64,//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/credential-provider-ini/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/credential-provider-ini/node_modules/tslib/tslib.es6.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-ini/node_modules/tslib/tslib.es6.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/credential-provider-ini/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/credential-provider-node/dist/es/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-node/dist/es/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ENV_IMDS_DISABLED: () => (/* binding */ ENV_IMDS_DISABLED),\n/* harmony export */   defaultProvider: () => (/* binding */ defaultProvider)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-node/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_credential_provider_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/credential-provider-env */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-env/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_credential_provider_imds__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/credential-provider-imds */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-imds/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_credential_provider_ini__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/credential-provider-ini */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-ini/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_credential_provider_process__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/credential-provider-process */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-process/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-sdk/property-provider */ \"(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_shared_ini_file_loader__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aws-sdk/shared-ini-file-loader */ \"(ssr)/./node_modules/@aws-sdk/shared-ini-file-loader/dist/es/index.js\");\n\n\n\n\n\n\n\nvar ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\n/**\n * Creates a credential provider that will attempt to find credentials from the\n * following sources (listed in order of precedence):\n *   * Environment variables exposed via `process.env`\n *   * Shared credentials and config ini files\n *   * The EC2/ECS Instance Metadata Service\n *\n * The default credential provider will invoke one provider at a time and only\n * continue to the next if no credentials have been located. For example, if\n * the process finds values defined via the `AWS_ACCESS_KEY_ID` and\n * `AWS_SECRET_ACCESS_KEY` environment variables, the files at\n * `~/.aws/credentials` and `~/.aws/config` will not be read, nor will any\n * messages be sent to the Instance Metadata Service.\n *\n * @param init                  Configuration that is passed to each individual\n *                              provider\n *\n * @see fromEnv                 The function used to source credentials from\n *                              environment variables\n * @see fromIni                 The function used to source credentials from INI\n *                              files\n * @see fromProcess             The function used to sources credentials from\n *                              credential_process in INI files\n * @see fromInstanceMetadata    The function used to source credentials from the\n *                              EC2 Instance Metadata Service\n * @see fromContainerMetadata   The function used to source credentials from the\n *                              ECS Container Metadata Service\n */\nvar defaultProvider = function (init) {\n    if (init === void 0) { init = {}; }\n    var options = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({ profile: process.env[_aws_sdk_credential_provider_ini__WEBPACK_IMPORTED_MODULE_2__.ENV_PROFILE] }, init);\n    if (!options.loadedConfig)\n        options.loadedConfig = (0,_aws_sdk_shared_ini_file_loader__WEBPACK_IMPORTED_MODULE_5__.loadSharedConfigFiles)(init);\n    var providers = [(0,_aws_sdk_credential_provider_ini__WEBPACK_IMPORTED_MODULE_2__.fromIni)(options), (0,_aws_sdk_credential_provider_process__WEBPACK_IMPORTED_MODULE_3__.fromProcess)(options), remoteProvider(options)];\n    if (!options.profile)\n        providers.unshift((0,_aws_sdk_credential_provider_env__WEBPACK_IMPORTED_MODULE_0__.fromEnv)());\n    var providerChain = _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_4__.chain.apply(void 0, (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__spread)(providers));\n    return (0,_aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_4__.memoize)(providerChain, function (credentials) { return credentials.expiration !== undefined && credentials.expiration.getTime() - Date.now() < 300000; }, function (credentials) { return credentials.expiration !== undefined; });\n};\nvar remoteProvider = function (init) {\n    if (process.env[_aws_sdk_credential_provider_imds__WEBPACK_IMPORTED_MODULE_1__.ENV_CMDS_RELATIVE_URI] || process.env[_aws_sdk_credential_provider_imds__WEBPACK_IMPORTED_MODULE_1__.ENV_CMDS_FULL_URI]) {\n        return (0,_aws_sdk_credential_provider_imds__WEBPACK_IMPORTED_MODULE_1__.fromContainerMetadata)(init);\n    }\n    if (process.env[ENV_IMDS_DISABLED]) {\n        return function () { return Promise.reject(new _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_4__.ProviderError(\"EC2 Instance Metadata Service access disabled\")); };\n    }\n    return (0,_aws_sdk_credential_provider_imds__WEBPACK_IMPORTED_MODULE_1__.fromInstanceMetadata)(init);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUMzRCxPQUFPLEVBQ0wsaUJBQWlCLEVBQ2pCLHFCQUFxQixFQUNyQixxQkFBcUIsRUFDckIsb0JBQW9CLEdBRXJCLE1BQU0sbUNBQW1DLENBQUM7QUFDM0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQWUsTUFBTSxrQ0FBa0MsQ0FBQztBQUNyRixPQUFPLEVBQUUsV0FBVyxFQUFtQixNQUFNLHNDQUFzQyxDQUFDO0FBQ3BGLE9BQU8sRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzNFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBR3hFLE1BQU0sQ0FBQyxJQUFNLGlCQUFpQixHQUFHLDJCQUEyQixDQUFDO0FBRTdEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0EyQkc7QUFDSCxNQUFNLENBQUMsSUFBTSxlQUFlLEdBQUcsVUFBQyxJQUE2RDtJQUE3RCxxQkFBQSxFQUFBLFNBQTZEO0lBQzNGLElBQU0sT0FBTyxjQUFLLE9BQU8sRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxJQUFLLElBQUksQ0FBRSxDQUFDO0lBQy9ELElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWTtRQUFFLE9BQU8sQ0FBQyxZQUFZLEdBQUcscUJBQXFCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDOUUsSUFBTSxTQUFTLEdBQUcsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsV0FBVyxDQUFDLE9BQU8sQ0FBQyxFQUFFLGNBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBQ3BGLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTztRQUFFLFNBQVMsQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQztJQUNuRCxJQUFNLGFBQWEsR0FBRyxLQUFLLHdCQUFJLFNBQVMsRUFBQyxDQUFDO0lBRTFDLE9BQU8sT0FBTyxDQUNaLGFBQWEsRUFDYixVQUFDLFdBQVcsSUFBSyxPQUFBLFdBQVcsQ0FBQyxVQUFVLEtBQUssU0FBUyxJQUFJLFdBQVcsQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFFLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLE1BQU0sRUFBOUYsQ0FBOEYsRUFDL0csVUFBQyxXQUFXLElBQUssT0FBQSxXQUFXLENBQUMsVUFBVSxLQUFLLFNBQVMsRUFBcEMsQ0FBb0MsQ0FDdEQsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVGLElBQU0sY0FBYyxHQUFHLFVBQUMsSUFBd0I7SUFDOUMsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLHFCQUFxQixDQUFDLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQyxFQUFFO1FBQ3hFLE9BQU8scUJBQXFCLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDcEM7SUFFRCxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsaUJBQWlCLENBQUMsRUFBRTtRQUNsQyxPQUFPLGNBQU0sT0FBQSxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksYUFBYSxDQUFDLCtDQUErQyxDQUFDLENBQUMsRUFBbEYsQ0FBa0YsQ0FBQztLQUNqRztJQUVELE9BQU8sb0JBQW9CLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDcEMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZnJvbUVudiB9IGZyb20gXCJAYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLWVudlwiO1xuaW1wb3J0IHtcbiAgRU5WX0NNRFNfRlVMTF9VUkksXG4gIEVOVl9DTURTX1JFTEFUSVZFX1VSSSxcbiAgZnJvbUNvbnRhaW5lck1ldGFkYXRhLFxuICBmcm9tSW5zdGFuY2VNZXRhZGF0YSxcbiAgUmVtb3RlUHJvdmlkZXJJbml0LFxufSBmcm9tIFwiQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1pbWRzXCI7XG5pbXBvcnQgeyBFTlZfUFJPRklMRSwgZnJvbUluaSwgRnJvbUluaUluaXQgfSBmcm9tIFwiQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1pbmlcIjtcbmltcG9ydCB7IGZyb21Qcm9jZXNzLCBGcm9tUHJvY2Vzc0luaXQgfSBmcm9tIFwiQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1wcm9jZXNzXCI7XG5pbXBvcnQgeyBjaGFpbiwgbWVtb2l6ZSwgUHJvdmlkZXJFcnJvciB9IGZyb20gXCJAYXdzLXNkay9wcm9wZXJ0eS1wcm92aWRlclwiO1xuaW1wb3J0IHsgbG9hZFNoYXJlZENvbmZpZ0ZpbGVzIH0gZnJvbSBcIkBhd3Mtc2RrL3NoYXJlZC1pbmktZmlsZS1sb2FkZXJcIjtcbmltcG9ydCB7IENyZWRlbnRpYWxQcm92aWRlciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5leHBvcnQgY29uc3QgRU5WX0lNRFNfRElTQUJMRUQgPSBcIkFXU19FQzJfTUVUQURBVEFfRElTQUJMRURcIjtcblxuLyoqXG4gKiBDcmVhdGVzIGEgY3JlZGVudGlhbCBwcm92aWRlciB0aGF0IHdpbGwgYXR0ZW1wdCB0byBmaW5kIGNyZWRlbnRpYWxzIGZyb20gdGhlXG4gKiBmb2xsb3dpbmcgc291cmNlcyAobGlzdGVkIGluIG9yZGVyIG9mIHByZWNlZGVuY2UpOlxuICogICAqIEVudmlyb25tZW50IHZhcmlhYmxlcyBleHBvc2VkIHZpYSBgcHJvY2Vzcy5lbnZgXG4gKiAgICogU2hhcmVkIGNyZWRlbnRpYWxzIGFuZCBjb25maWcgaW5pIGZpbGVzXG4gKiAgICogVGhlIEVDMi9FQ1MgSW5zdGFuY2UgTWV0YWRhdGEgU2VydmljZVxuICpcbiAqIFRoZSBkZWZhdWx0IGNyZWRlbnRpYWwgcHJvdmlkZXIgd2lsbCBpbnZva2Ugb25lIHByb3ZpZGVyIGF0IGEgdGltZSBhbmQgb25seVxuICogY29udGludWUgdG8gdGhlIG5leHQgaWYgbm8gY3JlZGVudGlhbHMgaGF2ZSBiZWVuIGxvY2F0ZWQuIEZvciBleGFtcGxlLCBpZlxuICogdGhlIHByb2Nlc3MgZmluZHMgdmFsdWVzIGRlZmluZWQgdmlhIHRoZSBgQVdTX0FDQ0VTU19LRVlfSURgIGFuZFxuICogYEFXU19TRUNSRVRfQUNDRVNTX0tFWWAgZW52aXJvbm1lbnQgdmFyaWFibGVzLCB0aGUgZmlsZXMgYXRcbiAqIGB+Ly5hd3MvY3JlZGVudGlhbHNgIGFuZCBgfi8uYXdzL2NvbmZpZ2Agd2lsbCBub3QgYmUgcmVhZCwgbm9yIHdpbGwgYW55XG4gKiBtZXNzYWdlcyBiZSBzZW50IHRvIHRoZSBJbnN0YW5jZSBNZXRhZGF0YSBTZXJ2aWNlLlxuICpcbiAqIEBwYXJhbSBpbml0ICAgICAgICAgICAgICAgICAgQ29uZmlndXJhdGlvbiB0aGF0IGlzIHBhc3NlZCB0byBlYWNoIGluZGl2aWR1YWxcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvdmlkZXJcbiAqXG4gKiBAc2VlIGZyb21FbnYgICAgICAgICAgICAgICAgIFRoZSBmdW5jdGlvbiB1c2VkIHRvIHNvdXJjZSBjcmVkZW50aWFscyBmcm9tXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVudmlyb25tZW50IHZhcmlhYmxlc1xuICogQHNlZSBmcm9tSW5pICAgICAgICAgICAgICAgICBUaGUgZnVuY3Rpb24gdXNlZCB0byBzb3VyY2UgY3JlZGVudGlhbHMgZnJvbSBJTklcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsZXNcbiAqIEBzZWUgZnJvbVByb2Nlc3MgICAgICAgICAgICAgVGhlIGZ1bmN0aW9uIHVzZWQgdG8gc291cmNlcyBjcmVkZW50aWFscyBmcm9tXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNyZWRlbnRpYWxfcHJvY2VzcyBpbiBJTkkgZmlsZXNcbiAqIEBzZWUgZnJvbUluc3RhbmNlTWV0YWRhdGEgICAgVGhlIGZ1bmN0aW9uIHVzZWQgdG8gc291cmNlIGNyZWRlbnRpYWxzIGZyb20gdGhlXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVDMiBJbnN0YW5jZSBNZXRhZGF0YSBTZXJ2aWNlXG4gKiBAc2VlIGZyb21Db250YWluZXJNZXRhZGF0YSAgIFRoZSBmdW5jdGlvbiB1c2VkIHRvIHNvdXJjZSBjcmVkZW50aWFscyBmcm9tIHRoZVxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFQ1MgQ29udGFpbmVyIE1ldGFkYXRhIFNlcnZpY2VcbiAqL1xuZXhwb3J0IGNvbnN0IGRlZmF1bHRQcm92aWRlciA9IChpbml0OiBGcm9tSW5pSW5pdCAmIFJlbW90ZVByb3ZpZGVySW5pdCAmIEZyb21Qcm9jZXNzSW5pdCA9IHt9KTogQ3JlZGVudGlhbFByb3ZpZGVyID0+IHtcbiAgY29uc3Qgb3B0aW9ucyA9IHsgcHJvZmlsZTogcHJvY2Vzcy5lbnZbRU5WX1BST0ZJTEVdLCAuLi5pbml0IH07XG4gIGlmICghb3B0aW9ucy5sb2FkZWRDb25maWcpIG9wdGlvbnMubG9hZGVkQ29uZmlnID0gbG9hZFNoYXJlZENvbmZpZ0ZpbGVzKGluaXQpO1xuICBjb25zdCBwcm92aWRlcnMgPSBbZnJvbUluaShvcHRpb25zKSwgZnJvbVByb2Nlc3Mob3B0aW9ucyksIHJlbW90ZVByb3ZpZGVyKG9wdGlvbnMpXTtcbiAgaWYgKCFvcHRpb25zLnByb2ZpbGUpIHByb3ZpZGVycy51bnNoaWZ0KGZyb21FbnYoKSk7XG4gIGNvbnN0IHByb3ZpZGVyQ2hhaW4gPSBjaGFpbiguLi5wcm92aWRlcnMpO1xuXG4gIHJldHVybiBtZW1vaXplKFxuICAgIHByb3ZpZGVyQ2hhaW4sXG4gICAgKGNyZWRlbnRpYWxzKSA9PiBjcmVkZW50aWFscy5leHBpcmF0aW9uICE9PSB1bmRlZmluZWQgJiYgY3JlZGVudGlhbHMuZXhwaXJhdGlvbi5nZXRUaW1lKCkgLSBEYXRlLm5vdygpIDwgMzAwMDAwLFxuICAgIChjcmVkZW50aWFscykgPT4gY3JlZGVudGlhbHMuZXhwaXJhdGlvbiAhPT0gdW5kZWZpbmVkXG4gICk7XG59O1xuXG5jb25zdCByZW1vdGVQcm92aWRlciA9IChpbml0OiBSZW1vdGVQcm92aWRlckluaXQpOiBDcmVkZW50aWFsUHJvdmlkZXIgPT4ge1xuICBpZiAocHJvY2Vzcy5lbnZbRU5WX0NNRFNfUkVMQVRJVkVfVVJJXSB8fCBwcm9jZXNzLmVudltFTlZfQ01EU19GVUxMX1VSSV0pIHtcbiAgICByZXR1cm4gZnJvbUNvbnRhaW5lck1ldGFkYXRhKGluaXQpO1xuICB9XG5cbiAgaWYgKHByb2Nlc3MuZW52W0VOVl9JTURTX0RJU0FCTEVEXSkge1xuICAgIHJldHVybiAoKSA9PiBQcm9taXNlLnJlamVjdChuZXcgUHJvdmlkZXJFcnJvcihcIkVDMiBJbnN0YW5jZSBNZXRhZGF0YSBTZXJ2aWNlIGFjY2VzcyBkaXNhYmxlZFwiKSk7XG4gIH1cblxuICByZXR1cm4gZnJvbUluc3RhbmNlTWV0YWRhdGEoaW5pdCk7XG59O1xuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/credential-provider-node/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/credential-provider-node/node_modules/tslib/tslib.es6.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-node/node_modules/tslib/tslib.es6.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/credential-provider-node/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/credential-provider-process/dist/es/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-process/dist/es/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ENV_PROFILE: () => (/* binding */ ENV_PROFILE),\n/* harmony export */   fromProcess: () => (/* binding */ fromProcess)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-process/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_credential_provider_ini__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/credential-provider-ini */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-ini/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/property-provider */ \"(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/index.js\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\n/**\n * @internal\n */\nvar ENV_PROFILE = \"AWS_PROFILE\";\n/**\n * Creates a credential provider that will read from a credential_process specified\n * in ini files.\n */\nvar fromProcess = function (init) {\n    if (init === void 0) { init = {}; }\n    return function () { return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(void 0, void 0, void 0, function () {\n        var profiles;\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, (0,_aws_sdk_credential_provider_ini__WEBPACK_IMPORTED_MODULE_0__.parseKnownFiles)(init)];\n                case 1:\n                    profiles = _a.sent();\n                    return [2 /*return*/, resolveProcessCredentials((0,_aws_sdk_credential_provider_ini__WEBPACK_IMPORTED_MODULE_0__.getMasterProfileName)(init), profiles)];\n            }\n        });\n    }); };\n};\nvar resolveProcessCredentials = function (profileName, profiles) { return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(void 0, void 0, void 0, function () {\n    var profile, credentialProcess;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                profile = profiles[profileName];\n                if (!profiles[profileName]) return [3 /*break*/, 4];\n                credentialProcess = profile[\"credential_process\"];\n                if (!(credentialProcess !== undefined)) return [3 /*break*/, 2];\n                return [4 /*yield*/, execPromise(credentialProcess)\n                        .then(function (processResult) {\n                        var data;\n                        try {\n                            data = JSON.parse(processResult);\n                        }\n                        catch (_a) {\n                            throw Error(\"Profile \" + profileName + \" credential_process returned invalid JSON.\");\n                        }\n                        var version = data.Version, accessKeyId = data.AccessKeyId, secretAccessKey = data.SecretAccessKey, sessionToken = data.SessionToken, expiration = data.Expiration;\n                        if (version !== 1) {\n                            throw Error(\"Profile \" + profileName + \" credential_process did not return Version 1.\");\n                        }\n                        if (accessKeyId === undefined || secretAccessKey === undefined) {\n                            throw Error(\"Profile \" + profileName + \" credential_process returned invalid credentials.\");\n                        }\n                        var expirationUnix;\n                        if (expiration) {\n                            var currentTime = new Date();\n                            var expireTime = new Date(expiration);\n                            if (expireTime < currentTime) {\n                                throw Error(\"Profile \" + profileName + \" credential_process returned expired credentials.\");\n                            }\n                            expirationUnix = Math.floor(new Date(expiration).valueOf() / 1000);\n                        }\n                        return {\n                            accessKeyId: accessKeyId,\n                            secretAccessKey: secretAccessKey,\n                            sessionToken: sessionToken,\n                            expirationUnix: expirationUnix,\n                        };\n                    })\n                        .catch(function (error) {\n                        throw new _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_1__.ProviderError(error.message);\n                    })];\n            case 1: return [2 /*return*/, _a.sent()];\n            case 2: throw new _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_1__.ProviderError(\"Profile \" + profileName + \" did not contain credential_process.\");\n            case 3: return [3 /*break*/, 5];\n            case 4: \n            // If the profile cannot be parsed or does not contain the default or\n            // specified profile throw an error. This should be considered a terminal\n            // resolution error if a profile has been specified by the user (whether via\n            // a parameter, anenvironment variable, or another profile's `source_profile` key).\n            throw new _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_1__.ProviderError(\"Profile \" + profileName + \" could not be found in shared credentials file.\");\n            case 5: return [2 /*return*/];\n        }\n    });\n}); };\nvar execPromise = function (command) {\n    return new Promise(function (resolve, reject) {\n        (0,child_process__WEBPACK_IMPORTED_MODULE_2__.exec)(command, function (error, stdout) {\n            if (error) {\n                reject(error);\n                return;\n            }\n            resolve(stdout.trim());\n        });\n    });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxlQUFlLEVBQXFCLE1BQU0sa0NBQWtDLENBQUM7QUFDNUcsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRzNELE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFckM7O0dBRUc7QUFDSCxNQUFNLENBQUMsSUFBTSxXQUFXLEdBQUcsYUFBYSxDQUFDO0FBSXpDOzs7R0FHRztBQUNILE1BQU0sQ0FBQyxJQUFNLFdBQVcsR0FBRyxVQUFDLElBQTBCO0lBQTFCLHFCQUFBLEVBQUEsU0FBMEI7SUFBeUIsT0FBQTs7Ozt3QkFDNUQscUJBQU0sZUFBZSxDQUFDLElBQUksQ0FBQyxFQUFBOztvQkFBdEMsUUFBUSxHQUFHLFNBQTJCO29CQUM1QyxzQkFBTyx5QkFBeUIsQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsRUFBRSxRQUFRLENBQUMsRUFBQzs7O1NBQ3hFO0FBSDhFLENBRzlFLENBQUM7QUFFRixJQUFNLHlCQUF5QixHQUFHLFVBQU8sV0FBbUIsRUFBRSxRQUF1Qjs7Ozs7Z0JBQzdFLE9BQU8sR0FBRyxRQUFRLENBQUMsV0FBVyxDQUFDLENBQUM7cUJBRWxDLFFBQVEsQ0FBQyxXQUFXLENBQUMsRUFBckIsd0JBQXFCO2dCQUNqQixpQkFBaUIsR0FBRyxPQUFPLENBQUMsb0JBQW9CLENBQUMsQ0FBQztxQkFDcEQsQ0FBQSxpQkFBaUIsS0FBSyxTQUFTLENBQUEsRUFBL0Isd0JBQStCO2dCQUMxQixxQkFBTSxXQUFXLENBQUMsaUJBQWlCLENBQUM7eUJBQ3hDLElBQUksQ0FBQyxVQUFDLGFBQWtCO3dCQUN2QixJQUFJLElBQUksQ0FBQzt3QkFDVCxJQUFJOzRCQUNGLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxDQUFDO3lCQUNsQzt3QkFBQyxXQUFNOzRCQUNOLE1BQU0sS0FBSyxDQUFDLGFBQVcsV0FBVywrQ0FBNEMsQ0FBQyxDQUFDO3lCQUNqRjt3QkFHQyxJQUFTLE9BQU8sR0FLZCxJQUFJLFFBTFUsRUFDSCxXQUFXLEdBSXRCLElBQUksWUFKa0IsRUFDUCxlQUFlLEdBRzlCLElBQUksZ0JBSDBCLEVBQ2xCLFlBQVksR0FFeEIsSUFBSSxhQUZvQixFQUNkLFVBQVUsR0FDcEIsSUFBSSxXQURnQixDQUNmO3dCQUVULElBQUksT0FBTyxLQUFLLENBQUMsRUFBRTs0QkFDakIsTUFBTSxLQUFLLENBQUMsYUFBVyxXQUFXLGtEQUErQyxDQUFDLENBQUM7eUJBQ3BGO3dCQUVELElBQUksV0FBVyxLQUFLLFNBQVMsSUFBSSxlQUFlLEtBQUssU0FBUyxFQUFFOzRCQUM5RCxNQUFNLEtBQUssQ0FBQyxhQUFXLFdBQVcsc0RBQW1ELENBQUMsQ0FBQzt5QkFDeEY7d0JBRUQsSUFBSSxjQUFjLENBQUM7d0JBRW5CLElBQUksVUFBVSxFQUFFOzRCQUNkLElBQU0sV0FBVyxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7NEJBQy9CLElBQU0sVUFBVSxHQUFHLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDOzRCQUN4QyxJQUFJLFVBQVUsR0FBRyxXQUFXLEVBQUU7Z0NBQzVCLE1BQU0sS0FBSyxDQUFDLGFBQVcsV0FBVyxzREFBbUQsQ0FBQyxDQUFDOzZCQUN4Rjs0QkFDRCxjQUFjLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxPQUFPLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQzt5QkFDcEU7d0JBRUQsT0FBTzs0QkFDTCxXQUFXLGFBQUE7NEJBQ1gsZUFBZSxpQkFBQTs0QkFDZixZQUFZLGNBQUE7NEJBQ1osY0FBYyxnQkFBQTt5QkFDZixDQUFDO29CQUNKLENBQUMsQ0FBQzt5QkFDRCxLQUFLLENBQUMsVUFBQyxLQUFZO3dCQUNsQixNQUFNLElBQUksYUFBYSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztvQkFDekMsQ0FBQyxDQUFDLEVBQUE7b0JBN0NKLHNCQUFPLFNBNkNILEVBQUM7b0JBRUwsTUFBTSxJQUFJLGFBQWEsQ0FBQyxhQUFXLFdBQVcseUNBQXNDLENBQUMsQ0FBQzs7O1lBR3hGLHFFQUFxRTtZQUNyRSx5RUFBeUU7WUFDekUsNEVBQTRFO1lBQzVFLG1GQUFtRjtZQUNuRixNQUFNLElBQUksYUFBYSxDQUFDLGFBQVcsV0FBVyxvREFBaUQsQ0FBQyxDQUFDOzs7O0tBRXBHLENBQUM7QUFFRixJQUFNLFdBQVcsR0FBRyxVQUFDLE9BQWU7SUFDbEMsT0FBQSxJQUFJLE9BQU8sQ0FBQyxVQUFVLE9BQU8sRUFBRSxNQUFNO1FBQ25DLElBQUksQ0FBQyxPQUFPLEVBQUUsVUFBQyxLQUFLLEVBQUUsTUFBTTtZQUMxQixJQUFJLEtBQUssRUFBRTtnQkFDVCxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQ2QsT0FBTzthQUNSO1lBRUQsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO1FBQ3pCLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDO0FBVEYsQ0FTRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0TWFzdGVyUHJvZmlsZU5hbWUsIHBhcnNlS25vd25GaWxlcywgU291cmNlUHJvZmlsZUluaXQgfSBmcm9tIFwiQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1pbmlcIjtcbmltcG9ydCB7IFByb3ZpZGVyRXJyb3IgfSBmcm9tIFwiQGF3cy1zZGsvcHJvcGVydHktcHJvdmlkZXJcIjtcbmltcG9ydCB7IFBhcnNlZEluaURhdGEgfSBmcm9tIFwiQGF3cy1zZGsvc2hhcmVkLWluaS1maWxlLWxvYWRlclwiO1xuaW1wb3J0IHsgQ3JlZGVudGlhbFByb3ZpZGVyLCBDcmVkZW50aWFscyB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuaW1wb3J0IHsgZXhlYyB9IGZyb20gXCJjaGlsZF9wcm9jZXNzXCI7XG5cbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBjb25zdCBFTlZfUFJPRklMRSA9IFwiQVdTX1BST0ZJTEVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBGcm9tUHJvY2Vzc0luaXQgZXh0ZW5kcyBTb3VyY2VQcm9maWxlSW5pdCB7fVxuXG4vKipcbiAqIENyZWF0ZXMgYSBjcmVkZW50aWFsIHByb3ZpZGVyIHRoYXQgd2lsbCByZWFkIGZyb20gYSBjcmVkZW50aWFsX3Byb2Nlc3Mgc3BlY2lmaWVkXG4gKiBpbiBpbmkgZmlsZXMuXG4gKi9cbmV4cG9ydCBjb25zdCBmcm9tUHJvY2VzcyA9IChpbml0OiBGcm9tUHJvY2Vzc0luaXQgPSB7fSk6IENyZWRlbnRpYWxQcm92aWRlciA9PiBhc3luYyAoKSA9PiB7XG4gIGNvbnN0IHByb2ZpbGVzID0gYXdhaXQgcGFyc2VLbm93bkZpbGVzKGluaXQpO1xuICByZXR1cm4gcmVzb2x2ZVByb2Nlc3NDcmVkZW50aWFscyhnZXRNYXN0ZXJQcm9maWxlTmFtZShpbml0KSwgcHJvZmlsZXMpO1xufTtcblxuY29uc3QgcmVzb2x2ZVByb2Nlc3NDcmVkZW50aWFscyA9IGFzeW5jIChwcm9maWxlTmFtZTogc3RyaW5nLCBwcm9maWxlczogUGFyc2VkSW5pRGF0YSk6IFByb21pc2U8Q3JlZGVudGlhbHM+ID0+IHtcbiAgY29uc3QgcHJvZmlsZSA9IHByb2ZpbGVzW3Byb2ZpbGVOYW1lXTtcblxuICBpZiAocHJvZmlsZXNbcHJvZmlsZU5hbWVdKSB7XG4gICAgY29uc3QgY3JlZGVudGlhbFByb2Nlc3MgPSBwcm9maWxlW1wiY3JlZGVudGlhbF9wcm9jZXNzXCJdO1xuICAgIGlmIChjcmVkZW50aWFsUHJvY2VzcyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gYXdhaXQgZXhlY1Byb21pc2UoY3JlZGVudGlhbFByb2Nlc3MpXG4gICAgICAgIC50aGVuKChwcm9jZXNzUmVzdWx0OiBhbnkpID0+IHtcbiAgICAgICAgICBsZXQgZGF0YTtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgZGF0YSA9IEpTT04ucGFyc2UocHJvY2Vzc1Jlc3VsdCk7XG4gICAgICAgICAgfSBjYXRjaCB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgUHJvZmlsZSAke3Byb2ZpbGVOYW1lfSBjcmVkZW50aWFsX3Byb2Nlc3MgcmV0dXJuZWQgaW52YWxpZCBKU09OLmApO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIFZlcnNpb246IHZlcnNpb24sXG4gICAgICAgICAgICBBY2Nlc3NLZXlJZDogYWNjZXNzS2V5SWQsXG4gICAgICAgICAgICBTZWNyZXRBY2Nlc3NLZXk6IHNlY3JldEFjY2Vzc0tleSxcbiAgICAgICAgICAgIFNlc3Npb25Ub2tlbjogc2Vzc2lvblRva2VuLFxuICAgICAgICAgICAgRXhwaXJhdGlvbjogZXhwaXJhdGlvbixcbiAgICAgICAgICB9ID0gZGF0YTtcblxuICAgICAgICAgIGlmICh2ZXJzaW9uICE9PSAxKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgUHJvZmlsZSAke3Byb2ZpbGVOYW1lfSBjcmVkZW50aWFsX3Byb2Nlc3MgZGlkIG5vdCByZXR1cm4gVmVyc2lvbiAxLmApO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChhY2Nlc3NLZXlJZCA9PT0gdW5kZWZpbmVkIHx8IHNlY3JldEFjY2Vzc0tleSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgUHJvZmlsZSAke3Byb2ZpbGVOYW1lfSBjcmVkZW50aWFsX3Byb2Nlc3MgcmV0dXJuZWQgaW52YWxpZCBjcmVkZW50aWFscy5gKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBsZXQgZXhwaXJhdGlvblVuaXg7XG5cbiAgICAgICAgICBpZiAoZXhwaXJhdGlvbikge1xuICAgICAgICAgICAgY29uc3QgY3VycmVudFRpbWUgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgY29uc3QgZXhwaXJlVGltZSA9IG5ldyBEYXRlKGV4cGlyYXRpb24pO1xuICAgICAgICAgICAgaWYgKGV4cGlyZVRpbWUgPCBjdXJyZW50VGltZSkge1xuICAgICAgICAgICAgICB0aHJvdyBFcnJvcihgUHJvZmlsZSAke3Byb2ZpbGVOYW1lfSBjcmVkZW50aWFsX3Byb2Nlc3MgcmV0dXJuZWQgZXhwaXJlZCBjcmVkZW50aWFscy5gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGV4cGlyYXRpb25Vbml4ID0gTWF0aC5mbG9vcihuZXcgRGF0ZShleHBpcmF0aW9uKS52YWx1ZU9mKCkgLyAxMDAwKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYWNjZXNzS2V5SWQsXG4gICAgICAgICAgICBzZWNyZXRBY2Nlc3NLZXksXG4gICAgICAgICAgICBzZXNzaW9uVG9rZW4sXG4gICAgICAgICAgICBleHBpcmF0aW9uVW5peCxcbiAgICAgICAgICB9O1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goKGVycm9yOiBFcnJvcikgPT4ge1xuICAgICAgICAgIHRocm93IG5ldyBQcm92aWRlckVycm9yKGVycm9yLm1lc3NhZ2UpO1xuICAgICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IFByb3ZpZGVyRXJyb3IoYFByb2ZpbGUgJHtwcm9maWxlTmFtZX0gZGlkIG5vdCBjb250YWluIGNyZWRlbnRpYWxfcHJvY2Vzcy5gKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gSWYgdGhlIHByb2ZpbGUgY2Fubm90IGJlIHBhcnNlZCBvciBkb2VzIG5vdCBjb250YWluIHRoZSBkZWZhdWx0IG9yXG4gICAgLy8gc3BlY2lmaWVkIHByb2ZpbGUgdGhyb3cgYW4gZXJyb3IuIFRoaXMgc2hvdWxkIGJlIGNvbnNpZGVyZWQgYSB0ZXJtaW5hbFxuICAgIC8vIHJlc29sdXRpb24gZXJyb3IgaWYgYSBwcm9maWxlIGhhcyBiZWVuIHNwZWNpZmllZCBieSB0aGUgdXNlciAod2hldGhlciB2aWFcbiAgICAvLyBhIHBhcmFtZXRlciwgYW5lbnZpcm9ubWVudCB2YXJpYWJsZSwgb3IgYW5vdGhlciBwcm9maWxlJ3MgYHNvdXJjZV9wcm9maWxlYCBrZXkpLlxuICAgIHRocm93IG5ldyBQcm92aWRlckVycm9yKGBQcm9maWxlICR7cHJvZmlsZU5hbWV9IGNvdWxkIG5vdCBiZSBmb3VuZCBpbiBzaGFyZWQgY3JlZGVudGlhbHMgZmlsZS5gKTtcbiAgfVxufTtcblxuY29uc3QgZXhlY1Byb21pc2UgPSAoY29tbWFuZDogc3RyaW5nKSA9PlxuICBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgZXhlYyhjb21tYW5kLCAoZXJyb3IsIHN0ZG91dCkgPT4ge1xuICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgcmVzb2x2ZShzdGRvdXQudHJpbSgpKTtcbiAgICB9KTtcbiAgfSk7XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/credential-provider-process/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/credential-provider-process/node_modules/tslib/tslib.es6.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-process/node_modules/tslib/tslib.es6.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/credential-provider-process/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/hash-node/dist/es/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@aws-sdk/hash-node/dist/es/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hash: () => (/* binding */ Hash)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_util_buffer_from__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/util-buffer-from */ \"(ssr)/./node_modules/@aws-sdk/util-buffer-from/dist/es/index.js\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nvar Hash = /** @class */ (function () {\n    function Hash(algorithmIdentifier, secret) {\n        this.hash = secret ? (0,crypto__WEBPACK_IMPORTED_MODULE_2__.createHmac)(algorithmIdentifier, castSourceData(secret)) : (0,crypto__WEBPACK_IMPORTED_MODULE_2__.createHash)(algorithmIdentifier);\n    }\n    Hash.prototype.update = function (toHash, encoding) {\n        this.hash.update(castSourceData(toHash, encoding));\n    };\n    Hash.prototype.digest = function () {\n        return Promise.resolve(this.hash.digest());\n    };\n    return Hash;\n}());\n\nfunction castSourceData(toCast, encoding) {\n    if (buffer__WEBPACK_IMPORTED_MODULE_1__.Buffer.isBuffer(toCast)) {\n        return toCast;\n    }\n    if (typeof toCast === \"string\") {\n        return (0,_aws_sdk_util_buffer_from__WEBPACK_IMPORTED_MODULE_0__.fromString)(toCast, encoding);\n    }\n    if (ArrayBuffer.isView(toCast)) {\n        return (0,_aws_sdk_util_buffer_from__WEBPACK_IMPORTED_MODULE_0__.fromArrayBuffer)(toCast.buffer, toCast.byteOffset, toCast.byteLength);\n    }\n    return (0,_aws_sdk_util_buffer_from__WEBPACK_IMPORTED_MODULE_0__.fromArrayBuffer)(toCast);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLGVBQWUsRUFBRSxVQUFVLEVBQWtCLE1BQU0sMkJBQTJCLENBQUM7QUFDeEYsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUNoQyxPQUFPLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFBMEIsTUFBTSxRQUFRLENBQUM7QUFFeEU7SUFHRSxjQUFZLG1CQUEyQixFQUFFLE1BQW1CO1FBQzFELElBQUksQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsbUJBQW1CLEVBQUUsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0lBQ2pILENBQUM7SUFFRCxxQkFBTSxHQUFOLFVBQU8sTUFBa0IsRUFBRSxRQUFzQztRQUMvRCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDckQsQ0FBQztJQUVELHFCQUFNLEdBQU47UUFDRSxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFDSCxXQUFDO0FBQUQsQ0FBQyxBQWRELElBY0M7O0FBRUQsU0FBUyxjQUFjLENBQUMsTUFBa0IsRUFBRSxRQUF5QjtJQUNuRSxJQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEVBQUU7UUFDM0IsT0FBTyxNQUFNLENBQUM7S0FDZjtJQUVELElBQUksT0FBTyxNQUFNLEtBQUssUUFBUSxFQUFFO1FBQzlCLE9BQU8sVUFBVSxDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQztLQUNyQztJQUVELElBQUksV0FBVyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRTtRQUM5QixPQUFPLGVBQWUsQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxVQUFVLEVBQUUsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0tBQzdFO0lBRUQsT0FBTyxlQUFlLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDakMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEhhc2ggYXMgSUhhc2gsIFNvdXJjZURhdGEgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcbmltcG9ydCB7IGZyb21BcnJheUJ1ZmZlciwgZnJvbVN0cmluZywgU3RyaW5nRW5jb2RpbmcgfSBmcm9tIFwiQGF3cy1zZGsvdXRpbC1idWZmZXItZnJvbVwiO1xuaW1wb3J0IHsgQnVmZmVyIH0gZnJvbSBcImJ1ZmZlclwiO1xuaW1wb3J0IHsgY3JlYXRlSGFzaCwgY3JlYXRlSG1hYywgSGFzaCBhcyBOb2RlSGFzaCwgSG1hYyB9IGZyb20gXCJjcnlwdG9cIjtcblxuZXhwb3J0IGNsYXNzIEhhc2ggaW1wbGVtZW50cyBJSGFzaCB7XG4gIHByaXZhdGUgcmVhZG9ubHkgaGFzaDogTm9kZUhhc2ggfCBIbWFjO1xuXG4gIGNvbnN0cnVjdG9yKGFsZ29yaXRobUlkZW50aWZpZXI6IHN0cmluZywgc2VjcmV0PzogU291cmNlRGF0YSkge1xuICAgIHRoaXMuaGFzaCA9IHNlY3JldCA/IGNyZWF0ZUhtYWMoYWxnb3JpdGhtSWRlbnRpZmllciwgY2FzdFNvdXJjZURhdGEoc2VjcmV0KSkgOiBjcmVhdGVIYXNoKGFsZ29yaXRobUlkZW50aWZpZXIpO1xuICB9XG5cbiAgdXBkYXRlKHRvSGFzaDogU291cmNlRGF0YSwgZW5jb2Rpbmc/OiBcInV0ZjhcIiB8IFwiYXNjaWlcIiB8IFwibGF0aW4xXCIpOiB2b2lkIHtcbiAgICB0aGlzLmhhc2gudXBkYXRlKGNhc3RTb3VyY2VEYXRhKHRvSGFzaCwgZW5jb2RpbmcpKTtcbiAgfVxuXG4gIGRpZ2VzdCgpOiBQcm9taXNlPFVpbnQ4QXJyYXk+IHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMuaGFzaC5kaWdlc3QoKSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2FzdFNvdXJjZURhdGEodG9DYXN0OiBTb3VyY2VEYXRhLCBlbmNvZGluZz86IFN0cmluZ0VuY29kaW5nKTogQnVmZmVyIHtcbiAgaWYgKEJ1ZmZlci5pc0J1ZmZlcih0b0Nhc3QpKSB7XG4gICAgcmV0dXJuIHRvQ2FzdDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgdG9DYXN0ID09PSBcInN0cmluZ1wiKSB7XG4gICAgcmV0dXJuIGZyb21TdHJpbmcodG9DYXN0LCBlbmNvZGluZyk7XG4gIH1cblxuICBpZiAoQXJyYXlCdWZmZXIuaXNWaWV3KHRvQ2FzdCkpIHtcbiAgICByZXR1cm4gZnJvbUFycmF5QnVmZmVyKHRvQ2FzdC5idWZmZXIsIHRvQ2FzdC5ieXRlT2Zmc2V0LCB0b0Nhc3QuYnl0ZUxlbmd0aCk7XG4gIH1cblxuICByZXR1cm4gZnJvbUFycmF5QnVmZmVyKHRvQ2FzdCk7XG59XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvaGFzaC1ub2RlL2Rpc3QvZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXdFO0FBQ3hDO0FBQ2dCO0FBQ2hEO0FBQ0E7QUFDQSw2QkFBNkIsa0RBQVUsZ0RBQWdELGtEQUFVO0FBQ2pHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ2U7QUFDaEI7QUFDQSxRQUFRLDBDQUFNO0FBQ2Q7QUFDQTtBQUNBO0FBQ0EsZUFBZSxxRUFBVTtBQUN6QjtBQUNBO0FBQ0EsZUFBZSwwRUFBZTtBQUM5QjtBQUNBLFdBQVcsMEVBQWU7QUFDMUI7QUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2hhc2gtbm9kZS9kaXN0L2VzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZyb21BcnJheUJ1ZmZlciwgZnJvbVN0cmluZyB9IGZyb20gXCJAYXdzLXNkay91dGlsLWJ1ZmZlci1mcm9tXCI7XG5pbXBvcnQgeyBCdWZmZXIgfSBmcm9tIFwiYnVmZmVyXCI7XG5pbXBvcnQgeyBjcmVhdGVIYXNoLCBjcmVhdGVIbWFjIH0gZnJvbSBcImNyeXB0b1wiO1xudmFyIEhhc2ggPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gSGFzaChhbGdvcml0aG1JZGVudGlmaWVyLCBzZWNyZXQpIHtcbiAgICAgICAgdGhpcy5oYXNoID0gc2VjcmV0ID8gY3JlYXRlSG1hYyhhbGdvcml0aG1JZGVudGlmaWVyLCBjYXN0U291cmNlRGF0YShzZWNyZXQpKSA6IGNyZWF0ZUhhc2goYWxnb3JpdGhtSWRlbnRpZmllcik7XG4gICAgfVxuICAgIEhhc2gucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uICh0b0hhc2gsIGVuY29kaW5nKSB7XG4gICAgICAgIHRoaXMuaGFzaC51cGRhdGUoY2FzdFNvdXJjZURhdGEodG9IYXNoLCBlbmNvZGluZykpO1xuICAgIH07XG4gICAgSGFzaC5wcm90b3R5cGUuZGlnZXN0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMuaGFzaC5kaWdlc3QoKSk7XG4gICAgfTtcbiAgICByZXR1cm4gSGFzaDtcbn0oKSk7XG5leHBvcnQgeyBIYXNoIH07XG5mdW5jdGlvbiBjYXN0U291cmNlRGF0YSh0b0Nhc3QsIGVuY29kaW5nKSB7XG4gICAgaWYgKEJ1ZmZlci5pc0J1ZmZlcih0b0Nhc3QpKSB7XG4gICAgICAgIHJldHVybiB0b0Nhc3Q7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdG9DYXN0ID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHJldHVybiBmcm9tU3RyaW5nKHRvQ2FzdCwgZW5jb2RpbmcpO1xuICAgIH1cbiAgICBpZiAoQXJyYXlCdWZmZXIuaXNWaWV3KHRvQ2FzdCkpIHtcbiAgICAgICAgcmV0dXJuIGZyb21BcnJheUJ1ZmZlcih0b0Nhc3QuYnVmZmVyLCB0b0Nhc3QuYnl0ZU9mZnNldCwgdG9DYXN0LmJ5dGVMZW5ndGgpO1xuICAgIH1cbiAgICByZXR1cm4gZnJvbUFycmF5QnVmZmVyKHRvQ2FzdCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lhVzVrWlhndWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12YVc1a1pYZ3VkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUTBFc1QwRkJUeXhGUVVGRkxHVkJRV1VzUlVGQlJTeFZRVUZWTEVWQlFXdENMRTFCUVUwc01rSkJRVEpDTEVOQlFVTTdRVUZEZUVZc1QwRkJUeXhGUVVGRkxFMUJRVTBzUlVGQlJTeE5RVUZOTEZGQlFWRXNRMEZCUXp0QlFVTm9ReXhQUVVGUExFVkJRVVVzVlVGQlZTeEZRVUZGTEZWQlFWVXNSVUZCTUVJc1RVRkJUU3hSUVVGUkxFTkJRVU03UVVGRmVFVTdTVUZIUlN4alFVRlpMRzFDUVVFeVFpeEZRVUZGTEUxQlFXMUNPMUZCUXpGRUxFbEJRVWtzUTBGQlF5eEpRVUZKTEVkQlFVY3NUVUZCVFN4RFFVRkRMRU5CUVVNc1EwRkJReXhWUVVGVkxFTkJRVU1zYlVKQlFXMUNMRVZCUVVVc1kwRkJZeXhEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRlZCUVZVc1EwRkJReXh0UWtGQmJVSXNRMEZCUXl4RFFVRkRPMGxCUTJwSUxFTkJRVU03U1VGRlJDeHhRa0ZCVFN4SFFVRk9MRlZCUVU4c1RVRkJhMElzUlVGQlJTeFJRVUZ6UXp0UlFVTXZSQ3hKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4alFVRmpMRU5CUVVNc1RVRkJUU3hGUVVGRkxGRkJRVkVzUTBGQlF5eERRVUZETEVOQlFVTTdTVUZEY2tRc1EwRkJRenRKUVVWRUxIRkNRVUZOTEVkQlFVNDdVVUZEUlN4UFFVRlBMRTlCUVU4c1EwRkJReXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4TlFVRk5MRVZCUVVVc1EwRkJReXhEUVVGRE8wbEJRemRETEVOQlFVTTdTVUZEU0N4WFFVRkRPMEZCUVVRc1EwRkJReXhCUVdSRUxFbEJZME03TzBGQlJVUXNVMEZCVXl4alFVRmpMRU5CUVVNc1RVRkJhMElzUlVGQlJTeFJRVUY1UWp0SlFVTnVSU3hKUVVGSkxFMUJRVTBzUTBGQlF5eFJRVUZSTEVOQlFVTXNUVUZCVFN4RFFVRkRMRVZCUVVVN1VVRkRNMElzVDBGQlR5eE5RVUZOTEVOQlFVTTdTMEZEWmp0SlFVVkVMRWxCUVVrc1QwRkJUeXhOUVVGTkxFdEJRVXNzVVVGQlVTeEZRVUZGTzFGQlF6bENMRTlCUVU4c1ZVRkJWU3hEUVVGRExFMUJRVTBzUlVGQlJTeFJRVUZSTEVOQlFVTXNRMEZCUXp0TFFVTnlRenRKUVVWRUxFbEJRVWtzVjBGQlZ5eERRVUZETEUxQlFVMHNRMEZCUXl4TlFVRk5MRU5CUVVNc1JVRkJSVHRSUVVNNVFpeFBRVUZQTEdWQlFXVXNRMEZCUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hGUVVGRkxFMUJRVTBzUTBGQlF5eFZRVUZWTEVWQlFVVXNUVUZCVFN4RFFVRkRMRlZCUVZVc1EwRkJReXhEUVVGRE8wdEJRemRGTzBsQlJVUXNUMEZCVHl4bFFVRmxMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU03UVVGRGFrTXNRMEZCUXlJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYkltbHRjRzl5ZENCN0lFaGhjMmdnWVhNZ1NVaGhjMmdzSUZOdmRYSmpaVVJoZEdFZ2ZTQm1jbTl0SUZ3aVFHRjNjeTF6WkdzdmRIbHdaWE5jSWp0Y2JtbHRjRzl5ZENCN0lHWnliMjFCY25KaGVVSjFabVpsY2l3Z1puSnZiVk4wY21sdVp5d2dVM1J5YVc1blJXNWpiMlJwYm1jZ2ZTQm1jbTl0SUZ3aVFHRjNjeTF6WkdzdmRYUnBiQzFpZFdabVpYSXRabkp2YlZ3aU8xeHVhVzF3YjNKMElIc2dRblZtWm1WeUlIMGdabkp2YlNCY0ltSjFabVpsY2x3aU8xeHVhVzF3YjNKMElIc2dZM0psWVhSbFNHRnphQ3dnWTNKbFlYUmxTRzFoWXl3Z1NHRnphQ0JoY3lCT2IyUmxTR0Z6YUN3Z1NHMWhZeUI5SUdaeWIyMGdYQ0pqY25sd2RHOWNJanRjYmx4dVpYaHdiM0owSUdOc1lYTnpJRWhoYzJnZ2FXMXdiR1Z0Wlc1MGN5QkpTR0Z6YUNCN1hHNGdJSEJ5YVhaaGRHVWdjbVZoWkc5dWJIa2dhR0Z6YURvZ1RtOWtaVWhoYzJnZ2ZDQkliV0ZqTzF4dVhHNGdJR052Ym5OMGNuVmpkRzl5S0dGc1oyOXlhWFJvYlVsa1pXNTBhV1pwWlhJNklITjBjbWx1Wnl3Z2MyVmpjbVYwUHpvZ1UyOTFjbU5sUkdGMFlTa2dlMXh1SUNBZ0lIUm9hWE11YUdGemFDQTlJSE5sWTNKbGRDQS9JR055WldGMFpVaHRZV01vWVd4bmIzSnBkR2h0U1dSbGJuUnBabWxsY2l3Z1kyRnpkRk52ZFhKalpVUmhkR0VvYzJWamNtVjBLU2tnT2lCamNtVmhkR1ZJWVhOb0tHRnNaMjl5YVhSb2JVbGtaVzUwYVdacFpYSXBPMXh1SUNCOVhHNWNiaUFnZFhCa1lYUmxLSFJ2U0dGemFEb2dVMjkxY21ObFJHRjBZU3dnWlc1amIyUnBibWMvT2lCY0luVjBaamhjSWlCOElGd2lZWE5qYVdsY0lpQjhJRndpYkdGMGFXNHhYQ0lwT2lCMmIybGtJSHRjYmlBZ0lDQjBhR2x6TG1oaGMyZ3VkWEJrWVhSbEtHTmhjM1JUYjNWeVkyVkVZWFJoS0hSdlNHRnphQ3dnWlc1amIyUnBibWNwS1R0Y2JpQWdmVnh1WEc0Z0lHUnBaMlZ6ZENncE9pQlFjbTl0YVhObFBGVnBiblE0UVhKeVlYaytJSHRjYmlBZ0lDQnlaWFIxY200Z1VISnZiV2x6WlM1eVpYTnZiSFpsS0hSb2FYTXVhR0Z6YUM1a2FXZGxjM1FvS1NrN1hHNGdJSDFjYm4xY2JseHVablZ1WTNScGIyNGdZMkZ6ZEZOdmRYSmpaVVJoZEdFb2RHOURZWE4wT2lCVGIzVnlZMlZFWVhSaExDQmxibU52WkdsdVp6ODZJRk4wY21sdVowVnVZMjlrYVc1bktUb2dRblZtWm1WeUlIdGNiaUFnYVdZZ0tFSjFabVpsY2k1cGMwSjFabVpsY2loMGIwTmhjM1FwS1NCN1hHNGdJQ0FnY21WMGRYSnVJSFJ2UTJGemREdGNiaUFnZlZ4dVhHNGdJR2xtSUNoMGVYQmxiMllnZEc5RFlYTjBJRDA5UFNCY0luTjBjbWx1WjF3aUtTQjdYRzRnSUNBZ2NtVjBkWEp1SUdaeWIyMVRkSEpwYm1jb2RHOURZWE4wTENCbGJtTnZaR2x1WnlrN1hHNGdJSDFjYmx4dUlDQnBaaUFvUVhKeVlYbENkV1ptWlhJdWFYTldhV1YzS0hSdlEyRnpkQ2twSUh0Y2JpQWdJQ0J5WlhSMWNtNGdabkp2YlVGeWNtRjVRblZtWm1WeUtIUnZRMkZ6ZEM1aWRXWm1aWElzSUhSdlEyRnpkQzVpZVhSbFQyWm1jMlYwTENCMGIwTmhjM1F1WW5sMFpVeGxibWQwYUNrN1hHNGdJSDFjYmx4dUlDQnlaWFIxY200Z1puSnZiVUZ5Y21GNVFuVm1abVZ5S0hSdlEyRnpkQ2s3WEc1OVhHNGlYWDA9Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/hash-node/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/is-array-buffer/dist/es/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@aws-sdk/is-array-buffer/dist/es/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isArrayBuffer: () => (/* binding */ isArrayBuffer)\n/* harmony export */ });\nvar isArrayBuffer = function (arg) {\n    return (typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer) ||\n        Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\";\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFDLElBQU0sYUFBYSxHQUFHLFVBQUMsR0FBUTtJQUNwQyxPQUFBLENBQUMsT0FBTyxXQUFXLEtBQUssVUFBVSxJQUFJLEdBQUcsWUFBWSxXQUFXLENBQUM7UUFDakUsTUFBTSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLHNCQUFzQjtBQUQ5RCxDQUM4RCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGlzQXJyYXlCdWZmZXIgPSAoYXJnOiBhbnkpOiBhcmcgaXMgQXJyYXlCdWZmZXIgPT5cbiAgKHR5cGVvZiBBcnJheUJ1ZmZlciA9PT0gXCJmdW5jdGlvblwiICYmIGFyZyBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB8fFxuICBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJnKSA9PT0gXCJbb2JqZWN0IEFycmF5QnVmZmVyXVwiO1xuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvaXMtYXJyYXktYnVmZmVyL2Rpc3QvZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9pcy1hcnJheS1idWZmZXIvZGlzdC9lcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIGlzQXJyYXlCdWZmZXIgPSBmdW5jdGlvbiAoYXJnKSB7XG4gICAgcmV0dXJuICh0eXBlb2YgQXJyYXlCdWZmZXIgPT09IFwiZnVuY3Rpb25cIiAmJiBhcmcgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcikgfHxcbiAgICAgICAgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFyZykgPT09IFwiW29iamVjdCBBcnJheUJ1ZmZlcl1cIjtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lhVzVrWlhndWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12YVc1a1pYZ3VkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1RVRkJUU3hEUVVGRExFbEJRVTBzWVVGQllTeEhRVUZITEZWQlFVTXNSMEZCVVR0SlFVTndReXhQUVVGQkxFTkJRVU1zVDBGQlR5eFhRVUZYTEV0QlFVc3NWVUZCVlN4SlFVRkpMRWRCUVVjc1dVRkJXU3hYUVVGWExFTkJRVU03VVVGRGFrVXNUVUZCVFN4RFFVRkRMRk5CUVZNc1EwRkJReXhSUVVGUkxFTkJRVU1zU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4TFFVRkxMSE5DUVVGelFqdEJRVVE1UkN4RFFVTTRSQ3hEUVVGRElpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2laWGh3YjNKMElHTnZibk4wSUdselFYSnlZWGxDZFdabVpYSWdQU0FvWVhKbk9pQmhibmtwT2lCaGNtY2dhWE1nUVhKeVlYbENkV1ptWlhJZ1BUNWNiaUFnS0hSNWNHVnZaaUJCY25KaGVVSjFabVpsY2lBOVBUMGdYQ0ptZFc1amRHbHZibHdpSUNZbUlHRnlaeUJwYm5OMFlXNWpaVzltSUVGeWNtRjVRblZtWm1WeUtTQjhmRnh1SUNCUFltcGxZM1F1Y0hKdmRHOTBlWEJsTG5SdlUzUnlhVzVuTG1OaGJHd29ZWEpuS1NBOVBUMGdYQ0piYjJKcVpXTjBJRUZ5Y21GNVFuVm1abVZ5WFZ3aU8xeHVJbDE5Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/is-array-buffer/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-content-length/dist/es/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-content-length/dist/es/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentLengthMiddleware: () => (/* binding */ contentLengthMiddleware),\n/* harmony export */   contentLengthMiddlewareOptions: () => (/* binding */ contentLengthMiddlewareOptions),\n/* harmony export */   getContentLengthPlugin: () => (/* binding */ getContentLengthPlugin)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/middleware-content-length/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/protocol-http */ \"(ssr)/./node_modules/@aws-sdk/protocol-http/dist/es/index.js\");\n\n\nvar CONTENT_LENGTH_HEADER = \"content-length\";\nfunction contentLengthMiddleware(bodyLengthChecker) {\n    var _this = this;\n    return function (next) { return function (args) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(_this, void 0, void 0, function () {\n        var request, body, headers, length;\n        var _a;\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_b) {\n            request = args.request;\n            if (_aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest.isInstance(request)) {\n                body = request.body, headers = request.headers;\n                if (body &&\n                    Object.keys(headers)\n                        .map(function (str) { return str.toLowerCase(); })\n                        .indexOf(CONTENT_LENGTH_HEADER) === -1) {\n                    length = bodyLengthChecker(body);\n                    if (length !== undefined) {\n                        request.headers = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, request.headers), (_a = {}, _a[CONTENT_LENGTH_HEADER] = String(length), _a));\n                    }\n                }\n            }\n            return [2 /*return*/, next((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, args), { request: request }))];\n        });\n    }); }; };\n}\nvar contentLengthMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n    name: \"contentLengthMiddleware\",\n    override: true,\n};\nvar getContentLengthPlugin = function (options) { return ({\n    applyToStack: function (clientStack) {\n        clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), contentLengthMiddlewareOptions);\n    },\n}); };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQVlyRCxJQUFNLHFCQUFxQixHQUFHLGdCQUFnQixDQUFDO0FBRS9DLE1BQU0sVUFBVSx1QkFBdUIsQ0FBQyxpQkFBdUM7SUFBL0UsaUJBNEJDO0lBM0JDLE9BQU8sVUFBZ0MsSUFBK0IsSUFBZ0MsT0FBQSxVQUNwRyxJQUFnQzs7OztZQUUxQixPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUM3QixJQUFJLFdBQVcsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUU7Z0JBQzNCLElBQUksR0FBYyxPQUFPLEtBQXJCLEVBQUUsT0FBTyxHQUFLLE9BQU8sUUFBWixDQUFhO2dCQUNsQyxJQUNFLElBQUk7b0JBQ0osTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7eUJBQ2pCLEdBQUcsQ0FBQyxVQUFDLEdBQUcsSUFBSyxPQUFBLEdBQUcsQ0FBQyxXQUFXLEVBQUUsRUFBakIsQ0FBaUIsQ0FBQzt5QkFDL0IsT0FBTyxDQUFDLHFCQUFxQixDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQ3hDO29CQUNNLE1BQU0sR0FBRyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztvQkFDdkMsSUFBSSxNQUFNLEtBQUssU0FBUyxFQUFFO3dCQUN4QixPQUFPLENBQUMsT0FBTyx5QkFDVixPQUFPLENBQUMsT0FBTyxnQkFDakIscUJBQXFCLElBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUN4QyxDQUFDO3FCQUNIO2lCQUNGO2FBQ0Y7WUFFRCxzQkFBTyxJQUFJLHVCQUNOLElBQUksS0FDUCxPQUFPLFNBQUEsSUFDUCxFQUFDOztTQUNKLEVBMUJxRyxDQTBCckcsQ0FBQztBQUNKLENBQUM7QUFFRCxNQUFNLENBQUMsSUFBTSw4QkFBOEIsR0FBd0I7SUFDakUsSUFBSSxFQUFFLE9BQU87SUFDYixJQUFJLEVBQUUsQ0FBQyxvQkFBb0IsRUFBRSxnQkFBZ0IsQ0FBQztJQUM5QyxJQUFJLEVBQUUseUJBQXlCO0lBQy9CLFFBQVEsRUFBRSxJQUFJO0NBQ2YsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLHNCQUFzQixHQUFHLFVBQUMsT0FBb0QsSUFBMEIsT0FBQSxDQUFDO0lBQ3BILFlBQVksRUFBRSxVQUFDLFdBQVc7UUFDeEIsV0FBVyxDQUFDLEdBQUcsQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsaUJBQWlCLENBQUMsRUFBRSw4QkFBOEIsQ0FBQyxDQUFDO0lBQ3RHLENBQUM7Q0FDRixDQUFDLEVBSm1ILENBSW5ILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwUmVxdWVzdCB9IGZyb20gXCJAYXdzLXNkay9wcm90b2NvbC1odHRwXCI7XG5pbXBvcnQge1xuICBCb2R5TGVuZ3RoQ2FsY3VsYXRvcixcbiAgQnVpbGRIYW5kbGVyLFxuICBCdWlsZEhhbmRsZXJBcmd1bWVudHMsXG4gIEJ1aWxkSGFuZGxlck9wdGlvbnMsXG4gIEJ1aWxkSGFuZGxlck91dHB1dCxcbiAgQnVpbGRNaWRkbGV3YXJlLFxuICBNZXRhZGF0YUJlYXJlcixcbiAgUGx1Z2dhYmxlLFxufSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuY29uc3QgQ09OVEVOVF9MRU5HVEhfSEVBREVSID0gXCJjb250ZW50LWxlbmd0aFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gY29udGVudExlbmd0aE1pZGRsZXdhcmUoYm9keUxlbmd0aENoZWNrZXI6IEJvZHlMZW5ndGhDYWxjdWxhdG9yKTogQnVpbGRNaWRkbGV3YXJlPGFueSwgYW55PiB7XG4gIHJldHVybiA8T3V0cHV0IGV4dGVuZHMgTWV0YWRhdGFCZWFyZXI+KG5leHQ6IEJ1aWxkSGFuZGxlcjxhbnksIE91dHB1dD4pOiBCdWlsZEhhbmRsZXI8YW55LCBPdXRwdXQ+ID0+IGFzeW5jIChcbiAgICBhcmdzOiBCdWlsZEhhbmRsZXJBcmd1bWVudHM8YW55PlxuICApOiBQcm9taXNlPEJ1aWxkSGFuZGxlck91dHB1dDxPdXRwdXQ+PiA9PiB7XG4gICAgY29uc3QgcmVxdWVzdCA9IGFyZ3MucmVxdWVzdDtcbiAgICBpZiAoSHR0cFJlcXVlc3QuaXNJbnN0YW5jZShyZXF1ZXN0KSkge1xuICAgICAgY29uc3QgeyBib2R5LCBoZWFkZXJzIH0gPSByZXF1ZXN0O1xuICAgICAgaWYgKFxuICAgICAgICBib2R5ICYmXG4gICAgICAgIE9iamVjdC5rZXlzKGhlYWRlcnMpXG4gICAgICAgICAgLm1hcCgoc3RyKSA9PiBzdHIudG9Mb3dlckNhc2UoKSlcbiAgICAgICAgICAuaW5kZXhPZihDT05URU5UX0xFTkdUSF9IRUFERVIpID09PSAtMVxuICAgICAgKSB7XG4gICAgICAgIGNvbnN0IGxlbmd0aCA9IGJvZHlMZW5ndGhDaGVja2VyKGJvZHkpO1xuICAgICAgICBpZiAobGVuZ3RoICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICByZXF1ZXN0LmhlYWRlcnMgPSB7XG4gICAgICAgICAgICAuLi5yZXF1ZXN0LmhlYWRlcnMsXG4gICAgICAgICAgICBbQ09OVEVOVF9MRU5HVEhfSEVBREVSXTogU3RyaW5nKGxlbmd0aCksXG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXh0KHtcbiAgICAgIC4uLmFyZ3MsXG4gICAgICByZXF1ZXN0LFxuICAgIH0pO1xuICB9O1xufVxuXG5leHBvcnQgY29uc3QgY29udGVudExlbmd0aE1pZGRsZXdhcmVPcHRpb25zOiBCdWlsZEhhbmRsZXJPcHRpb25zID0ge1xuICBzdGVwOiBcImJ1aWxkXCIsXG4gIHRhZ3M6IFtcIlNFVF9DT05URU5UX0xFTkdUSFwiLCBcIkNPTlRFTlRfTEVOR1RIXCJdLFxuICBuYW1lOiBcImNvbnRlbnRMZW5ndGhNaWRkbGV3YXJlXCIsXG4gIG92ZXJyaWRlOiB0cnVlLFxufTtcblxuZXhwb3J0IGNvbnN0IGdldENvbnRlbnRMZW5ndGhQbHVnaW4gPSAob3B0aW9uczogeyBib2R5TGVuZ3RoQ2hlY2tlcjogQm9keUxlbmd0aENhbGN1bGF0b3IgfSk6IFBsdWdnYWJsZTxhbnksIGFueT4gPT4gKHtcbiAgYXBwbHlUb1N0YWNrOiAoY2xpZW50U3RhY2spID0+IHtcbiAgICBjbGllbnRTdGFjay5hZGQoY29udGVudExlbmd0aE1pZGRsZXdhcmUob3B0aW9ucy5ib2R5TGVuZ3RoQ2hlY2tlciksIGNvbnRlbnRMZW5ndGhNaWRkbGV3YXJlT3B0aW9ucyk7XG4gIH0sXG59KTtcbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1jb250ZW50LWxlbmd0aC9kaXN0L2VzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXlEO0FBQ0o7QUFDckQ7QUFDTztBQUNQO0FBQ0EsNkJBQTZCLHlCQUF5QixPQUFPLGdEQUFTO0FBQ3RFO0FBQ0E7QUFDQSxlQUFlLGtEQUFXO0FBQzFCO0FBQ0EsZ0JBQWdCLCtEQUFXO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QywyQkFBMkI7QUFDekU7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLCtDQUFRLENBQUMsK0NBQVEsR0FBRyw0QkFBNEI7QUFDMUY7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLCtDQUFRLENBQUMsK0NBQVEsR0FBRyxXQUFXLGtCQUFrQjtBQUN4RixTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sa0RBQWtEO0FBQ3pEO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsQ0FBQztBQUNELDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1jb250ZW50LWxlbmd0aC9kaXN0L2VzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fYXNzaWduLCBfX2F3YWl0ZXIsIF9fZ2VuZXJhdG9yIH0gZnJvbSBcInRzbGliXCI7XG5pbXBvcnQgeyBIdHRwUmVxdWVzdCB9IGZyb20gXCJAYXdzLXNkay9wcm90b2NvbC1odHRwXCI7XG52YXIgQ09OVEVOVF9MRU5HVEhfSEVBREVSID0gXCJjb250ZW50LWxlbmd0aFwiO1xuZXhwb3J0IGZ1bmN0aW9uIGNvbnRlbnRMZW5ndGhNaWRkbGV3YXJlKGJvZHlMZW5ndGhDaGVja2VyKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcbiAgICByZXR1cm4gZnVuY3Rpb24gKG5leHQpIHsgcmV0dXJuIGZ1bmN0aW9uIChhcmdzKSB7IHJldHVybiBfX2F3YWl0ZXIoX3RoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciByZXF1ZXN0LCBib2R5LCBoZWFkZXJzLCBsZW5ndGg7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYikge1xuICAgICAgICAgICAgcmVxdWVzdCA9IGFyZ3MucmVxdWVzdDtcbiAgICAgICAgICAgIGlmIChIdHRwUmVxdWVzdC5pc0luc3RhbmNlKHJlcXVlc3QpKSB7XG4gICAgICAgICAgICAgICAgYm9keSA9IHJlcXVlc3QuYm9keSwgaGVhZGVycyA9IHJlcXVlc3QuaGVhZGVycztcbiAgICAgICAgICAgICAgICBpZiAoYm9keSAmJlxuICAgICAgICAgICAgICAgICAgICBPYmplY3Qua2V5cyhoZWFkZXJzKVxuICAgICAgICAgICAgICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAoc3RyKSB7IHJldHVybiBzdHIudG9Mb3dlckNhc2UoKTsgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIC5pbmRleE9mKENPTlRFTlRfTEVOR1RIX0hFQURFUikgPT09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aCA9IGJvZHlMZW5ndGhDaGVja2VyKGJvZHkpO1xuICAgICAgICAgICAgICAgICAgICBpZiAobGVuZ3RoICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVlc3QuaGVhZGVycyA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCByZXF1ZXN0LmhlYWRlcnMpLCAoX2EgPSB7fSwgX2FbQ09OVEVOVF9MRU5HVEhfSEVBREVSXSA9IFN0cmluZyhsZW5ndGgpLCBfYSkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIG5leHQoX19hc3NpZ24oX19hc3NpZ24oe30sIGFyZ3MpLCB7IHJlcXVlc3Q6IHJlcXVlc3QgfSkpXTtcbiAgICAgICAgfSk7XG4gICAgfSk7IH07IH07XG59XG5leHBvcnQgdmFyIGNvbnRlbnRMZW5ndGhNaWRkbGV3YXJlT3B0aW9ucyA9IHtcbiAgICBzdGVwOiBcImJ1aWxkXCIsXG4gICAgdGFnczogW1wiU0VUX0NPTlRFTlRfTEVOR1RIXCIsIFwiQ09OVEVOVF9MRU5HVEhcIl0sXG4gICAgbmFtZTogXCJjb250ZW50TGVuZ3RoTWlkZGxld2FyZVwiLFxuICAgIG92ZXJyaWRlOiB0cnVlLFxufTtcbmV4cG9ydCB2YXIgZ2V0Q29udGVudExlbmd0aFBsdWdpbiA9IGZ1bmN0aW9uIChvcHRpb25zKSB7IHJldHVybiAoe1xuICAgIGFwcGx5VG9TdGFjazogZnVuY3Rpb24gKGNsaWVudFN0YWNrKSB7XG4gICAgICAgIGNsaWVudFN0YWNrLmFkZChjb250ZW50TGVuZ3RoTWlkZGxld2FyZShvcHRpb25zLmJvZHlMZW5ndGhDaGVja2VyKSwgY29udGVudExlbmd0aE1pZGRsZXdhcmVPcHRpb25zKTtcbiAgICB9LFxufSk7IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lhVzVrWlhndWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12YVc1a1pYZ3VkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanRCUVVGQkxFOUJRVThzUlVGQlJTeFhRVUZYTEVWQlFVVXNUVUZCVFN4M1FrRkJkMElzUTBGQlF6dEJRVmx5UkN4SlFVRk5MSEZDUVVGeFFpeEhRVUZITEdkQ1FVRm5RaXhEUVVGRE8wRkJSUzlETEUxQlFVMHNWVUZCVlN4MVFrRkJkVUlzUTBGQlF5eHBRa0ZCZFVNN1NVRkJMMFVzYVVKQk5FSkRPMGxCTTBKRExFOUJRVThzVlVGQlowTXNTVUZCSzBJc1NVRkJaME1zVDBGQlFTeFZRVU53Unl4SlFVRm5RenM3T3p0WlFVVXhRaXhQUVVGUExFZEJRVWNzU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXp0WlFVTTNRaXhKUVVGSkxGZEJRVmNzUTBGQlF5eFZRVUZWTEVOQlFVTXNUMEZCVHl4RFFVRkRMRVZCUVVVN1owSkJRek5DTEVsQlFVa3NSMEZCWXl4UFFVRlBMRXRCUVhKQ0xFVkJRVVVzVDBGQlR5eEhRVUZMTEU5QlFVOHNVVUZCV2l4RFFVRmhPMmRDUVVOc1F5eEpRVU5GTEVsQlFVazdiMEpCUTBvc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTTdlVUpCUTJwQ0xFZEJRVWNzUTBGQlF5eFZRVUZETEVkQlFVY3NTVUZCU3l4UFFVRkJMRWRCUVVjc1EwRkJReXhYUVVGWExFVkJRVVVzUlVGQmFrSXNRMEZCYVVJc1EwRkJRenQ1UWtGREwwSXNUMEZCVHl4RFFVRkRMSEZDUVVGeFFpeERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRMRVZCUTNoRE8yOUNRVU5OTEUxQlFVMHNSMEZCUnl4cFFrRkJhVUlzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0dlFrRkRka01zU1VGQlNTeE5RVUZOTEV0QlFVc3NVMEZCVXl4RlFVRkZPM2RDUVVONFFpeFBRVUZQTEVOQlFVTXNUMEZCVHl4NVFrRkRWaXhQUVVGUExFTkJRVU1zVDBGQlR5eG5Ra0ZEYWtJc2NVSkJRWEZDTEVsQlFVY3NUVUZCVFN4RFFVRkRMRTFCUVUwc1EwRkJReXhOUVVONFF5eERRVUZETzNGQ1FVTklPMmxDUVVOR08yRkJRMFk3V1VGRlJDeHpRa0ZCVHl4SlFVRkpMSFZDUVVOT0xFbEJRVWtzUzBGRFVDeFBRVUZQTEZOQlFVRXNTVUZEVUN4RlFVRkRPenRUUVVOS0xFVkJNVUp4Unl4RFFUQkNja2NzUTBGQlF6dEJRVU5LTEVOQlFVTTdRVUZGUkN4TlFVRk5MRU5CUVVNc1NVRkJUU3c0UWtGQk9FSXNSMEZCZDBJN1NVRkRha1VzU1VGQlNTeEZRVUZGTEU5QlFVODdTVUZEWWl4SlFVRkpMRVZCUVVVc1EwRkJReXh2UWtGQmIwSXNSVUZCUlN4blFrRkJaMElzUTBGQlF6dEpRVU01UXl4SlFVRkpMRVZCUVVVc2VVSkJRWGxDTzBsQlF5OUNMRkZCUVZFc1JVRkJSU3hKUVVGSk8wTkJRMllzUTBGQlF6dEJRVVZHTEUxQlFVMHNRMEZCUXl4SlFVRk5MSE5DUVVGelFpeEhRVUZITEZWQlFVTXNUMEZCYjBRc1NVRkJNRUlzVDBGQlFTeERRVUZETzBsQlEzQklMRmxCUVZrc1JVRkJSU3hWUVVGRExGZEJRVmM3VVVGRGVFSXNWMEZCVnl4RFFVRkRMRWRCUVVjc1EwRkJReXgxUWtGQmRVSXNRMEZCUXl4UFFVRlBMRU5CUVVNc2FVSkJRV2xDTEVOQlFVTXNSVUZCUlN3NFFrRkJPRUlzUTBGQlF5eERRVUZETzBsQlEzUkhMRU5CUVVNN1EwRkRSaXhEUVVGRExFVkJTbTFJTEVOQlNXNUlMRU5CUVVNaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SnBiWEJ2Y25RZ2V5QklkSFJ3VW1WeGRXVnpkQ0I5SUdaeWIyMGdYQ0pBWVhkekxYTmtheTl3Y205MGIyTnZiQzFvZEhSd1hDSTdYRzVwYlhCdmNuUWdlMXh1SUNCQ2IyUjVUR1Z1WjNSb1EyRnNZM1ZzWVhSdmNpeGNiaUFnUW5WcGJHUklZVzVrYkdWeUxGeHVJQ0JDZFdsc1pFaGhibVJzWlhKQmNtZDFiV1Z1ZEhNc1hHNGdJRUoxYVd4a1NHRnVaR3hsY2s5d2RHbHZibk1zWEc0Z0lFSjFhV3hrU0dGdVpHeGxjazkxZEhCMWRDeGNiaUFnUW5WcGJHUk5hV1JrYkdWM1lYSmxMRnh1SUNCTlpYUmhaR0YwWVVKbFlYSmxjaXhjYmlBZ1VHeDFaMmRoWW14bExGeHVmU0JtY205dElGd2lRR0YzY3kxelpHc3ZkSGx3WlhOY0lqdGNibHh1WTI5dWMzUWdRMDlPVkVWT1ZGOU1SVTVIVkVoZlNFVkJSRVZTSUQwZ1hDSmpiMjUwWlc1MExXeGxibWQwYUZ3aU8xeHVYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdZMjl1ZEdWdWRFeGxibWQwYUUxcFpHUnNaWGRoY21Vb1ltOWtlVXhsYm1kMGFFTm9aV05yWlhJNklFSnZaSGxNWlc1bmRHaERZV3hqZFd4aGRHOXlLVG9nUW5WcGJHUk5hV1JrYkdWM1lYSmxQR0Z1ZVN3Z1lXNTVQaUI3WEc0Z0lISmxkSFZ5YmlBOFQzVjBjSFYwSUdWNGRHVnVaSE1nVFdWMFlXUmhkR0ZDWldGeVpYSStLRzVsZUhRNklFSjFhV3hrU0dGdVpHeGxjanhoYm5rc0lFOTFkSEIxZEQ0cE9pQkNkV2xzWkVoaGJtUnNaWEk4WVc1NUxDQlBkWFJ3ZFhRK0lEMCtJR0Z6ZVc1aklDaGNiaUFnSUNCaGNtZHpPaUJDZFdsc1pFaGhibVJzWlhKQmNtZDFiV1Z1ZEhNOFlXNTVQbHh1SUNBcE9pQlFjbTl0YVhObFBFSjFhV3hrU0dGdVpHeGxjazkxZEhCMWREeFBkWFJ3ZFhRK1BpQTlQaUI3WEc0Z0lDQWdZMjl1YzNRZ2NtVnhkV1Z6ZENBOUlHRnlaM011Y21WeGRXVnpkRHRjYmlBZ0lDQnBaaUFvU0hSMGNGSmxjWFZsYzNRdWFYTkpibk4wWVc1alpTaHlaWEYxWlhOMEtTa2dlMXh1SUNBZ0lDQWdZMjl1YzNRZ2V5QmliMlI1TENCb1pXRmtaWEp6SUgwZ1BTQnlaWEYxWlhOME8xeHVJQ0FnSUNBZ2FXWWdLRnh1SUNBZ0lDQWdJQ0JpYjJSNUlDWW1YRzRnSUNBZ0lDQWdJRTlpYW1WamRDNXJaWGx6S0dobFlXUmxjbk1wWEc0Z0lDQWdJQ0FnSUNBZ0xtMWhjQ2dvYzNSeUtTQTlQaUJ6ZEhJdWRHOU1iM2RsY2tOaGMyVW9LU2xjYmlBZ0lDQWdJQ0FnSUNBdWFXNWtaWGhQWmloRFQwNVVSVTVVWDB4RlRrZFVTRjlJUlVGRVJWSXBJRDA5UFNBdE1WeHVJQ0FnSUNBZ0tTQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElHeGxibWQwYUNBOUlHSnZaSGxNWlc1bmRHaERhR1ZqYTJWeUtHSnZaSGtwTzF4dUlDQWdJQ0FnSUNCcFppQW9iR1Z1WjNSb0lDRTlQU0IxYm1SbFptbHVaV1FwSUh0Y2JpQWdJQ0FnSUNBZ0lDQnlaWEYxWlhOMExtaGxZV1JsY25NZ1BTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBdUxpNXlaWEYxWlhOMExtaGxZV1JsY25Nc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JiUTA5T1ZFVk9WRjlNUlU1SFZFaGZTRVZCUkVWU1hUb2dVM1J5YVc1bktHeGxibWQwYUNrc1hHNGdJQ0FnSUNBZ0lDQWdmVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJSEpsZEhWeWJpQnVaWGgwS0h0Y2JpQWdJQ0FnSUM0dUxtRnlaM01zWEc0Z0lDQWdJQ0J5WlhGMVpYTjBMRnh1SUNBZ0lIMHBPMXh1SUNCOU8xeHVmVnh1WEc1bGVIQnZjblFnWTI5dWMzUWdZMjl1ZEdWdWRFeGxibWQwYUUxcFpHUnNaWGRoY21WUGNIUnBiMjV6T2lCQ2RXbHNaRWhoYm1Sc1pYSlBjSFJwYjI1eklEMGdlMXh1SUNCemRHVndPaUJjSW1KMWFXeGtYQ0lzWEc0Z0lIUmhaM002SUZ0Y0lsTkZWRjlEVDA1VVJVNVVYMHhGVGtkVVNGd2lMQ0JjSWtOUFRsUkZUbFJmVEVWT1IxUklYQ0pkTEZ4dUlDQnVZVzFsT2lCY0ltTnZiblJsYm5STVpXNW5kR2hOYVdSa2JHVjNZWEpsWENJc1hHNGdJRzkyWlhKeWFXUmxPaUIwY25WbExGeHVmVHRjYmx4dVpYaHdiM0owSUdOdmJuTjBJR2RsZEVOdmJuUmxiblJNWlc1bmRHaFFiSFZuYVc0Z1BTQW9iM0IwYVc5dWN6b2dleUJpYjJSNVRHVnVaM1JvUTJobFkydGxjam9nUW05a2VVeGxibWQwYUVOaGJHTjFiR0YwYjNJZ2ZTazZJRkJzZFdkbllXSnNaVHhoYm5rc0lHRnVlVDRnUFQ0Z0tIdGNiaUFnWVhCd2JIbFViMU4wWVdOck9pQW9ZMnhwWlc1MFUzUmhZMnNwSUQwK0lIdGNiaUFnSUNCamJHbGxiblJUZEdGamF5NWhaR1FvWTI5dWRHVnVkRXhsYm1kMGFFMXBaR1JzWlhkaGNtVW9iM0IwYVc5dWN5NWliMlI1VEdWdVozUm9RMmhsWTJ0bGNpa3NJR052Ym5SbGJuUk1aVzVuZEdoTmFXUmtiR1YzWVhKbFQzQjBhVzl1Y3lrN1hHNGdJSDBzWEc1OUtUdGNiaUpkZlE9PSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-content-length/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-content-length/node_modules/tslib/tslib.es6.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-content-length/node_modules/tslib/tslib.es6.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-content-length/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-host-header/dist/es/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-host-header/dist/es/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getHostHeaderPlugin: () => (/* binding */ getHostHeaderPlugin),\n/* harmony export */   hostHeaderMiddleware: () => (/* binding */ hostHeaderMiddleware),\n/* harmony export */   hostHeaderMiddlewareOptions: () => (/* binding */ hostHeaderMiddlewareOptions),\n/* harmony export */   resolveHostHeaderConfig: () => (/* binding */ resolveHostHeaderConfig)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/middleware-host-header/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/protocol-http */ \"(ssr)/./node_modules/@aws-sdk/protocol-http/dist/es/index.js\");\n\n\nfunction resolveHostHeaderConfig(input) {\n    return input;\n}\nvar hostHeaderMiddleware = function (options) { return function (next) { return function (args) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var request, _a, handlerProtocol;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_b) {\n        if (!_aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest.isInstance(args.request))\n            return [2 /*return*/, next(args)];\n        request = args.request;\n        _a = (options.requestHandler.metadata || {}).handlerProtocol, handlerProtocol = _a === void 0 ? \"\" : _a;\n        //For H2 request, remove 'host' header and use ':authority' header instead\n        //reference: https://nodejs.org/dist/latest-v13.x/docs/api/errors.html#ERR_HTTP2_INVALID_CONNECTION_HEADERS\n        if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n            delete request.headers[\"host\"];\n            request.headers[\":authority\"] = \"\";\n            //non-H2 request and 'host' header is not set, set the 'host' header to request's hostname.\n        }\n        else if (!request.headers[\"host\"]) {\n            request.headers[\"host\"] = request.hostname;\n        }\n        return [2 /*return*/, next(args)];\n    });\n}); }; }; };\nvar hostHeaderMiddlewareOptions = {\n    name: \"hostHeaderMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"HOST\"],\n    override: true,\n};\nvar getHostHeaderPlugin = function (options) { return ({\n    applyToStack: function (clientStack) {\n        clientStack.add(hostHeaderMiddleware(options), hostHeaderMiddlewareOptions);\n    },\n}); };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQVVyRCxNQUFNLFVBQVUsdUJBQXVCLENBQ3JDLEtBQXFEO0lBRXJELE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQztBQUVELE1BQU0sQ0FBQyxJQUFNLG9CQUFvQixHQUFHLFVBQ2xDLE9BQWlDLElBQ0UsT0FBQSxVQUFDLElBQUksSUFBSyxPQUFBLFVBQU8sSUFBSTs7O1FBQ3hELElBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7WUFBRSxzQkFBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUM7UUFDckQsT0FBTyxHQUFLLElBQUksUUFBVCxDQUFVO1FBQ2pCLEtBQXlCLENBQUEsT0FBTyxDQUFDLGNBQWMsQ0FBQyxRQUFRLElBQUksRUFBRSxDQUFBLGdCQUExQyxFQUFwQixlQUFlLG1CQUFHLEVBQUUsS0FBQSxDQUEyQztRQUN2RSwwRUFBMEU7UUFDMUUsMkdBQTJHO1FBQzNHLElBQUksZUFBZSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxFQUFFO1lBQ3hFLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUMvQixPQUFPLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxHQUFHLEVBQUUsQ0FBQztZQUNuQywyRkFBMkY7U0FDNUY7YUFBTSxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUNuQyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7U0FDNUM7UUFDRCxzQkFBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUM7O0tBQ25CLEVBZDhDLENBYzlDLEVBZG9DLENBY3BDLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSwyQkFBMkIsR0FBMkM7SUFDakYsSUFBSSxFQUFFLHNCQUFzQjtJQUM1QixJQUFJLEVBQUUsT0FBTztJQUNiLFFBQVEsRUFBRSxLQUFLO0lBQ2YsSUFBSSxFQUFFLENBQUMsTUFBTSxDQUFDO0lBQ2QsUUFBUSxFQUFFLElBQUk7Q0FDZixDQUFDO0FBRUYsTUFBTSxDQUFDLElBQU0sbUJBQW1CLEdBQUcsVUFBQyxPQUFpQyxJQUEwQixPQUFBLENBQUM7SUFDOUYsWUFBWSxFQUFFLFVBQUMsV0FBVztRQUN4QixXQUFXLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDLE9BQU8sQ0FBQyxFQUFFLDJCQUEyQixDQUFDLENBQUM7SUFDOUUsQ0FBQztDQUNGLENBQUMsRUFKNkYsQ0FJN0YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBSZXF1ZXN0IH0gZnJvbSBcIkBhd3Mtc2RrL3Byb3RvY29sLWh0dHBcIjtcbmltcG9ydCB7IEFic29sdXRlTG9jYXRpb24sIEJ1aWxkSGFuZGxlck9wdGlvbnMsIEJ1aWxkTWlkZGxld2FyZSwgUGx1Z2dhYmxlLCBSZXF1ZXN0SGFuZGxlciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEhvc3RIZWFkZXJJbnB1dENvbmZpZyB7fVxuaW50ZXJmYWNlIFByZXZpb3VzbHlSZXNvbHZlZCB7XG4gIHJlcXVlc3RIYW5kbGVyOiBSZXF1ZXN0SGFuZGxlcjxhbnksIGFueT47XG59XG5leHBvcnQgaW50ZXJmYWNlIEhvc3RIZWFkZXJSZXNvbHZlZENvbmZpZyB7XG4gIHJlcXVlc3RIYW5kbGVyOiBSZXF1ZXN0SGFuZGxlcjxhbnksIGFueT47XG59XG5leHBvcnQgZnVuY3Rpb24gcmVzb2x2ZUhvc3RIZWFkZXJDb25maWc8VD4oXG4gIGlucHV0OiBUICYgUHJldmlvdXNseVJlc29sdmVkICYgSG9zdEhlYWRlcklucHV0Q29uZmlnXG4pOiBUICYgSG9zdEhlYWRlclJlc29sdmVkQ29uZmlnIHtcbiAgcmV0dXJuIGlucHV0O1xufVxuXG5leHBvcnQgY29uc3QgaG9zdEhlYWRlck1pZGRsZXdhcmUgPSA8SW5wdXQgZXh0ZW5kcyBvYmplY3QsIE91dHB1dCBleHRlbmRzIG9iamVjdD4oXG4gIG9wdGlvbnM6IEhvc3RIZWFkZXJSZXNvbHZlZENvbmZpZ1xuKTogQnVpbGRNaWRkbGV3YXJlPElucHV0LCBPdXRwdXQ+ID0+IChuZXh0KSA9PiBhc3luYyAoYXJncykgPT4ge1xuICBpZiAoIUh0dHBSZXF1ZXN0LmlzSW5zdGFuY2UoYXJncy5yZXF1ZXN0KSkgcmV0dXJuIG5leHQoYXJncyk7XG4gIGNvbnN0IHsgcmVxdWVzdCB9ID0gYXJncztcbiAgY29uc3QgeyBoYW5kbGVyUHJvdG9jb2wgPSBcIlwiIH0gPSBvcHRpb25zLnJlcXVlc3RIYW5kbGVyLm1ldGFkYXRhIHx8IHt9O1xuICAvL0ZvciBIMiByZXF1ZXN0LCByZW1vdmUgJ2hvc3QnIGhlYWRlciBhbmQgdXNlICc6YXV0aG9yaXR5JyBoZWFkZXIgaW5zdGVhZFxuICAvL3JlZmVyZW5jZTogaHR0cHM6Ly9ub2RlanMub3JnL2Rpc3QvbGF0ZXN0LXYxMy54L2RvY3MvYXBpL2Vycm9ycy5odG1sI0VSUl9IVFRQMl9JTlZBTElEX0NPTk5FQ1RJT05fSEVBREVSU1xuICBpZiAoaGFuZGxlclByb3RvY29sLmluZGV4T2YoXCJoMlwiKSA+PSAwICYmICFyZXF1ZXN0LmhlYWRlcnNbXCI6YXV0aG9yaXR5XCJdKSB7XG4gICAgZGVsZXRlIHJlcXVlc3QuaGVhZGVyc1tcImhvc3RcIl07XG4gICAgcmVxdWVzdC5oZWFkZXJzW1wiOmF1dGhvcml0eVwiXSA9IFwiXCI7XG4gICAgLy9ub24tSDIgcmVxdWVzdCBhbmQgJ2hvc3QnIGhlYWRlciBpcyBub3Qgc2V0LCBzZXQgdGhlICdob3N0JyBoZWFkZXIgdG8gcmVxdWVzdCdzIGhvc3RuYW1lLlxuICB9IGVsc2UgaWYgKCFyZXF1ZXN0LmhlYWRlcnNbXCJob3N0XCJdKSB7XG4gICAgcmVxdWVzdC5oZWFkZXJzW1wiaG9zdFwiXSA9IHJlcXVlc3QuaG9zdG5hbWU7XG4gIH1cbiAgcmV0dXJuIG5leHQoYXJncyk7XG59O1xuXG5leHBvcnQgY29uc3QgaG9zdEhlYWRlck1pZGRsZXdhcmVPcHRpb25zOiBCdWlsZEhhbmRsZXJPcHRpb25zICYgQWJzb2x1dGVMb2NhdGlvbiA9IHtcbiAgbmFtZTogXCJob3N0SGVhZGVyTWlkZGxld2FyZVwiLFxuICBzdGVwOiBcImJ1aWxkXCIsXG4gIHByaW9yaXR5OiBcImxvd1wiLFxuICB0YWdzOiBbXCJIT1NUXCJdLFxuICBvdmVycmlkZTogdHJ1ZSxcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRIb3N0SGVhZGVyUGx1Z2luID0gKG9wdGlvbnM6IEhvc3RIZWFkZXJSZXNvbHZlZENvbmZpZyk6IFBsdWdnYWJsZTxhbnksIGFueT4gPT4gKHtcbiAgYXBwbHlUb1N0YWNrOiAoY2xpZW50U3RhY2spID0+IHtcbiAgICBjbGllbnRTdGFjay5hZGQoaG9zdEhlYWRlck1pZGRsZXdhcmUob3B0aW9ucyksIGhvc3RIZWFkZXJNaWRkbGV3YXJlT3B0aW9ucyk7XG4gIH0sXG59KTtcbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-host-header/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-host-header/node_modules/tslib/tslib.es6.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-host-header/node_modules/tslib/tslib.es6.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-host-header/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-logger/dist/es/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-logger/dist/es/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getLoggerPlugin: () => (/* reexport safe */ _loggerMiddleware__WEBPACK_IMPORTED_MODULE_0__.getLoggerPlugin),\n/* harmony export */   loggerMiddleware: () => (/* reexport safe */ _loggerMiddleware__WEBPACK_IMPORTED_MODULE_0__.loggerMiddleware),\n/* harmony export */   loggerMiddlewareOptions: () => (/* reexport safe */ _loggerMiddleware__WEBPACK_IMPORTED_MODULE_0__.loggerMiddlewareOptions)\n/* harmony export */ });\n/* harmony import */ var _loggerMiddleware__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./loggerMiddleware */ \"(ssr)/./node_modules/@aws-sdk/middleware-logger/dist/es/loggerMiddleware.js\");\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxvQkFBb0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2xvZ2dlck1pZGRsZXdhcmVcIjtcbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1sb2dnZXIvZGlzdC9lcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW1DO0FBQ25DLDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1sb2dnZXIvZGlzdC9lcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9sb2dnZXJNaWRkbGV3YXJlXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lhVzVrWlhndWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12YVc1a1pYZ3VkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1kwRkJZeXh2UWtGQmIwSXNRMEZCUXlJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYkltVjRjRzl5ZENBcUlHWnliMjBnWENJdUwyeHZaMmRsY2sxcFpHUnNaWGRoY21WY0lqdGNiaUpkZlE9PSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-logger/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-logger/dist/es/loggerMiddleware.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-logger/dist/es/loggerMiddleware.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getLoggerPlugin: () => (/* binding */ getLoggerPlugin),\n/* harmony export */   loggerMiddleware: () => (/* binding */ loggerMiddleware),\n/* harmony export */   loggerMiddlewareOptions: () => (/* binding */ loggerMiddlewareOptions)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/middleware-logger/node_modules/tslib/tslib.es6.js\");\n\nvar loggerMiddleware = function () { return function (next, context) { return function (args) { return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(void 0, void 0, void 0, function () {\n    var clientName, commandName, inputFilterSensitiveLog, logger, outputFilterSensitiveLog, response, _a, $metadata, outputWithoutMetadata;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                clientName = context.clientName, commandName = context.commandName, inputFilterSensitiveLog = context.inputFilterSensitiveLog, logger = context.logger, outputFilterSensitiveLog = context.outputFilterSensitiveLog;\n                return [4 /*yield*/, next(args)];\n            case 1:\n                response = _b.sent();\n                if (!logger) {\n                    return [2 /*return*/, response];\n                }\n                if (typeof logger.info === \"function\") {\n                    _a = response.output, $metadata = _a.$metadata, outputWithoutMetadata = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(_a, [\"$metadata\"]);\n                    logger.info({\n                        clientName: clientName,\n                        commandName: commandName,\n                        input: inputFilterSensitiveLog(args.input),\n                        output: outputFilterSensitiveLog(outputWithoutMetadata),\n                        metadata: $metadata,\n                    });\n                }\n                return [2 /*return*/, response];\n        }\n    });\n}); }; }; };\nvar loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\"LOGGER\"],\n    step: \"initialize\",\n    override: true,\n};\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar getLoggerPlugin = function (options) { return ({\n    applyToStack: function (clientStack) {\n        clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n    },\n}); };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2VyTWlkZGxld2FyZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9sb2dnZXJNaWRkbGV3YXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFZQSxNQUFNLENBQUMsSUFBTSxnQkFBZ0IsR0FBRyxjQUFNLE9BQUEsVUFDcEMsSUFBb0MsRUFDcEMsT0FBZ0MsSUFDRyxPQUFBLFVBQ25DLElBQXFDOzs7OztnQkFFN0IsVUFBVSxHQUE2RSxPQUFPLFdBQXBGLEVBQUUsV0FBVyxHQUFnRSxPQUFPLFlBQXZFLEVBQUUsdUJBQXVCLEdBQXVDLE9BQU8sd0JBQTlDLEVBQUUsTUFBTSxHQUErQixPQUFPLE9BQXRDLEVBQUUsd0JBQXdCLEdBQUssT0FBTyx5QkFBWixDQUFhO2dCQUV0RixxQkFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUE7O2dCQUEzQixRQUFRLEdBQUcsU0FBZ0I7Z0JBRWpDLElBQUksQ0FBQyxNQUFNLEVBQUU7b0JBQ1gsc0JBQU8sUUFBUSxFQUFDO2lCQUNqQjtnQkFFRCxJQUFJLE9BQU8sTUFBTSxDQUFDLElBQUksS0FBSyxVQUFVLEVBQUU7b0JBQy9CLEtBQTBDLFFBQVEsQ0FBQyxNQUFNLEVBQXZELFNBQVMsZUFBQSxFQUFLLHFCQUFxQixjQUFyQyxhQUF1QyxDQUFGLENBQXFCO29CQUNoRSxNQUFNLENBQUMsSUFBSSxDQUFDO3dCQUNWLFVBQVUsWUFBQTt3QkFDVixXQUFXLGFBQUE7d0JBQ1gsS0FBSyxFQUFFLHVCQUF1QixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7d0JBQzFDLE1BQU0sRUFBRSx3QkFBd0IsQ0FBQyxxQkFBcUIsQ0FBQzt3QkFDdkQsUUFBUSxFQUFFLFNBQVM7cUJBQ3BCLENBQUMsQ0FBQztpQkFDSjtnQkFFRCxzQkFBTyxRQUFRLEVBQUM7OztLQUNqQixFQXZCb0MsQ0F1QnBDLEVBMUJxQyxDQTBCckMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLHVCQUF1QixHQUFnRDtJQUNsRixJQUFJLEVBQUUsa0JBQWtCO0lBQ3hCLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQztJQUNoQixJQUFJLEVBQUUsWUFBWTtJQUNsQixRQUFRLEVBQUUsSUFBSTtDQUNmLENBQUM7QUFFRiw2REFBNkQ7QUFDN0QsTUFBTSxDQUFDLElBQU0sZUFBZSxHQUFHLFVBQUMsT0FBWSxJQUEwQixPQUFBLENBQUM7SUFDckUsWUFBWSxFQUFFLFVBQUMsV0FBVztRQUN4QixXQUFXLENBQUMsR0FBRyxDQUFDLGdCQUFnQixFQUFFLEVBQUUsdUJBQXVCLENBQUMsQ0FBQztJQUMvRCxDQUFDO0NBQ0YsQ0FBQyxFQUpvRSxDQUlwRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSHR0cFJlc3BvbnNlIH0gZnJvbSBcIkBhd3Mtc2RrL3Byb3RvY29sLWh0dHBcIjtcbmltcG9ydCB7XG4gIEFic29sdXRlTG9jYXRpb24sXG4gIEhhbmRsZXJFeGVjdXRpb25Db250ZXh0LFxuICBJbml0aWFsaXplSGFuZGxlcixcbiAgSW5pdGlhbGl6ZUhhbmRsZXJBcmd1bWVudHMsXG4gIEluaXRpYWxpemVIYW5kbGVyT3B0aW9ucyxcbiAgSW5pdGlhbGl6ZUhhbmRsZXJPdXRwdXQsXG4gIE1ldGFkYXRhQmVhcmVyLFxuICBQbHVnZ2FibGUsXG59IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5leHBvcnQgY29uc3QgbG9nZ2VyTWlkZGxld2FyZSA9ICgpID0+IDxPdXRwdXQgZXh0ZW5kcyBNZXRhZGF0YUJlYXJlciA9IE1ldGFkYXRhQmVhcmVyPihcbiAgbmV4dDogSW5pdGlhbGl6ZUhhbmRsZXI8YW55LCBPdXRwdXQ+LFxuICBjb250ZXh0OiBIYW5kbGVyRXhlY3V0aW9uQ29udGV4dFxuKTogSW5pdGlhbGl6ZUhhbmRsZXI8YW55LCBPdXRwdXQ+ID0+IGFzeW5jIChcbiAgYXJnczogSW5pdGlhbGl6ZUhhbmRsZXJBcmd1bWVudHM8YW55PlxuKTogUHJvbWlzZTxJbml0aWFsaXplSGFuZGxlck91dHB1dDxPdXRwdXQ+PiA9PiB7XG4gIGNvbnN0IHsgY2xpZW50TmFtZSwgY29tbWFuZE5hbWUsIGlucHV0RmlsdGVyU2Vuc2l0aXZlTG9nLCBsb2dnZXIsIG91dHB1dEZpbHRlclNlbnNpdGl2ZUxvZyB9ID0gY29udGV4dDtcblxuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IG5leHQoYXJncyk7XG5cbiAgaWYgKCFsb2dnZXIpIHtcbiAgICByZXR1cm4gcmVzcG9uc2U7XG4gIH1cblxuICBpZiAodHlwZW9mIGxvZ2dlci5pbmZvID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICBjb25zdCB7ICRtZXRhZGF0YSwgLi4ub3V0cHV0V2l0aG91dE1ldGFkYXRhIH0gPSByZXNwb25zZS5vdXRwdXQ7XG4gICAgbG9nZ2VyLmluZm8oe1xuICAgICAgY2xpZW50TmFtZSxcbiAgICAgIGNvbW1hbmROYW1lLFxuICAgICAgaW5wdXQ6IGlucHV0RmlsdGVyU2Vuc2l0aXZlTG9nKGFyZ3MuaW5wdXQpLFxuICAgICAgb3V0cHV0OiBvdXRwdXRGaWx0ZXJTZW5zaXRpdmVMb2cob3V0cHV0V2l0aG91dE1ldGFkYXRhKSxcbiAgICAgIG1ldGFkYXRhOiAkbWV0YWRhdGEsXG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gcmVzcG9uc2U7XG59O1xuXG5leHBvcnQgY29uc3QgbG9nZ2VyTWlkZGxld2FyZU9wdGlvbnM6IEluaXRpYWxpemVIYW5kbGVyT3B0aW9ucyAmIEFic29sdXRlTG9jYXRpb24gPSB7XG4gIG5hbWU6IFwibG9nZ2VyTWlkZGxld2FyZVwiLFxuICB0YWdzOiBbXCJMT0dHRVJcIl0sXG4gIHN0ZXA6IFwiaW5pdGlhbGl6ZVwiLFxuICBvdmVycmlkZTogdHJ1ZSxcbn07XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbmV4cG9ydCBjb25zdCBnZXRMb2dnZXJQbHVnaW4gPSAob3B0aW9uczogYW55KTogUGx1Z2dhYmxlPGFueSwgYW55PiA9PiAoe1xuICBhcHBseVRvU3RhY2s6IChjbGllbnRTdGFjaykgPT4ge1xuICAgIGNsaWVudFN0YWNrLmFkZChsb2dnZXJNaWRkbGV3YXJlKCksIGxvZ2dlck1pZGRsZXdhcmVPcHRpb25zKTtcbiAgfSxcbn0pO1xuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-logger/dist/es/loggerMiddleware.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-logger/node_modules/tslib/tslib.es6.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-logger/node_modules/tslib/tslib.es6.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-logger/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/configurations.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-retry/dist/es/configurations.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CONFIG_MAX_ATTEMPTS: () => (/* binding */ CONFIG_MAX_ATTEMPTS),\n/* harmony export */   CONFIG_RETRY_MODE: () => (/* binding */ CONFIG_RETRY_MODE),\n/* harmony export */   ENV_MAX_ATTEMPTS: () => (/* binding */ ENV_MAX_ATTEMPTS),\n/* harmony export */   ENV_RETRY_MODE: () => (/* binding */ ENV_RETRY_MODE),\n/* harmony export */   NODE_MAX_ATTEMPT_CONFIG_OPTIONS: () => (/* binding */ NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n/* harmony export */   NODE_RETRY_MODE_CONFIG_OPTIONS: () => (/* binding */ NODE_RETRY_MODE_CONFIG_OPTIONS),\n/* harmony export */   resolveRetryConfig: () => (/* binding */ resolveRetryConfig)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _defaultStrategy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultStrategy */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/defaultStrategy.js\");\n\n\nvar ENV_MAX_ATTEMPTS = \"AWS_MAX_ATTEMPTS\";\nvar CONFIG_MAX_ATTEMPTS = \"max_attempts\";\nvar NODE_MAX_ATTEMPT_CONFIG_OPTIONS = {\n    environmentVariableSelector: function (env) {\n        var value = env[ENV_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        var maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(\"Environment variable \" + ENV_MAX_ATTEMPTS + \" mast be a number, got \\\"\" + value + \"\\\"\");\n        }\n        return maxAttempt;\n    },\n    configFileSelector: function (profile) {\n        var value = profile[CONFIG_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        var maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(\"Shared config file entry \" + CONFIG_MAX_ATTEMPTS + \" mast be a number, got \\\"\" + value + \"\\\"\");\n        }\n        return maxAttempt;\n    },\n    default: _defaultStrategy__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_MAX_ATTEMPTS,\n};\nvar resolveRetryConfig = function (input) {\n    var maxAttempts = normalizeMaxAttempts(input.maxAttempts);\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input), { maxAttempts: maxAttempts, retryStrategy: input.retryStrategy || new _defaultStrategy__WEBPACK_IMPORTED_MODULE_0__.StandardRetryStrategy(maxAttempts) });\n};\nvar normalizeMaxAttempts = function (maxAttempts) {\n    if (maxAttempts === void 0) { maxAttempts = _defaultStrategy__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_MAX_ATTEMPTS; }\n    if (typeof maxAttempts === \"number\") {\n        var promisified_1 = Promise.resolve(maxAttempts);\n        return function () { return promisified_1; };\n    }\n    return maxAttempts;\n};\nvar ENV_RETRY_MODE = \"AWS_RETRY_MODE\";\nvar CONFIG_RETRY_MODE = \"retry_mode\";\nvar NODE_RETRY_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: function (env) { return env[ENV_RETRY_MODE]; },\n    configFileSelector: function (profile) { return profile[CONFIG_RETRY_MODE]; },\n    default: _defaultStrategy__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETRY_MODE,\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29uZmlndXJhdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUdBLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxrQkFBa0IsRUFBRSxxQkFBcUIsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRXBHLE1BQU0sQ0FBQyxJQUFNLGdCQUFnQixHQUFHLGtCQUFrQixDQUFDO0FBQ25ELE1BQU0sQ0FBQyxJQUFNLG1CQUFtQixHQUFHLGNBQWMsQ0FBQztBQUVsRCxNQUFNLENBQUMsSUFBTSwrQkFBK0IsR0FBa0M7SUFDNUUsMkJBQTJCLEVBQUUsVUFBQyxHQUFHO1FBQy9CLElBQU0sS0FBSyxHQUFHLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ3BDLElBQUksQ0FBQyxLQUFLO1lBQUUsT0FBTyxTQUFTLENBQUM7UUFDN0IsSUFBTSxVQUFVLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ25DLElBQUksTUFBTSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsRUFBRTtZQUM1QixNQUFNLElBQUksS0FBSyxDQUFDLDBCQUF3QixnQkFBZ0IsaUNBQTJCLEtBQUssT0FBRyxDQUFDLENBQUM7U0FDOUY7UUFDRCxPQUFPLFVBQVUsQ0FBQztJQUNwQixDQUFDO0lBQ0Qsa0JBQWtCLEVBQUUsVUFBQyxPQUFPO1FBQzFCLElBQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1FBQzNDLElBQUksQ0FBQyxLQUFLO1lBQUUsT0FBTyxTQUFTLENBQUM7UUFDN0IsSUFBTSxVQUFVLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ25DLElBQUksTUFBTSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsRUFBRTtZQUM1QixNQUFNLElBQUksS0FBSyxDQUFDLDhCQUE0QixtQkFBbUIsaUNBQTJCLEtBQUssT0FBRyxDQUFDLENBQUM7U0FDckc7UUFDRCxPQUFPLFVBQVUsQ0FBQztJQUNwQixDQUFDO0lBQ0QsT0FBTyxFQUFFLG9CQUFvQjtDQUM5QixDQUFDO0FBbUJGLE1BQU0sQ0FBQyxJQUFNLGtCQUFrQixHQUFHLFVBQUksS0FBZ0Q7SUFDcEYsSUFBTSxXQUFXLEdBQUcsb0JBQW9CLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQzVELDZCQUNLLEtBQUssS0FDUixXQUFXLGFBQUEsRUFDWCxhQUFhLEVBQUUsS0FBSyxDQUFDLGFBQWEsSUFBSSxJQUFJLHFCQUFxQixDQUFDLFdBQVcsQ0FBQyxJQUM1RTtBQUNKLENBQUMsQ0FBQztBQUVGLElBQU0sb0JBQW9CLEdBQUcsVUFBQyxXQUE2RDtJQUE3RCw0QkFBQSxFQUFBLGtDQUE2RDtJQUN6RixJQUFJLE9BQU8sV0FBVyxLQUFLLFFBQVEsRUFBRTtRQUNuQyxJQUFNLGFBQVcsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ2pELE9BQU8sY0FBTSxPQUFBLGFBQVcsRUFBWCxDQUFXLENBQUM7S0FDMUI7SUFDRCxPQUFPLFdBQVcsQ0FBQztBQUNyQixDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSxjQUFjLEdBQUcsZ0JBQWdCLENBQUM7QUFDL0MsTUFBTSxDQUFDLElBQU0saUJBQWlCLEdBQUcsWUFBWSxDQUFDO0FBRTlDLE1BQU0sQ0FBQyxJQUFNLDhCQUE4QixHQUFrQztJQUMzRSwyQkFBMkIsRUFBRSxVQUFDLEdBQUcsSUFBSyxPQUFBLEdBQUcsQ0FBQyxjQUFjLENBQUMsRUFBbkIsQ0FBbUI7SUFDekQsa0JBQWtCLEVBQUUsVUFBQyxPQUFPLElBQUssT0FBQSxPQUFPLENBQUMsaUJBQWlCLENBQUMsRUFBMUIsQ0FBMEI7SUFDM0QsT0FBTyxFQUFFLGtCQUFrQjtDQUM1QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTG9hZGVkQ29uZmlnU2VsZWN0b3JzIH0gZnJvbSBcIkBhd3Mtc2RrL25vZGUtY29uZmlnLXByb3ZpZGVyXCI7XG5pbXBvcnQgeyBQcm92aWRlciwgUmV0cnlTdHJhdGVneSB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5pbXBvcnQgeyBERUZBVUxUX01BWF9BVFRFTVBUUywgREVGQVVMVF9SRVRSWV9NT0RFLCBTdGFuZGFyZFJldHJ5U3RyYXRlZ3kgfSBmcm9tIFwiLi9kZWZhdWx0U3RyYXRlZ3lcIjtcblxuZXhwb3J0IGNvbnN0IEVOVl9NQVhfQVRURU1QVFMgPSBcIkFXU19NQVhfQVRURU1QVFNcIjtcbmV4cG9ydCBjb25zdCBDT05GSUdfTUFYX0FUVEVNUFRTID0gXCJtYXhfYXR0ZW1wdHNcIjtcblxuZXhwb3J0IGNvbnN0IE5PREVfTUFYX0FUVEVNUFRfQ09ORklHX09QVElPTlM6IExvYWRlZENvbmZpZ1NlbGVjdG9yczxudW1iZXI+ID0ge1xuICBlbnZpcm9ubWVudFZhcmlhYmxlU2VsZWN0b3I6IChlbnYpID0+IHtcbiAgICBjb25zdCB2YWx1ZSA9IGVudltFTlZfTUFYX0FUVEVNUFRTXTtcbiAgICBpZiAoIXZhbHVlKSByZXR1cm4gdW5kZWZpbmVkO1xuICAgIGNvbnN0IG1heEF0dGVtcHQgPSBwYXJzZUludCh2YWx1ZSk7XG4gICAgaWYgKE51bWJlci5pc05hTihtYXhBdHRlbXB0KSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBFbnZpcm9ubWVudCB2YXJpYWJsZSAke0VOVl9NQVhfQVRURU1QVFN9IG1hc3QgYmUgYSBudW1iZXIsIGdvdCBcIiR7dmFsdWV9XCJgKTtcbiAgICB9XG4gICAgcmV0dXJuIG1heEF0dGVtcHQ7XG4gIH0sXG4gIGNvbmZpZ0ZpbGVTZWxlY3RvcjogKHByb2ZpbGUpID0+IHtcbiAgICBjb25zdCB2YWx1ZSA9IHByb2ZpbGVbQ09ORklHX01BWF9BVFRFTVBUU107XG4gICAgaWYgKCF2YWx1ZSkgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICBjb25zdCBtYXhBdHRlbXB0ID0gcGFyc2VJbnQodmFsdWUpO1xuICAgIGlmIChOdW1iZXIuaXNOYU4obWF4QXR0ZW1wdCkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgU2hhcmVkIGNvbmZpZyBmaWxlIGVudHJ5ICR7Q09ORklHX01BWF9BVFRFTVBUU30gbWFzdCBiZSBhIG51bWJlciwgZ290IFwiJHt2YWx1ZX1cImApO1xuICAgIH1cbiAgICByZXR1cm4gbWF4QXR0ZW1wdDtcbiAgfSxcbiAgZGVmYXVsdDogREVGQVVMVF9NQVhfQVRURU1QVFMsXG59O1xuXG5leHBvcnQgaW50ZXJmYWNlIFJldHJ5SW5wdXRDb25maWcge1xuICAvKipcbiAgICogVGhlIG1heGltdW0gbnVtYmVyIG9mIHRpbWVzIHJlcXVlc3RzIHRoYXQgZW5jb3VudGVyIHJldHJ5YWJsZSBmYWlsdXJlcyBzaG91bGQgYmUgYXR0ZW1wdGVkLlxuICAgKi9cbiAgbWF4QXR0ZW1wdHM/OiBudW1iZXIgfCBQcm92aWRlcjxudW1iZXI+O1xuICAvKipcbiAgICogVGhlIHN0cmF0ZWd5IHRvIHJldHJ5IHRoZSByZXF1ZXN0LiBVc2luZyBidWlsdC1pbiBleHBvbmVudGlhbCBiYWNrb2ZmIHN0cmF0ZWd5IGJ5IGRlZmF1bHQuXG4gICAqL1xuICByZXRyeVN0cmF0ZWd5PzogUmV0cnlTdHJhdGVneTtcbn1cblxuaW50ZXJmYWNlIFByZXZpb3VzbHlSZXNvbHZlZCB7fVxuZXhwb3J0IGludGVyZmFjZSBSZXRyeVJlc29sdmVkQ29uZmlnIHtcbiAgbWF4QXR0ZW1wdHM6IFByb3ZpZGVyPG51bWJlcj47XG4gIHJldHJ5U3RyYXRlZ3k6IFJldHJ5U3RyYXRlZ3k7XG59XG5cbmV4cG9ydCBjb25zdCByZXNvbHZlUmV0cnlDb25maWcgPSA8VD4oaW5wdXQ6IFQgJiBQcmV2aW91c2x5UmVzb2x2ZWQgJiBSZXRyeUlucHV0Q29uZmlnKTogVCAmIFJldHJ5UmVzb2x2ZWRDb25maWcgPT4ge1xuICBjb25zdCBtYXhBdHRlbXB0cyA9IG5vcm1hbGl6ZU1heEF0dGVtcHRzKGlucHV0Lm1heEF0dGVtcHRzKTtcbiAgcmV0dXJuIHtcbiAgICAuLi5pbnB1dCxcbiAgICBtYXhBdHRlbXB0cyxcbiAgICByZXRyeVN0cmF0ZWd5OiBpbnB1dC5yZXRyeVN0cmF0ZWd5IHx8IG5ldyBTdGFuZGFyZFJldHJ5U3RyYXRlZ3kobWF4QXR0ZW1wdHMpLFxuICB9O1xufTtcblxuY29uc3Qgbm9ybWFsaXplTWF4QXR0ZW1wdHMgPSAobWF4QXR0ZW1wdHM6IG51bWJlciB8IFByb3ZpZGVyPG51bWJlcj4gPSBERUZBVUxUX01BWF9BVFRFTVBUUyk6IFByb3ZpZGVyPG51bWJlcj4gPT4ge1xuICBpZiAodHlwZW9mIG1heEF0dGVtcHRzID09PSBcIm51bWJlclwiKSB7XG4gICAgY29uc3QgcHJvbWlzaWZpZWQgPSBQcm9taXNlLnJlc29sdmUobWF4QXR0ZW1wdHMpO1xuICAgIHJldHVybiAoKSA9PiBwcm9taXNpZmllZDtcbiAgfVxuICByZXR1cm4gbWF4QXR0ZW1wdHM7XG59O1xuXG5leHBvcnQgY29uc3QgRU5WX1JFVFJZX01PREUgPSBcIkFXU19SRVRSWV9NT0RFXCI7XG5leHBvcnQgY29uc3QgQ09ORklHX1JFVFJZX01PREUgPSBcInJldHJ5X21vZGVcIjtcblxuZXhwb3J0IGNvbnN0IE5PREVfUkVUUllfTU9ERV9DT05GSUdfT1BUSU9OUzogTG9hZGVkQ29uZmlnU2VsZWN0b3JzPHN0cmluZz4gPSB7XG4gIGVudmlyb25tZW50VmFyaWFibGVTZWxlY3RvcjogKGVudikgPT4gZW52W0VOVl9SRVRSWV9NT0RFXSxcbiAgY29uZmlnRmlsZVNlbGVjdG9yOiAocHJvZmlsZSkgPT4gcHJvZmlsZVtDT05GSUdfUkVUUllfTU9ERV0sXG4gIGRlZmF1bHQ6IERFRkFVTFRfUkVUUllfTU9ERSxcbn07XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1yZXRyeS9kaXN0L2VzL2NvbmZpZ3VyYXRpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFpQztBQUNtRTtBQUM3RjtBQUNBO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLGFBQWEsa0VBQW9CO0FBQ2pDO0FBQ087QUFDUDtBQUNBLFdBQVcsK0NBQVEsQ0FBQywrQ0FBUSxHQUFHLFlBQVksb0VBQW9FLG1FQUFxQixlQUFlO0FBQ25KO0FBQ0E7QUFDQSxrQ0FBa0MsY0FBYyxrRUFBb0I7QUFDcEU7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDTztBQUNBO0FBQ0E7QUFDUCxrREFBa0QsNkJBQTZCO0FBQy9FLDZDQUE2QyxvQ0FBb0M7QUFDakYsYUFBYSxnRUFBa0I7QUFDL0I7QUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL21pZGRsZXdhcmUtcmV0cnkvZGlzdC9lcy9jb25maWd1cmF0aW9ucy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX2Fzc2lnbiB9IGZyb20gXCJ0c2xpYlwiO1xuaW1wb3J0IHsgREVGQVVMVF9NQVhfQVRURU1QVFMsIERFRkFVTFRfUkVUUllfTU9ERSwgU3RhbmRhcmRSZXRyeVN0cmF0ZWd5IH0gZnJvbSBcIi4vZGVmYXVsdFN0cmF0ZWd5XCI7XG5leHBvcnQgdmFyIEVOVl9NQVhfQVRURU1QVFMgPSBcIkFXU19NQVhfQVRURU1QVFNcIjtcbmV4cG9ydCB2YXIgQ09ORklHX01BWF9BVFRFTVBUUyA9IFwibWF4X2F0dGVtcHRzXCI7XG5leHBvcnQgdmFyIE5PREVfTUFYX0FUVEVNUFRfQ09ORklHX09QVElPTlMgPSB7XG4gICAgZW52aXJvbm1lbnRWYXJpYWJsZVNlbGVjdG9yOiBmdW5jdGlvbiAoZW52KSB7XG4gICAgICAgIHZhciB2YWx1ZSA9IGVudltFTlZfTUFYX0FUVEVNUFRTXTtcbiAgICAgICAgaWYgKCF2YWx1ZSlcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIHZhciBtYXhBdHRlbXB0ID0gcGFyc2VJbnQodmFsdWUpO1xuICAgICAgICBpZiAoTnVtYmVyLmlzTmFOKG1heEF0dGVtcHQpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFbnZpcm9ubWVudCB2YXJpYWJsZSBcIiArIEVOVl9NQVhfQVRURU1QVFMgKyBcIiBtYXN0IGJlIGEgbnVtYmVyLCBnb3QgXFxcIlwiICsgdmFsdWUgKyBcIlxcXCJcIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG1heEF0dGVtcHQ7XG4gICAgfSxcbiAgICBjb25maWdGaWxlU2VsZWN0b3I6IGZ1bmN0aW9uIChwcm9maWxlKSB7XG4gICAgICAgIHZhciB2YWx1ZSA9IHByb2ZpbGVbQ09ORklHX01BWF9BVFRFTVBUU107XG4gICAgICAgIGlmICghdmFsdWUpXG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB2YXIgbWF4QXR0ZW1wdCA9IHBhcnNlSW50KHZhbHVlKTtcbiAgICAgICAgaWYgKE51bWJlci5pc05hTihtYXhBdHRlbXB0KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU2hhcmVkIGNvbmZpZyBmaWxlIGVudHJ5IFwiICsgQ09ORklHX01BWF9BVFRFTVBUUyArIFwiIG1hc3QgYmUgYSBudW1iZXIsIGdvdCBcXFwiXCIgKyB2YWx1ZSArIFwiXFxcIlwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbWF4QXR0ZW1wdDtcbiAgICB9LFxuICAgIGRlZmF1bHQ6IERFRkFVTFRfTUFYX0FUVEVNUFRTLFxufTtcbmV4cG9ydCB2YXIgcmVzb2x2ZVJldHJ5Q29uZmlnID0gZnVuY3Rpb24gKGlucHV0KSB7XG4gICAgdmFyIG1heEF0dGVtcHRzID0gbm9ybWFsaXplTWF4QXR0ZW1wdHMoaW5wdXQubWF4QXR0ZW1wdHMpO1xuICAgIHJldHVybiBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgaW5wdXQpLCB7IG1heEF0dGVtcHRzOiBtYXhBdHRlbXB0cywgcmV0cnlTdHJhdGVneTogaW5wdXQucmV0cnlTdHJhdGVneSB8fCBuZXcgU3RhbmRhcmRSZXRyeVN0cmF0ZWd5KG1heEF0dGVtcHRzKSB9KTtcbn07XG52YXIgbm9ybWFsaXplTWF4QXR0ZW1wdHMgPSBmdW5jdGlvbiAobWF4QXR0ZW1wdHMpIHtcbiAgICBpZiAobWF4QXR0ZW1wdHMgPT09IHZvaWQgMCkgeyBtYXhBdHRlbXB0cyA9IERFRkFVTFRfTUFYX0FUVEVNUFRTOyB9XG4gICAgaWYgKHR5cGVvZiBtYXhBdHRlbXB0cyA9PT0gXCJudW1iZXJcIikge1xuICAgICAgICB2YXIgcHJvbWlzaWZpZWRfMSA9IFByb21pc2UucmVzb2x2ZShtYXhBdHRlbXB0cyk7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiBwcm9taXNpZmllZF8xOyB9O1xuICAgIH1cbiAgICByZXR1cm4gbWF4QXR0ZW1wdHM7XG59O1xuZXhwb3J0IHZhciBFTlZfUkVUUllfTU9ERSA9IFwiQVdTX1JFVFJZX01PREVcIjtcbmV4cG9ydCB2YXIgQ09ORklHX1JFVFJZX01PREUgPSBcInJldHJ5X21vZGVcIjtcbmV4cG9ydCB2YXIgTk9ERV9SRVRSWV9NT0RFX0NPTkZJR19PUFRJT05TID0ge1xuICAgIGVudmlyb25tZW50VmFyaWFibGVTZWxlY3RvcjogZnVuY3Rpb24gKGVudikgeyByZXR1cm4gZW52W0VOVl9SRVRSWV9NT0RFXTsgfSxcbiAgICBjb25maWdGaWxlU2VsZWN0b3I6IGZ1bmN0aW9uIChwcm9maWxlKSB7IHJldHVybiBwcm9maWxlW0NPTkZJR19SRVRSWV9NT0RFXTsgfSxcbiAgICBkZWZhdWx0OiBERUZBVUxUX1JFVFJZX01PREUsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pWTI5dVptbG5kWEpoZEdsdmJuTXVhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOHVMaTl6Y21NdlkyOXVabWxuZFhKaGRHbHZibk11ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWp0QlFVZEJMRTlCUVU4c1JVRkJSU3h2UWtGQmIwSXNSVUZCUlN4clFrRkJhMElzUlVGQlJTeHhRa0ZCY1VJc1JVRkJSU3hOUVVGTkxHMUNRVUZ0UWl4RFFVRkRPMEZCUlhCSExFMUJRVTBzUTBGQlF5eEpRVUZOTEdkQ1FVRm5RaXhIUVVGSExHdENRVUZyUWl4RFFVRkRPMEZCUTI1RUxFMUJRVTBzUTBGQlF5eEpRVUZOTEcxQ1FVRnRRaXhIUVVGSExHTkJRV01zUTBGQlF6dEJRVVZzUkN4TlFVRk5MRU5CUVVNc1NVRkJUU3dyUWtGQkswSXNSMEZCYTBNN1NVRkROVVVzTWtKQlFUSkNMRVZCUVVVc1ZVRkJReXhIUVVGSE8xRkJReTlDTEVsQlFVMHNTMEZCU3l4SFFVRkhMRWRCUVVjc1EwRkJReXhuUWtGQlowSXNRMEZCUXl4RFFVRkRPMUZCUTNCRExFbEJRVWtzUTBGQlF5eExRVUZMTzFsQlFVVXNUMEZCVHl4VFFVRlRMRU5CUVVNN1VVRkROMElzU1VGQlRTeFZRVUZWTEVkQlFVY3NVVUZCVVN4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRE8xRkJRMjVETEVsQlFVa3NUVUZCVFN4RFFVRkRMRXRCUVVzc1EwRkJReXhWUVVGVkxFTkJRVU1zUlVGQlJUdFpRVU0xUWl4TlFVRk5MRWxCUVVrc1MwRkJTeXhEUVVGRExEQkNRVUYzUWl4blFrRkJaMElzYVVOQlFUSkNMRXRCUVVzc1QwRkJSeXhEUVVGRExFTkJRVU03VTBGRE9VWTdVVUZEUkN4UFFVRlBMRlZCUVZVc1EwRkJRenRKUVVOd1FpeERRVUZETzBsQlEwUXNhMEpCUVd0Q0xFVkJRVVVzVlVGQlF5eFBRVUZQTzFGQlF6RkNMRWxCUVUwc1MwRkJTeXhIUVVGSExFOUJRVThzUTBGQlF5eHRRa0ZCYlVJc1EwRkJReXhEUVVGRE8xRkJRek5ETEVsQlFVa3NRMEZCUXl4TFFVRkxPMWxCUVVVc1QwRkJUeXhUUVVGVExFTkJRVU03VVVGRE4wSXNTVUZCVFN4VlFVRlZMRWRCUVVjc1VVRkJVU3hEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETzFGQlEyNURMRWxCUVVrc1RVRkJUU3hEUVVGRExFdEJRVXNzUTBGQlF5eFZRVUZWTEVOQlFVTXNSVUZCUlR0WlFVTTFRaXhOUVVGTkxFbEJRVWtzUzBGQlN5eERRVUZETERoQ1FVRTBRaXh0UWtGQmJVSXNhVU5CUVRKQ0xFdEJRVXNzVDBGQlJ5eERRVUZETEVOQlFVTTdVMEZEY2tjN1VVRkRSQ3hQUVVGUExGVkJRVlVzUTBGQlF6dEpRVU53UWl4RFFVRkRPMGxCUTBRc1QwRkJUeXhGUVVGRkxHOUNRVUZ2UWp0RFFVTTVRaXhEUVVGRE8wRkJiVUpHTEUxQlFVMHNRMEZCUXl4SlFVRk5MR3RDUVVGclFpeEhRVUZITEZWQlFVa3NTMEZCWjBRN1NVRkRjRVlzU1VGQlRTeFhRVUZYTEVkQlFVY3NiMEpCUVc5Q0xFTkJRVU1zUzBGQlN5eERRVUZETEZkQlFWY3NRMEZCUXl4RFFVRkRPMGxCUXpWRUxEWkNRVU5MTEV0QlFVc3NTMEZEVWl4WFFVRlhMR0ZCUVVFc1JVRkRXQ3hoUVVGaExFVkJRVVVzUzBGQlN5eERRVUZETEdGQlFXRXNTVUZCU1N4SlFVRkpMSEZDUVVGeFFpeERRVUZETEZkQlFWY3NRMEZCUXl4SlFVTTFSVHRCUVVOS0xFTkJRVU1zUTBGQlF6dEJRVVZHTEVsQlFVMHNiMEpCUVc5Q0xFZEJRVWNzVlVGQlF5eFhRVUUyUkR0SlFVRTNSQ3cwUWtGQlFTeEZRVUZCTEd0RFFVRTJSRHRKUVVONlJpeEpRVUZKTEU5QlFVOHNWMEZCVnl4TFFVRkxMRkZCUVZFc1JVRkJSVHRSUVVOdVF5eEpRVUZOTEdGQlFWY3NSMEZCUnl4UFFVRlBMRU5CUVVNc1QwRkJUeXhEUVVGRExGZEJRVmNzUTBGQlF5eERRVUZETzFGQlEycEVMRTlCUVU4c1kwRkJUU3hQUVVGQkxHRkJRVmNzUlVGQldDeERRVUZYTEVOQlFVTTdTMEZETVVJN1NVRkRSQ3hQUVVGUExGZEJRVmNzUTBGQlF6dEJRVU55UWl4RFFVRkRMRU5CUVVNN1FVRkZSaXhOUVVGTkxFTkJRVU1zU1VGQlRTeGpRVUZqTEVkQlFVY3NaMEpCUVdkQ0xFTkJRVU03UVVGREwwTXNUVUZCVFN4RFFVRkRMRWxCUVUwc2FVSkJRV2xDTEVkQlFVY3NXVUZCV1N4RFFVRkRPMEZCUlRsRExFMUJRVTBzUTBGQlF5eEpRVUZOTERoQ1FVRTRRaXhIUVVGclF6dEpRVU16UlN3eVFrRkJNa0lzUlVGQlJTeFZRVUZETEVkQlFVY3NTVUZCU3l4UFFVRkJMRWRCUVVjc1EwRkJReXhqUVVGakxFTkJRVU1zUlVGQmJrSXNRMEZCYlVJN1NVRkRla1FzYTBKQlFXdENMRVZCUVVVc1ZVRkJReXhQUVVGUExFbEJRVXNzVDBGQlFTeFBRVUZQTEVOQlFVTXNhVUpCUVdsQ0xFTkJRVU1zUlVGQk1VSXNRMEZCTUVJN1NVRkRNMFFzVDBGQlR5eEZRVUZGTEd0Q1FVRnJRanREUVVNMVFpeERRVUZESWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaWFXMXdiM0owSUhzZ1RHOWhaR1ZrUTI5dVptbG5VMlZzWldOMGIzSnpJSDBnWm5KdmJTQmNJa0JoZDNNdGMyUnJMMjV2WkdVdFkyOXVabWxuTFhCeWIzWnBaR1Z5WENJN1hHNXBiWEJ2Y25RZ2V5QlFjbTkyYVdSbGNpd2dVbVYwY25sVGRISmhkR1ZuZVNCOUlHWnliMjBnWENKQVlYZHpMWE5rYXk5MGVYQmxjMXdpTzF4dVhHNXBiWEJ2Y25RZ2V5QkVSVVpCVlV4VVgwMUJXRjlCVkZSRlRWQlVVeXdnUkVWR1FWVk1WRjlTUlZSU1dWOU5UMFJGTENCVGRHRnVaR0Z5WkZKbGRISjVVM1J5WVhSbFoza2dmU0JtY205dElGd2lMaTlrWldaaGRXeDBVM1J5WVhSbFozbGNJanRjYmx4dVpYaHdiM0owSUdOdmJuTjBJRVZPVmw5TlFWaGZRVlJVUlUxUVZGTWdQU0JjSWtGWFUxOU5RVmhmUVZSVVJVMVFWRk5jSWp0Y2JtVjRjRzl5ZENCamIyNXpkQ0JEVDA1R1NVZGZUVUZZWDBGVVZFVk5VRlJUSUQwZ1hDSnRZWGhmWVhSMFpXMXdkSE5jSWp0Y2JseHVaWGh3YjNKMElHTnZibk4wSUU1UFJFVmZUVUZZWDBGVVZFVk5VRlJmUTA5T1JrbEhYMDlRVkVsUFRsTTZJRXh2WVdSbFpFTnZibVpwWjFObGJHVmpkRzl5Y3p4dWRXMWlaWEkrSUQwZ2UxeHVJQ0JsYm5acGNtOXViV1Z1ZEZaaGNtbGhZbXhsVTJWc1pXTjBiM0k2SUNobGJuWXBJRDArSUh0Y2JpQWdJQ0JqYjI1emRDQjJZV3gxWlNBOUlHVnVkbHRGVGxaZlRVRllYMEZVVkVWTlVGUlRYVHRjYmlBZ0lDQnBaaUFvSVhaaGJIVmxLU0J5WlhSMWNtNGdkVzVrWldacGJtVmtPMXh1SUNBZ0lHTnZibk4wSUcxaGVFRjBkR1Z0Y0hRZ1BTQndZWEp6WlVsdWRDaDJZV3gxWlNrN1hHNGdJQ0FnYVdZZ0tFNTFiV0psY2k1cGMwNWhUaWh0WVhoQmRIUmxiWEIwS1NrZ2UxeHVJQ0FnSUNBZ2RHaHliM2NnYm1WM0lFVnljbTl5S0dCRmJuWnBjbTl1YldWdWRDQjJZWEpwWVdKc1pTQWtlMFZPVmw5TlFWaGZRVlJVUlUxUVZGTjlJRzFoYzNRZ1ltVWdZU0J1ZFcxaVpYSXNJR2R2ZENCY0lpUjdkbUZzZFdWOVhDSmdLVHRjYmlBZ0lDQjlYRzRnSUNBZ2NtVjBkWEp1SUcxaGVFRjBkR1Z0Y0hRN1hHNGdJSDBzWEc0Z0lHTnZibVpwWjBacGJHVlRaV3hsWTNSdmNqb2dLSEJ5YjJacGJHVXBJRDArSUh0Y2JpQWdJQ0JqYjI1emRDQjJZV3gxWlNBOUlIQnliMlpwYkdWYlEwOU9Sa2xIWDAxQldGOUJWRlJGVFZCVVUxMDdYRzRnSUNBZ2FXWWdLQ0YyWVd4MVpTa2djbVYwZFhKdUlIVnVaR1ZtYVc1bFpEdGNiaUFnSUNCamIyNXpkQ0J0WVhoQmRIUmxiWEIwSUQwZ2NHRnljMlZKYm5Rb2RtRnNkV1VwTzF4dUlDQWdJR2xtSUNoT2RXMWlaWEl1YVhOT1lVNG9iV0Y0UVhSMFpXMXdkQ2twSUh0Y2JpQWdJQ0FnSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWhnVTJoaGNtVmtJR052Ym1acFp5Qm1hV3hsSUdWdWRISjVJQ1I3UTA5T1JrbEhYMDFCV0Y5QlZGUkZUVkJVVTMwZ2JXRnpkQ0JpWlNCaElHNTFiV0psY2l3Z1oyOTBJRndpSkh0MllXeDFaWDFjSW1BcE8xeHVJQ0FnSUgxY2JpQWdJQ0J5WlhSMWNtNGdiV0Y0UVhSMFpXMXdkRHRjYmlBZ2ZTeGNiaUFnWkdWbVlYVnNkRG9nUkVWR1FWVk1WRjlOUVZoZlFWUlVSVTFRVkZNc1hHNTlPMXh1WEc1bGVIQnZjblFnYVc1MFpYSm1ZV05sSUZKbGRISjVTVzV3ZFhSRGIyNW1hV2NnZTF4dUlDQXZLaXBjYmlBZ0lDb2dWR2hsSUcxaGVHbHRkVzBnYm5WdFltVnlJRzltSUhScGJXVnpJSEpsY1hWbGMzUnpJSFJvWVhRZ1pXNWpiM1Z1ZEdWeUlISmxkSEo1WVdKc1pTQm1ZV2xzZFhKbGN5QnphRzkxYkdRZ1ltVWdZWFIwWlcxd2RHVmtMbHh1SUNBZ0tpOWNiaUFnYldGNFFYUjBaVzF3ZEhNL09pQnVkVzFpWlhJZ2ZDQlFjbTkyYVdSbGNqeHVkVzFpWlhJK08xeHVJQ0F2S2lwY2JpQWdJQ29nVkdobElITjBjbUYwWldkNUlIUnZJSEpsZEhKNUlIUm9aU0J5WlhGMVpYTjBMaUJWYzJsdVp5QmlkV2xzZEMxcGJpQmxlSEJ2Ym1WdWRHbGhiQ0JpWVdOcmIyWm1JSE4wY21GMFpXZDVJR0o1SUdSbFptRjFiSFF1WEc0Z0lDQXFMMXh1SUNCeVpYUnllVk4wY21GMFpXZDVQem9nVW1WMGNubFRkSEpoZEdWbmVUdGNibjFjYmx4dWFXNTBaWEptWVdObElGQnlaWFpwYjNWemJIbFNaWE52YkhabFpDQjdmVnh1Wlhod2IzSjBJR2x1ZEdWeVptRmpaU0JTWlhSeWVWSmxjMjlzZG1Wa1EyOXVabWxuSUh0Y2JpQWdiV0Y0UVhSMFpXMXdkSE02SUZCeWIzWnBaR1Z5UEc1MWJXSmxjajQ3WEc0Z0lISmxkSEo1VTNSeVlYUmxaM2s2SUZKbGRISjVVM1J5WVhSbFozazdYRzU5WEc1Y2JtVjRjRzl5ZENCamIyNXpkQ0J5WlhOdmJIWmxVbVYwY25sRGIyNW1hV2NnUFNBOFZENG9hVzV3ZFhRNklGUWdKaUJRY21WMmFXOTFjMng1VW1WemIyeDJaV1FnSmlCU1pYUnllVWx1Y0hWMFEyOXVabWxuS1RvZ1ZDQW1JRkpsZEhKNVVtVnpiMngyWldSRGIyNW1hV2NnUFQ0Z2UxeHVJQ0JqYjI1emRDQnRZWGhCZEhSbGJYQjBjeUE5SUc1dmNtMWhiR2w2WlUxaGVFRjBkR1Z0Y0hSektHbHVjSFYwTG0xaGVFRjBkR1Z0Y0hSektUdGNiaUFnY21WMGRYSnVJSHRjYmlBZ0lDQXVMaTVwYm5CMWRDeGNiaUFnSUNCdFlYaEJkSFJsYlhCMGN5eGNiaUFnSUNCeVpYUnllVk4wY21GMFpXZDVPaUJwYm5CMWRDNXlaWFJ5ZVZOMGNtRjBaV2Q1SUh4OElHNWxkeUJUZEdGdVpHRnlaRkpsZEhKNVUzUnlZWFJsWjNrb2JXRjRRWFIwWlcxd2RITXBMRnh1SUNCOU8xeHVmVHRjYmx4dVkyOXVjM1FnYm05eWJXRnNhWHBsVFdGNFFYUjBaVzF3ZEhNZ1BTQW9iV0Y0UVhSMFpXMXdkSE02SUc1MWJXSmxjaUI4SUZCeWIzWnBaR1Z5UEc1MWJXSmxjajRnUFNCRVJVWkJWVXhVWDAxQldGOUJWRlJGVFZCVVV5azZJRkJ5YjNacFpHVnlQRzUxYldKbGNqNGdQVDRnZTF4dUlDQnBaaUFvZEhsd1pXOW1JRzFoZUVGMGRHVnRjSFJ6SUQwOVBTQmNJbTUxYldKbGNsd2lLU0I3WEc0Z0lDQWdZMjl1YzNRZ2NISnZiV2x6YVdacFpXUWdQU0JRY205dGFYTmxMbkpsYzI5c2RtVW9iV0Y0UVhSMFpXMXdkSE1wTzF4dUlDQWdJSEpsZEhWeWJpQW9LU0E5UGlCd2NtOXRhWE5wWm1sbFpEdGNiaUFnZlZ4dUlDQnlaWFIxY200Z2JXRjRRWFIwWlcxd2RITTdYRzU5TzF4dVhHNWxlSEJ2Y25RZ1kyOXVjM1FnUlU1V1gxSkZWRkpaWDAxUFJFVWdQU0JjSWtGWFUxOVNSVlJTV1Y5TlQwUkZYQ0k3WEc1bGVIQnZjblFnWTI5dWMzUWdRMDlPUmtsSFgxSkZWRkpaWDAxUFJFVWdQU0JjSW5KbGRISjVYMjF2WkdWY0lqdGNibHh1Wlhod2IzSjBJR052Ym5OMElFNVBSRVZmVWtWVVVsbGZUVTlFUlY5RFQwNUdTVWRmVDFCVVNVOU9Vem9nVEc5aFpHVmtRMjl1Wm1sblUyVnNaV04wYjNKelBITjBjbWx1Wno0Z1BTQjdYRzRnSUdWdWRtbHliMjV0Wlc1MFZtRnlhV0ZpYkdWVFpXeGxZM1J2Y2pvZ0tHVnVkaWtnUFQ0Z1pXNTJXMFZPVmw5U1JWUlNXVjlOVDBSRlhTeGNiaUFnWTI5dVptbG5SbWxzWlZObGJHVmpkRzl5T2lBb2NISnZabWxzWlNrZ1BUNGdjSEp2Wm1sc1pWdERUMDVHU1VkZlVrVlVVbGxmVFU5RVJWMHNYRzRnSUdSbFptRjFiSFE2SUVSRlJrRlZURlJmVWtWVVVsbGZUVTlFUlN4Y2JuMDdYRzRpWFgwPSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/configurations.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/constants.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-retry/dist/es/constants.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_RETRY_DELAY_BASE: () => (/* binding */ DEFAULT_RETRY_DELAY_BASE),\n/* harmony export */   INITIAL_RETRY_TOKENS: () => (/* binding */ INITIAL_RETRY_TOKENS),\n/* harmony export */   INVOCATION_ID_HEADER: () => (/* binding */ INVOCATION_ID_HEADER),\n/* harmony export */   MAXIMUM_RETRY_DELAY: () => (/* binding */ MAXIMUM_RETRY_DELAY),\n/* harmony export */   NO_RETRY_INCREMENT: () => (/* binding */ NO_RETRY_INCREMENT),\n/* harmony export */   REQUEST_HEADER: () => (/* binding */ REQUEST_HEADER),\n/* harmony export */   RETRY_COST: () => (/* binding */ RETRY_COST),\n/* harmony export */   THROTTLING_RETRY_DELAY_BASE: () => (/* binding */ THROTTLING_RETRY_DELAY_BASE),\n/* harmony export */   TIMEOUT_RETRY_COST: () => (/* binding */ TIMEOUT_RETRY_COST)\n/* harmony export */ });\n/**\n * The base number of milliseconds to use in calculating a suitable cool-down\n * time when a retryable error is encountered.\n */\nvar DEFAULT_RETRY_DELAY_BASE = 100;\n/**\n * The maximum amount of time (in milliseconds) that will be used as a delay\n * between retry attempts.\n */\nvar MAXIMUM_RETRY_DELAY = 20 * 1000;\n/**\n * The retry delay base (in milliseconds) to use when a throttling error is\n * encountered.\n */\nvar THROTTLING_RETRY_DELAY_BASE = 500;\n/**\n * Initial number of retry tokens in Retry Quota\n */\nvar INITIAL_RETRY_TOKENS = 500;\n/**\n * The total amount of retry tokens to be decremented from retry token balance.\n */\nvar RETRY_COST = 5;\n/**\n * The total amount of retry tokens to be decremented from retry token balance\n * when a throttling error is encountered.\n */\nvar TIMEOUT_RETRY_COST = 10;\n/**\n * The total amount of retry token to be incremented from retry token balance\n * if an SDK operation invocation succeeds without requiring a retry request.\n */\nvar NO_RETRY_INCREMENT = 1;\n/**\n * Header name for SDK invocation ID\n */\nvar INVOCATION_ID_HEADER = \"amz-sdk-invocation-id\";\n/**\n * Header name for request retry information.\n */\nvar REQUEST_HEADER = \"amz-sdk-request\";\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7QUFDSCxNQUFNLENBQUMsSUFBTSx3QkFBd0IsR0FBRyxHQUFHLENBQUM7QUFFNUM7OztHQUdHO0FBQ0gsTUFBTSxDQUFDLElBQU0sbUJBQW1CLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQztBQUU3Qzs7O0dBR0c7QUFDSCxNQUFNLENBQUMsSUFBTSwyQkFBMkIsR0FBRyxHQUFHLENBQUM7QUFFL0M7O0dBRUc7QUFDSCxNQUFNLENBQUMsSUFBTSxvQkFBb0IsR0FBRyxHQUFHLENBQUM7QUFFeEM7O0dBRUc7QUFDSCxNQUFNLENBQUMsSUFBTSxVQUFVLEdBQUcsQ0FBQyxDQUFDO0FBRTVCOzs7R0FHRztBQUNILE1BQU0sQ0FBQyxJQUFNLGtCQUFrQixHQUFHLEVBQUUsQ0FBQztBQUVyQzs7O0dBR0c7QUFDSCxNQUFNLENBQUMsSUFBTSxrQkFBa0IsR0FBRyxDQUFDLENBQUM7QUFFcEM7O0dBRUc7QUFDSCxNQUFNLENBQUMsSUFBTSxvQkFBb0IsR0FBRyx1QkFBdUIsQ0FBQztBQUU1RDs7R0FFRztBQUNILE1BQU0sQ0FBQyxJQUFNLGNBQWMsR0FBRyxpQkFBaUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhlIGJhc2UgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0byB1c2UgaW4gY2FsY3VsYXRpbmcgYSBzdWl0YWJsZSBjb29sLWRvd25cbiAqIHRpbWUgd2hlbiBhIHJldHJ5YWJsZSBlcnJvciBpcyBlbmNvdW50ZXJlZC5cbiAqL1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfUkVUUllfREVMQVlfQkFTRSA9IDEwMDtcblxuLyoqXG4gKiBUaGUgbWF4aW11bSBhbW91bnQgb2YgdGltZSAoaW4gbWlsbGlzZWNvbmRzKSB0aGF0IHdpbGwgYmUgdXNlZCBhcyBhIGRlbGF5XG4gKiBiZXR3ZWVuIHJldHJ5IGF0dGVtcHRzLlxuICovXG5leHBvcnQgY29uc3QgTUFYSU1VTV9SRVRSWV9ERUxBWSA9IDIwICogMTAwMDtcblxuLyoqXG4gKiBUaGUgcmV0cnkgZGVsYXkgYmFzZSAoaW4gbWlsbGlzZWNvbmRzKSB0byB1c2Ugd2hlbiBhIHRocm90dGxpbmcgZXJyb3IgaXNcbiAqIGVuY291bnRlcmVkLlxuICovXG5leHBvcnQgY29uc3QgVEhST1RUTElOR19SRVRSWV9ERUxBWV9CQVNFID0gNTAwO1xuXG4vKipcbiAqIEluaXRpYWwgbnVtYmVyIG9mIHJldHJ5IHRva2VucyBpbiBSZXRyeSBRdW90YVxuICovXG5leHBvcnQgY29uc3QgSU5JVElBTF9SRVRSWV9UT0tFTlMgPSA1MDA7XG5cbi8qKlxuICogVGhlIHRvdGFsIGFtb3VudCBvZiByZXRyeSB0b2tlbnMgdG8gYmUgZGVjcmVtZW50ZWQgZnJvbSByZXRyeSB0b2tlbiBiYWxhbmNlLlxuICovXG5leHBvcnQgY29uc3QgUkVUUllfQ09TVCA9IDU7XG5cbi8qKlxuICogVGhlIHRvdGFsIGFtb3VudCBvZiByZXRyeSB0b2tlbnMgdG8gYmUgZGVjcmVtZW50ZWQgZnJvbSByZXRyeSB0b2tlbiBiYWxhbmNlXG4gKiB3aGVuIGEgdGhyb3R0bGluZyBlcnJvciBpcyBlbmNvdW50ZXJlZC5cbiAqL1xuZXhwb3J0IGNvbnN0IFRJTUVPVVRfUkVUUllfQ09TVCA9IDEwO1xuXG4vKipcbiAqIFRoZSB0b3RhbCBhbW91bnQgb2YgcmV0cnkgdG9rZW4gdG8gYmUgaW5jcmVtZW50ZWQgZnJvbSByZXRyeSB0b2tlbiBiYWxhbmNlXG4gKiBpZiBhbiBTREsgb3BlcmF0aW9uIGludm9jYXRpb24gc3VjY2VlZHMgd2l0aG91dCByZXF1aXJpbmcgYSByZXRyeSByZXF1ZXN0LlxuICovXG5leHBvcnQgY29uc3QgTk9fUkVUUllfSU5DUkVNRU5UID0gMTtcblxuLyoqXG4gKiBIZWFkZXIgbmFtZSBmb3IgU0RLIGludm9jYXRpb24gSURcbiAqL1xuZXhwb3J0IGNvbnN0IElOVk9DQVRJT05fSURfSEVBREVSID0gXCJhbXotc2RrLWludm9jYXRpb24taWRcIjtcblxuLyoqXG4gKiBIZWFkZXIgbmFtZSBmb3IgcmVxdWVzdCByZXRyeSBpbmZvcm1hdGlvbi5cbiAqL1xuZXhwb3J0IGNvbnN0IFJFUVVFU1RfSEVBREVSID0gXCJhbXotc2RrLXJlcXVlc3RcIjtcbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1yZXRyeS9kaXN0L2VzL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9taWRkbGV3YXJlLXJldHJ5L2Rpc3QvZXMvY29uc3RhbnRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhlIGJhc2UgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0byB1c2UgaW4gY2FsY3VsYXRpbmcgYSBzdWl0YWJsZSBjb29sLWRvd25cbiAqIHRpbWUgd2hlbiBhIHJldHJ5YWJsZSBlcnJvciBpcyBlbmNvdW50ZXJlZC5cbiAqL1xuZXhwb3J0IHZhciBERUZBVUxUX1JFVFJZX0RFTEFZX0JBU0UgPSAxMDA7XG4vKipcbiAqIFRoZSBtYXhpbXVtIGFtb3VudCBvZiB0aW1lIChpbiBtaWxsaXNlY29uZHMpIHRoYXQgd2lsbCBiZSB1c2VkIGFzIGEgZGVsYXlcbiAqIGJldHdlZW4gcmV0cnkgYXR0ZW1wdHMuXG4gKi9cbmV4cG9ydCB2YXIgTUFYSU1VTV9SRVRSWV9ERUxBWSA9IDIwICogMTAwMDtcbi8qKlxuICogVGhlIHJldHJ5IGRlbGF5IGJhc2UgKGluIG1pbGxpc2Vjb25kcykgdG8gdXNlIHdoZW4gYSB0aHJvdHRsaW5nIGVycm9yIGlzXG4gKiBlbmNvdW50ZXJlZC5cbiAqL1xuZXhwb3J0IHZhciBUSFJPVFRMSU5HX1JFVFJZX0RFTEFZX0JBU0UgPSA1MDA7XG4vKipcbiAqIEluaXRpYWwgbnVtYmVyIG9mIHJldHJ5IHRva2VucyBpbiBSZXRyeSBRdW90YVxuICovXG5leHBvcnQgdmFyIElOSVRJQUxfUkVUUllfVE9LRU5TID0gNTAwO1xuLyoqXG4gKiBUaGUgdG90YWwgYW1vdW50IG9mIHJldHJ5IHRva2VucyB0byBiZSBkZWNyZW1lbnRlZCBmcm9tIHJldHJ5IHRva2VuIGJhbGFuY2UuXG4gKi9cbmV4cG9ydCB2YXIgUkVUUllfQ09TVCA9IDU7XG4vKipcbiAqIFRoZSB0b3RhbCBhbW91bnQgb2YgcmV0cnkgdG9rZW5zIHRvIGJlIGRlY3JlbWVudGVkIGZyb20gcmV0cnkgdG9rZW4gYmFsYW5jZVxuICogd2hlbiBhIHRocm90dGxpbmcgZXJyb3IgaXMgZW5jb3VudGVyZWQuXG4gKi9cbmV4cG9ydCB2YXIgVElNRU9VVF9SRVRSWV9DT1NUID0gMTA7XG4vKipcbiAqIFRoZSB0b3RhbCBhbW91bnQgb2YgcmV0cnkgdG9rZW4gdG8gYmUgaW5jcmVtZW50ZWQgZnJvbSByZXRyeSB0b2tlbiBiYWxhbmNlXG4gKiBpZiBhbiBTREsgb3BlcmF0aW9uIGludm9jYXRpb24gc3VjY2VlZHMgd2l0aG91dCByZXF1aXJpbmcgYSByZXRyeSByZXF1ZXN0LlxuICovXG5leHBvcnQgdmFyIE5PX1JFVFJZX0lOQ1JFTUVOVCA9IDE7XG4vKipcbiAqIEhlYWRlciBuYW1lIGZvciBTREsgaW52b2NhdGlvbiBJRFxuICovXG5leHBvcnQgdmFyIElOVk9DQVRJT05fSURfSEVBREVSID0gXCJhbXotc2RrLWludm9jYXRpb24taWRcIjtcbi8qKlxuICogSGVhZGVyIG5hbWUgZm9yIHJlcXVlc3QgcmV0cnkgaW5mb3JtYXRpb24uXG4gKi9cbmV4cG9ydCB2YXIgUkVRVUVTVF9IRUFERVIgPSBcImFtei1zZGstcmVxdWVzdFwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pWTI5dWMzUmhiblJ6TG1weklpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhNaU9sc2lMaTR2TGk0dmMzSmpMMk52Ym5OMFlXNTBjeTUwY3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFUczdPMGRCUjBjN1FVRkRTQ3hOUVVGTkxFTkJRVU1zU1VGQlRTeDNRa0ZCZDBJc1IwRkJSeXhIUVVGSExFTkJRVU03UVVGRk5VTTdPenRIUVVkSE8wRkJRMGdzVFVGQlRTeERRVUZETEVsQlFVMHNiVUpCUVcxQ0xFZEJRVWNzUlVGQlJTeEhRVUZITEVsQlFVa3NRMEZCUXp0QlFVVTNRenM3TzBkQlIwYzdRVUZEU0N4TlFVRk5MRU5CUVVNc1NVRkJUU3d5UWtGQk1rSXNSMEZCUnl4SFFVRkhMRU5CUVVNN1FVRkZMME03TzBkQlJVYzdRVUZEU0N4TlFVRk5MRU5CUVVNc1NVRkJUU3h2UWtGQmIwSXNSMEZCUnl4SFFVRkhMRU5CUVVNN1FVRkZlRU03TzBkQlJVYzdRVUZEU0N4TlFVRk5MRU5CUVVNc1NVRkJUU3hWUVVGVkxFZEJRVWNzUTBGQlF5eERRVUZETzBGQlJUVkNPenM3UjBGSFJ6dEJRVU5JTEUxQlFVMHNRMEZCUXl4SlFVRk5MR3RDUVVGclFpeEhRVUZITEVWQlFVVXNRMEZCUXp0QlFVVnlRenM3TzBkQlIwYzdRVUZEU0N4TlFVRk5MRU5CUVVNc1NVRkJUU3hyUWtGQmEwSXNSMEZCUnl4RFFVRkRMRU5CUVVNN1FVRkZjRU03TzBkQlJVYzdRVUZEU0N4TlFVRk5MRU5CUVVNc1NVRkJUU3h2UWtGQmIwSXNSMEZCUnl4MVFrRkJkVUlzUTBGQlF6dEJRVVUxUkRzN1IwRkZSenRCUVVOSUxFMUJRVTBzUTBGQlF5eEpRVUZOTEdOQlFXTXNSMEZCUnl4cFFrRkJhVUlzUTBGQlF5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJaThxS2x4dUlDb2dWR2hsSUdKaGMyVWdiblZ0WW1WeUlHOW1JRzFwYkd4cGMyVmpiMjVrY3lCMGJ5QjFjMlVnYVc0Z1kyRnNZM1ZzWVhScGJtY2dZU0J6ZFdsMFlXSnNaU0JqYjI5c0xXUnZkMjVjYmlBcUlIUnBiV1VnZDJobGJpQmhJSEpsZEhKNVlXSnNaU0JsY25KdmNpQnBjeUJsYm1OdmRXNTBaWEpsWkM1Y2JpQXFMMXh1Wlhod2IzSjBJR052Ym5OMElFUkZSa0ZWVEZSZlVrVlVVbGxmUkVWTVFWbGZRa0ZUUlNBOUlERXdNRHRjYmx4dUx5b3FYRzRnS2lCVWFHVWdiV0Y0YVcxMWJTQmhiVzkxYm5RZ2IyWWdkR2x0WlNBb2FXNGdiV2xzYkdselpXTnZibVJ6S1NCMGFHRjBJSGRwYkd3Z1ltVWdkWE5sWkNCaGN5QmhJR1JsYkdGNVhHNGdLaUJpWlhSM1pXVnVJSEpsZEhKNUlHRjBkR1Z0Y0hSekxseHVJQ292WEc1bGVIQnZjblFnWTI5dWMzUWdUVUZZU1UxVlRWOVNSVlJTV1Y5RVJVeEJXU0E5SURJd0lDb2dNVEF3TUR0Y2JseHVMeW9xWEc0Z0tpQlVhR1VnY21WMGNua2daR1ZzWVhrZ1ltRnpaU0FvYVc0Z2JXbHNiR2x6WldOdmJtUnpLU0IwYnlCMWMyVWdkMmhsYmlCaElIUm9jbTkwZEd4cGJtY2daWEp5YjNJZ2FYTmNiaUFxSUdWdVkyOTFiblJsY21Wa0xseHVJQ292WEc1bGVIQnZjblFnWTI5dWMzUWdWRWhTVDFSVVRFbE9SMTlTUlZSU1dWOUVSVXhCV1Y5Q1FWTkZJRDBnTlRBd08xeHVYRzR2S2lwY2JpQXFJRWx1YVhScFlXd2diblZ0WW1WeUlHOW1JSEpsZEhKNUlIUnZhMlZ1Y3lCcGJpQlNaWFJ5ZVNCUmRXOTBZVnh1SUNvdlhHNWxlSEJ2Y25RZ1kyOXVjM1FnU1U1SlZFbEJURjlTUlZSU1dWOVVUMHRGVGxNZ1BTQTFNREE3WEc1Y2JpOHFLbHh1SUNvZ1ZHaGxJSFJ2ZEdGc0lHRnRiM1Z1ZENCdlppQnlaWFJ5ZVNCMGIydGxibk1nZEc4Z1ltVWdaR1ZqY21WdFpXNTBaV1FnWm5KdmJTQnlaWFJ5ZVNCMGIydGxiaUJpWVd4aGJtTmxMbHh1SUNvdlhHNWxlSEJ2Y25RZ1kyOXVjM1FnVWtWVVVsbGZRMDlUVkNBOUlEVTdYRzVjYmk4cUtseHVJQ29nVkdobElIUnZkR0ZzSUdGdGIzVnVkQ0J2WmlCeVpYUnllU0IwYjJ0bGJuTWdkRzhnWW1VZ1pHVmpjbVZ0Wlc1MFpXUWdabkp2YlNCeVpYUnllU0IwYjJ0bGJpQmlZV3hoYm1ObFhHNGdLaUIzYUdWdUlHRWdkR2h5YjNSMGJHbHVaeUJsY25KdmNpQnBjeUJsYm1OdmRXNTBaWEpsWkM1Y2JpQXFMMXh1Wlhod2IzSjBJR052Ym5OMElGUkpUVVZQVlZSZlVrVlVVbGxmUTA5VFZDQTlJREV3TzF4dVhHNHZLaXBjYmlBcUlGUm9aU0IwYjNSaGJDQmhiVzkxYm5RZ2IyWWdjbVYwY25rZ2RHOXJaVzRnZEc4Z1ltVWdhVzVqY21WdFpXNTBaV1FnWm5KdmJTQnlaWFJ5ZVNCMGIydGxiaUJpWVd4aGJtTmxYRzRnS2lCcFppQmhiaUJUUkVzZ2IzQmxjbUYwYVc5dUlHbHVkbTlqWVhScGIyNGdjM1ZqWTJWbFpITWdkMmwwYUc5MWRDQnlaWEYxYVhKcGJtY2dZU0J5WlhSeWVTQnlaWEYxWlhOMExseHVJQ292WEc1bGVIQnZjblFnWTI5dWMzUWdUazlmVWtWVVVsbGZTVTVEVWtWTlJVNVVJRDBnTVR0Y2JseHVMeW9xWEc0Z0tpQklaV0ZrWlhJZ2JtRnRaU0JtYjNJZ1UwUkxJR2x1ZG05allYUnBiMjRnU1VSY2JpQXFMMXh1Wlhod2IzSjBJR052Ym5OMElFbE9WazlEUVZSSlQwNWZTVVJmU0VWQlJFVlNJRDBnWENKaGJYb3RjMlJyTFdsdWRtOWpZWFJwYjI0dGFXUmNJanRjYmx4dUx5b3FYRzRnS2lCSVpXRmtaWElnYm1GdFpTQm1iM0lnY21WeGRXVnpkQ0J5WlhSeWVTQnBibVp2Y20xaGRHbHZiaTVjYmlBcUwxeHVaWGh3YjNKMElHTnZibk4wSUZKRlVWVkZVMVJmU0VWQlJFVlNJRDBnWENKaGJYb3RjMlJyTFhKbGNYVmxjM1JjSWp0Y2JpSmRmUT09Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/defaultRetryQuota.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-retry/dist/es/defaultRetryQuota.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDefaultRetryQuota: () => (/* binding */ getDefaultRetryQuota)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/constants.js\");\n\nvar getDefaultRetryQuota = function (initialRetryTokens) {\n    var MAX_CAPACITY = initialRetryTokens;\n    var availableCapacity = initialRetryTokens;\n    var getCapacityAmount = function (error) { return (error.name === \"TimeoutError\" ? _constants__WEBPACK_IMPORTED_MODULE_0__.TIMEOUT_RETRY_COST : _constants__WEBPACK_IMPORTED_MODULE_0__.RETRY_COST); };\n    var hasRetryTokens = function (error) { return getCapacityAmount(error) <= availableCapacity; };\n    var retrieveRetryTokens = function (error) {\n        if (!hasRetryTokens(error)) {\n            // retryStrategy should stop retrying, and return last error\n            throw new Error(\"No retry token available\");\n        }\n        var capacityAmount = getCapacityAmount(error);\n        availableCapacity -= capacityAmount;\n        return capacityAmount;\n    };\n    var releaseRetryTokens = function (capacityReleaseAmount) {\n        availableCapacity += capacityReleaseAmount !== null && capacityReleaseAmount !== void 0 ? capacityReleaseAmount : _constants__WEBPACK_IMPORTED_MODULE_0__.NO_RETRY_INCREMENT;\n        availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);\n    };\n    return Object.freeze({\n        hasRetryTokens: hasRetryTokens,\n        retrieveRetryTokens: retrieveRetryTokens,\n        releaseRetryTokens: releaseRetryTokens,\n    });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdFJldHJ5UXVvdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZGVmYXVsdFJldHJ5UXVvdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUFFLGtCQUFrQixFQUFFLFVBQVUsRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUdqRixNQUFNLENBQUMsSUFBTSxvQkFBb0IsR0FBRyxVQUFDLGtCQUEwQjtJQUM3RCxJQUFNLFlBQVksR0FBRyxrQkFBa0IsQ0FBQztJQUN4QyxJQUFJLGlCQUFpQixHQUFHLGtCQUFrQixDQUFDO0lBRTNDLElBQU0saUJBQWlCLEdBQUcsVUFBQyxLQUFlLElBQUssT0FBQSxDQUFDLEtBQUssQ0FBQyxJQUFJLEtBQUssY0FBYyxDQUFDLENBQUMsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLEVBQWpFLENBQWlFLENBQUM7SUFFakgsSUFBTSxjQUFjLEdBQUcsVUFBQyxLQUFlLElBQUssT0FBQSxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsSUFBSSxpQkFBaUIsRUFBN0MsQ0FBNkMsQ0FBQztJQUUxRixJQUFNLG1CQUFtQixHQUFHLFVBQUMsS0FBZTtRQUMxQyxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQzFCLDREQUE0RDtZQUM1RCxNQUFNLElBQUksS0FBSyxDQUFDLDBCQUEwQixDQUFDLENBQUM7U0FDN0M7UUFDRCxJQUFNLGNBQWMsR0FBRyxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNoRCxpQkFBaUIsSUFBSSxjQUFjLENBQUM7UUFDcEMsT0FBTyxjQUFjLENBQUM7SUFDeEIsQ0FBQyxDQUFDO0lBRUYsSUFBTSxrQkFBa0IsR0FBRyxVQUFDLHFCQUE4QjtRQUN4RCxpQkFBaUIsSUFBSSxxQkFBcUIsYUFBckIscUJBQXFCLGNBQXJCLHFCQUFxQixHQUFJLGtCQUFrQixDQUFDO1FBQ2pFLGlCQUFpQixHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsaUJBQWlCLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDaEUsQ0FBQyxDQUFDO0lBRUYsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDO1FBQ25CLGNBQWMsZ0JBQUE7UUFDZCxtQkFBbUIscUJBQUE7UUFDbkIsa0JBQWtCLG9CQUFBO0tBQ25CLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNka0Vycm9yIH0gZnJvbSBcIkBhd3Mtc2RrL3NtaXRoeS1jbGllbnRcIjtcblxuaW1wb3J0IHsgTk9fUkVUUllfSU5DUkVNRU5ULCBSRVRSWV9DT1NULCBUSU1FT1VUX1JFVFJZX0NPU1QgfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcbmltcG9ydCB7IFJldHJ5UXVvdGEgfSBmcm9tIFwiLi9kZWZhdWx0U3RyYXRlZ3lcIjtcblxuZXhwb3J0IGNvbnN0IGdldERlZmF1bHRSZXRyeVF1b3RhID0gKGluaXRpYWxSZXRyeVRva2VuczogbnVtYmVyKTogUmV0cnlRdW90YSA9PiB7XG4gIGNvbnN0IE1BWF9DQVBBQ0lUWSA9IGluaXRpYWxSZXRyeVRva2VucztcbiAgbGV0IGF2YWlsYWJsZUNhcGFjaXR5ID0gaW5pdGlhbFJldHJ5VG9rZW5zO1xuXG4gIGNvbnN0IGdldENhcGFjaXR5QW1vdW50ID0gKGVycm9yOiBTZGtFcnJvcikgPT4gKGVycm9yLm5hbWUgPT09IFwiVGltZW91dEVycm9yXCIgPyBUSU1FT1VUX1JFVFJZX0NPU1QgOiBSRVRSWV9DT1NUKTtcblxuICBjb25zdCBoYXNSZXRyeVRva2VucyA9IChlcnJvcjogU2RrRXJyb3IpID0+IGdldENhcGFjaXR5QW1vdW50KGVycm9yKSA8PSBhdmFpbGFibGVDYXBhY2l0eTtcblxuICBjb25zdCByZXRyaWV2ZVJldHJ5VG9rZW5zID0gKGVycm9yOiBTZGtFcnJvcikgPT4ge1xuICAgIGlmICghaGFzUmV0cnlUb2tlbnMoZXJyb3IpKSB7XG4gICAgICAvLyByZXRyeVN0cmF0ZWd5IHNob3VsZCBzdG9wIHJldHJ5aW5nLCBhbmQgcmV0dXJuIGxhc3QgZXJyb3JcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIHJldHJ5IHRva2VuIGF2YWlsYWJsZVwiKTtcbiAgICB9XG4gICAgY29uc3QgY2FwYWNpdHlBbW91bnQgPSBnZXRDYXBhY2l0eUFtb3VudChlcnJvcik7XG4gICAgYXZhaWxhYmxlQ2FwYWNpdHkgLT0gY2FwYWNpdHlBbW91bnQ7XG4gICAgcmV0dXJuIGNhcGFjaXR5QW1vdW50O1xuICB9O1xuXG4gIGNvbnN0IHJlbGVhc2VSZXRyeVRva2VucyA9IChjYXBhY2l0eVJlbGVhc2VBbW91bnQ/OiBudW1iZXIpID0+IHtcbiAgICBhdmFpbGFibGVDYXBhY2l0eSArPSBjYXBhY2l0eVJlbGVhc2VBbW91bnQgPz8gTk9fUkVUUllfSU5DUkVNRU5UO1xuICAgIGF2YWlsYWJsZUNhcGFjaXR5ID0gTWF0aC5taW4oYXZhaWxhYmxlQ2FwYWNpdHksIE1BWF9DQVBBQ0lUWSk7XG4gIH07XG5cbiAgcmV0dXJuIE9iamVjdC5mcmVlemUoe1xuICAgIGhhc1JldHJ5VG9rZW5zLFxuICAgIHJldHJpZXZlUmV0cnlUb2tlbnMsXG4gICAgcmVsZWFzZVJldHJ5VG9rZW5zLFxuICB9KTtcbn07XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1yZXRyeS9kaXN0L2VzL2RlZmF1bHRSZXRyeVF1b3RhLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWlGO0FBQzFFO0FBQ1A7QUFDQTtBQUNBLCtDQUErQyx3Q0FBd0MsMERBQWtCLEdBQUcsa0RBQVU7QUFDdEgsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEhBQTBILDBEQUFrQjtBQUM1STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL21pZGRsZXdhcmUtcmV0cnkvZGlzdC9lcy9kZWZhdWx0UmV0cnlRdW90YS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOT19SRVRSWV9JTkNSRU1FTlQsIFJFVFJZX0NPU1QsIFRJTUVPVVRfUkVUUllfQ09TVCB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuZXhwb3J0IHZhciBnZXREZWZhdWx0UmV0cnlRdW90YSA9IGZ1bmN0aW9uIChpbml0aWFsUmV0cnlUb2tlbnMpIHtcbiAgICB2YXIgTUFYX0NBUEFDSVRZID0gaW5pdGlhbFJldHJ5VG9rZW5zO1xuICAgIHZhciBhdmFpbGFibGVDYXBhY2l0eSA9IGluaXRpYWxSZXRyeVRva2VucztcbiAgICB2YXIgZ2V0Q2FwYWNpdHlBbW91bnQgPSBmdW5jdGlvbiAoZXJyb3IpIHsgcmV0dXJuIChlcnJvci5uYW1lID09PSBcIlRpbWVvdXRFcnJvclwiID8gVElNRU9VVF9SRVRSWV9DT1NUIDogUkVUUllfQ09TVCk7IH07XG4gICAgdmFyIGhhc1JldHJ5VG9rZW5zID0gZnVuY3Rpb24gKGVycm9yKSB7IHJldHVybiBnZXRDYXBhY2l0eUFtb3VudChlcnJvcikgPD0gYXZhaWxhYmxlQ2FwYWNpdHk7IH07XG4gICAgdmFyIHJldHJpZXZlUmV0cnlUb2tlbnMgPSBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgaWYgKCFoYXNSZXRyeVRva2VucyhlcnJvcikpIHtcbiAgICAgICAgICAgIC8vIHJldHJ5U3RyYXRlZ3kgc2hvdWxkIHN0b3AgcmV0cnlpbmcsIGFuZCByZXR1cm4gbGFzdCBlcnJvclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gcmV0cnkgdG9rZW4gYXZhaWxhYmxlXCIpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBjYXBhY2l0eUFtb3VudCA9IGdldENhcGFjaXR5QW1vdW50KGVycm9yKTtcbiAgICAgICAgYXZhaWxhYmxlQ2FwYWNpdHkgLT0gY2FwYWNpdHlBbW91bnQ7XG4gICAgICAgIHJldHVybiBjYXBhY2l0eUFtb3VudDtcbiAgICB9O1xuICAgIHZhciByZWxlYXNlUmV0cnlUb2tlbnMgPSBmdW5jdGlvbiAoY2FwYWNpdHlSZWxlYXNlQW1vdW50KSB7XG4gICAgICAgIGF2YWlsYWJsZUNhcGFjaXR5ICs9IGNhcGFjaXR5UmVsZWFzZUFtb3VudCAhPT0gbnVsbCAmJiBjYXBhY2l0eVJlbGVhc2VBbW91bnQgIT09IHZvaWQgMCA/IGNhcGFjaXR5UmVsZWFzZUFtb3VudCA6IE5PX1JFVFJZX0lOQ1JFTUVOVDtcbiAgICAgICAgYXZhaWxhYmxlQ2FwYWNpdHkgPSBNYXRoLm1pbihhdmFpbGFibGVDYXBhY2l0eSwgTUFYX0NBUEFDSVRZKTtcbiAgICB9O1xuICAgIHJldHVybiBPYmplY3QuZnJlZXplKHtcbiAgICAgICAgaGFzUmV0cnlUb2tlbnM6IGhhc1JldHJ5VG9rZW5zLFxuICAgICAgICByZXRyaWV2ZVJldHJ5VG9rZW5zOiByZXRyaWV2ZVJldHJ5VG9rZW5zLFxuICAgICAgICByZWxlYXNlUmV0cnlUb2tlbnM6IHJlbGVhc2VSZXRyeVRva2VucyxcbiAgICB9KTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2laR1ZtWVhWc2RGSmxkSEo1VVhWdmRHRXVhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOHVMaTl6Y21NdlpHVm1ZWFZzZEZKbGRISjVVWFZ2ZEdFdWRITWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJSVUVzVDBGQlR5eEZRVUZGTEd0Q1FVRnJRaXhGUVVGRkxGVkJRVlVzUlVGQlJTeHJRa0ZCYTBJc1JVRkJSU3hOUVVGTkxHRkJRV0VzUTBGQlF6dEJRVWRxUml4TlFVRk5MRU5CUVVNc1NVRkJUU3h2UWtGQmIwSXNSMEZCUnl4VlFVRkRMR3RDUVVFd1FqdEpRVU0zUkN4SlFVRk5MRmxCUVZrc1IwRkJSeXhyUWtGQmEwSXNRMEZCUXp0SlFVTjRReXhKUVVGSkxHbENRVUZwUWl4SFFVRkhMR3RDUVVGclFpeERRVUZETzBsQlJUTkRMRWxCUVUwc2FVSkJRV2xDTEVkQlFVY3NWVUZCUXl4TFFVRmxMRWxCUVVzc1QwRkJRU3hEUVVGRExFdEJRVXNzUTBGQlF5eEpRVUZKTEV0QlFVc3NZMEZCWXl4RFFVRkRMRU5CUVVNc1EwRkJReXhyUWtGQmEwSXNRMEZCUXl4RFFVRkRMRU5CUVVNc1ZVRkJWU3hEUVVGRExFVkJRV3BGTEVOQlFXbEZMRU5CUVVNN1NVRkZha2dzU1VGQlRTeGpRVUZqTEVkQlFVY3NWVUZCUXl4TFFVRmxMRWxCUVVzc1QwRkJRU3hwUWtGQmFVSXNRMEZCUXl4TFFVRkxMRU5CUVVNc1NVRkJTU3hwUWtGQmFVSXNSVUZCTjBNc1EwRkJOa01zUTBGQlF6dEpRVVV4Uml4SlFVRk5MRzFDUVVGdFFpeEhRVUZITEZWQlFVTXNTMEZCWlR0UlFVTXhReXhKUVVGSkxFTkJRVU1zWTBGQll5eERRVUZETEV0QlFVc3NRMEZCUXl4RlFVRkZPMWxCUXpGQ0xEUkVRVUUwUkR0WlFVTTFSQ3hOUVVGTkxFbEJRVWtzUzBGQlN5eERRVUZETERCQ1FVRXdRaXhEUVVGRExFTkJRVU03VTBGRE4wTTdVVUZEUkN4SlFVRk5MR05CUVdNc1IwRkJSeXhwUWtGQmFVSXNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJRenRSUVVOb1JDeHBRa0ZCYVVJc1NVRkJTU3hqUVVGakxFTkJRVU03VVVGRGNFTXNUMEZCVHl4alFVRmpMRU5CUVVNN1NVRkRlRUlzUTBGQlF5eERRVUZETzBsQlJVWXNTVUZCVFN4clFrRkJhMElzUjBGQlJ5eFZRVUZETEhGQ1FVRTRRanRSUVVONFJDeHBRa0ZCYVVJc1NVRkJTU3h4UWtGQmNVSXNZVUZCY2tJc2NVSkJRWEZDTEdOQlFYSkNMSEZDUVVGeFFpeEhRVUZKTEd0Q1FVRnJRaXhEUVVGRE8xRkJRMnBGTEdsQ1FVRnBRaXhIUVVGSExFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNhVUpCUVdsQ0xFVkJRVVVzV1VGQldTeERRVUZETEVOQlFVTTdTVUZEYUVVc1EwRkJReXhEUVVGRE8wbEJSVVlzVDBGQlR5eE5RVUZOTEVOQlFVTXNUVUZCVFN4RFFVRkRPMUZCUTI1Q0xHTkJRV01zWjBKQlFVRTdVVUZEWkN4dFFrRkJiVUlzY1VKQlFVRTdVVUZEYmtJc2EwSkJRV3RDTEc5Q1FVRkJPMHRCUTI1Q0xFTkJRVU1zUTBGQlF6dEJRVU5NTEVOQlFVTXNRMEZCUXlJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYkltbHRjRzl5ZENCN0lGTmthMFZ5Y205eUlIMGdabkp2YlNCY0lrQmhkM010YzJSckwzTnRhWFJvZVMxamJHbGxiblJjSWp0Y2JseHVhVzF3YjNKMElIc2dUazlmVWtWVVVsbGZTVTVEVWtWTlJVNVVMQ0JTUlZSU1dWOURUMU5VTENCVVNVMUZUMVZVWDFKRlZGSlpYME5QVTFRZ2ZTQm1jbTl0SUZ3aUxpOWpiMjV6ZEdGdWRITmNJanRjYm1sdGNHOXlkQ0I3SUZKbGRISjVVWFZ2ZEdFZ2ZTQm1jbTl0SUZ3aUxpOWtaV1poZFd4MFUzUnlZWFJsWjNsY0lqdGNibHh1Wlhod2IzSjBJR052Ym5OMElHZGxkRVJsWm1GMWJIUlNaWFJ5ZVZGMWIzUmhJRDBnS0dsdWFYUnBZV3hTWlhSeWVWUnZhMlZ1Y3pvZ2JuVnRZbVZ5S1RvZ1VtVjBjbmxSZFc5MFlTQTlQaUI3WEc0Z0lHTnZibk4wSUUxQldGOURRVkJCUTBsVVdTQTlJR2x1YVhScFlXeFNaWFJ5ZVZSdmEyVnVjenRjYmlBZ2JHVjBJR0YyWVdsc1lXSnNaVU5oY0dGamFYUjVJRDBnYVc1cGRHbGhiRkpsZEhKNVZHOXJaVzV6TzF4dVhHNGdJR052Ym5OMElHZGxkRU5oY0dGamFYUjVRVzF2ZFc1MElEMGdLR1Z5Y205eU9pQlRaR3RGY25KdmNpa2dQVDRnS0dWeWNtOXlMbTVoYldVZ1BUMDlJRndpVkdsdFpXOTFkRVZ5Y205eVhDSWdQeUJVU1UxRlQxVlVYMUpGVkZKWlgwTlBVMVFnT2lCU1JWUlNXVjlEVDFOVUtUdGNibHh1SUNCamIyNXpkQ0JvWVhOU1pYUnllVlJ2YTJWdWN5QTlJQ2hsY25KdmNqb2dVMlJyUlhKeWIzSXBJRDArSUdkbGRFTmhjR0ZqYVhSNVFXMXZkVzUwS0dWeWNtOXlLU0E4UFNCaGRtRnBiR0ZpYkdWRFlYQmhZMmwwZVR0Y2JseHVJQ0JqYjI1emRDQnlaWFJ5YVdWMlpWSmxkSEo1Vkc5clpXNXpJRDBnS0dWeWNtOXlPaUJUWkd0RmNuSnZjaWtnUFQ0Z2UxeHVJQ0FnSUdsbUlDZ2hhR0Z6VW1WMGNubFViMnRsYm5Nb1pYSnliM0lwS1NCN1hHNGdJQ0FnSUNBdkx5QnlaWFJ5ZVZOMGNtRjBaV2Q1SUhOb2IzVnNaQ0J6ZEc5d0lISmxkSEo1YVc1bkxDQmhibVFnY21WMGRYSnVJR3hoYzNRZ1pYSnliM0pjYmlBZ0lDQWdJSFJvY205M0lHNWxkeUJGY25KdmNpaGNJazV2SUhKbGRISjVJSFJ2YTJWdUlHRjJZV2xzWVdKc1pWd2lLVHRjYmlBZ0lDQjlYRzRnSUNBZ1kyOXVjM1FnWTJGd1lXTnBkSGxCYlc5MWJuUWdQU0JuWlhSRFlYQmhZMmwwZVVGdGIzVnVkQ2hsY25KdmNpazdYRzRnSUNBZ1lYWmhhV3hoWW14bFEyRndZV05wZEhrZ0xUMGdZMkZ3WVdOcGRIbEJiVzkxYm5RN1hHNGdJQ0FnY21WMGRYSnVJR05oY0dGamFYUjVRVzF2ZFc1ME8xeHVJQ0I5TzF4dVhHNGdJR052Ym5OMElISmxiR1ZoYzJWU1pYUnllVlJ2YTJWdWN5QTlJQ2hqWVhCaFkybDBlVkpsYkdWaGMyVkJiVzkxYm5RL09pQnVkVzFpWlhJcElEMCtJSHRjYmlBZ0lDQmhkbUZwYkdGaWJHVkRZWEJoWTJsMGVTQXJQU0JqWVhCaFkybDBlVkpsYkdWaGMyVkJiVzkxYm5RZ1B6OGdUazlmVWtWVVVsbGZTVTVEVWtWTlJVNVVPMXh1SUNBZ0lHRjJZV2xzWVdKc1pVTmhjR0ZqYVhSNUlEMGdUV0YwYUM1dGFXNG9ZWFpoYVd4aFlteGxRMkZ3WVdOcGRIa3NJRTFCV0Y5RFFWQkJRMGxVV1NrN1hHNGdJSDA3WEc1Y2JpQWdjbVYwZFhKdUlFOWlhbVZqZEM1bWNtVmxlbVVvZTF4dUlDQWdJR2hoYzFKbGRISjVWRzlyWlc1ekxGeHVJQ0FnSUhKbGRISnBaWFpsVW1WMGNubFViMnRsYm5Nc1hHNGdJQ0FnY21Wc1pXRnpaVkpsZEhKNVZHOXJaVzV6TEZ4dUlDQjlLVHRjYm4wN1hHNGlYWDA9Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/defaultRetryQuota.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/defaultStrategy.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-retry/dist/es/defaultStrategy.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_MAX_ATTEMPTS: () => (/* binding */ DEFAULT_MAX_ATTEMPTS),\n/* harmony export */   DEFAULT_RETRY_MODE: () => (/* binding */ DEFAULT_RETRY_MODE),\n/* harmony export */   StandardRetryStrategy: () => (/* binding */ StandardRetryStrategy)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/protocol-http */ \"(ssr)/./node_modules/@aws-sdk/protocol-http/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_service_error_classification__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/service-error-classification */ \"(ssr)/./node_modules/@aws-sdk/service-error-classification/dist/es/index.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uuid */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/index.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/constants.js\");\n/* harmony import */ var _defaultRetryQuota__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaultRetryQuota */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/defaultRetryQuota.js\");\n/* harmony import */ var _delayDecider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./delayDecider */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/delayDecider.js\");\n/* harmony import */ var _retryDecider__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./retryDecider */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/retryDecider.js\");\n\n\n\n\n\n\n\n\n/**\n * The default value for how many HTTP requests an SDK should make for a\n * single SDK operation invocation before giving up\n */\nvar DEFAULT_MAX_ATTEMPTS = 3;\n/**\n * The default retry algorithm to use.\n */\nvar DEFAULT_RETRY_MODE = \"standard\";\nvar StandardRetryStrategy = /** @class */ (function () {\n    function StandardRetryStrategy(maxAttemptsProvider, options) {\n        var _a, _b, _c;\n        this.maxAttemptsProvider = maxAttemptsProvider;\n        this.mode = DEFAULT_RETRY_MODE;\n        this.retryDecider = (_a = options === null || options === void 0 ? void 0 : options.retryDecider) !== null && _a !== void 0 ? _a : _retryDecider__WEBPACK_IMPORTED_MODULE_6__.defaultRetryDecider;\n        this.delayDecider = (_b = options === null || options === void 0 ? void 0 : options.delayDecider) !== null && _b !== void 0 ? _b : _delayDecider__WEBPACK_IMPORTED_MODULE_5__.defaultDelayDecider;\n        this.retryQuota = (_c = options === null || options === void 0 ? void 0 : options.retryQuota) !== null && _c !== void 0 ? _c : (0,_defaultRetryQuota__WEBPACK_IMPORTED_MODULE_4__.getDefaultRetryQuota)(_constants__WEBPACK_IMPORTED_MODULE_3__.INITIAL_RETRY_TOKENS);\n    }\n    StandardRetryStrategy.prototype.shouldRetry = function (error, attempts, maxAttempts) {\n        return attempts < maxAttempts && this.retryDecider(error) && this.retryQuota.hasRetryTokens(error);\n    };\n    StandardRetryStrategy.prototype.getMaxAttempts = function () {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__awaiter)(this, void 0, void 0, function () {\n            var maxAttempts, error_1;\n            return (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__generator)(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.maxAttemptsProvider()];\n                    case 1:\n                        maxAttempts = _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_1 = _a.sent();\n                        maxAttempts = DEFAULT_MAX_ATTEMPTS;\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/, maxAttempts];\n                }\n            });\n        });\n    };\n    StandardRetryStrategy.prototype.retry = function (next, args) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__awaiter)(this, void 0, void 0, function () {\n            var retryTokenAmount, attempts, totalDelay, maxAttempts, request, _loop_1, this_1, state_1;\n            return (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__generator)(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        attempts = 0;\n                        totalDelay = 0;\n                        return [4 /*yield*/, this.getMaxAttempts()];\n                    case 1:\n                        maxAttempts = _a.sent();\n                        request = args.request;\n                        if (_aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest.isInstance(request)) {\n                            request.headers[_constants__WEBPACK_IMPORTED_MODULE_3__.INVOCATION_ID_HEADER] = (0,uuid__WEBPACK_IMPORTED_MODULE_2__.v4)();\n                        }\n                        _loop_1 = function () {\n                            var _a, response, output, err_1, delay_1;\n                            return (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__generator)(this, function (_b) {\n                                switch (_b.label) {\n                                    case 0:\n                                        _b.trys.push([0, 2, , 5]);\n                                        if (_aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest.isInstance(request)) {\n                                            request.headers[_constants__WEBPACK_IMPORTED_MODULE_3__.REQUEST_HEADER] = \"attempt=\" + (attempts + 1) + \"; max=\" + maxAttempts;\n                                        }\n                                        return [4 /*yield*/, next(args)];\n                                    case 1:\n                                        _a = _b.sent(), response = _a.response, output = _a.output;\n                                        this_1.retryQuota.releaseRetryTokens(retryTokenAmount);\n                                        output.$metadata.attempts = attempts + 1;\n                                        output.$metadata.totalRetryDelay = totalDelay;\n                                        return [2 /*return*/, { value: { response: response, output: output } }];\n                                    case 2:\n                                        err_1 = _b.sent();\n                                        attempts++;\n                                        if (!this_1.shouldRetry(err_1, attempts, maxAttempts)) return [3 /*break*/, 4];\n                                        retryTokenAmount = this_1.retryQuota.retrieveRetryTokens(err_1);\n                                        delay_1 = this_1.delayDecider((0,_aws_sdk_service_error_classification__WEBPACK_IMPORTED_MODULE_1__.isThrottlingError)(err_1) ? _constants__WEBPACK_IMPORTED_MODULE_3__.THROTTLING_RETRY_DELAY_BASE : _constants__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_RETRY_DELAY_BASE, attempts);\n                                        totalDelay += delay_1;\n                                        return [4 /*yield*/, new Promise(function (resolve) { return setTimeout(resolve, delay_1); })];\n                                    case 3:\n                                        _b.sent();\n                                        return [2 /*return*/, \"continue\"];\n                                    case 4:\n                                        if (!err_1.$metadata) {\n                                            err_1.$metadata = {};\n                                        }\n                                        err_1.$metadata.attempts = attempts;\n                                        err_1.$metadata.totalRetryDelay = totalDelay;\n                                        throw err_1;\n                                    case 5: return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_1 = this;\n                        _a.label = 2;\n                    case 2:\n                        if (false) {}\n                        return [5 /*yield**/, _loop_1()];\n                    case 3:\n                        state_1 = _a.sent();\n                        if (typeof state_1 === \"object\")\n                            return [2 /*return*/, state_1.value];\n                        return [3 /*break*/, 2];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return StandardRetryStrategy;\n}());\n\n//# sourceMappingURL=data:application/json;base64,//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/defaultStrategy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/delayDecider.js":
/*!************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-retry/dist/es/delayDecider.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultDelayDecider: () => (/* binding */ defaultDelayDecider)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/constants.js\");\n\n/**\n * Calculate a capped, fully-jittered exponential backoff time.\n */\nvar defaultDelayDecider = function (delayBase, attempts) {\n    return Math.floor(Math.min(_constants__WEBPACK_IMPORTED_MODULE_0__.MAXIMUM_RETRY_DELAY, Math.random() * Math.pow(2, attempts) * delayBase));\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVsYXlEZWNpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2RlbGF5RGVjaWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFFbEQ7O0dBRUc7QUFDSCxNQUFNLENBQUMsSUFBTSxtQkFBbUIsR0FBRyxVQUFDLFNBQWlCLEVBQUUsUUFBZ0I7SUFDckUsT0FBQSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLFNBQUEsQ0FBQyxFQUFJLFFBQVEsQ0FBQSxHQUFHLFNBQVMsQ0FBQyxDQUFDO0FBQXBGLENBQW9GLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNQVhJTVVNX1JFVFJZX0RFTEFZIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5cbi8qKlxuICogQ2FsY3VsYXRlIGEgY2FwcGVkLCBmdWxseS1qaXR0ZXJlZCBleHBvbmVudGlhbCBiYWNrb2ZmIHRpbWUuXG4gKi9cbmV4cG9ydCBjb25zdCBkZWZhdWx0RGVsYXlEZWNpZGVyID0gKGRlbGF5QmFzZTogbnVtYmVyLCBhdHRlbXB0czogbnVtYmVyKSA9PlxuICBNYXRoLmZsb29yKE1hdGgubWluKE1BWElNVU1fUkVUUllfREVMQVksIE1hdGgucmFuZG9tKCkgKiAyICoqIGF0dGVtcHRzICogZGVsYXlCYXNlKSk7XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1yZXRyeS9kaXN0L2VzL2RlbGF5RGVjaWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrRDtBQUNsRDtBQUNBO0FBQ0E7QUFDTztBQUNQLCtCQUErQiwyREFBbUI7QUFDbEQ7QUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL21pZGRsZXdhcmUtcmV0cnkvZGlzdC9lcy9kZWxheURlY2lkZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTUFYSU1VTV9SRVRSWV9ERUxBWSB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuLyoqXG4gKiBDYWxjdWxhdGUgYSBjYXBwZWQsIGZ1bGx5LWppdHRlcmVkIGV4cG9uZW50aWFsIGJhY2tvZmYgdGltZS5cbiAqL1xuZXhwb3J0IHZhciBkZWZhdWx0RGVsYXlEZWNpZGVyID0gZnVuY3Rpb24gKGRlbGF5QmFzZSwgYXR0ZW1wdHMpIHtcbiAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLm1pbihNQVhJTVVNX1JFVFJZX0RFTEFZLCBNYXRoLnJhbmRvbSgpICogTWF0aC5wb3coMiwgYXR0ZW1wdHMpICogZGVsYXlCYXNlKSk7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pWkdWc1lYbEVaV05wWkdWeUxtcHpJaXdpYzI5MWNtTmxVbTl2ZENJNklpSXNJbk52ZFhKalpYTWlPbHNpTGk0dkxpNHZjM0pqTDJSbGJHRjVSR1ZqYVdSbGNpNTBjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4UFFVRlBMRVZCUVVVc2JVSkJRVzFDTEVWQlFVVXNUVUZCVFN4aFFVRmhMRU5CUVVNN1FVRkZiRVE3TzBkQlJVYzdRVUZEU0N4TlFVRk5MRU5CUVVNc1NVRkJUU3h0UWtGQmJVSXNSMEZCUnl4VlFVRkRMRk5CUVdsQ0xFVkJRVVVzVVVGQlowSTdTVUZEY2tVc1QwRkJRU3hKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNc2JVSkJRVzFDTEVWQlFVVXNTVUZCU1N4RFFVRkRMRTFCUVUwc1JVRkJSU3hIUVVGSExGTkJRVUVzUTBGQlF5eEZRVUZKTEZGQlFWRXNRMEZCUVN4SFFVRkhMRk5CUVZNc1EwRkJReXhEUVVGRE8wRkJRWEJHTEVOQlFXOUdMRU5CUVVNaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SnBiWEJ2Y25RZ2V5Qk5RVmhKVFZWTlgxSkZWRkpaWDBSRlRFRlpJSDBnWm5KdmJTQmNJaTR2WTI5dWMzUmhiblJ6WENJN1hHNWNiaThxS2x4dUlDb2dRMkZzWTNWc1lYUmxJR0VnWTJGd2NHVmtMQ0JtZFd4c2VTMXFhWFIwWlhKbFpDQmxlSEJ2Ym1WdWRHbGhiQ0JpWVdOcmIyWm1JSFJwYldVdVhHNGdLaTljYm1WNGNHOXlkQ0JqYjI1emRDQmtaV1poZFd4MFJHVnNZWGxFWldOcFpHVnlJRDBnS0dSbGJHRjVRbUZ6WlRvZ2JuVnRZbVZ5TENCaGRIUmxiWEIwY3pvZ2JuVnRZbVZ5S1NBOVBseHVJQ0JOWVhSb0xtWnNiMjl5S0UxaGRHZ3ViV2x1S0UxQldFbE5WVTFmVWtWVVVsbGZSRVZNUVZrc0lFMWhkR2d1Y21GdVpHOXRLQ2tnS2lBeUlDb3FJR0YwZEdWdGNIUnpJQ29nWkdWc1lYbENZWE5sS1NrN1hHNGlYWDA9Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/delayDecider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-retry/dist/es/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CONFIG_MAX_ATTEMPTS: () => (/* reexport safe */ _configurations__WEBPACK_IMPORTED_MODULE_3__.CONFIG_MAX_ATTEMPTS),\n/* harmony export */   CONFIG_RETRY_MODE: () => (/* reexport safe */ _configurations__WEBPACK_IMPORTED_MODULE_3__.CONFIG_RETRY_MODE),\n/* harmony export */   DEFAULT_MAX_ATTEMPTS: () => (/* reexport safe */ _defaultStrategy__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_MAX_ATTEMPTS),\n/* harmony export */   DEFAULT_RETRY_MODE: () => (/* reexport safe */ _defaultStrategy__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_RETRY_MODE),\n/* harmony export */   ENV_MAX_ATTEMPTS: () => (/* reexport safe */ _configurations__WEBPACK_IMPORTED_MODULE_3__.ENV_MAX_ATTEMPTS),\n/* harmony export */   ENV_RETRY_MODE: () => (/* reexport safe */ _configurations__WEBPACK_IMPORTED_MODULE_3__.ENV_RETRY_MODE),\n/* harmony export */   NODE_MAX_ATTEMPT_CONFIG_OPTIONS: () => (/* reexport safe */ _configurations__WEBPACK_IMPORTED_MODULE_3__.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n/* harmony export */   NODE_RETRY_MODE_CONFIG_OPTIONS: () => (/* reexport safe */ _configurations__WEBPACK_IMPORTED_MODULE_3__.NODE_RETRY_MODE_CONFIG_OPTIONS),\n/* harmony export */   StandardRetryStrategy: () => (/* reexport safe */ _defaultStrategy__WEBPACK_IMPORTED_MODULE_2__.StandardRetryStrategy),\n/* harmony export */   defaultDelayDecider: () => (/* reexport safe */ _delayDecider__WEBPACK_IMPORTED_MODULE_4__.defaultDelayDecider),\n/* harmony export */   defaultRetryDecider: () => (/* reexport safe */ _retryDecider__WEBPACK_IMPORTED_MODULE_5__.defaultRetryDecider),\n/* harmony export */   getOmitRetryHeadersPlugin: () => (/* reexport safe */ _omitRetryHeadersMiddleware__WEBPACK_IMPORTED_MODULE_1__.getOmitRetryHeadersPlugin),\n/* harmony export */   getRetryPlugin: () => (/* reexport safe */ _retryMiddleware__WEBPACK_IMPORTED_MODULE_0__.getRetryPlugin),\n/* harmony export */   omitRetryHeadersMiddleware: () => (/* reexport safe */ _omitRetryHeadersMiddleware__WEBPACK_IMPORTED_MODULE_1__.omitRetryHeadersMiddleware),\n/* harmony export */   omitRetryHeadersMiddlewareOptions: () => (/* reexport safe */ _omitRetryHeadersMiddleware__WEBPACK_IMPORTED_MODULE_1__.omitRetryHeadersMiddlewareOptions),\n/* harmony export */   resolveRetryConfig: () => (/* reexport safe */ _configurations__WEBPACK_IMPORTED_MODULE_3__.resolveRetryConfig),\n/* harmony export */   retryMiddleware: () => (/* reexport safe */ _retryMiddleware__WEBPACK_IMPORTED_MODULE_0__.retryMiddleware),\n/* harmony export */   retryMiddlewareOptions: () => (/* reexport safe */ _retryMiddleware__WEBPACK_IMPORTED_MODULE_0__.retryMiddlewareOptions)\n/* harmony export */ });\n/* harmony import */ var _retryMiddleware__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./retryMiddleware */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/retryMiddleware.js\");\n/* harmony import */ var _omitRetryHeadersMiddleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./omitRetryHeadersMiddleware */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/omitRetryHeadersMiddleware.js\");\n/* harmony import */ var _defaultStrategy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaultStrategy */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/defaultStrategy.js\");\n/* harmony import */ var _configurations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./configurations */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/configurations.js\");\n/* harmony import */ var _delayDecider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./delayDecider */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/delayDecider.js\");\n/* harmony import */ var _retryDecider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./retryDecider */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/retryDecider.js\");\n\n\n\n\n\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxtQkFBbUIsQ0FBQztBQUNsQyxjQUFjLDhCQUE4QixDQUFDO0FBQzdDLGNBQWMsbUJBQW1CLENBQUM7QUFDbEMsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyxjQUFjLGdCQUFnQixDQUFDO0FBQy9CLGNBQWMsZ0JBQWdCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9yZXRyeU1pZGRsZXdhcmVcIjtcbmV4cG9ydCAqIGZyb20gXCIuL29taXRSZXRyeUhlYWRlcnNNaWRkbGV3YXJlXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9kZWZhdWx0U3RyYXRlZ3lcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2NvbmZpZ3VyYXRpb25zXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9kZWxheURlY2lkZXJcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3JldHJ5RGVjaWRlclwiO1xuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1yZXRyeS9kaXN0L2VzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFrQztBQUNXO0FBQ1g7QUFDRDtBQUNGO0FBQ0E7QUFDL0IsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9taWRkbGV3YXJlLXJldHJ5L2Rpc3QvZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vcmV0cnlNaWRkbGV3YXJlXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9vbWl0UmV0cnlIZWFkZXJzTWlkZGxld2FyZVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vZGVmYXVsdFN0cmF0ZWd5XCI7XG5leHBvcnQgKiBmcm9tIFwiLi9jb25maWd1cmF0aW9uc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vZGVsYXlEZWNpZGVyXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9yZXRyeURlY2lkZXJcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWFXNWtaWGd1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTh1TGk5emNtTXZhVzVrWlhndWRITWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzWTBGQll5eHRRa0ZCYlVJc1EwRkJRenRCUVVOc1F5eGpRVUZqTERoQ1FVRTRRaXhEUVVGRE8wRkJRemRETEdOQlFXTXNiVUpCUVcxQ0xFTkJRVU03UVVGRGJFTXNZMEZCWXl4clFrRkJhMElzUTBGQlF6dEJRVU5xUXl4alFVRmpMR2RDUVVGblFpeERRVUZETzBGQlF5OUNMR05CUVdNc1owSkJRV2RDTEVOQlFVTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpsZUhCdmNuUWdLaUJtY205dElGd2lMaTl5WlhSeWVVMXBaR1JzWlhkaGNtVmNJanRjYm1WNGNHOXlkQ0FxSUdaeWIyMGdYQ0l1TDI5dGFYUlNaWFJ5ZVVobFlXUmxjbk5OYVdSa2JHVjNZWEpsWENJN1hHNWxlSEJ2Y25RZ0tpQm1jbTl0SUZ3aUxpOWtaV1poZFd4MFUzUnlZWFJsWjNsY0lqdGNibVY0Y0c5eWRDQXFJR1p5YjIwZ1hDSXVMMk52Ym1acFozVnlZWFJwYjI1elhDSTdYRzVsZUhCdmNuUWdLaUJtY205dElGd2lMaTlrWld4aGVVUmxZMmxrWlhKY0lqdGNibVY0Y0c5eWRDQXFJR1p5YjIwZ1hDSXVMM0psZEhKNVJHVmphV1JsY2x3aU8xeHVJbDE5Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/omitRetryHeadersMiddleware.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-retry/dist/es/omitRetryHeadersMiddleware.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOmitRetryHeadersPlugin: () => (/* binding */ getOmitRetryHeadersPlugin),\n/* harmony export */   omitRetryHeadersMiddleware: () => (/* binding */ omitRetryHeadersMiddleware),\n/* harmony export */   omitRetryHeadersMiddlewareOptions: () => (/* binding */ omitRetryHeadersMiddlewareOptions)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/protocol-http */ \"(ssr)/./node_modules/@aws-sdk/protocol-http/dist/es/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/constants.js\");\n\n\n\nvar omitRetryHeadersMiddleware = function () { return function (next) { return function (args) { return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(void 0, void 0, void 0, function () {\n    var request;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__generator)(this, function (_a) {\n        request = args.request;\n        if (_aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest.isInstance(request)) {\n            delete request.headers[_constants__WEBPACK_IMPORTED_MODULE_1__.INVOCATION_ID_HEADER];\n            delete request.headers[_constants__WEBPACK_IMPORTED_MODULE_1__.REQUEST_HEADER];\n        }\n        return [2 /*return*/, next(args)];\n    });\n}); }; }; };\nvar omitRetryHeadersMiddlewareOptions = {\n    name: \"omitRetryHeadersMiddleware\",\n    tags: [\"RETRY\", \"HEADERS\", \"OMIT_RETRY_HEADERS\"],\n    relation: \"before\",\n    toMiddleware: \"awsAuthMiddleware\",\n    override: true,\n};\nvar getOmitRetryHeadersPlugin = function (options) { return ({\n    applyToStack: function (clientStack) {\n        clientStack.addRelativeTo(omitRetryHeadersMiddleware(), omitRetryHeadersMiddlewareOptions);\n    },\n}); };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib21pdFJldHJ5SGVhZGVyc01pZGRsZXdhcmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvb21pdFJldHJ5SGVhZGVyc01pZGRsZXdhcmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQVVyRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsY0FBYyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRW5FLE1BQU0sQ0FBQyxJQUFNLDBCQUEwQixHQUFHLGNBQU0sT0FBQSxVQUM5QyxJQUFrQyxJQUNELE9BQUEsVUFDakMsSUFBbUM7OztRQUUzQixPQUFPLEdBQUssSUFBSSxRQUFULENBQVU7UUFDekIsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ25DLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1lBQzdDLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQztTQUN4QztRQUNELHNCQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBQzs7S0FDbkIsRUFUa0MsQ0FTbEMsRUFYK0MsQ0FXL0MsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLGlDQUFpQyxHQUE4QjtJQUMxRSxJQUFJLEVBQUUsNEJBQTRCO0lBQ2xDLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxTQUFTLEVBQUUsb0JBQW9CLENBQUM7SUFDaEQsUUFBUSxFQUFFLFFBQVE7SUFDbEIsWUFBWSxFQUFFLG1CQUFtQjtJQUNqQyxRQUFRLEVBQUUsSUFBSTtDQUNmLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSx5QkFBeUIsR0FBRyxVQUFDLE9BQWdCLElBQTBCLE9BQUEsQ0FBQztJQUNuRixZQUFZLEVBQUUsVUFBQyxXQUFXO1FBQ3hCLFdBQVcsQ0FBQyxhQUFhLENBQUMsMEJBQTBCLEVBQUUsRUFBRSxpQ0FBaUMsQ0FBQyxDQUFDO0lBQzdGLENBQUM7Q0FDRixDQUFDLEVBSmtGLENBSWxGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwUmVxdWVzdCB9IGZyb20gXCJAYXdzLXNkay9wcm90b2NvbC1odHRwXCI7XG5pbXBvcnQge1xuICBGaW5hbGl6ZUhhbmRsZXIsXG4gIEZpbmFsaXplSGFuZGxlckFyZ3VtZW50cyxcbiAgRmluYWxpemVIYW5kbGVyT3V0cHV0LFxuICBNZXRhZGF0YUJlYXJlcixcbiAgUGx1Z2dhYmxlLFxuICBSZWxhdGl2ZU1pZGRsZXdhcmVPcHRpb25zLFxufSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuaW1wb3J0IHsgSU5WT0NBVElPTl9JRF9IRUFERVIsIFJFUVVFU1RfSEVBREVSIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5cbmV4cG9ydCBjb25zdCBvbWl0UmV0cnlIZWFkZXJzTWlkZGxld2FyZSA9ICgpID0+IDxPdXRwdXQgZXh0ZW5kcyBNZXRhZGF0YUJlYXJlciA9IE1ldGFkYXRhQmVhcmVyPihcbiAgbmV4dDogRmluYWxpemVIYW5kbGVyPGFueSwgT3V0cHV0PlxuKTogRmluYWxpemVIYW5kbGVyPGFueSwgT3V0cHV0PiA9PiBhc3luYyAoXG4gIGFyZ3M6IEZpbmFsaXplSGFuZGxlckFyZ3VtZW50czxhbnk+XG4pOiBQcm9taXNlPEZpbmFsaXplSGFuZGxlck91dHB1dDxPdXRwdXQ+PiA9PiB7XG4gIGNvbnN0IHsgcmVxdWVzdCB9ID0gYXJncztcbiAgaWYgKEh0dHBSZXF1ZXN0LmlzSW5zdGFuY2UocmVxdWVzdCkpIHtcbiAgICBkZWxldGUgcmVxdWVzdC5oZWFkZXJzW0lOVk9DQVRJT05fSURfSEVBREVSXTtcbiAgICBkZWxldGUgcmVxdWVzdC5oZWFkZXJzW1JFUVVFU1RfSEVBREVSXTtcbiAgfVxuICByZXR1cm4gbmV4dChhcmdzKTtcbn07XG5cbmV4cG9ydCBjb25zdCBvbWl0UmV0cnlIZWFkZXJzTWlkZGxld2FyZU9wdGlvbnM6IFJlbGF0aXZlTWlkZGxld2FyZU9wdGlvbnMgPSB7XG4gIG5hbWU6IFwib21pdFJldHJ5SGVhZGVyc01pZGRsZXdhcmVcIixcbiAgdGFnczogW1wiUkVUUllcIiwgXCJIRUFERVJTXCIsIFwiT01JVF9SRVRSWV9IRUFERVJTXCJdLFxuICByZWxhdGlvbjogXCJiZWZvcmVcIixcbiAgdG9NaWRkbGV3YXJlOiBcImF3c0F1dGhNaWRkbGV3YXJlXCIsXG4gIG92ZXJyaWRlOiB0cnVlLFxufTtcblxuZXhwb3J0IGNvbnN0IGdldE9taXRSZXRyeUhlYWRlcnNQbHVnaW4gPSAob3B0aW9uczogdW5rbm93bik6IFBsdWdnYWJsZTxhbnksIGFueT4gPT4gKHtcbiAgYXBwbHlUb1N0YWNrOiAoY2xpZW50U3RhY2spID0+IHtcbiAgICBjbGllbnRTdGFjay5hZGRSZWxhdGl2ZVRvKG9taXRSZXRyeUhlYWRlcnNNaWRkbGV3YXJlKCksIG9taXRSZXRyeUhlYWRlcnNNaWRkbGV3YXJlT3B0aW9ucyk7XG4gIH0sXG59KTtcbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1yZXRyeS9kaXN0L2VzL29taXRSZXRyeUhlYWRlcnNNaWRkbGV3YXJlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUErQztBQUNNO0FBQ2M7QUFDNUQsK0NBQStDLHlCQUF5Qix5QkFBeUIsT0FBTyxnREFBUztBQUN4SDtBQUNBLFdBQVcsa0RBQVc7QUFDdEI7QUFDQSxZQUFZLCtEQUFXO0FBQ3ZCLG1DQUFtQyw0REFBb0I7QUFDdkQsbUNBQW1DLHNEQUFjO0FBQ2pEO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsQ0FBQztBQUNNO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08scURBQXFEO0FBQzVEO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsQ0FBQztBQUNELDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1yZXRyeS9kaXN0L2VzL29taXRSZXRyeUhlYWRlcnNNaWRkbGV3YXJlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fYXdhaXRlciwgX19nZW5lcmF0b3IgfSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IEh0dHBSZXF1ZXN0IH0gZnJvbSBcIkBhd3Mtc2RrL3Byb3RvY29sLWh0dHBcIjtcbmltcG9ydCB7IElOVk9DQVRJT05fSURfSEVBREVSLCBSRVFVRVNUX0hFQURFUiB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuZXhwb3J0IHZhciBvbWl0UmV0cnlIZWFkZXJzTWlkZGxld2FyZSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGZ1bmN0aW9uIChuZXh0KSB7IHJldHVybiBmdW5jdGlvbiAoYXJncykgeyByZXR1cm4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcmVxdWVzdDtcbiAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgIHJlcXVlc3QgPSBhcmdzLnJlcXVlc3Q7XG4gICAgICAgIGlmIChIdHRwUmVxdWVzdC5pc0luc3RhbmNlKHJlcXVlc3QpKSB7XG4gICAgICAgICAgICBkZWxldGUgcmVxdWVzdC5oZWFkZXJzW0lOVk9DQVRJT05fSURfSEVBREVSXTtcbiAgICAgICAgICAgIGRlbGV0ZSByZXF1ZXN0LmhlYWRlcnNbUkVRVUVTVF9IRUFERVJdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBuZXh0KGFyZ3MpXTtcbiAgICB9KTtcbn0pOyB9OyB9OyB9O1xuZXhwb3J0IHZhciBvbWl0UmV0cnlIZWFkZXJzTWlkZGxld2FyZU9wdGlvbnMgPSB7XG4gICAgbmFtZTogXCJvbWl0UmV0cnlIZWFkZXJzTWlkZGxld2FyZVwiLFxuICAgIHRhZ3M6IFtcIlJFVFJZXCIsIFwiSEVBREVSU1wiLCBcIk9NSVRfUkVUUllfSEVBREVSU1wiXSxcbiAgICByZWxhdGlvbjogXCJiZWZvcmVcIixcbiAgICB0b01pZGRsZXdhcmU6IFwiYXdzQXV0aE1pZGRsZXdhcmVcIixcbiAgICBvdmVycmlkZTogdHJ1ZSxcbn07XG5leHBvcnQgdmFyIGdldE9taXRSZXRyeUhlYWRlcnNQbHVnaW4gPSBmdW5jdGlvbiAob3B0aW9ucykgeyByZXR1cm4gKHtcbiAgICBhcHBseVRvU3RhY2s6IGZ1bmN0aW9uIChjbGllbnRTdGFjaykge1xuICAgICAgICBjbGllbnRTdGFjay5hZGRSZWxhdGl2ZVRvKG9taXRSZXRyeUhlYWRlcnNNaWRkbGV3YXJlKCksIG9taXRSZXRyeUhlYWRlcnNNaWRkbGV3YXJlT3B0aW9ucyk7XG4gICAgfSxcbn0pOyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYjIxcGRGSmxkSEo1U0dWaFpHVnljMDFwWkdSc1pYZGhjbVV1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTh1TGk5emNtTXZiMjFwZEZKbGRISjVTR1ZoWkdWeWMwMXBaR1JzWlhkaGNtVXVkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanRCUVVGQkxFOUJRVThzUlVGQlJTeFhRVUZYTEVWQlFVVXNUVUZCVFN4M1FrRkJkMElzUTBGQlF6dEJRVlZ5UkN4UFFVRlBMRVZCUVVVc2IwSkJRVzlDTEVWQlFVVXNZMEZCWXl4RlFVRkZMRTFCUVUwc1lVRkJZU3hEUVVGRE8wRkJSVzVGTEUxQlFVMHNRMEZCUXl4SlFVRk5MREJDUVVFd1FpeEhRVUZITEdOQlFVMHNUMEZCUVN4VlFVTTVReXhKUVVGclF5eEpRVU5FTEU5QlFVRXNWVUZEYWtNc1NVRkJiVU03T3p0UlFVVXpRaXhQUVVGUExFZEJRVXNzU1VGQlNTeFJRVUZVTEVOQlFWVTdVVUZEZWtJc1NVRkJTU3hYUVVGWExFTkJRVU1zVlVGQlZTeERRVUZETEU5QlFVOHNRMEZCUXl4RlFVRkZPMWxCUTI1RExFOUJRVThzVDBGQlR5eERRVUZETEU5QlFVOHNRMEZCUXl4dlFrRkJiMElzUTBGQlF5eERRVUZETzFsQlF6ZERMRTlCUVU4c1QwRkJUeXhEUVVGRExFOUJRVThzUTBGQlF5eGpRVUZqTEVOQlFVTXNRMEZCUXp0VFFVTjRRenRSUVVORUxITkNRVUZQTEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1JVRkJRenM3UzBGRGJrSXNSVUZVYTBNc1EwRlRiRU1zUlVGWUswTXNRMEZYTDBNc1EwRkJRenRCUVVWR0xFMUJRVTBzUTBGQlF5eEpRVUZOTEdsRFFVRnBReXhIUVVFNFFqdEpRVU14UlN4SlFVRkpMRVZCUVVVc05FSkJRVFJDTzBsQlEyeERMRWxCUVVrc1JVRkJSU3hEUVVGRExFOUJRVThzUlVGQlJTeFRRVUZUTEVWQlFVVXNiMEpCUVc5Q0xFTkJRVU03U1VGRGFFUXNVVUZCVVN4RlFVRkZMRkZCUVZFN1NVRkRiRUlzV1VGQldTeEZRVUZGTEcxQ1FVRnRRanRKUVVOcVF5eFJRVUZSTEVWQlFVVXNTVUZCU1R0RFFVTm1MRU5CUVVNN1FVRkZSaXhOUVVGTkxFTkJRVU1zU1VGQlRTeDVRa0ZCZVVJc1IwRkJSeXhWUVVGRExFOUJRV2RDTEVsQlFUQkNMRTlCUVVFc1EwRkJRenRKUVVOdVJpeFpRVUZaTEVWQlFVVXNWVUZCUXl4WFFVRlhPMUZCUTNoQ0xGZEJRVmNzUTBGQlF5eGhRVUZoTEVOQlFVTXNNRUpCUVRCQ0xFVkJRVVVzUlVGQlJTeHBRMEZCYVVNc1EwRkJReXhEUVVGRE8wbEJRemRHTEVOQlFVTTdRMEZEUml4RFFVRkRMRVZCU210R0xFTkJTV3hHTEVOQlFVTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpwYlhCdmNuUWdleUJJZEhSd1VtVnhkV1Z6ZENCOUlHWnliMjBnWENKQVlYZHpMWE5rYXk5d2NtOTBiMk52YkMxb2RIUndYQ0k3WEc1cGJYQnZjblFnZTF4dUlDQkdhVzVoYkdsNlpVaGhibVJzWlhJc1hHNGdJRVpwYm1Gc2FYcGxTR0Z1Wkd4bGNrRnlaM1Z0Wlc1MGN5eGNiaUFnUm1sdVlXeHBlbVZJWVc1a2JHVnlUM1YwY0hWMExGeHVJQ0JOWlhSaFpHRjBZVUpsWVhKbGNpeGNiaUFnVUd4MVoyZGhZbXhsTEZ4dUlDQlNaV3hoZEdsMlpVMXBaR1JzWlhkaGNtVlBjSFJwYjI1ekxGeHVmU0JtY205dElGd2lRR0YzY3kxelpHc3ZkSGx3WlhOY0lqdGNibHh1YVcxd2IzSjBJSHNnU1U1V1QwTkJWRWxQVGw5SlJGOUlSVUZFUlZJc0lGSkZVVlZGVTFSZlNFVkJSRVZTSUgwZ1puSnZiU0JjSWk0dlkyOXVjM1JoYm5SelhDSTdYRzVjYm1WNGNHOXlkQ0JqYjI1emRDQnZiV2wwVW1WMGNubElaV0ZrWlhKelRXbGtaR3hsZDJGeVpTQTlJQ2dwSUQwK0lEeFBkWFJ3ZFhRZ1pYaDBaVzVrY3lCTlpYUmhaR0YwWVVKbFlYSmxjaUE5SUUxbGRHRmtZWFJoUW1WaGNtVnlQaWhjYmlBZ2JtVjRkRG9nUm1sdVlXeHBlbVZJWVc1a2JHVnlQR0Z1ZVN3Z1QzVjBjSFYwUGx4dUtUb2dSbWx1WVd4cGVtVklZVzVrYkdWeVBHRnVlU3dnVDNWMGNIVjBQaUE5UGlCaGMzbHVZeUFvWEc0Z0lHRnlaM002SUVacGJtRnNhWHBsU0dGdVpHeGxja0Z5WjNWdFpXNTBjenhoYm5rK1hHNHBPaUJRY205dGFYTmxQRVpwYm1Gc2FYcGxTR0Z1Wkd4bGNrOTFkSEIxZER4UGRYUndkWFErUGlBOVBpQjdYRzRnSUdOdmJuTjBJSHNnY21WeGRXVnpkQ0I5SUQwZ1lYSm5jenRjYmlBZ2FXWWdLRWgwZEhCU1pYRjFaWE4wTG1selNXNXpkR0Z1WTJVb2NtVnhkV1Z6ZENrcElIdGNiaUFnSUNCa1pXeGxkR1VnY21WeGRXVnpkQzVvWldGa1pYSnpXMGxPVms5RFFWUkpUMDVmU1VSZlNFVkJSRVZTWFR0Y2JpQWdJQ0JrWld4bGRHVWdjbVZ4ZFdWemRDNW9aV0ZrWlhKelcxSkZVVlZGVTFSZlNFVkJSRVZTWFR0Y2JpQWdmVnh1SUNCeVpYUjFjbTRnYm1WNGRDaGhjbWR6S1R0Y2JuMDdYRzVjYm1WNGNHOXlkQ0JqYjI1emRDQnZiV2wwVW1WMGNubElaV0ZrWlhKelRXbGtaR3hsZDJGeVpVOXdkR2x2Ym5NNklGSmxiR0YwYVhabFRXbGtaR3hsZDJGeVpVOXdkR2x2Ym5NZ1BTQjdYRzRnSUc1aGJXVTZJRndpYjIxcGRGSmxkSEo1U0dWaFpHVnljMDFwWkdSc1pYZGhjbVZjSWl4Y2JpQWdkR0ZuY3pvZ1cxd2lVa1ZVVWxsY0lpd2dYQ0pJUlVGRVJWSlRYQ0lzSUZ3aVQwMUpWRjlTUlZSU1dWOUlSVUZFUlZKVFhDSmRMRnh1SUNCeVpXeGhkR2x2YmpvZ1hDSmlaV1p2Y21WY0lpeGNiaUFnZEc5TmFXUmtiR1YzWVhKbE9pQmNJbUYzYzBGMWRHaE5hV1JrYkdWM1lYSmxYQ0lzWEc0Z0lHOTJaWEp5YVdSbE9pQjBjblZsTEZ4dWZUdGNibHh1Wlhod2IzSjBJR052Ym5OMElHZGxkRTl0YVhSU1pYUnllVWhsWVdSbGNuTlFiSFZuYVc0Z1BTQW9iM0IwYVc5dWN6b2dkVzVyYm05M2JpazZJRkJzZFdkbllXSnNaVHhoYm5rc0lHRnVlVDRnUFQ0Z0tIdGNiaUFnWVhCd2JIbFViMU4wWVdOck9pQW9ZMnhwWlc1MFUzUmhZMnNwSUQwK0lIdGNiaUFnSUNCamJHbGxiblJUZEdGamF5NWhaR1JTWld4aGRHbDJaVlJ2S0c5dGFYUlNaWFJ5ZVVobFlXUmxjbk5OYVdSa2JHVjNZWEpsS0Nrc0lHOXRhWFJTWlhSeWVVaGxZV1JsY25OTmFXUmtiR1YzWVhKbFQzQjBhVzl1Y3lrN1hHNGdJSDBzWEc1OUtUdGNiaUpkZlE9PSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/omitRetryHeadersMiddleware.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/retryDecider.js":
/*!************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-retry/dist/es/retryDecider.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultRetryDecider: () => (/* binding */ defaultRetryDecider)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_service_error_classification__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/service-error-classification */ \"(ssr)/./node_modules/@aws-sdk/service-error-classification/dist/es/index.js\");\n\nvar defaultRetryDecider = function (error) {\n    if (!error) {\n        return false;\n    }\n    return (0,_aws_sdk_service_error_classification__WEBPACK_IMPORTED_MODULE_0__.isRetryableByTrait)(error) || (0,_aws_sdk_service_error_classification__WEBPACK_IMPORTED_MODULE_0__.isClockSkewError)(error) || (0,_aws_sdk_service_error_classification__WEBPACK_IMPORTED_MODULE_0__.isThrottlingError)(error) || (0,_aws_sdk_service_error_classification__WEBPACK_IMPORTED_MODULE_0__.isTransientError)(error);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmV0cnlEZWNpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3JldHJ5RGVjaWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsZ0JBQWdCLEVBQ2hCLGtCQUFrQixFQUNsQixpQkFBaUIsRUFDakIsZ0JBQWdCLEdBQ2pCLE1BQU0sdUNBQXVDLENBQUM7QUFHL0MsTUFBTSxDQUFDLElBQU0sbUJBQW1CLEdBQUcsVUFBQyxLQUFlO0lBQ2pELElBQUksQ0FBQyxLQUFLLEVBQUU7UUFDVixPQUFPLEtBQUssQ0FBQztLQUNkO0lBRUQsT0FBTyxrQkFBa0IsQ0FBQyxLQUFLLENBQUMsSUFBSSxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsSUFBSSxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsSUFBSSxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUNySCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBpc0Nsb2NrU2tld0Vycm9yLFxuICBpc1JldHJ5YWJsZUJ5VHJhaXQsXG4gIGlzVGhyb3R0bGluZ0Vycm9yLFxuICBpc1RyYW5zaWVudEVycm9yLFxufSBmcm9tIFwiQGF3cy1zZGsvc2VydmljZS1lcnJvci1jbGFzc2lmaWNhdGlvblwiO1xuaW1wb3J0IHsgU2RrRXJyb3IgfSBmcm9tIFwiQGF3cy1zZGsvc21pdGh5LWNsaWVudFwiO1xuXG5leHBvcnQgY29uc3QgZGVmYXVsdFJldHJ5RGVjaWRlciA9IChlcnJvcjogU2RrRXJyb3IpID0+IHtcbiAgaWYgKCFlcnJvcikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiBpc1JldHJ5YWJsZUJ5VHJhaXQoZXJyb3IpIHx8IGlzQ2xvY2tTa2V3RXJyb3IoZXJyb3IpIHx8IGlzVGhyb3R0bGluZ0Vycm9yKGVycm9yKSB8fCBpc1RyYW5zaWVudEVycm9yKGVycm9yKTtcbn07XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1yZXRyeS9kaXN0L2VzL3JldHJ5RGVjaWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFtSTtBQUM1SDtBQUNQO0FBQ0E7QUFDQTtBQUNBLFdBQVcseUZBQWtCLFdBQVcsdUZBQWdCLFdBQVcsd0ZBQWlCLFdBQVcsdUZBQWdCO0FBQy9HO0FBQ0EsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9taWRkbGV3YXJlLXJldHJ5L2Rpc3QvZXMvcmV0cnlEZWNpZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzQ2xvY2tTa2V3RXJyb3IsIGlzUmV0cnlhYmxlQnlUcmFpdCwgaXNUaHJvdHRsaW5nRXJyb3IsIGlzVHJhbnNpZW50RXJyb3IsIH0gZnJvbSBcIkBhd3Mtc2RrL3NlcnZpY2UtZXJyb3ItY2xhc3NpZmljYXRpb25cIjtcbmV4cG9ydCB2YXIgZGVmYXVsdFJldHJ5RGVjaWRlciA9IGZ1bmN0aW9uIChlcnJvcikge1xuICAgIGlmICghZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gaXNSZXRyeWFibGVCeVRyYWl0KGVycm9yKSB8fCBpc0Nsb2NrU2tld0Vycm9yKGVycm9yKSB8fCBpc1Rocm90dGxpbmdFcnJvcihlcnJvcikgfHwgaXNUcmFuc2llbnRFcnJvcihlcnJvcik7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pY21WMGNubEVaV05wWkdWeUxtcHpJaXdpYzI5MWNtTmxVbTl2ZENJNklpSXNJbk52ZFhKalpYTWlPbHNpTGk0dkxpNHZjM0pqTDNKbGRISjVSR1ZqYVdSbGNpNTBjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4UFFVRlBMRVZCUTB3c1owSkJRV2RDTEVWQlEyaENMR3RDUVVGclFpeEZRVU5zUWl4cFFrRkJhVUlzUlVGRGFrSXNaMEpCUVdkQ0xFZEJRMnBDTEUxQlFVMHNkVU5CUVhWRExFTkJRVU03UVVGSEwwTXNUVUZCVFN4RFFVRkRMRWxCUVUwc2JVSkJRVzFDTEVkQlFVY3NWVUZCUXl4TFFVRmxPMGxCUTJwRUxFbEJRVWtzUTBGQlF5eExRVUZMTEVWQlFVVTdVVUZEVml4UFFVRlBMRXRCUVVzc1EwRkJRenRMUVVOa08wbEJSVVFzVDBGQlR5eHJRa0ZCYTBJc1EwRkJReXhMUVVGTExFTkJRVU1zU1VGQlNTeG5Ra0ZCWjBJc1EwRkJReXhMUVVGTExFTkJRVU1zU1VGQlNTeHBRa0ZCYVVJc1EwRkJReXhMUVVGTExFTkJRVU1zU1VGQlNTeG5Ra0ZCWjBJc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF6dEJRVU55U0N4RFFVRkRMRU5CUVVNaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SnBiWEJ2Y25RZ2UxeHVJQ0JwYzBOc2IyTnJVMnRsZDBWeWNtOXlMRnh1SUNCcGMxSmxkSEo1WVdKc1pVSjVWSEpoYVhRc1hHNGdJR2x6VkdoeWIzUjBiR2x1WjBWeWNtOXlMRnh1SUNCcGMxUnlZVzV6YVdWdWRFVnljbTl5TEZ4dWZTQm1jbTl0SUZ3aVFHRjNjeTF6WkdzdmMyVnlkbWxqWlMxbGNuSnZjaTFqYkdGemMybG1hV05oZEdsdmJsd2lPMXh1YVcxd2IzSjBJSHNnVTJSclJYSnliM0lnZlNCbWNtOXRJRndpUUdGM2N5MXpaR3N2YzIxcGRHaDVMV05zYVdWdWRGd2lPMXh1WEc1bGVIQnZjblFnWTI5dWMzUWdaR1ZtWVhWc2RGSmxkSEo1UkdWamFXUmxjaUE5SUNobGNuSnZjam9nVTJSclJYSnliM0lwSUQwK0lIdGNiaUFnYVdZZ0tDRmxjbkp2Y2lrZ2UxeHVJQ0FnSUhKbGRIVnliaUJtWVd4elpUdGNiaUFnZlZ4dVhHNGdJSEpsZEhWeWJpQnBjMUpsZEhKNVlXSnNaVUo1VkhKaGFYUW9aWEp5YjNJcElIeDhJR2x6UTJ4dlkydFRhMlYzUlhKeWIzSW9aWEp5YjNJcElIeDhJR2x6VkdoeWIzUjBiR2x1WjBWeWNtOXlLR1Z5Y205eUtTQjhmQ0JwYzFSeVlXNXphV1Z1ZEVWeWNtOXlLR1Z5Y205eUtUdGNibjA3WEc0aVhYMD0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/retryDecider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/retryMiddleware.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-retry/dist/es/retryMiddleware.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRetryPlugin: () => (/* binding */ getRetryPlugin),\n/* harmony export */   retryMiddleware: () => (/* binding */ retryMiddleware),\n/* harmony export */   retryMiddlewareOptions: () => (/* binding */ retryMiddlewareOptions)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/node_modules/tslib/tslib.es6.js\");\n\nvar retryMiddleware = function (options) { return function (next, context) { return function (args) { return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(void 0, void 0, void 0, function () {\n    var _a;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_b) {\n        if ((_a = options === null || options === void 0 ? void 0 : options.retryStrategy) === null || _a === void 0 ? void 0 : _a.mode)\n            context.userAgent = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__spread)((context.userAgent || []), [[\"cfg/retry-mode\", options.retryStrategy.mode]]);\n        return [2 /*return*/, options.retryStrategy.retry(next, args)];\n    });\n}); }; }; };\nvar retryMiddlewareOptions = {\n    name: \"retryMiddleware\",\n    tags: [\"RETRY\"],\n    step: \"finalizeRequest\",\n    priority: \"high\",\n    override: true,\n};\nvar getRetryPlugin = function (options) { return ({\n    applyToStack: function (clientStack) {\n        clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n    },\n}); };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmV0cnlNaWRkbGV3YXJlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3JldHJ5TWlkZGxld2FyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBYUEsTUFBTSxDQUFDLElBQU0sZUFBZSxHQUFHLFVBQUMsT0FBNEIsSUFBSyxPQUFBLFVBQy9ELElBQWtDLEVBQ2xDLE9BQWdDLElBQ0MsT0FBQSxVQUNqQyxJQUFtQzs7O1FBRW5DLFVBQUksT0FBTyxhQUFQLE9BQU8sdUJBQVAsT0FBTyxDQUFFLGFBQWEsMENBQUUsSUFBSTtZQUM5QixPQUFPLENBQUMsU0FBUyxZQUFPLENBQUMsT0FBTyxDQUFDLFNBQVMsSUFBSSxFQUFFLENBQUMsR0FBRSxDQUFDLGdCQUFnQixFQUFFLE9BQU8sQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEVBQUMsQ0FBQztRQUNyRyxzQkFBTyxPQUFPLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLEVBQUM7O0tBQ2hELEVBTmtDLENBTWxDLEVBVGdFLENBU2hFLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSxzQkFBc0IsR0FBcUQ7SUFDdEYsSUFBSSxFQUFFLGlCQUFpQjtJQUN2QixJQUFJLEVBQUUsQ0FBQyxPQUFPLENBQUM7SUFDZixJQUFJLEVBQUUsaUJBQWlCO0lBQ3ZCLFFBQVEsRUFBRSxNQUFNO0lBQ2hCLFFBQVEsRUFBRSxJQUFJO0NBQ2YsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLGNBQWMsR0FBRyxVQUFDLE9BQTRCLElBQTBCLE9BQUEsQ0FBQztJQUNwRixZQUFZLEVBQUUsVUFBQyxXQUFXO1FBQ3hCLFdBQVcsQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxFQUFFLHNCQUFzQixDQUFDLENBQUM7SUFDcEUsQ0FBQztDQUNGLENBQUMsRUFKbUYsQ0FJbkYsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFic29sdXRlTG9jYXRpb24sXG4gIEZpbmFsaXplSGFuZGxlcixcbiAgRmluYWxpemVIYW5kbGVyQXJndW1lbnRzLFxuICBGaW5hbGl6ZUhhbmRsZXJPdXRwdXQsXG4gIEZpbmFsaXplUmVxdWVzdEhhbmRsZXJPcHRpb25zLFxuICBIYW5kbGVyRXhlY3V0aW9uQ29udGV4dCxcbiAgTWV0YWRhdGFCZWFyZXIsXG4gIFBsdWdnYWJsZSxcbn0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmltcG9ydCB7IFJldHJ5UmVzb2x2ZWRDb25maWcgfSBmcm9tIFwiLi9jb25maWd1cmF0aW9uc1wiO1xuXG5leHBvcnQgY29uc3QgcmV0cnlNaWRkbGV3YXJlID0gKG9wdGlvbnM6IFJldHJ5UmVzb2x2ZWRDb25maWcpID0+IDxPdXRwdXQgZXh0ZW5kcyBNZXRhZGF0YUJlYXJlciA9IE1ldGFkYXRhQmVhcmVyPihcbiAgbmV4dDogRmluYWxpemVIYW5kbGVyPGFueSwgT3V0cHV0PixcbiAgY29udGV4dDogSGFuZGxlckV4ZWN1dGlvbkNvbnRleHRcbik6IEZpbmFsaXplSGFuZGxlcjxhbnksIE91dHB1dD4gPT4gYXN5bmMgKFxuICBhcmdzOiBGaW5hbGl6ZUhhbmRsZXJBcmd1bWVudHM8YW55PlxuKTogUHJvbWlzZTxGaW5hbGl6ZUhhbmRsZXJPdXRwdXQ8T3V0cHV0Pj4gPT4ge1xuICBpZiAob3B0aW9ucz8ucmV0cnlTdHJhdGVneT8ubW9kZSlcbiAgICBjb250ZXh0LnVzZXJBZ2VudCA9IFsuLi4oY29udGV4dC51c2VyQWdlbnQgfHwgW10pLCBbXCJjZmcvcmV0cnktbW9kZVwiLCBvcHRpb25zLnJldHJ5U3RyYXRlZ3kubW9kZV1dO1xuICByZXR1cm4gb3B0aW9ucy5yZXRyeVN0cmF0ZWd5LnJldHJ5KG5leHQsIGFyZ3MpO1xufTtcblxuZXhwb3J0IGNvbnN0IHJldHJ5TWlkZGxld2FyZU9wdGlvbnM6IEZpbmFsaXplUmVxdWVzdEhhbmRsZXJPcHRpb25zICYgQWJzb2x1dGVMb2NhdGlvbiA9IHtcbiAgbmFtZTogXCJyZXRyeU1pZGRsZXdhcmVcIixcbiAgdGFnczogW1wiUkVUUllcIl0sXG4gIHN0ZXA6IFwiZmluYWxpemVSZXF1ZXN0XCIsXG4gIHByaW9yaXR5OiBcImhpZ2hcIixcbiAgb3ZlcnJpZGU6IHRydWUsXG59O1xuXG5leHBvcnQgY29uc3QgZ2V0UmV0cnlQbHVnaW4gPSAob3B0aW9uczogUmV0cnlSZXNvbHZlZENvbmZpZyk6IFBsdWdnYWJsZTxhbnksIGFueT4gPT4gKHtcbiAgYXBwbHlUb1N0YWNrOiAoY2xpZW50U3RhY2spID0+IHtcbiAgICBjbGllbnRTdGFjay5hZGQocmV0cnlNaWRkbGV3YXJlKG9wdGlvbnMpLCByZXRyeU1pZGRsZXdhcmVPcHRpb25zKTtcbiAgfSxcbn0pO1xuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1yZXRyeS9kaXN0L2VzL3JldHJ5TWlkZGxld2FyZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWlFO0FBQzFELDJDQUEyQyxrQ0FBa0MseUJBQXlCLE9BQU8sZ0RBQVM7QUFDN0g7QUFDQSxXQUFXLGtEQUFXO0FBQ3RCO0FBQ0EsZ0NBQWdDLCtDQUFRO0FBQ3hDO0FBQ0EsS0FBSztBQUNMLENBQUM7QUFDTTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDBDQUEwQztBQUNqRDtBQUNBO0FBQ0EsS0FBSztBQUNMLENBQUM7QUFDRCwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL21pZGRsZXdhcmUtcmV0cnkvZGlzdC9lcy9yZXRyeU1pZGRsZXdhcmUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19hd2FpdGVyLCBfX2dlbmVyYXRvciwgX19yZWFkLCBfX3NwcmVhZCB9IGZyb20gXCJ0c2xpYlwiO1xuZXhwb3J0IHZhciByZXRyeU1pZGRsZXdhcmUgPSBmdW5jdGlvbiAob3B0aW9ucykgeyByZXR1cm4gZnVuY3Rpb24gKG5leHQsIGNvbnRleHQpIHsgcmV0dXJuIGZ1bmN0aW9uIChhcmdzKSB7IHJldHVybiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgIHZhciBfYTtcbiAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9iKSB7XG4gICAgICAgIGlmICgoX2EgPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMucmV0cnlTdHJhdGVneSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLm1vZGUpXG4gICAgICAgICAgICBjb250ZXh0LnVzZXJBZ2VudCA9IF9fc3ByZWFkKChjb250ZXh0LnVzZXJBZ2VudCB8fCBbXSksIFtbXCJjZmcvcmV0cnktbW9kZVwiLCBvcHRpb25zLnJldHJ5U3RyYXRlZ3kubW9kZV1dKTtcbiAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIG9wdGlvbnMucmV0cnlTdHJhdGVneS5yZXRyeShuZXh0LCBhcmdzKV07XG4gICAgfSk7XG59KTsgfTsgfTsgfTtcbmV4cG9ydCB2YXIgcmV0cnlNaWRkbGV3YXJlT3B0aW9ucyA9IHtcbiAgICBuYW1lOiBcInJldHJ5TWlkZGxld2FyZVwiLFxuICAgIHRhZ3M6IFtcIlJFVFJZXCJdLFxuICAgIHN0ZXA6IFwiZmluYWxpemVSZXF1ZXN0XCIsXG4gICAgcHJpb3JpdHk6IFwiaGlnaFwiLFxuICAgIG92ZXJyaWRlOiB0cnVlLFxufTtcbmV4cG9ydCB2YXIgZ2V0UmV0cnlQbHVnaW4gPSBmdW5jdGlvbiAob3B0aW9ucykgeyByZXR1cm4gKHtcbiAgICBhcHBseVRvU3RhY2s6IGZ1bmN0aW9uIChjbGllbnRTdGFjaykge1xuICAgICAgICBjbGllbnRTdGFjay5hZGQocmV0cnlNaWRkbGV3YXJlKG9wdGlvbnMpLCByZXRyeU1pZGRsZXdhcmVPcHRpb25zKTtcbiAgICB9LFxufSk7IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2ljbVYwY25sTmFXUmtiR1YzWVhKbExtcHpJaXdpYzI5MWNtTmxVbTl2ZENJNklpSXNJbk52ZFhKalpYTWlPbHNpTGk0dkxpNHZjM0pqTDNKbGRISjVUV2xrWkd4bGQyRnlaUzUwY3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pTzBGQllVRXNUVUZCVFN4RFFVRkRMRWxCUVUwc1pVRkJaU3hIUVVGSExGVkJRVU1zVDBGQk5FSXNTVUZCU3l4UFFVRkJMRlZCUXk5RUxFbEJRV3RETEVWQlEyeERMRTlCUVdkRExFbEJRME1zVDBGQlFTeFZRVU5xUXl4SlFVRnRRenM3TzFGQlJXNURMRlZCUVVrc1QwRkJUeXhoUVVGUUxFOUJRVThzZFVKQlFWQXNUMEZCVHl4RFFVRkZMR0ZCUVdFc01FTkJRVVVzU1VGQlNUdFpRVU01UWl4UFFVRlBMRU5CUVVNc1UwRkJVeXhaUVVGUExFTkJRVU1zVDBGQlR5eERRVUZETEZOQlFWTXNTVUZCU1N4RlFVRkZMRU5CUVVNc1IwRkJSU3hEUVVGRExHZENRVUZuUWl4RlFVRkZMRTlCUVU4c1EwRkJReXhoUVVGaExFTkJRVU1zU1VGQlNTeERRVUZETEVWQlFVTXNRMEZCUXp0UlFVTnlSeXh6UWtGQlR5eFBRVUZQTEVOQlFVTXNZVUZCWVN4RFFVRkRMRXRCUVVzc1EwRkJReXhKUVVGSkxFVkJRVVVzU1VGQlNTeERRVUZETEVWQlFVTTdPMHRCUTJoRUxFVkJUbXRETEVOQlRXeERMRVZCVkdkRkxFTkJVMmhGTEVOQlFVTTdRVUZGUml4TlFVRk5MRU5CUVVNc1NVRkJUU3h6UWtGQmMwSXNSMEZCY1VRN1NVRkRkRVlzU1VGQlNTeEZRVUZGTEdsQ1FVRnBRanRKUVVOMlFpeEpRVUZKTEVWQlFVVXNRMEZCUXl4UFFVRlBMRU5CUVVNN1NVRkRaaXhKUVVGSkxFVkJRVVVzYVVKQlFXbENPMGxCUTNaQ0xGRkJRVkVzUlVGQlJTeE5RVUZOTzBsQlEyaENMRkZCUVZFc1JVRkJSU3hKUVVGSk8wTkJRMllzUTBGQlF6dEJRVVZHTEUxQlFVMHNRMEZCUXl4SlFVRk5MR05CUVdNc1IwRkJSeXhWUVVGRExFOUJRVFJDTEVsQlFUQkNMRTlCUVVFc1EwRkJRenRKUVVOd1JpeFpRVUZaTEVWQlFVVXNWVUZCUXl4WFFVRlhPMUZCUTNoQ0xGZEJRVmNzUTBGQlF5eEhRVUZITEVOQlFVTXNaVUZCWlN4RFFVRkRMRTlCUVU4c1EwRkJReXhGUVVGRkxITkNRVUZ6UWl4RFFVRkRMRU5CUVVNN1NVRkRjRVVzUTBGQlF6dERRVU5HTEVOQlFVTXNSVUZLYlVZc1EwRkpia1lzUTBGQlF5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbWx0Y0c5eWRDQjdYRzRnSUVGaWMyOXNkWFJsVEc5allYUnBiMjRzWEc0Z0lFWnBibUZzYVhwbFNHRnVaR3hsY2l4Y2JpQWdSbWx1WVd4cGVtVklZVzVrYkdWeVFYSm5kVzFsYm5SekxGeHVJQ0JHYVc1aGJHbDZaVWhoYm1Sc1pYSlBkWFJ3ZFhRc1hHNGdJRVpwYm1Gc2FYcGxVbVZ4ZFdWemRFaGhibVJzWlhKUGNIUnBiMjV6TEZ4dUlDQklZVzVrYkdWeVJYaGxZM1YwYVc5dVEyOXVkR1Y0ZEN4Y2JpQWdUV1YwWVdSaGRHRkNaV0Z5WlhJc1hHNGdJRkJzZFdkbllXSnNaU3hjYm4wZ1puSnZiU0JjSWtCaGQzTXRjMlJyTDNSNWNHVnpYQ0k3WEc1Y2JtbHRjRzl5ZENCN0lGSmxkSEo1VW1WemIyeDJaV1JEYjI1bWFXY2dmU0JtY205dElGd2lMaTlqYjI1bWFXZDFjbUYwYVc5dWMxd2lPMXh1WEc1bGVIQnZjblFnWTI5dWMzUWdjbVYwY25sTmFXUmtiR1YzWVhKbElEMGdLRzl3ZEdsdmJuTTZJRkpsZEhKNVVtVnpiMngyWldSRGIyNW1hV2NwSUQwK0lEeFBkWFJ3ZFhRZ1pYaDBaVzVrY3lCTlpYUmhaR0YwWVVKbFlYSmxjaUE5SUUxbGRHRmtZWFJoUW1WaGNtVnlQaWhjYmlBZ2JtVjRkRG9nUm1sdVlXeHBlbVZJWVc1a2JHVnlQR0Z1ZVN3Z1QzVjBjSFYwUGl4Y2JpQWdZMjl1ZEdWNGREb2dTR0Z1Wkd4bGNrVjRaV04xZEdsdmJrTnZiblJsZUhSY2JpazZJRVpwYm1Gc2FYcGxTR0Z1Wkd4bGNqeGhibmtzSUU5MWRIQjFkRDRnUFQ0Z1lYTjVibU1nS0Z4dUlDQmhjbWR6T2lCR2FXNWhiR2w2WlVoaGJtUnNaWEpCY21kMWJXVnVkSE04WVc1NVBseHVLVG9nVUhKdmJXbHpaVHhHYVc1aGJHbDZaVWhoYm1Sc1pYSlBkWFJ3ZFhROFQzVjBjSFYwUGo0Z1BUNGdlMXh1SUNCcFppQW9iM0IwYVc5dWN6OHVjbVYwY25sVGRISmhkR1ZuZVQ4dWJXOWtaU2xjYmlBZ0lDQmpiMjUwWlhoMExuVnpaWEpCWjJWdWRDQTlJRnN1TGk0b1kyOXVkR1Y0ZEM1MWMyVnlRV2RsYm5RZ2ZId2dXMTBwTENCYlhDSmpabWN2Y21WMGNua3RiVzlrWlZ3aUxDQnZjSFJwYjI1ekxuSmxkSEo1VTNSeVlYUmxaM2t1Ylc5a1pWMWRPMXh1SUNCeVpYUjFjbTRnYjNCMGFXOXVjeTV5WlhSeWVWTjBjbUYwWldkNUxuSmxkSEo1S0c1bGVIUXNJR0Z5WjNNcE8xeHVmVHRjYmx4dVpYaHdiM0owSUdOdmJuTjBJSEpsZEhKNVRXbGtaR3hsZDJGeVpVOXdkR2x2Ym5NNklFWnBibUZzYVhwbFVtVnhkV1Z6ZEVoaGJtUnNaWEpQY0hScGIyNXpJQ1lnUVdKemIyeDFkR1ZNYjJOaGRHbHZiaUE5SUh0Y2JpQWdibUZ0WlRvZ1hDSnlaWFJ5ZVUxcFpHUnNaWGRoY21WY0lpeGNiaUFnZEdGbmN6b2dXMXdpVWtWVVVsbGNJbDBzWEc0Z0lITjBaWEE2SUZ3aVptbHVZV3hwZW1WU1pYRjFaWE4wWENJc1hHNGdJSEJ5YVc5eWFYUjVPaUJjSW1ocFoyaGNJaXhjYmlBZ2IzWmxjbkpwWkdVNklIUnlkV1VzWEc1OU8xeHVYRzVsZUhCdmNuUWdZMjl1YzNRZ1oyVjBVbVYwY25sUWJIVm5hVzRnUFNBb2IzQjBhVzl1Y3pvZ1VtVjBjbmxTWlhOdmJIWmxaRU52Ym1acFp5azZJRkJzZFdkbllXSnNaVHhoYm5rc0lHRnVlVDRnUFQ0Z0tIdGNiaUFnWVhCd2JIbFViMU4wWVdOck9pQW9ZMnhwWlc1MFUzUmhZMnNwSUQwK0lIdGNiaUFnSUNCamJHbGxiblJUZEdGamF5NWhaR1FvY21WMGNubE5hV1JrYkdWM1lYSmxLRzl3ZEdsdmJuTXBMQ0J5WlhSeWVVMXBaR1JzWlhkaGNtVlBjSFJwYjI1ektUdGNiaUFnZlN4Y2JuMHBPMXh1SWwxOSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-retry/dist/es/retryMiddleware.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-retry/node_modules/tslib/tslib.es6.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-retry/node_modules/tslib/tslib.es6.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-retry/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/index.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var v1 = __webpack_require__(/*! ./v1 */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/v1.js\");\nvar v4 = __webpack_require__(/*! ./v4 */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/v4.js\");\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1yZXRyeS9ub2RlX21vZHVsZXMvdXVpZC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxTQUFTLG1CQUFPLENBQUMsb0ZBQU07QUFDdkIsU0FBUyxtQkFBTyxDQUFDLG9GQUFNOztBQUV2QjtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL21pZGRsZXdhcmUtcmV0cnkvbm9kZV9tb2R1bGVzL3V1aWQvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHYxID0gcmVxdWlyZSgnLi92MScpO1xudmFyIHY0ID0gcmVxdWlyZSgnLi92NCcpO1xuXG52YXIgdXVpZCA9IHY0O1xudXVpZC52MSA9IHYxO1xudXVpZC52NCA9IHY0O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHV1aWQ7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/lib/bytesToUuid.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/lib/bytesToUuid.js ***!
  \*************************************************************************************/
/***/ ((module) => {

eval("/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1yZXRyeS9ub2RlX21vZHVsZXMvdXVpZC9saWIvYnl0ZXNUb1V1aWQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixTQUFTO0FBQ3pCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9taWRkbGV3YXJlLXJldHJ5L25vZGVfbW9kdWxlcy91dWlkL2xpYi9ieXRlc1RvVXVpZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbnZlcnQgYXJyYXkgb2YgMTYgYnl0ZSB2YWx1ZXMgdG8gVVVJRCBzdHJpbmcgZm9ybWF0IG9mIHRoZSBmb3JtOlxuICogWFhYWFhYWFgtWFhYWC1YWFhYLVhYWFgtWFhYWFhYWFhYWFhYXG4gKi9cbnZhciBieXRlVG9IZXggPSBbXTtcbmZvciAodmFyIGkgPSAwOyBpIDwgMjU2OyArK2kpIHtcbiAgYnl0ZVRvSGV4W2ldID0gKGkgKyAweDEwMCkudG9TdHJpbmcoMTYpLnN1YnN0cigxKTtcbn1cblxuZnVuY3Rpb24gYnl0ZXNUb1V1aWQoYnVmLCBvZmZzZXQpIHtcbiAgdmFyIGkgPSBvZmZzZXQgfHwgMDtcbiAgdmFyIGJ0aCA9IGJ5dGVUb0hleDtcbiAgLy8gam9pbiB1c2VkIHRvIGZpeCBtZW1vcnkgaXNzdWUgY2F1c2VkIGJ5IGNvbmNhdGVuYXRpb246IGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMxNzUjYzRcbiAgcmV0dXJuIChbXG4gICAgYnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSxcbiAgICBidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dLCAnLScsXG4gICAgYnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSwgJy0nLFxuICAgIGJ0aFtidWZbaSsrXV0sIGJ0aFtidWZbaSsrXV0sICctJyxcbiAgICBidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dLCAnLScsXG4gICAgYnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSxcbiAgICBidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dLFxuICAgIGJ0aFtidWZbaSsrXV0sIGJ0aFtidWZbaSsrXV1cbiAgXSkuam9pbignJyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYnl0ZXNUb1V1aWQ7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/lib/bytesToUuid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/lib/rng.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/lib/rng.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Unique ID creation requires a high quality random # generator.  In node.js\n// this is pretty straight-forward - we use the crypto API.\n\nvar crypto = __webpack_require__(/*! crypto */ \"crypto\");\n\nmodule.exports = function nodeRNG() {\n  return crypto.randomBytes(16);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1yZXRyeS9ub2RlX21vZHVsZXMvdXVpZC9saWIvcm5nLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUEsYUFBYSxtQkFBTyxDQUFDLHNCQUFROztBQUU3QjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL21pZGRsZXdhcmUtcmV0cnkvbm9kZV9tb2R1bGVzL3V1aWQvbGliL3JuZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBVbmlxdWUgSUQgY3JlYXRpb24gcmVxdWlyZXMgYSBoaWdoIHF1YWxpdHkgcmFuZG9tICMgZ2VuZXJhdG9yLiAgSW4gbm9kZS5qc1xuLy8gdGhpcyBpcyBwcmV0dHkgc3RyYWlnaHQtZm9yd2FyZCAtIHdlIHVzZSB0aGUgY3J5cHRvIEFQSS5cblxudmFyIGNyeXB0byA9IHJlcXVpcmUoJ2NyeXB0bycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIG5vZGVSTkcoKSB7XG4gIHJldHVybiBjcnlwdG8ucmFuZG9tQnl0ZXMoMTYpO1xufTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/lib/rng.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/v1.js":
/*!************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/v1.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var rng = __webpack_require__(/*! ./lib/rng */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/lib/rng.js\");\nvar bytesToUuid = __webpack_require__(/*! ./lib/bytesToUuid */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/lib/bytesToUuid.js\");\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1yZXRyeS9ub2RlX21vZHVsZXMvdXVpZC92MS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsOEZBQVc7QUFDN0Isa0JBQWtCLG1CQUFPLENBQUMsOEdBQW1COztBQUU3QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esb0NBQW9DO0FBQ3BDOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLGtCQUFrQixPQUFPO0FBQ3pCO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1yZXRyeS9ub2RlX21vZHVsZXMvdXVpZC92MS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcm5nID0gcmVxdWlyZSgnLi9saWIvcm5nJyk7XG52YXIgYnl0ZXNUb1V1aWQgPSByZXF1aXJlKCcuL2xpYi9ieXRlc1RvVXVpZCcpO1xuXG4vLyAqKmB2MSgpYCAtIEdlbmVyYXRlIHRpbWUtYmFzZWQgVVVJRCoqXG4vL1xuLy8gSW5zcGlyZWQgYnkgaHR0cHM6Ly9naXRodWIuY29tL0xpb3NLL1VVSUQuanNcbi8vIGFuZCBodHRwOi8vZG9jcy5weXRob24ub3JnL2xpYnJhcnkvdXVpZC5odG1sXG5cbnZhciBfbm9kZUlkO1xudmFyIF9jbG9ja3NlcTtcblxuLy8gUHJldmlvdXMgdXVpZCBjcmVhdGlvbiB0aW1lXG52YXIgX2xhc3RNU2VjcyA9IDA7XG52YXIgX2xhc3ROU2VjcyA9IDA7XG5cbi8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vdXVpZGpzL3V1aWQgZm9yIEFQSSBkZXRhaWxzXG5mdW5jdGlvbiB2MShvcHRpb25zLCBidWYsIG9mZnNldCkge1xuICB2YXIgaSA9IGJ1ZiAmJiBvZmZzZXQgfHwgMDtcbiAgdmFyIGIgPSBidWYgfHwgW107XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIHZhciBub2RlID0gb3B0aW9ucy5ub2RlIHx8IF9ub2RlSWQ7XG4gIHZhciBjbG9ja3NlcSA9IG9wdGlvbnMuY2xvY2tzZXEgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMuY2xvY2tzZXEgOiBfY2xvY2tzZXE7XG5cbiAgLy8gbm9kZSBhbmQgY2xvY2tzZXEgbmVlZCB0byBiZSBpbml0aWFsaXplZCB0byByYW5kb20gdmFsdWVzIGlmIHRoZXkncmUgbm90XG4gIC8vIHNwZWNpZmllZC4gIFdlIGRvIHRoaXMgbGF6aWx5IHRvIG1pbmltaXplIGlzc3VlcyByZWxhdGVkIHRvIGluc3VmZmljaWVudFxuICAvLyBzeXN0ZW0gZW50cm9weS4gIFNlZSAjMTg5XG4gIGlmIChub2RlID09IG51bGwgfHwgY2xvY2tzZXEgPT0gbnVsbCkge1xuICAgIHZhciBzZWVkQnl0ZXMgPSBybmcoKTtcbiAgICBpZiAobm9kZSA9PSBudWxsKSB7XG4gICAgICAvLyBQZXIgNC41LCBjcmVhdGUgYW5kIDQ4LWJpdCBub2RlIGlkLCAoNDcgcmFuZG9tIGJpdHMgKyBtdWx0aWNhc3QgYml0ID0gMSlcbiAgICAgIG5vZGUgPSBfbm9kZUlkID0gW1xuICAgICAgICBzZWVkQnl0ZXNbMF0gfCAweDAxLFxuICAgICAgICBzZWVkQnl0ZXNbMV0sIHNlZWRCeXRlc1syXSwgc2VlZEJ5dGVzWzNdLCBzZWVkQnl0ZXNbNF0sIHNlZWRCeXRlc1s1XVxuICAgICAgXTtcbiAgICB9XG4gICAgaWYgKGNsb2Nrc2VxID09IG51bGwpIHtcbiAgICAgIC8vIFBlciA0LjIuMiwgcmFuZG9taXplICgxNCBiaXQpIGNsb2Nrc2VxXG4gICAgICBjbG9ja3NlcSA9IF9jbG9ja3NlcSA9IChzZWVkQnl0ZXNbNl0gPDwgOCB8IHNlZWRCeXRlc1s3XSkgJiAweDNmZmY7XG4gICAgfVxuICB9XG5cbiAgLy8gVVVJRCB0aW1lc3RhbXBzIGFyZSAxMDAgbmFuby1zZWNvbmQgdW5pdHMgc2luY2UgdGhlIEdyZWdvcmlhbiBlcG9jaCxcbiAgLy8gKDE1ODItMTAtMTUgMDA6MDApLiAgSlNOdW1iZXJzIGFyZW4ndCBwcmVjaXNlIGVub3VnaCBmb3IgdGhpcywgc29cbiAgLy8gdGltZSBpcyBoYW5kbGVkIGludGVybmFsbHkgYXMgJ21zZWNzJyAoaW50ZWdlciBtaWxsaXNlY29uZHMpIGFuZCAnbnNlY3MnXG4gIC8vICgxMDAtbmFub3NlY29uZHMgb2Zmc2V0IGZyb20gbXNlY3MpIHNpbmNlIHVuaXggZXBvY2gsIDE5NzAtMDEtMDEgMDA6MDAuXG4gIHZhciBtc2VjcyA9IG9wdGlvbnMubXNlY3MgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMubXNlY3MgOiBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcblxuICAvLyBQZXIgNC4yLjEuMiwgdXNlIGNvdW50IG9mIHV1aWQncyBnZW5lcmF0ZWQgZHVyaW5nIHRoZSBjdXJyZW50IGNsb2NrXG4gIC8vIGN5Y2xlIHRvIHNpbXVsYXRlIGhpZ2hlciByZXNvbHV0aW9uIGNsb2NrXG4gIHZhciBuc2VjcyA9IG9wdGlvbnMubnNlY3MgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMubnNlY3MgOiBfbGFzdE5TZWNzICsgMTtcblxuICAvLyBUaW1lIHNpbmNlIGxhc3QgdXVpZCBjcmVhdGlvbiAoaW4gbXNlY3MpXG4gIHZhciBkdCA9IChtc2VjcyAtIF9sYXN0TVNlY3MpICsgKG5zZWNzIC0gX2xhc3ROU2VjcykvMTAwMDA7XG5cbiAgLy8gUGVyIDQuMi4xLjIsIEJ1bXAgY2xvY2tzZXEgb24gY2xvY2sgcmVncmVzc2lvblxuICBpZiAoZHQgPCAwICYmIG9wdGlvbnMuY2xvY2tzZXEgPT09IHVuZGVmaW5lZCkge1xuICAgIGNsb2Nrc2VxID0gY2xvY2tzZXEgKyAxICYgMHgzZmZmO1xuICB9XG5cbiAgLy8gUmVzZXQgbnNlY3MgaWYgY2xvY2sgcmVncmVzc2VzIChuZXcgY2xvY2tzZXEpIG9yIHdlJ3ZlIG1vdmVkIG9udG8gYSBuZXdcbiAgLy8gdGltZSBpbnRlcnZhbFxuICBpZiAoKGR0IDwgMCB8fCBtc2VjcyA+IF9sYXN0TVNlY3MpICYmIG9wdGlvbnMubnNlY3MgPT09IHVuZGVmaW5lZCkge1xuICAgIG5zZWNzID0gMDtcbiAgfVxuXG4gIC8vIFBlciA0LjIuMS4yIFRocm93IGVycm9yIGlmIHRvbyBtYW55IHV1aWRzIGFyZSByZXF1ZXN0ZWRcbiAgaWYgKG5zZWNzID49IDEwMDAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCd1dWlkLnYxKCk6IENhblxcJ3QgY3JlYXRlIG1vcmUgdGhhbiAxME0gdXVpZHMvc2VjJyk7XG4gIH1cblxuICBfbGFzdE1TZWNzID0gbXNlY3M7XG4gIF9sYXN0TlNlY3MgPSBuc2VjcztcbiAgX2Nsb2Nrc2VxID0gY2xvY2tzZXE7XG5cbiAgLy8gUGVyIDQuMS40IC0gQ29udmVydCBmcm9tIHVuaXggZXBvY2ggdG8gR3JlZ29yaWFuIGVwb2NoXG4gIG1zZWNzICs9IDEyMjE5MjkyODAwMDAwO1xuXG4gIC8vIGB0aW1lX2xvd2BcbiAgdmFyIHRsID0gKChtc2VjcyAmIDB4ZmZmZmZmZikgKiAxMDAwMCArIG5zZWNzKSAlIDB4MTAwMDAwMDAwO1xuICBiW2krK10gPSB0bCA+Pj4gMjQgJiAweGZmO1xuICBiW2krK10gPSB0bCA+Pj4gMTYgJiAweGZmO1xuICBiW2krK10gPSB0bCA+Pj4gOCAmIDB4ZmY7XG4gIGJbaSsrXSA9IHRsICYgMHhmZjtcblxuICAvLyBgdGltZV9taWRgXG4gIHZhciB0bWggPSAobXNlY3MgLyAweDEwMDAwMDAwMCAqIDEwMDAwKSAmIDB4ZmZmZmZmZjtcbiAgYltpKytdID0gdG1oID4+PiA4ICYgMHhmZjtcbiAgYltpKytdID0gdG1oICYgMHhmZjtcblxuICAvLyBgdGltZV9oaWdoX2FuZF92ZXJzaW9uYFxuICBiW2krK10gPSB0bWggPj4+IDI0ICYgMHhmIHwgMHgxMDsgLy8gaW5jbHVkZSB2ZXJzaW9uXG4gIGJbaSsrXSA9IHRtaCA+Pj4gMTYgJiAweGZmO1xuXG4gIC8vIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYCAoUGVyIDQuMi4yIC0gaW5jbHVkZSB2YXJpYW50KVxuICBiW2krK10gPSBjbG9ja3NlcSA+Pj4gOCB8IDB4ODA7XG5cbiAgLy8gYGNsb2NrX3NlcV9sb3dgXG4gIGJbaSsrXSA9IGNsb2Nrc2VxICYgMHhmZjtcblxuICAvLyBgbm9kZWBcbiAgZm9yICh2YXIgbiA9IDA7IG4gPCA2OyArK24pIHtcbiAgICBiW2kgKyBuXSA9IG5vZGVbbl07XG4gIH1cblxuICByZXR1cm4gYnVmID8gYnVmIDogYnl0ZXNUb1V1aWQoYik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gdjE7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/v1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/v4.js":
/*!************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/v4.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var rng = __webpack_require__(/*! ./lib/rng */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/lib/rng.js\");\nvar bytesToUuid = __webpack_require__(/*! ./lib/bytesToUuid */ \"(ssr)/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/lib/bytesToUuid.js\");\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1yZXRyeS9ub2RlX21vZHVsZXMvdXVpZC92NC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsOEZBQVc7QUFDN0Isa0JBQWtCLG1CQUFPLENBQUMsOEdBQW1COztBQUU3QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxxQkFBcUIsU0FBUztBQUM5QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1yZXRyeS9ub2RlX21vZHVsZXMvdXVpZC92NC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcm5nID0gcmVxdWlyZSgnLi9saWIvcm5nJyk7XG52YXIgYnl0ZXNUb1V1aWQgPSByZXF1aXJlKCcuL2xpYi9ieXRlc1RvVXVpZCcpO1xuXG5mdW5jdGlvbiB2NChvcHRpb25zLCBidWYsIG9mZnNldCkge1xuICB2YXIgaSA9IGJ1ZiAmJiBvZmZzZXQgfHwgMDtcblxuICBpZiAodHlwZW9mKG9wdGlvbnMpID09ICdzdHJpbmcnKSB7XG4gICAgYnVmID0gb3B0aW9ucyA9PT0gJ2JpbmFyeScgPyBuZXcgQXJyYXkoMTYpIDogbnVsbDtcbiAgICBvcHRpb25zID0gbnVsbDtcbiAgfVxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICB2YXIgcm5kcyA9IG9wdGlvbnMucmFuZG9tIHx8IChvcHRpb25zLnJuZyB8fCBybmcpKCk7XG5cbiAgLy8gUGVyIDQuNCwgc2V0IGJpdHMgZm9yIHZlcnNpb24gYW5kIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYFxuICBybmRzWzZdID0gKHJuZHNbNl0gJiAweDBmKSB8IDB4NDA7XG4gIHJuZHNbOF0gPSAocm5kc1s4XSAmIDB4M2YpIHwgMHg4MDtcblxuICAvLyBDb3B5IGJ5dGVzIHRvIGJ1ZmZlciwgaWYgcHJvdmlkZWRcbiAgaWYgKGJ1Zikge1xuICAgIGZvciAodmFyIGlpID0gMDsgaWkgPCAxNjsgKytpaSkge1xuICAgICAgYnVmW2kgKyBpaV0gPSBybmRzW2lpXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYnVmIHx8IGJ5dGVzVG9VdWlkKHJuZHMpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHY0O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/v4.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-serde/dist/es/deserializerMiddleware.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-serde/dist/es/deserializerMiddleware.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deserializerMiddleware: () => (/* binding */ deserializerMiddleware)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/middleware-serde/node_modules/tslib/tslib.es6.js\");\n\nvar deserializerMiddleware = function (options, deserializer) { return function (next, context) { return function (args) { return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(void 0, void 0, void 0, function () {\n    var response, parsed;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, next(args)];\n            case 1:\n                response = (_a.sent()).response;\n                return [4 /*yield*/, deserializer(response, options)];\n            case 2:\n                parsed = _a.sent();\n                return [2 /*return*/, {\n                        response: response,\n                        output: parsed,\n                    }];\n        }\n    });\n}); }; }; };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVzZXJpYWxpemVyTWlkZGxld2FyZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kZXNlcmlhbGl6ZXJNaWRkbGV3YXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFTQSxNQUFNLENBQUMsSUFBTSxzQkFBc0IsR0FBRyxVQUNwQyxPQUFxQixFQUNyQixZQUEwRCxJQUNqQixPQUFBLFVBQ3pDLElBQXVDLEVBQ3ZDLE9BQWdDLElBQ00sT0FBQSxVQUN0QyxJQUF3Qzs7OztvQkFFbkIscUJBQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFBOztnQkFBN0IsUUFBUSxHQUFLLENBQUEsU0FBZ0IsQ0FBQSxTQUFyQjtnQkFDRCxxQkFBTSxZQUFZLENBQUMsUUFBUSxFQUFFLE9BQU8sQ0FBQyxFQUFBOztnQkFBOUMsTUFBTSxHQUFHLFNBQXFDO2dCQUNwRCxzQkFBTzt3QkFDTCxRQUFRLFVBQUE7d0JBQ1IsTUFBTSxFQUFFLE1BQWdCO3FCQUN6QixFQUFDOzs7S0FDSCxFQVR1QyxDQVN2QyxFQVowQyxDQVkxQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgRGVzZXJpYWxpemVIYW5kbGVyLFxuICBEZXNlcmlhbGl6ZUhhbmRsZXJBcmd1bWVudHMsXG4gIERlc2VyaWFsaXplSGFuZGxlck91dHB1dCxcbiAgRGVzZXJpYWxpemVNaWRkbGV3YXJlLFxuICBIYW5kbGVyRXhlY3V0aW9uQ29udGV4dCxcbiAgUmVzcG9uc2VEZXNlcmlhbGl6ZXIsXG59IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5leHBvcnQgY29uc3QgZGVzZXJpYWxpemVyTWlkZGxld2FyZSA9IDxJbnB1dCBleHRlbmRzIG9iamVjdCwgT3V0cHV0IGV4dGVuZHMgb2JqZWN0LCBSdW50aW1lVXRpbHMgPSBhbnk+KFxuICBvcHRpb25zOiBSdW50aW1lVXRpbHMsXG4gIGRlc2VyaWFsaXplcjogUmVzcG9uc2VEZXNlcmlhbGl6ZXI8YW55LCBhbnksIFJ1bnRpbWVVdGlscz5cbik6IERlc2VyaWFsaXplTWlkZGxld2FyZTxJbnB1dCwgT3V0cHV0PiA9PiAoXG4gIG5leHQ6IERlc2VyaWFsaXplSGFuZGxlcjxJbnB1dCwgT3V0cHV0PixcbiAgY29udGV4dDogSGFuZGxlckV4ZWN1dGlvbkNvbnRleHRcbik6IERlc2VyaWFsaXplSGFuZGxlcjxJbnB1dCwgT3V0cHV0PiA9PiBhc3luYyAoXG4gIGFyZ3M6IERlc2VyaWFsaXplSGFuZGxlckFyZ3VtZW50czxJbnB1dD5cbik6IFByb21pc2U8RGVzZXJpYWxpemVIYW5kbGVyT3V0cHV0PE91dHB1dD4+ID0+IHtcbiAgY29uc3QgeyByZXNwb25zZSB9ID0gYXdhaXQgbmV4dChhcmdzKTtcbiAgY29uc3QgcGFyc2VkID0gYXdhaXQgZGVzZXJpYWxpemVyKHJlc3BvbnNlLCBvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICByZXNwb25zZSxcbiAgICBvdXRwdXQ6IHBhcnNlZCBhcyBPdXRwdXQsXG4gIH07XG59O1xuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1zZXJkZS9kaXN0L2VzL2Rlc2VyaWFsaXplck1pZGRsZXdhcmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0M7QUFDeEMsZ0VBQWdFLGtDQUFrQyx5QkFBeUIsT0FBTyxnREFBUztBQUNsSjtBQUNBLFdBQVcsa0RBQVc7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQSxLQUFLO0FBQ0wsQ0FBQztBQUNELDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1zZXJkZS9kaXN0L2VzL2Rlc2VyaWFsaXplck1pZGRsZXdhcmUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19hd2FpdGVyLCBfX2dlbmVyYXRvciB9IGZyb20gXCJ0c2xpYlwiO1xuZXhwb3J0IHZhciBkZXNlcmlhbGl6ZXJNaWRkbGV3YXJlID0gZnVuY3Rpb24gKG9wdGlvbnMsIGRlc2VyaWFsaXplcikgeyByZXR1cm4gZnVuY3Rpb24gKG5leHQsIGNvbnRleHQpIHsgcmV0dXJuIGZ1bmN0aW9uIChhcmdzKSB7IHJldHVybiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgIHZhciByZXNwb25zZSwgcGFyc2VkO1xuICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgc3dpdGNoIChfYS5sYWJlbCkge1xuICAgICAgICAgICAgY2FzZSAwOiByZXR1cm4gWzQgLyp5aWVsZCovLCBuZXh0KGFyZ3MpXTtcbiAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICByZXNwb25zZSA9IChfYS5zZW50KCkpLnJlc3BvbnNlO1xuICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIGRlc2VyaWFsaXplcihyZXNwb25zZSwgb3B0aW9ucyldO1xuICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgIHBhcnNlZCA9IF9hLnNlbnQoKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2U6IHJlc3BvbnNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgb3V0cHV0OiBwYXJzZWQsXG4gICAgICAgICAgICAgICAgICAgIH1dO1xuICAgICAgICB9XG4gICAgfSk7XG59KTsgfTsgfTsgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVpHVnpaWEpwWVd4cGVtVnlUV2xrWkd4bGQyRnlaUzVxY3lJc0luTnZkWEpqWlZKdmIzUWlPaUlpTENKemIzVnlZMlZ6SWpwYklpNHVMeTR1TDNOeVl5OWtaWE5sY21saGJHbDZaWEpOYVdSa2JHVjNZWEpsTG5SeklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lJN1FVRlRRU3hOUVVGTkxFTkJRVU1zU1VGQlRTeHpRa0ZCYzBJc1IwRkJSeXhWUVVOd1F5eFBRVUZ4UWl4RlFVTnlRaXhaUVVFd1JDeEpRVU5xUWl4UFFVRkJMRlZCUTNwRExFbEJRWFZETEVWQlEzWkRMRTlCUVdkRExFbEJRMDBzVDBGQlFTeFZRVU4wUXl4SlFVRjNRenM3T3p0dlFrRkZia0lzY1VKQlFVMHNTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhGUVVGQk96dG5Ra0ZCTjBJc1VVRkJVU3hIUVVGTExFTkJRVUVzVTBGQlowSXNRMEZCUVN4VFFVRnlRanRuUWtGRFJDeHhRa0ZCVFN4WlFVRlpMRU5CUVVNc1VVRkJVU3hGUVVGRkxFOUJRVThzUTBGQlF5eEZRVUZCT3p0blFrRkJPVU1zVFVGQlRTeEhRVUZITEZOQlFYRkRPMmRDUVVOd1JDeHpRa0ZCVHp0M1FrRkRUQ3hSUVVGUkxGVkJRVUU3ZDBKQlExSXNUVUZCVFN4RlFVRkZMRTFCUVdkQ08zRkNRVU42UWl4RlFVRkRPenM3UzBGRFNDeEZRVlIxUXl4RFFWTjJReXhGUVZvd1F5eERRVmt4UXl4RFFVRkRJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpYVcxd2IzSjBJSHRjYmlBZ1JHVnpaWEpwWVd4cGVtVklZVzVrYkdWeUxGeHVJQ0JFWlhObGNtbGhiR2w2WlVoaGJtUnNaWEpCY21kMWJXVnVkSE1zWEc0Z0lFUmxjMlZ5YVdGc2FYcGxTR0Z1Wkd4bGNrOTFkSEIxZEN4Y2JpQWdSR1Z6WlhKcFlXeHBlbVZOYVdSa2JHVjNZWEpsTEZ4dUlDQklZVzVrYkdWeVJYaGxZM1YwYVc5dVEyOXVkR1Y0ZEN4Y2JpQWdVbVZ6Y0c5dWMyVkVaWE5sY21saGJHbDZaWElzWEc1OUlHWnliMjBnWENKQVlYZHpMWE5rYXk5MGVYQmxjMXdpTzF4dVhHNWxlSEJ2Y25RZ1kyOXVjM1FnWkdWelpYSnBZV3hwZW1WeVRXbGtaR3hsZDJGeVpTQTlJRHhKYm5CMWRDQmxlSFJsYm1SeklHOWlhbVZqZEN3Z1QzVjBjSFYwSUdWNGRHVnVaSE1nYjJKcVpXTjBMQ0JTZFc1MGFXMWxWWFJwYkhNZ1BTQmhibmsrS0Z4dUlDQnZjSFJwYjI1ek9pQlNkVzUwYVcxbFZYUnBiSE1zWEc0Z0lHUmxjMlZ5YVdGc2FYcGxjam9nVW1WemNHOXVjMlZFWlhObGNtbGhiR2w2WlhJOFlXNTVMQ0JoYm5rc0lGSjFiblJwYldWVmRHbHNjejVjYmlrNklFUmxjMlZ5YVdGc2FYcGxUV2xrWkd4bGQyRnlaVHhKYm5CMWRDd2dUM1YwY0hWMFBpQTlQaUFvWEc0Z0lHNWxlSFE2SUVSbGMyVnlhV0ZzYVhwbFNHRnVaR3hsY2p4SmJuQjFkQ3dnVDNWMGNIVjBQaXhjYmlBZ1kyOXVkR1Y0ZERvZ1NHRnVaR3hsY2tWNFpXTjFkR2x2YmtOdmJuUmxlSFJjYmlrNklFUmxjMlZ5YVdGc2FYcGxTR0Z1Wkd4bGNqeEpibkIxZEN3Z1QzVjBjSFYwUGlBOVBpQmhjM2x1WXlBb1hHNGdJR0Z5WjNNNklFUmxjMlZ5YVdGc2FYcGxTR0Z1Wkd4bGNrRnlaM1Z0Wlc1MGN6eEpibkIxZEQ1Y2JpazZJRkJ5YjIxcGMyVThSR1Z6WlhKcFlXeHBlbVZJWVc1a2JHVnlUM1YwY0hWMFBFOTFkSEIxZEQ0K0lEMCtJSHRjYmlBZ1kyOXVjM1FnZXlCeVpYTndiMjV6WlNCOUlEMGdZWGRoYVhRZ2JtVjRkQ2hoY21kektUdGNiaUFnWTI5dWMzUWdjR0Z5YzJWa0lEMGdZWGRoYVhRZ1pHVnpaWEpwWVd4cGVtVnlLSEpsYzNCdmJuTmxMQ0J2Y0hScGIyNXpLVHRjYmlBZ2NtVjBkWEp1SUh0Y2JpQWdJQ0J5WlhOd2IyNXpaU3hjYmlBZ0lDQnZkWFJ3ZFhRNklIQmhjbk5sWkNCaGN5QlBkWFJ3ZFhRc1hHNGdJSDA3WEc1OU8xeHVJbDE5Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-serde/dist/es/deserializerMiddleware.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-serde/dist/es/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-serde/dist/es/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deserializerMiddleware: () => (/* reexport safe */ _deserializerMiddleware__WEBPACK_IMPORTED_MODULE_0__.deserializerMiddleware),\n/* harmony export */   deserializerMiddlewareOption: () => (/* reexport safe */ _serdePlugin__WEBPACK_IMPORTED_MODULE_2__.deserializerMiddlewareOption),\n/* harmony export */   getSerdePlugin: () => (/* reexport safe */ _serdePlugin__WEBPACK_IMPORTED_MODULE_2__.getSerdePlugin),\n/* harmony export */   serializerMiddleware: () => (/* reexport safe */ _serializerMiddleware__WEBPACK_IMPORTED_MODULE_1__.serializerMiddleware),\n/* harmony export */   serializerMiddlewareOption: () => (/* reexport safe */ _serdePlugin__WEBPACK_IMPORTED_MODULE_2__.serializerMiddlewareOption)\n/* harmony export */ });\n/* harmony import */ var _deserializerMiddleware__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./deserializerMiddleware */ \"(ssr)/./node_modules/@aws-sdk/middleware-serde/dist/es/deserializerMiddleware.js\");\n/* harmony import */ var _serializerMiddleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./serializerMiddleware */ \"(ssr)/./node_modules/@aws-sdk/middleware-serde/dist/es/serializerMiddleware.js\");\n/* harmony import */ var _serdePlugin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./serdePlugin */ \"(ssr)/./node_modules/@aws-sdk/middleware-serde/dist/es/serdePlugin.js\");\n\n\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYywwQkFBMEIsQ0FBQztBQUN6QyxjQUFjLHdCQUF3QixDQUFDO0FBQ3ZDLGNBQWMsZUFBZSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vZGVzZXJpYWxpemVyTWlkZGxld2FyZVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vc2VyaWFsaXplck1pZGRsZXdhcmVcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3NlcmRlUGx1Z2luXCI7XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1zZXJkZS9kaXN0L2VzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXlDO0FBQ0Y7QUFDVDtBQUM5QiwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL21pZGRsZXdhcmUtc2VyZGUvZGlzdC9lcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9kZXNlcmlhbGl6ZXJNaWRkbGV3YXJlXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zZXJpYWxpemVyTWlkZGxld2FyZVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vc2VyZGVQbHVnaW5cIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWFXNWtaWGd1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTh1TGk5emNtTXZhVzVrWlhndWRITWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzWTBGQll5d3dRa0ZCTUVJc1EwRkJRenRCUVVONlF5eGpRVUZqTEhkQ1FVRjNRaXhEUVVGRE8wRkJRM1pETEdOQlFXTXNaVUZCWlN4RFFVRkRJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpWlhod2IzSjBJQ29nWm5KdmJTQmNJaTR2WkdWelpYSnBZV3hwZW1WeVRXbGtaR3hsZDJGeVpWd2lPMXh1Wlhod2IzSjBJQ29nWm5KdmJTQmNJaTR2YzJWeWFXRnNhWHBsY2sxcFpHUnNaWGRoY21WY0lqdGNibVY0Y0c5eWRDQXFJR1p5YjIwZ1hDSXVMM05sY21SbFVHeDFaMmx1WENJN1hHNGlYWDA9Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-serde/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-serde/dist/es/serdePlugin.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-serde/dist/es/serdePlugin.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deserializerMiddlewareOption: () => (/* binding */ deserializerMiddlewareOption),\n/* harmony export */   getSerdePlugin: () => (/* binding */ getSerdePlugin),\n/* harmony export */   serializerMiddlewareOption: () => (/* binding */ serializerMiddlewareOption)\n/* harmony export */ });\n/* harmony import */ var _deserializerMiddleware__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./deserializerMiddleware */ \"(ssr)/./node_modules/@aws-sdk/middleware-serde/dist/es/deserializerMiddleware.js\");\n/* harmony import */ var _serializerMiddleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./serializerMiddleware */ \"(ssr)/./node_modules/@aws-sdk/middleware-serde/dist/es/serializerMiddleware.js\");\n\n\nvar deserializerMiddlewareOption = {\n    name: \"deserializerMiddleware\",\n    step: \"deserialize\",\n    tags: [\"DESERIALIZER\"],\n    override: true,\n};\nvar serializerMiddlewareOption = {\n    name: \"serializerMiddleware\",\n    step: \"serialize\",\n    tags: [\"SERIALIZER\"],\n    override: true,\n};\nfunction getSerdePlugin(config, serializer, deserializer) {\n    return {\n        applyToStack: function (commandStack) {\n            commandStack.add((0,_deserializerMiddleware__WEBPACK_IMPORTED_MODULE_0__.deserializerMiddleware)(config, deserializer), deserializerMiddlewareOption);\n            commandStack.add((0,_serializerMiddleware__WEBPACK_IMPORTED_MODULE_1__.serializerMiddleware)(config, serializer), serializerMiddlewareOption);\n        },\n    };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VyZGVQbHVnaW4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc2VyZGVQbHVnaW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBV0EsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDbEUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFOUQsTUFBTSxDQUFDLElBQU0sNEJBQTRCLEdBQThCO0lBQ3JFLElBQUksRUFBRSx3QkFBd0I7SUFDOUIsSUFBSSxFQUFFLGFBQWE7SUFDbkIsSUFBSSxFQUFFLENBQUMsY0FBYyxDQUFDO0lBQ3RCLFFBQVEsRUFBRSxJQUFJO0NBQ2YsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLDBCQUEwQixHQUE0QjtJQUNqRSxJQUFJLEVBQUUsc0JBQXNCO0lBQzVCLElBQUksRUFBRSxXQUFXO0lBQ2pCLElBQUksRUFBRSxDQUFDLFlBQVksQ0FBQztJQUNwQixRQUFRLEVBQUUsSUFBSTtDQUNmLENBQUM7QUFFRixNQUFNLFVBQVUsY0FBYyxDQUs1QixNQUFvQixFQUNwQixVQUFnRCxFQUNoRCxZQUFpRTtJQUVqRSxPQUFPO1FBQ0wsWUFBWSxFQUFFLFVBQUMsWUFBb0Q7WUFDakUsWUFBWSxDQUFDLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLEVBQUUsWUFBWSxDQUFDLEVBQUUsNEJBQTRCLENBQUMsQ0FBQztZQUM3RixZQUFZLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDLE1BQU0sRUFBRSxVQUFVLENBQUMsRUFBRSwwQkFBMEIsQ0FBQyxDQUFDO1FBQ3pGLENBQUM7S0FDRixDQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIERlc2VyaWFsaXplSGFuZGxlck9wdGlvbnMsXG4gIEVuZHBvaW50QmVhcmVyLFxuICBNZXRhZGF0YUJlYXJlcixcbiAgTWlkZGxld2FyZVN0YWNrLFxuICBQbHVnZ2FibGUsXG4gIFJlcXVlc3RTZXJpYWxpemVyLFxuICBSZXNwb25zZURlc2VyaWFsaXplcixcbiAgU2VyaWFsaXplSGFuZGxlck9wdGlvbnMsXG59IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5pbXBvcnQgeyBkZXNlcmlhbGl6ZXJNaWRkbGV3YXJlIH0gZnJvbSBcIi4vZGVzZXJpYWxpemVyTWlkZGxld2FyZVwiO1xuaW1wb3J0IHsgc2VyaWFsaXplck1pZGRsZXdhcmUgfSBmcm9tIFwiLi9zZXJpYWxpemVyTWlkZGxld2FyZVwiO1xuXG5leHBvcnQgY29uc3QgZGVzZXJpYWxpemVyTWlkZGxld2FyZU9wdGlvbjogRGVzZXJpYWxpemVIYW5kbGVyT3B0aW9ucyA9IHtcbiAgbmFtZTogXCJkZXNlcmlhbGl6ZXJNaWRkbGV3YXJlXCIsXG4gIHN0ZXA6IFwiZGVzZXJpYWxpemVcIixcbiAgdGFnczogW1wiREVTRVJJQUxJWkVSXCJdLFxuICBvdmVycmlkZTogdHJ1ZSxcbn07XG5cbmV4cG9ydCBjb25zdCBzZXJpYWxpemVyTWlkZGxld2FyZU9wdGlvbjogU2VyaWFsaXplSGFuZGxlck9wdGlvbnMgPSB7XG4gIG5hbWU6IFwic2VyaWFsaXplck1pZGRsZXdhcmVcIixcbiAgc3RlcDogXCJzZXJpYWxpemVcIixcbiAgdGFnczogW1wiU0VSSUFMSVpFUlwiXSxcbiAgb3ZlcnJpZGU6IHRydWUsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0U2VyZGVQbHVnaW48XG4gIElucHV0VHlwZSBleHRlbmRzIG9iamVjdCxcbiAgU2VyRGVDb250ZXh0IGV4dGVuZHMgRW5kcG9pbnRCZWFyZXIsXG4gIE91dHB1dFR5cGUgZXh0ZW5kcyBNZXRhZGF0YUJlYXJlclxuPihcbiAgY29uZmlnOiBTZXJEZUNvbnRleHQsXG4gIHNlcmlhbGl6ZXI6IFJlcXVlc3RTZXJpYWxpemVyPGFueSwgU2VyRGVDb250ZXh0PixcbiAgZGVzZXJpYWxpemVyOiBSZXNwb25zZURlc2VyaWFsaXplcjxPdXRwdXRUeXBlLCBhbnksIFNlckRlQ29udGV4dD5cbik6IFBsdWdnYWJsZTxJbnB1dFR5cGUsIE91dHB1dFR5cGU+IHtcbiAgcmV0dXJuIHtcbiAgICBhcHBseVRvU3RhY2s6IChjb21tYW5kU3RhY2s6IE1pZGRsZXdhcmVTdGFjazxJbnB1dFR5cGUsIE91dHB1dFR5cGU+KSA9PiB7XG4gICAgICBjb21tYW5kU3RhY2suYWRkKGRlc2VyaWFsaXplck1pZGRsZXdhcmUoY29uZmlnLCBkZXNlcmlhbGl6ZXIpLCBkZXNlcmlhbGl6ZXJNaWRkbGV3YXJlT3B0aW9uKTtcbiAgICAgIGNvbW1hbmRTdGFjay5hZGQoc2VyaWFsaXplck1pZGRsZXdhcmUoY29uZmlnLCBzZXJpYWxpemVyKSwgc2VyaWFsaXplck1pZGRsZXdhcmVPcHRpb24pO1xuICAgIH0sXG4gIH07XG59XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1zZXJkZS9kaXN0L2VzL3NlcmRlUGx1Z2luLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWtFO0FBQ0o7QUFDdkQ7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsNkJBQTZCLCtFQUFzQjtBQUNuRCw2QkFBNkIsMkVBQW9CO0FBQ2pELFNBQVM7QUFDVDtBQUNBO0FBQ0EsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9taWRkbGV3YXJlLXNlcmRlL2Rpc3QvZXMvc2VyZGVQbHVnaW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVzZXJpYWxpemVyTWlkZGxld2FyZSB9IGZyb20gXCIuL2Rlc2VyaWFsaXplck1pZGRsZXdhcmVcIjtcbmltcG9ydCB7IHNlcmlhbGl6ZXJNaWRkbGV3YXJlIH0gZnJvbSBcIi4vc2VyaWFsaXplck1pZGRsZXdhcmVcIjtcbmV4cG9ydCB2YXIgZGVzZXJpYWxpemVyTWlkZGxld2FyZU9wdGlvbiA9IHtcbiAgICBuYW1lOiBcImRlc2VyaWFsaXplck1pZGRsZXdhcmVcIixcbiAgICBzdGVwOiBcImRlc2VyaWFsaXplXCIsXG4gICAgdGFnczogW1wiREVTRVJJQUxJWkVSXCJdLFxuICAgIG92ZXJyaWRlOiB0cnVlLFxufTtcbmV4cG9ydCB2YXIgc2VyaWFsaXplck1pZGRsZXdhcmVPcHRpb24gPSB7XG4gICAgbmFtZTogXCJzZXJpYWxpemVyTWlkZGxld2FyZVwiLFxuICAgIHN0ZXA6IFwic2VyaWFsaXplXCIsXG4gICAgdGFnczogW1wiU0VSSUFMSVpFUlwiXSxcbiAgICBvdmVycmlkZTogdHJ1ZSxcbn07XG5leHBvcnQgZnVuY3Rpb24gZ2V0U2VyZGVQbHVnaW4oY29uZmlnLCBzZXJpYWxpemVyLCBkZXNlcmlhbGl6ZXIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBhcHBseVRvU3RhY2s6IGZ1bmN0aW9uIChjb21tYW5kU3RhY2spIHtcbiAgICAgICAgICAgIGNvbW1hbmRTdGFjay5hZGQoZGVzZXJpYWxpemVyTWlkZGxld2FyZShjb25maWcsIGRlc2VyaWFsaXplciksIGRlc2VyaWFsaXplck1pZGRsZXdhcmVPcHRpb24pO1xuICAgICAgICAgICAgY29tbWFuZFN0YWNrLmFkZChzZXJpYWxpemVyTWlkZGxld2FyZShjb25maWcsIHNlcmlhbGl6ZXIpLCBzZXJpYWxpemVyTWlkZGxld2FyZU9wdGlvbik7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWMyVnlaR1ZRYkhWbmFXNHVhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOHVMaTl6Y21NdmMyVnlaR1ZRYkhWbmFXNHVkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCVjBFc1QwRkJUeXhGUVVGRkxITkNRVUZ6UWl4RlFVRkZMRTFCUVUwc01FSkJRVEJDTEVOQlFVTTdRVUZEYkVVc1QwRkJUeXhGUVVGRkxHOUNRVUZ2UWl4RlFVRkZMRTFCUVUwc2QwSkJRWGRDTEVOQlFVTTdRVUZGT1VRc1RVRkJUU3hEUVVGRExFbEJRVTBzTkVKQlFUUkNMRWRCUVRoQ08wbEJRM0pGTEVsQlFVa3NSVUZCUlN4M1FrRkJkMEk3U1VGRE9VSXNTVUZCU1N4RlFVRkZMR0ZCUVdFN1NVRkRia0lzU1VGQlNTeEZRVUZGTEVOQlFVTXNZMEZCWXl4RFFVRkRPMGxCUTNSQ0xGRkJRVkVzUlVGQlJTeEpRVUZKTzBOQlEyWXNRMEZCUXp0QlFVVkdMRTFCUVUwc1EwRkJReXhKUVVGTkxEQkNRVUV3UWl4SFFVRTBRanRKUVVOcVJTeEpRVUZKTEVWQlFVVXNjMEpCUVhOQ08wbEJRelZDTEVsQlFVa3NSVUZCUlN4WFFVRlhPMGxCUTJwQ0xFbEJRVWtzUlVGQlJTeERRVUZETEZsQlFWa3NRMEZCUXp0SlFVTndRaXhSUVVGUkxFVkJRVVVzU1VGQlNUdERRVU5tTEVOQlFVTTdRVUZGUml4TlFVRk5MRlZCUVZVc1kwRkJZeXhEUVVzMVFpeE5RVUZ2UWl4RlFVTndRaXhWUVVGblJDeEZRVU5vUkN4WlFVRnBSVHRKUVVWcVJTeFBRVUZQTzFGQlEwd3NXVUZCV1N4RlFVRkZMRlZCUVVNc1dVRkJiMFE3V1VGRGFrVXNXVUZCV1N4RFFVRkRMRWRCUVVjc1EwRkJReXh6UWtGQmMwSXNRMEZCUXl4TlFVRk5MRVZCUVVVc1dVRkJXU3hEUVVGRExFVkJRVVVzTkVKQlFUUkNMRU5CUVVNc1EwRkJRenRaUVVNM1JpeFpRVUZaTEVOQlFVTXNSMEZCUnl4RFFVRkRMRzlDUVVGdlFpeERRVUZETEUxQlFVMHNSVUZCUlN4VlFVRlZMRU5CUVVNc1JVRkJSU3d3UWtGQk1FSXNRMEZCUXl4RFFVRkRPMUZCUTNwR0xFTkJRVU03UzBGRFJpeERRVUZETzBGQlEwb3NRMEZCUXlJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYkltbHRjRzl5ZENCN1hHNGdJRVJsYzJWeWFXRnNhWHBsU0dGdVpHeGxjazl3ZEdsdmJuTXNYRzRnSUVWdVpIQnZhVzUwUW1WaGNtVnlMRnh1SUNCTlpYUmhaR0YwWVVKbFlYSmxjaXhjYmlBZ1RXbGtaR3hsZDJGeVpWTjBZV05yTEZ4dUlDQlFiSFZuWjJGaWJHVXNYRzRnSUZKbGNYVmxjM1JUWlhKcFlXeHBlbVZ5TEZ4dUlDQlNaWE53YjI1elpVUmxjMlZ5YVdGc2FYcGxjaXhjYmlBZ1UyVnlhV0ZzYVhwbFNHRnVaR3hsY2s5d2RHbHZibk1zWEc1OUlHWnliMjBnWENKQVlYZHpMWE5rYXk5MGVYQmxjMXdpTzF4dVhHNXBiWEJ2Y25RZ2V5QmtaWE5sY21saGJHbDZaWEpOYVdSa2JHVjNZWEpsSUgwZ1puSnZiU0JjSWk0dlpHVnpaWEpwWVd4cGVtVnlUV2xrWkd4bGQyRnlaVndpTzF4dWFXMXdiM0owSUhzZ2MyVnlhV0ZzYVhwbGNrMXBaR1JzWlhkaGNtVWdmU0JtY205dElGd2lMaTl6WlhKcFlXeHBlbVZ5VFdsa1pHeGxkMkZ5WlZ3aU8xeHVYRzVsZUhCdmNuUWdZMjl1YzNRZ1pHVnpaWEpwWVd4cGVtVnlUV2xrWkd4bGQyRnlaVTl3ZEdsdmJqb2dSR1Z6WlhKcFlXeHBlbVZJWVc1a2JHVnlUM0IwYVc5dWN5QTlJSHRjYmlBZ2JtRnRaVG9nWENKa1pYTmxjbWxoYkdsNlpYSk5hV1JrYkdWM1lYSmxYQ0lzWEc0Z0lITjBaWEE2SUZ3aVpHVnpaWEpwWVd4cGVtVmNJaXhjYmlBZ2RHRm5jem9nVzF3aVJFVlRSVkpKUVV4SldrVlNYQ0pkTEZ4dUlDQnZkbVZ5Y21sa1pUb2dkSEoxWlN4Y2JuMDdYRzVjYm1WNGNHOXlkQ0JqYjI1emRDQnpaWEpwWVd4cGVtVnlUV2xrWkd4bGQyRnlaVTl3ZEdsdmJqb2dVMlZ5YVdGc2FYcGxTR0Z1Wkd4bGNrOXdkR2x2Ym5NZ1BTQjdYRzRnSUc1aGJXVTZJRndpYzJWeWFXRnNhWHBsY2sxcFpHUnNaWGRoY21WY0lpeGNiaUFnYzNSbGNEb2dYQ0p6WlhKcFlXeHBlbVZjSWl4Y2JpQWdkR0ZuY3pvZ1cxd2lVMFZTU1VGTVNWcEZVbHdpWFN4Y2JpQWdiM1psY25KcFpHVTZJSFJ5ZFdVc1hHNTlPMXh1WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnWjJWMFUyVnlaR1ZRYkhWbmFXNDhYRzRnSUVsdWNIVjBWSGx3WlNCbGVIUmxibVJ6SUc5aWFtVmpkQ3hjYmlBZ1UyVnlSR1ZEYjI1MFpYaDBJR1Y0ZEdWdVpITWdSVzVrY0c5cGJuUkNaV0Z5WlhJc1hHNGdJRTkxZEhCMWRGUjVjR1VnWlhoMFpXNWtjeUJOWlhSaFpHRjBZVUpsWVhKbGNseHVQaWhjYmlBZ1kyOXVabWxuT2lCVFpYSkVaVU52Ym5SbGVIUXNYRzRnSUhObGNtbGhiR2w2WlhJNklGSmxjWFZsYzNSVFpYSnBZV3hwZW1WeVBHRnVlU3dnVTJWeVJHVkRiMjUwWlhoMFBpeGNiaUFnWkdWelpYSnBZV3hwZW1WeU9pQlNaWE53YjI1elpVUmxjMlZ5YVdGc2FYcGxjanhQZFhSd2RYUlVlWEJsTENCaGJua3NJRk5sY2tSbFEyOXVkR1Y0ZEQ1Y2JpazZJRkJzZFdkbllXSnNaVHhKYm5CMWRGUjVjR1VzSUU5MWRIQjFkRlI1Y0dVK0lIdGNiaUFnY21WMGRYSnVJSHRjYmlBZ0lDQmhjSEJzZVZSdlUzUmhZMnM2SUNoamIyMXRZVzVrVTNSaFkyczZJRTFwWkdSc1pYZGhjbVZUZEdGamF6eEpibkIxZEZSNWNHVXNJRTkxZEhCMWRGUjVjR1UrS1NBOVBpQjdYRzRnSUNBZ0lDQmpiMjF0WVc1a1UzUmhZMnN1WVdSa0tHUmxjMlZ5YVdGc2FYcGxjazFwWkdSc1pYZGhjbVVvWTI5dVptbG5MQ0JrWlhObGNtbGhiR2w2WlhJcExDQmtaWE5sY21saGJHbDZaWEpOYVdSa2JHVjNZWEpsVDNCMGFXOXVLVHRjYmlBZ0lDQWdJR052YlcxaGJtUlRkR0ZqYXk1aFpHUW9jMlZ5YVdGc2FYcGxjazFwWkdSc1pYZGhjbVVvWTI5dVptbG5MQ0J6WlhKcFlXeHBlbVZ5S1N3Z2MyVnlhV0ZzYVhwbGNrMXBaR1JzWlhkaGNtVlBjSFJwYjI0cE8xeHVJQ0FnSUgwc1hHNGdJSDA3WEc1OVhHNGlYWDA9Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-serde/dist/es/serdePlugin.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-serde/dist/es/serializerMiddleware.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-serde/dist/es/serializerMiddleware.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serializerMiddleware: () => (/* binding */ serializerMiddleware)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/middleware-serde/node_modules/tslib/tslib.es6.js\");\n\nvar serializerMiddleware = function (options, serializer) { return function (next, context) { return function (args) { return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(void 0, void 0, void 0, function () {\n    var request;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, serializer(args.input, options)];\n            case 1:\n                request = _a.sent();\n                return [2 /*return*/, next((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, args), { request: request }))];\n        }\n    });\n}); }; }; };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VyaWFsaXplck1pZGRsZXdhcmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc2VyaWFsaXplck1pZGRsZXdhcmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQVVBLE1BQU0sQ0FBQyxJQUFNLG9CQUFvQixHQUFHLFVBQ2xDLE9BQXFCLEVBQ3JCLFVBQWdELElBQ1QsT0FBQSxVQUN2QyxJQUFxQyxFQUNyQyxPQUFnQyxJQUNJLE9BQUEsVUFDcEMsSUFBc0M7Ozs7b0JBRXRCLHFCQUFNLFVBQVUsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxFQUFBOztnQkFBL0MsT0FBTyxHQUFHLFNBQXFDO2dCQUNyRCxzQkFBTyxJQUFJLHVCQUNOLElBQUksS0FDUCxPQUFPLFNBQUEsSUFDUCxFQUFDOzs7S0FDSixFQVJxQyxDQVFyQyxFQVh3QyxDQVd4QyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgRW5kcG9pbnRCZWFyZXIsXG4gIEhhbmRsZXJFeGVjdXRpb25Db250ZXh0LFxuICBSZXF1ZXN0U2VyaWFsaXplcixcbiAgU2VyaWFsaXplSGFuZGxlcixcbiAgU2VyaWFsaXplSGFuZGxlckFyZ3VtZW50cyxcbiAgU2VyaWFsaXplSGFuZGxlck91dHB1dCxcbiAgU2VyaWFsaXplTWlkZGxld2FyZSxcbn0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmV4cG9ydCBjb25zdCBzZXJpYWxpemVyTWlkZGxld2FyZSA9IDxJbnB1dCBleHRlbmRzIG9iamVjdCwgT3V0cHV0IGV4dGVuZHMgb2JqZWN0LCBSdW50aW1lVXRpbHMgZXh0ZW5kcyBFbmRwb2ludEJlYXJlcj4oXG4gIG9wdGlvbnM6IFJ1bnRpbWVVdGlscyxcbiAgc2VyaWFsaXplcjogUmVxdWVzdFNlcmlhbGl6ZXI8YW55LCBSdW50aW1lVXRpbHM+XG4pOiBTZXJpYWxpemVNaWRkbGV3YXJlPElucHV0LCBPdXRwdXQ+ID0+IChcbiAgbmV4dDogU2VyaWFsaXplSGFuZGxlcjxJbnB1dCwgT3V0cHV0PixcbiAgY29udGV4dDogSGFuZGxlckV4ZWN1dGlvbkNvbnRleHRcbik6IFNlcmlhbGl6ZUhhbmRsZXI8SW5wdXQsIE91dHB1dD4gPT4gYXN5bmMgKFxuICBhcmdzOiBTZXJpYWxpemVIYW5kbGVyQXJndW1lbnRzPElucHV0PlxuKTogUHJvbWlzZTxTZXJpYWxpemVIYW5kbGVyT3V0cHV0PE91dHB1dD4+ID0+IHtcbiAgY29uc3QgcmVxdWVzdCA9IGF3YWl0IHNlcmlhbGl6ZXIoYXJncy5pbnB1dCwgb3B0aW9ucyk7XG4gIHJldHVybiBuZXh0KHtcbiAgICAuLi5hcmdzLFxuICAgIHJlcXVlc3QsXG4gIH0pO1xufTtcbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1zZXJkZS9kaXN0L2VzL3NlcmlhbGl6ZXJNaWRkbGV3YXJlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlEO0FBQ2xELDREQUE0RCxrQ0FBa0MseUJBQXlCLE9BQU8sZ0RBQVM7QUFDOUk7QUFDQSxXQUFXLGtEQUFXO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLCtDQUFRLENBQUMsK0NBQVEsR0FBRyxXQUFXLGtCQUFrQjtBQUM1RjtBQUNBLEtBQUs7QUFDTCxDQUFDO0FBQ0QsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9taWRkbGV3YXJlLXNlcmRlL2Rpc3QvZXMvc2VyaWFsaXplck1pZGRsZXdhcmUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19hc3NpZ24sIF9fYXdhaXRlciwgX19nZW5lcmF0b3IgfSBmcm9tIFwidHNsaWJcIjtcbmV4cG9ydCB2YXIgc2VyaWFsaXplck1pZGRsZXdhcmUgPSBmdW5jdGlvbiAob3B0aW9ucywgc2VyaWFsaXplcikgeyByZXR1cm4gZnVuY3Rpb24gKG5leHQsIGNvbnRleHQpIHsgcmV0dXJuIGZ1bmN0aW9uIChhcmdzKSB7IHJldHVybiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgIHZhciByZXF1ZXN0O1xuICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgc3dpdGNoIChfYS5sYWJlbCkge1xuICAgICAgICAgICAgY2FzZSAwOiByZXR1cm4gWzQgLyp5aWVsZCovLCBzZXJpYWxpemVyKGFyZ3MuaW5wdXQsIG9wdGlvbnMpXTtcbiAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICByZXF1ZXN0ID0gX2Euc2VudCgpO1xuICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBuZXh0KF9fYXNzaWduKF9fYXNzaWduKHt9LCBhcmdzKSwgeyByZXF1ZXN0OiByZXF1ZXN0IH0pKV07XG4gICAgICAgIH1cbiAgICB9KTtcbn0pOyB9OyB9OyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYzJWeWFXRnNhWHBsY2sxcFpHUnNaWGRoY21VdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12YzJWeWFXRnNhWHBsY2sxcFpHUnNaWGRoY21VdWRITWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklqdEJRVlZCTEUxQlFVMHNRMEZCUXl4SlFVRk5MRzlDUVVGdlFpeEhRVUZITEZWQlEyeERMRTlCUVhGQ0xFVkJRM0pDTEZWQlFXZEVMRWxCUTFRc1QwRkJRU3hWUVVOMlF5eEpRVUZ4UXl4RlFVTnlReXhQUVVGblF5eEpRVU5KTEU5QlFVRXNWVUZEY0VNc1NVRkJjME03T3pzN2IwSkJSWFJDTEhGQ1FVRk5MRlZCUVZVc1EwRkJReXhKUVVGSkxFTkJRVU1zUzBGQlN5eEZRVUZGTEU5QlFVOHNRMEZCUXl4RlFVRkJPenRuUWtGQkwwTXNUMEZCVHl4SFFVRkhMRk5CUVhGRE8yZENRVU55UkN4elFrRkJUeXhKUVVGSkxIVkNRVU5PTEVsQlFVa3NTMEZEVUN4UFFVRlBMRk5CUVVFc1NVRkRVQ3hGUVVGRE96czdTMEZEU2l4RlFWSnhReXhEUVZGeVF5eEZRVmgzUXl4RFFWZDRReXhEUVVGRElpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lhVzF3YjNKMElIdGNiaUFnUlc1a2NHOXBiblJDWldGeVpYSXNYRzRnSUVoaGJtUnNaWEpGZUdWamRYUnBiMjVEYjI1MFpYaDBMRnh1SUNCU1pYRjFaWE4wVTJWeWFXRnNhWHBsY2l4Y2JpQWdVMlZ5YVdGc2FYcGxTR0Z1Wkd4bGNpeGNiaUFnVTJWeWFXRnNhWHBsU0dGdVpHeGxja0Z5WjNWdFpXNTBjeXhjYmlBZ1UyVnlhV0ZzYVhwbFNHRnVaR3hsY2s5MWRIQjFkQ3hjYmlBZ1UyVnlhV0ZzYVhwbFRXbGtaR3hsZDJGeVpTeGNibjBnWm5KdmJTQmNJa0JoZDNNdGMyUnJMM1I1Y0dWelhDSTdYRzVjYm1WNGNHOXlkQ0JqYjI1emRDQnpaWEpwWVd4cGVtVnlUV2xrWkd4bGQyRnlaU0E5SUR4SmJuQjFkQ0JsZUhSbGJtUnpJRzlpYW1WamRDd2dUM1YwY0hWMElHVjRkR1Z1WkhNZ2IySnFaV04wTENCU2RXNTBhVzFsVlhScGJITWdaWGgwWlc1a2N5QkZibVJ3YjJsdWRFSmxZWEpsY2o0b1hHNGdJRzl3ZEdsdmJuTTZJRkoxYm5ScGJXVlZkR2xzY3l4Y2JpQWdjMlZ5YVdGc2FYcGxjam9nVW1WeGRXVnpkRk5sY21saGJHbDZaWEk4WVc1NUxDQlNkVzUwYVcxbFZYUnBiSE0rWEc0cE9pQlRaWEpwWVd4cGVtVk5hV1JrYkdWM1lYSmxQRWx1Y0hWMExDQlBkWFJ3ZFhRK0lEMCtJQ2hjYmlBZ2JtVjRkRG9nVTJWeWFXRnNhWHBsU0dGdVpHeGxjanhKYm5CMWRDd2dUM1YwY0hWMFBpeGNiaUFnWTI5dWRHVjRkRG9nU0dGdVpHeGxja1Y0WldOMWRHbHZia052Ym5SbGVIUmNiaWs2SUZObGNtbGhiR2w2WlVoaGJtUnNaWEk4U1c1d2RYUXNJRTkxZEhCMWRENGdQVDRnWVhONWJtTWdLRnh1SUNCaGNtZHpPaUJUWlhKcFlXeHBlbVZJWVc1a2JHVnlRWEpuZFcxbGJuUnpQRWx1Y0hWMFBseHVLVG9nVUhKdmJXbHpaVHhUWlhKcFlXeHBlbVZJWVc1a2JHVnlUM1YwY0hWMFBFOTFkSEIxZEQ0K0lEMCtJSHRjYmlBZ1kyOXVjM1FnY21WeGRXVnpkQ0E5SUdGM1lXbDBJSE5sY21saGJHbDZaWElvWVhKbmN5NXBibkIxZEN3Z2IzQjBhVzl1Y3lrN1hHNGdJSEpsZEhWeWJpQnVaWGgwS0h0Y2JpQWdJQ0F1TGk1aGNtZHpMRnh1SUNBZ0lISmxjWFZsYzNRc1hHNGdJSDBwTzF4dWZUdGNiaUpkZlE9PSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-serde/dist/es/serializerMiddleware.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-serde/node_modules/tslib/tslib.es6.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-serde/node_modules/tslib/tslib.es6.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-serde/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-signing/dist/es/configurations.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-signing/dist/es/configurations.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resolveAwsAuthConfig: () => (/* binding */ resolveAwsAuthConfig)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/middleware-signing/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_signature_v4__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/signature-v4 */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/index.js\");\n\n\nfunction resolveAwsAuthConfig(input) {\n    var _this = this;\n    var credentials = input.credentials || input.credentialDefaultProvider(input);\n    var normalizedCreds = normalizeProvider(credentials);\n    var _a = input.signingEscapePath, signingEscapePath = _a === void 0 ? true : _a, _b = input.systemClockOffset, systemClockOffset = _b === void 0 ? input.systemClockOffset || 0 : _b, sha256 = input.sha256;\n    var signer;\n    if (input.signer) {\n        //if signer is supplied by user, normalize it to a function returning a promise for signer.\n        signer = normalizeProvider(input.signer);\n    }\n    else {\n        //construct a provider inferring signing from region.\n        signer = function () {\n            return normalizeProvider(input.region)()\n                .then(function (region) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(_this, void 0, void 0, function () { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, input.regionInfoProvider(region)];\n                    case 1: return [2 /*return*/, [(_a.sent()) || {}, region]];\n                }\n            }); }); })\n                .then(function (_a) {\n                var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(_a, 2), regionInfo = _b[0], region = _b[1];\n                var signingRegion = regionInfo.signingRegion, signingService = regionInfo.signingService;\n                //update client's singing region and signing service config if they are resolved.\n                //signing region resolving order: user supplied signingRegion -> endpoints.json inferred region -> client region\n                input.signingRegion = input.signingRegion || signingRegion || region;\n                //signing name resolving order:\n                //user supplied signingName -> endpoints.json inferred (credential scope -> model arnNamespace) -> model service id\n                input.signingName = input.signingName || signingService || input.serviceId;\n                return new _aws_sdk_signature_v4__WEBPACK_IMPORTED_MODULE_0__.SignatureV4({\n                    credentials: normalizedCreds,\n                    region: input.signingRegion,\n                    service: input.signingName,\n                    sha256: sha256,\n                    uriEscapePath: signingEscapePath,\n                });\n            });\n        };\n    }\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input), { systemClockOffset: systemClockOffset,\n        signingEscapePath: signingEscapePath, credentials: normalizedCreds, signer: signer });\n}\nfunction normalizeProvider(input) {\n    if (typeof input === \"object\") {\n        var promisified_1 = Promise.resolve(input);\n        return function () { return promisified_1; };\n    }\n    return input;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29uZmlndXJhdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQTRDcEQsTUFBTSxVQUFVLG9CQUFvQixDQUFJLEtBQWtEO0lBQTFGLGlCQXVDQztJQXRDQyxJQUFNLFdBQVcsR0FBRyxLQUFLLENBQUMsV0FBVyxJQUFJLEtBQUssQ0FBQyx5QkFBeUIsQ0FBQyxLQUFZLENBQUMsQ0FBQztJQUN2RixJQUFNLGVBQWUsR0FBRyxpQkFBaUIsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUMvQyxJQUFBLEtBQXVGLEtBQUssa0JBQXBFLEVBQXhCLGlCQUFpQixtQkFBRyxJQUFJLEtBQUEsRUFBRSxLQUE2RCxLQUFLLGtCQUFsQixFQUFoRCxpQkFBaUIsbUJBQUcsS0FBSyxDQUFDLGlCQUFpQixJQUFJLENBQUMsS0FBQSxFQUFFLE1BQU0sR0FBSyxLQUFLLE9BQVYsQ0FBVztJQUNyRyxJQUFJLE1BQStCLENBQUM7SUFDcEMsSUFBSSxLQUFLLENBQUMsTUFBTSxFQUFFO1FBQ2hCLDJGQUEyRjtRQUMzRixNQUFNLEdBQUcsaUJBQWlCLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBQzFDO1NBQU07UUFDTCxxREFBcUQ7UUFDckQsTUFBTSxHQUFHO1lBQ1AsT0FBQSxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUU7aUJBQzlCLElBQUksQ0FBQyxVQUFPLE1BQU07OzRCQUFPLHFCQUFNLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsRUFBQTs0QkFBeEMsc0JBQUEsQ0FBQyxDQUFDLFNBQXNDLENBQUMsSUFBSSxFQUFFLEVBQUUsTUFBTSxDQUF5QixFQUFBOztxQkFBQSxDQUFDO2lCQUN4RyxJQUFJLENBQUMsVUFBQyxFQUFvQjtvQkFBcEIsS0FBQSxhQUFvQixFQUFuQixVQUFVLFFBQUEsRUFBRSxNQUFNLFFBQUE7Z0JBQ2hCLElBQUEsYUFBYSxHQUFxQixVQUFVLGNBQS9CLEVBQUUsY0FBYyxHQUFLLFVBQVUsZUFBZixDQUFnQjtnQkFDckQsaUZBQWlGO2dCQUNqRixnSEFBZ0g7Z0JBQ2hILEtBQUssQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDLGFBQWEsSUFBSSxhQUFhLElBQUksTUFBTSxDQUFDO2dCQUNyRSwrQkFBK0I7Z0JBQy9CLG1IQUFtSDtnQkFDbkgsS0FBSyxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUMsV0FBVyxJQUFJLGNBQWMsSUFBSSxLQUFLLENBQUMsU0FBUyxDQUFDO2dCQUUzRSxPQUFPLElBQUksV0FBVyxDQUFDO29CQUNyQixXQUFXLEVBQUUsZUFBZTtvQkFDNUIsTUFBTSxFQUFFLEtBQUssQ0FBQyxhQUFhO29CQUMzQixPQUFPLEVBQUUsS0FBSyxDQUFDLFdBQVc7b0JBQzFCLE1BQU0sUUFBQTtvQkFDTixhQUFhLEVBQUUsaUJBQWlCO2lCQUNqQyxDQUFDLENBQUM7WUFDTCxDQUFDLENBQUM7UUFsQkosQ0FrQkksQ0FBQztLQUNSO0lBRUQsNkJBQ0ssS0FBSyxLQUNSLGlCQUFpQixtQkFBQTtRQUNqQixpQkFBaUIsbUJBQUEsRUFDakIsV0FBVyxFQUFFLGVBQWUsRUFDNUIsTUFBTSxRQUFBLElBQ047QUFDSixDQUFDO0FBRUQsU0FBUyxpQkFBaUIsQ0FBSSxLQUFzQjtJQUNsRCxJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsRUFBRTtRQUM3QixJQUFNLGFBQVcsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzNDLE9BQU8sY0FBTSxPQUFBLGFBQVcsRUFBWCxDQUFXLENBQUM7S0FDMUI7SUFDRCxPQUFPLEtBQW9CLENBQUM7QUFDOUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNpZ25hdHVyZVY0IH0gZnJvbSBcIkBhd3Mtc2RrL3NpZ25hdHVyZS12NFwiO1xuaW1wb3J0IHsgQ3JlZGVudGlhbHMsIEhhc2hDb25zdHJ1Y3RvciwgUHJvdmlkZXIsIFJlZ2lvbkluZm8sIFJlZ2lvbkluZm9Qcm92aWRlciwgUmVxdWVzdFNpZ25lciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEF3c0F1dGhJbnB1dENvbmZpZyB7XG4gIC8qKlxuICAgKiBUaGUgY3JlZGVudGlhbHMgdXNlZCB0byBzaWduIHJlcXVlc3RzLlxuICAgKi9cbiAgY3JlZGVudGlhbHM/OiBDcmVkZW50aWFscyB8IFByb3ZpZGVyPENyZWRlbnRpYWxzPjtcblxuICAvKipcbiAgICogVGhlIHNpZ25lciB0byB1c2Ugd2hlbiBzaWduaW5nIHJlcXVlc3RzLlxuICAgKi9cbiAgc2lnbmVyPzogUmVxdWVzdFNpZ25lciB8IFByb3ZpZGVyPFJlcXVlc3RTaWduZXI+O1xuXG4gIC8qKlxuICAgKiBXaGV0aGVyIHRvIGVzY2FwZSByZXF1ZXN0IHBhdGggd2hlbiBzaWduaW5nIHRoZSByZXF1ZXN0LlxuICAgKi9cbiAgc2lnbmluZ0VzY2FwZVBhdGg/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBBbiBvZmZzZXQgdmFsdWUgaW4gbWlsbGlzZWNvbmRzIHRvIGFwcGx5IHRvIGFsbCBzaWduaW5nIHRpbWVzLlxuICAgKi9cbiAgc3lzdGVtQ2xvY2tPZmZzZXQ/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFRoZSByZWdpb24gd2hlcmUgeW91IHdhbnQgdG8gc2lnbiB5b3VyIHJlcXVlc3QgYWdhaW5zdC4gVGhpc1xuICAgKiBjYW4gYmUgZGlmZmVyZW50IHRvIHRoZSByZWdpb24gaW4gdGhlIGVuZHBvaW50LlxuICAgKi9cbiAgc2lnbmluZ1JlZ2lvbj86IHN0cmluZztcbn1cbmludGVyZmFjZSBQcmV2aW91c2x5UmVzb2x2ZWQge1xuICBjcmVkZW50aWFsRGVmYXVsdFByb3ZpZGVyOiAoaW5wdXQ6IGFueSkgPT4gUHJvdmlkZXI8Q3JlZGVudGlhbHM+O1xuICByZWdpb246IHN0cmluZyB8IFByb3ZpZGVyPHN0cmluZz47XG4gIHJlZ2lvbkluZm9Qcm92aWRlcjogUmVnaW9uSW5mb1Byb3ZpZGVyO1xuICBzaWduaW5nTmFtZT86IHN0cmluZztcbiAgc2VydmljZUlkOiBzdHJpbmc7XG4gIHNoYTI1NjogSGFzaENvbnN0cnVjdG9yO1xufVxuZXhwb3J0IGludGVyZmFjZSBBd3NBdXRoUmVzb2x2ZWRDb25maWcge1xuICBjcmVkZW50aWFsczogUHJvdmlkZXI8Q3JlZGVudGlhbHM+O1xuICBzaWduZXI6IFByb3ZpZGVyPFJlcXVlc3RTaWduZXI+O1xuICBzaWduaW5nRXNjYXBlUGF0aDogYm9vbGVhbjtcbiAgc3lzdGVtQ2xvY2tPZmZzZXQ6IG51bWJlcjtcbn1cbmV4cG9ydCBmdW5jdGlvbiByZXNvbHZlQXdzQXV0aENvbmZpZzxUPihpbnB1dDogVCAmIEF3c0F1dGhJbnB1dENvbmZpZyAmIFByZXZpb3VzbHlSZXNvbHZlZCk6IFQgJiBBd3NBdXRoUmVzb2x2ZWRDb25maWcge1xuICBjb25zdCBjcmVkZW50aWFscyA9IGlucHV0LmNyZWRlbnRpYWxzIHx8IGlucHV0LmNyZWRlbnRpYWxEZWZhdWx0UHJvdmlkZXIoaW5wdXQgYXMgYW55KTtcbiAgY29uc3Qgbm9ybWFsaXplZENyZWRzID0gbm9ybWFsaXplUHJvdmlkZXIoY3JlZGVudGlhbHMpO1xuICBjb25zdCB7IHNpZ25pbmdFc2NhcGVQYXRoID0gdHJ1ZSwgc3lzdGVtQ2xvY2tPZmZzZXQgPSBpbnB1dC5zeXN0ZW1DbG9ja09mZnNldCB8fCAwLCBzaGEyNTYgfSA9IGlucHV0O1xuICBsZXQgc2lnbmVyOiBQcm92aWRlcjxSZXF1ZXN0U2lnbmVyPjtcbiAgaWYgKGlucHV0LnNpZ25lcikge1xuICAgIC8vaWYgc2lnbmVyIGlzIHN1cHBsaWVkIGJ5IHVzZXIsIG5vcm1hbGl6ZSBpdCB0byBhIGZ1bmN0aW9uIHJldHVybmluZyBhIHByb21pc2UgZm9yIHNpZ25lci5cbiAgICBzaWduZXIgPSBub3JtYWxpemVQcm92aWRlcihpbnB1dC5zaWduZXIpO1xuICB9IGVsc2Uge1xuICAgIC8vY29uc3RydWN0IGEgcHJvdmlkZXIgaW5mZXJyaW5nIHNpZ25pbmcgZnJvbSByZWdpb24uXG4gICAgc2lnbmVyID0gKCkgPT5cbiAgICAgIG5vcm1hbGl6ZVByb3ZpZGVyKGlucHV0LnJlZ2lvbikoKVxuICAgICAgICAudGhlbihhc3luYyAocmVnaW9uKSA9PiBbKGF3YWl0IGlucHV0LnJlZ2lvbkluZm9Qcm92aWRlcihyZWdpb24pKSB8fCB7fSwgcmVnaW9uXSBhcyBbUmVnaW9uSW5mbywgc3RyaW5nXSlcbiAgICAgICAgLnRoZW4oKFtyZWdpb25JbmZvLCByZWdpb25dKSA9PiB7XG4gICAgICAgICAgY29uc3QgeyBzaWduaW5nUmVnaW9uLCBzaWduaW5nU2VydmljZSB9ID0gcmVnaW9uSW5mbztcbiAgICAgICAgICAvL3VwZGF0ZSBjbGllbnQncyBzaW5naW5nIHJlZ2lvbiBhbmQgc2lnbmluZyBzZXJ2aWNlIGNvbmZpZyBpZiB0aGV5IGFyZSByZXNvbHZlZC5cbiAgICAgICAgICAvL3NpZ25pbmcgcmVnaW9uIHJlc29sdmluZyBvcmRlcjogdXNlciBzdXBwbGllZCBzaWduaW5nUmVnaW9uIC0+IGVuZHBvaW50cy5qc29uIGluZmVycmVkIHJlZ2lvbiAtPiBjbGllbnQgcmVnaW9uXG4gICAgICAgICAgaW5wdXQuc2lnbmluZ1JlZ2lvbiA9IGlucHV0LnNpZ25pbmdSZWdpb24gfHwgc2lnbmluZ1JlZ2lvbiB8fCByZWdpb247XG4gICAgICAgICAgLy9zaWduaW5nIG5hbWUgcmVzb2x2aW5nIG9yZGVyOlxuICAgICAgICAgIC8vdXNlciBzdXBwbGllZCBzaWduaW5nTmFtZSAtPiBlbmRwb2ludHMuanNvbiBpbmZlcnJlZCAoY3JlZGVudGlhbCBzY29wZSAtPiBtb2RlbCBhcm5OYW1lc3BhY2UpIC0+IG1vZGVsIHNlcnZpY2UgaWRcbiAgICAgICAgICBpbnB1dC5zaWduaW5nTmFtZSA9IGlucHV0LnNpZ25pbmdOYW1lIHx8IHNpZ25pbmdTZXJ2aWNlIHx8IGlucHV0LnNlcnZpY2VJZDtcblxuICAgICAgICAgIHJldHVybiBuZXcgU2lnbmF0dXJlVjQoe1xuICAgICAgICAgICAgY3JlZGVudGlhbHM6IG5vcm1hbGl6ZWRDcmVkcyxcbiAgICAgICAgICAgIHJlZ2lvbjogaW5wdXQuc2lnbmluZ1JlZ2lvbixcbiAgICAgICAgICAgIHNlcnZpY2U6IGlucHV0LnNpZ25pbmdOYW1lLFxuICAgICAgICAgICAgc2hhMjU2LFxuICAgICAgICAgICAgdXJpRXNjYXBlUGF0aDogc2lnbmluZ0VzY2FwZVBhdGgsXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICAuLi5pbnB1dCxcbiAgICBzeXN0ZW1DbG9ja09mZnNldCxcbiAgICBzaWduaW5nRXNjYXBlUGF0aCxcbiAgICBjcmVkZW50aWFsczogbm9ybWFsaXplZENyZWRzLFxuICAgIHNpZ25lcixcbiAgfTtcbn1cblxuZnVuY3Rpb24gbm9ybWFsaXplUHJvdmlkZXI8VD4oaW5wdXQ6IFQgfCBQcm92aWRlcjxUPik6IFByb3ZpZGVyPFQ+IHtcbiAgaWYgKHR5cGVvZiBpbnB1dCA9PT0gXCJvYmplY3RcIikge1xuICAgIGNvbnN0IHByb21pc2lmaWVkID0gUHJvbWlzZS5yZXNvbHZlKGlucHV0KTtcbiAgICByZXR1cm4gKCkgPT4gcHJvbWlzaWZpZWQ7XG4gIH1cbiAgcmV0dXJuIGlucHV0IGFzIFByb3ZpZGVyPFQ+O1xufVxuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1zaWduaW5nL2Rpc3QvZXMvY29uZmlndXJhdGlvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlFO0FBQ2I7QUFDN0M7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxPQUFPLGdEQUFTLHNDQUFzQyxPQUFPLGtEQUFXO0FBQ2xIO0FBQ0E7QUFDQSxvRUFBb0U7QUFDcEU7QUFDQSxhQUFhLElBQUksSUFBSTtBQUNyQjtBQUNBLHlCQUF5Qiw2Q0FBTTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiw4REFBVztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0EsV0FBVywrQ0FBUSxDQUFDLCtDQUFRLEdBQUcsWUFBWTtBQUMzQyw0RkFBNEY7QUFDNUY7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9taWRkbGV3YXJlLXNpZ25pbmcvZGlzdC9lcy9jb25maWd1cmF0aW9ucy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX2Fzc2lnbiwgX19hd2FpdGVyLCBfX2dlbmVyYXRvciwgX19yZWFkIH0gZnJvbSBcInRzbGliXCI7XG5pbXBvcnQgeyBTaWduYXR1cmVWNCB9IGZyb20gXCJAYXdzLXNkay9zaWduYXR1cmUtdjRcIjtcbmV4cG9ydCBmdW5jdGlvbiByZXNvbHZlQXdzQXV0aENvbmZpZyhpbnB1dCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgdmFyIGNyZWRlbnRpYWxzID0gaW5wdXQuY3JlZGVudGlhbHMgfHwgaW5wdXQuY3JlZGVudGlhbERlZmF1bHRQcm92aWRlcihpbnB1dCk7XG4gICAgdmFyIG5vcm1hbGl6ZWRDcmVkcyA9IG5vcm1hbGl6ZVByb3ZpZGVyKGNyZWRlbnRpYWxzKTtcbiAgICB2YXIgX2EgPSBpbnB1dC5zaWduaW5nRXNjYXBlUGF0aCwgc2lnbmluZ0VzY2FwZVBhdGggPSBfYSA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9hLCBfYiA9IGlucHV0LnN5c3RlbUNsb2NrT2Zmc2V0LCBzeXN0ZW1DbG9ja09mZnNldCA9IF9iID09PSB2b2lkIDAgPyBpbnB1dC5zeXN0ZW1DbG9ja09mZnNldCB8fCAwIDogX2IsIHNoYTI1NiA9IGlucHV0LnNoYTI1NjtcbiAgICB2YXIgc2lnbmVyO1xuICAgIGlmIChpbnB1dC5zaWduZXIpIHtcbiAgICAgICAgLy9pZiBzaWduZXIgaXMgc3VwcGxpZWQgYnkgdXNlciwgbm9ybWFsaXplIGl0IHRvIGEgZnVuY3Rpb24gcmV0dXJuaW5nIGEgcHJvbWlzZSBmb3Igc2lnbmVyLlxuICAgICAgICBzaWduZXIgPSBub3JtYWxpemVQcm92aWRlcihpbnB1dC5zaWduZXIpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgLy9jb25zdHJ1Y3QgYSBwcm92aWRlciBpbmZlcnJpbmcgc2lnbmluZyBmcm9tIHJlZ2lvbi5cbiAgICAgICAgc2lnbmVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIG5vcm1hbGl6ZVByb3ZpZGVyKGlucHV0LnJlZ2lvbikoKVxuICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyZWdpb24pIHsgcmV0dXJuIF9fYXdhaXRlcihfdGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAwOiByZXR1cm4gWzQgLyp5aWVsZCovLCBpbnB1dC5yZWdpb25JbmZvUHJvdmlkZXIocmVnaW9uKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTogcmV0dXJuIFsyIC8qcmV0dXJuKi8sIFsoX2Euc2VudCgpKSB8fCB7fSwgcmVnaW9uXV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7IH0pOyB9KVxuICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgIHZhciBfYiA9IF9fcmVhZChfYSwgMiksIHJlZ2lvbkluZm8gPSBfYlswXSwgcmVnaW9uID0gX2JbMV07XG4gICAgICAgICAgICAgICAgdmFyIHNpZ25pbmdSZWdpb24gPSByZWdpb25JbmZvLnNpZ25pbmdSZWdpb24sIHNpZ25pbmdTZXJ2aWNlID0gcmVnaW9uSW5mby5zaWduaW5nU2VydmljZTtcbiAgICAgICAgICAgICAgICAvL3VwZGF0ZSBjbGllbnQncyBzaW5naW5nIHJlZ2lvbiBhbmQgc2lnbmluZyBzZXJ2aWNlIGNvbmZpZyBpZiB0aGV5IGFyZSByZXNvbHZlZC5cbiAgICAgICAgICAgICAgICAvL3NpZ25pbmcgcmVnaW9uIHJlc29sdmluZyBvcmRlcjogdXNlciBzdXBwbGllZCBzaWduaW5nUmVnaW9uIC0+IGVuZHBvaW50cy5qc29uIGluZmVycmVkIHJlZ2lvbiAtPiBjbGllbnQgcmVnaW9uXG4gICAgICAgICAgICAgICAgaW5wdXQuc2lnbmluZ1JlZ2lvbiA9IGlucHV0LnNpZ25pbmdSZWdpb24gfHwgc2lnbmluZ1JlZ2lvbiB8fCByZWdpb247XG4gICAgICAgICAgICAgICAgLy9zaWduaW5nIG5hbWUgcmVzb2x2aW5nIG9yZGVyOlxuICAgICAgICAgICAgICAgIC8vdXNlciBzdXBwbGllZCBzaWduaW5nTmFtZSAtPiBlbmRwb2ludHMuanNvbiBpbmZlcnJlZCAoY3JlZGVudGlhbCBzY29wZSAtPiBtb2RlbCBhcm5OYW1lc3BhY2UpIC0+IG1vZGVsIHNlcnZpY2UgaWRcbiAgICAgICAgICAgICAgICBpbnB1dC5zaWduaW5nTmFtZSA9IGlucHV0LnNpZ25pbmdOYW1lIHx8IHNpZ25pbmdTZXJ2aWNlIHx8IGlucHV0LnNlcnZpY2VJZDtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFNpZ25hdHVyZVY0KHtcbiAgICAgICAgICAgICAgICAgICAgY3JlZGVudGlhbHM6IG5vcm1hbGl6ZWRDcmVkcyxcbiAgICAgICAgICAgICAgICAgICAgcmVnaW9uOiBpbnB1dC5zaWduaW5nUmVnaW9uLFxuICAgICAgICAgICAgICAgICAgICBzZXJ2aWNlOiBpbnB1dC5zaWduaW5nTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgc2hhMjU2OiBzaGEyNTYsXG4gICAgICAgICAgICAgICAgICAgIHVyaUVzY2FwZVBhdGg6IHNpZ25pbmdFc2NhcGVQYXRoLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgaW5wdXQpLCB7IHN5c3RlbUNsb2NrT2Zmc2V0OiBzeXN0ZW1DbG9ja09mZnNldCxcbiAgICAgICAgc2lnbmluZ0VzY2FwZVBhdGg6IHNpZ25pbmdFc2NhcGVQYXRoLCBjcmVkZW50aWFsczogbm9ybWFsaXplZENyZWRzLCBzaWduZXI6IHNpZ25lciB9KTtcbn1cbmZ1bmN0aW9uIG5vcm1hbGl6ZVByb3ZpZGVyKGlucHV0KSB7XG4gICAgaWYgKHR5cGVvZiBpbnB1dCA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICB2YXIgcHJvbWlzaWZpZWRfMSA9IFByb21pc2UucmVzb2x2ZShpbnB1dCk7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiBwcm9taXNpZmllZF8xOyB9O1xuICAgIH1cbiAgICByZXR1cm4gaW5wdXQ7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lZMjl1Wm1sbmRYSmhkR2x2Ym5NdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12WTI5dVptbG5kWEpoZEdsdmJuTXVkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanRCUVVGQkxFOUJRVThzUlVGQlJTeFhRVUZYTEVWQlFVVXNUVUZCVFN4MVFrRkJkVUlzUTBGQlF6dEJRVFJEY0VRc1RVRkJUU3hWUVVGVkxHOUNRVUZ2UWl4RFFVRkpMRXRCUVd0RU8wbEJRVEZHTEdsQ1FYVkRRenRKUVhSRFF5eEpRVUZOTEZkQlFWY3NSMEZCUnl4TFFVRkxMRU5CUVVNc1YwRkJWeXhKUVVGSkxFdEJRVXNzUTBGQlF5eDVRa0ZCZVVJc1EwRkJReXhMUVVGWkxFTkJRVU1zUTBGQlF6dEpRVU4yUml4SlFVRk5MR1ZCUVdVc1IwRkJSeXhwUWtGQmFVSXNRMEZCUXl4WFFVRlhMRU5CUVVNc1EwRkJRenRKUVVNdlF5eEpRVUZCTEV0QlFYVkdMRXRCUVVzc2EwSkJRWEJGTEVWQlFYaENMR2xDUVVGcFFpeHRRa0ZCUnl4SlFVRkpMRXRCUVVFc1JVRkJSU3hMUVVFMlJDeExRVUZMTEd0Q1FVRnNRaXhGUVVGb1JDeHBRa0ZCYVVJc2JVSkJRVWNzUzBGQlN5eERRVUZETEdsQ1FVRnBRaXhKUVVGSkxFTkJRVU1zUzBGQlFTeEZRVUZGTEUxQlFVMHNSMEZCU3l4TFFVRkxMRTlCUVZZc1EwRkJWenRKUVVOeVJ5eEpRVUZKTEUxQlFTdENMRU5CUVVNN1NVRkRjRU1zU1VGQlNTeExRVUZMTEVOQlFVTXNUVUZCVFN4RlFVRkZPMUZCUTJoQ0xESkdRVUV5Ump0UlFVTXpSaXhOUVVGTkxFZEJRVWNzYVVKQlFXbENMRU5CUVVNc1MwRkJTeXhEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETzB0QlF6RkRPMU5CUVUwN1VVRkRUQ3h4UkVGQmNVUTdVVUZEY2tRc1RVRkJUU3hIUVVGSE8xbEJRMUFzVDBGQlFTeHBRa0ZCYVVJc1EwRkJReXhMUVVGTExFTkJRVU1zVFVGQlRTeERRVUZETEVWQlFVVTdhVUpCUXpsQ0xFbEJRVWtzUTBGQlF5eFZRVUZQTEUxQlFVMDdPelJDUVVGUExIRkNRVUZOTEV0QlFVc3NRMEZCUXl4clFrRkJhMElzUTBGQlF5eE5RVUZOTEVOQlFVTXNSVUZCUVRzMFFrRkJlRU1zYzBKQlFVRXNRMEZCUXl4RFFVRkRMRk5CUVhORExFTkJRVU1zU1VGQlNTeEZRVUZGTEVWQlFVVXNUVUZCVFN4RFFVRjVRaXhGUVVGQk96dHhRa0ZCUVN4RFFVRkRPMmxDUVVONFJ5eEpRVUZKTEVOQlFVTXNWVUZCUXl4RlFVRnZRanR2UWtGQmNFSXNTMEZCUVN4aFFVRnZRaXhGUVVGdVFpeFZRVUZWTEZGQlFVRXNSVUZCUlN4TlFVRk5MRkZCUVVFN1owSkJRMmhDTEVsQlFVRXNZVUZCWVN4SFFVRnhRaXhWUVVGVkxHTkJRUzlDTEVWQlFVVXNZMEZCWXl4SFFVRkxMRlZCUVZVc1pVRkJaaXhEUVVGblFqdG5Ra0ZEY2tRc2FVWkJRV2xHTzJkQ1FVTnFSaXhuU0VGQlowZzdaMEpCUTJoSUxFdEJRVXNzUTBGQlF5eGhRVUZoTEVkQlFVY3NTMEZCU3l4RFFVRkRMR0ZCUVdFc1NVRkJTU3hoUVVGaExFbEJRVWtzVFVGQlRTeERRVUZETzJkQ1FVTnlSU3dyUWtGQkswSTdaMEpCUXk5Q0xHMUlRVUZ0U0R0blFrRkRia2dzUzBGQlN5eERRVUZETEZkQlFWY3NSMEZCUnl4TFFVRkxMRU5CUVVNc1YwRkJWeXhKUVVGSkxHTkJRV01zU1VGQlNTeExRVUZMTEVOQlFVTXNVMEZCVXl4RFFVRkRPMmRDUVVVelJTeFBRVUZQTEVsQlFVa3NWMEZCVnl4RFFVRkRPMjlDUVVOeVFpeFhRVUZYTEVWQlFVVXNaVUZCWlR0dlFrRkROVUlzVFVGQlRTeEZRVUZGTEV0QlFVc3NRMEZCUXl4aFFVRmhPMjlDUVVNelFpeFBRVUZQTEVWQlFVVXNTMEZCU3l4RFFVRkRMRmRCUVZjN2IwSkJRekZDTEUxQlFVMHNVVUZCUVR0dlFrRkRUaXhoUVVGaExFVkJRVVVzYVVKQlFXbENPMmxDUVVOcVF5eERRVUZETEVOQlFVTTdXVUZEVEN4RFFVRkRMRU5CUVVNN1VVRnNRa29zUTBGclFra3NRMEZCUXp0TFFVTlNPMGxCUlVRc05rSkJRMHNzUzBGQlN5eExRVU5TTEdsQ1FVRnBRaXh0UWtGQlFUdFJRVU5xUWl4cFFrRkJhVUlzYlVKQlFVRXNSVUZEYWtJc1YwRkJWeXhGUVVGRkxHVkJRV1VzUlVGRE5VSXNUVUZCVFN4UlFVRkJMRWxCUTA0N1FVRkRTaXhEUVVGRE8wRkJSVVFzVTBGQlV5eHBRa0ZCYVVJc1EwRkJTU3hMUVVGelFqdEpRVU5zUkN4SlFVRkpMRTlCUVU4c1MwRkJTeXhMUVVGTExGRkJRVkVzUlVGQlJUdFJRVU0zUWl4SlFVRk5MR0ZCUVZjc1IwRkJSeXhQUVVGUExFTkJRVU1zVDBGQlR5eERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRPMUZCUXpORExFOUJRVThzWTBGQlRTeFBRVUZCTEdGQlFWY3NSVUZCV0N4RFFVRlhMRU5CUVVNN1MwRkRNVUk3U1VGRFJDeFBRVUZQTEV0QlFXOUNMRU5CUVVNN1FVRkRPVUlzUTBGQlF5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbWx0Y0c5eWRDQjdJRk5wWjI1aGRIVnlaVlkwSUgwZ1puSnZiU0JjSWtCaGQzTXRjMlJyTDNOcFoyNWhkSFZ5WlMxMk5Gd2lPMXh1YVcxd2IzSjBJSHNnUTNKbFpHVnVkR2xoYkhNc0lFaGhjMmhEYjI1emRISjFZM1J2Y2l3Z1VISnZkbWxrWlhJc0lGSmxaMmx2YmtsdVptOHNJRkpsWjJsdmJrbHVabTlRY205MmFXUmxjaXdnVW1WeGRXVnpkRk5wWjI1bGNpQjlJR1p5YjIwZ1hDSkFZWGR6TFhOa2F5OTBlWEJsYzF3aU8xeHVYRzVsZUhCdmNuUWdhVzUwWlhKbVlXTmxJRUYzYzBGMWRHaEpibkIxZEVOdmJtWnBaeUI3WEc0Z0lDOHFLbHh1SUNBZ0tpQlVhR1VnWTNKbFpHVnVkR2xoYkhNZ2RYTmxaQ0IwYnlCemFXZHVJSEpsY1hWbGMzUnpMbHh1SUNBZ0tpOWNiaUFnWTNKbFpHVnVkR2xoYkhNL09pQkRjbVZrWlc1MGFXRnNjeUI4SUZCeWIzWnBaR1Z5UEVOeVpXUmxiblJwWVd4elBqdGNibHh1SUNBdktpcGNiaUFnSUNvZ1ZHaGxJSE5wWjI1bGNpQjBieUIxYzJVZ2QyaGxiaUJ6YVdkdWFXNW5JSEpsY1hWbGMzUnpMbHh1SUNBZ0tpOWNiaUFnYzJsbmJtVnlQem9nVW1WeGRXVnpkRk5wWjI1bGNpQjhJRkJ5YjNacFpHVnlQRkpsY1hWbGMzUlRhV2R1WlhJK08xeHVYRzRnSUM4cUtseHVJQ0FnS2lCWGFHVjBhR1Z5SUhSdklHVnpZMkZ3WlNCeVpYRjFaWE4wSUhCaGRHZ2dkMmhsYmlCemFXZHVhVzVuSUhSb1pTQnlaWEYxWlhOMExseHVJQ0FnS2k5Y2JpQWdjMmxuYm1sdVowVnpZMkZ3WlZCaGRHZy9PaUJpYjI5c1pXRnVPMXh1WEc0Z0lDOHFLbHh1SUNBZ0tpQkJiaUJ2Wm1aelpYUWdkbUZzZFdVZ2FXNGdiV2xzYkdselpXTnZibVJ6SUhSdklHRndjR3g1SUhSdklHRnNiQ0J6YVdkdWFXNW5JSFJwYldWekxseHVJQ0FnS2k5Y2JpQWdjM2x6ZEdWdFEyeHZZMnRQWm1aelpYUS9PaUJ1ZFcxaVpYSTdYRzVjYmlBZ0x5b3FYRzRnSUNBcUlGUm9aU0J5WldkcGIyNGdkMmhsY21VZ2VXOTFJSGRoYm5RZ2RHOGdjMmxuYmlCNWIzVnlJSEpsY1hWbGMzUWdZV2RoYVc1emRDNGdWR2hwYzF4dUlDQWdLaUJqWVc0Z1ltVWdaR2xtWm1WeVpXNTBJSFJ2SUhSb1pTQnlaV2RwYjI0Z2FXNGdkR2hsSUdWdVpIQnZhVzUwTGx4dUlDQWdLaTljYmlBZ2MybG5ibWx1WjFKbFoybHZiajg2SUhOMGNtbHVaenRjYm4xY2JtbHVkR1Z5Wm1GalpTQlFjbVYyYVc5MWMyeDVVbVZ6YjJ4MlpXUWdlMXh1SUNCamNtVmtaVzUwYVdGc1JHVm1ZWFZzZEZCeWIzWnBaR1Z5T2lBb2FXNXdkWFE2SUdGdWVTa2dQVDRnVUhKdmRtbGtaWEk4UTNKbFpHVnVkR2xoYkhNK08xeHVJQ0J5WldkcGIyNDZJSE4wY21sdVp5QjhJRkJ5YjNacFpHVnlQSE4wY21sdVp6NDdYRzRnSUhKbFoybHZia2x1Wm05UWNtOTJhV1JsY2pvZ1VtVm5hVzl1U1c1bWIxQnliM1pwWkdWeU8xeHVJQ0J6YVdkdWFXNW5UbUZ0WlQ4NklITjBjbWx1Wnp0Y2JpQWdjMlZ5ZG1salpVbGtPaUJ6ZEhKcGJtYzdYRzRnSUhOb1lUSTFOam9nU0dGemFFTnZibk4wY25WamRHOXlPMXh1ZlZ4dVpYaHdiM0owSUdsdWRHVnlabUZqWlNCQmQzTkJkWFJvVW1WemIyeDJaV1JEYjI1bWFXY2dlMXh1SUNCamNtVmtaVzUwYVdGc2N6b2dVSEp2ZG1sa1pYSThRM0psWkdWdWRHbGhiSE0rTzF4dUlDQnphV2R1WlhJNklGQnliM1pwWkdWeVBGSmxjWFZsYzNSVGFXZHVaWEkrTzF4dUlDQnphV2R1YVc1blJYTmpZWEJsVUdGMGFEb2dZbTl2YkdWaGJqdGNiaUFnYzNsemRHVnRRMnh2WTJ0UFptWnpaWFE2SUc1MWJXSmxjanRjYm4xY2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCeVpYTnZiSFpsUVhkelFYVjBhRU52Ym1acFp6eFVQaWhwYm5CMWREb2dWQ0FtSUVGM2MwRjFkR2hKYm5CMWRFTnZibVpwWnlBbUlGQnlaWFpwYjNWemJIbFNaWE52YkhabFpDazZJRlFnSmlCQmQzTkJkWFJvVW1WemIyeDJaV1JEYjI1bWFXY2dlMXh1SUNCamIyNXpkQ0JqY21Wa1pXNTBhV0ZzY3lBOUlHbHVjSFYwTG1OeVpXUmxiblJwWVd4eklIeDhJR2x1Y0hWMExtTnlaV1JsYm5ScFlXeEVaV1poZFd4MFVISnZkbWxrWlhJb2FXNXdkWFFnWVhNZ1lXNTVLVHRjYmlBZ1kyOXVjM1FnYm05eWJXRnNhWHBsWkVOeVpXUnpJRDBnYm05eWJXRnNhWHBsVUhKdmRtbGtaWElvWTNKbFpHVnVkR2xoYkhNcE8xeHVJQ0JqYjI1emRDQjdJSE5wWjI1cGJtZEZjMk5oY0dWUVlYUm9JRDBnZEhKMVpTd2djM2x6ZEdWdFEyeHZZMnRQWm1aelpYUWdQU0JwYm5CMWRDNXplWE4wWlcxRGJHOWphMDltWm5ObGRDQjhmQ0F3TENCemFHRXlOVFlnZlNBOUlHbHVjSFYwTzF4dUlDQnNaWFFnYzJsbmJtVnlPaUJRY205MmFXUmxjanhTWlhGMVpYTjBVMmxuYm1WeVBqdGNiaUFnYVdZZ0tHbHVjSFYwTG5OcFoyNWxjaWtnZTF4dUlDQWdJQzh2YVdZZ2MybG5ibVZ5SUdseklITjFjSEJzYVdWa0lHSjVJSFZ6WlhJc0lHNXZjbTFoYkdsNlpTQnBkQ0IwYnlCaElHWjFibU4wYVc5dUlISmxkSFZ5Ym1sdVp5QmhJSEJ5YjIxcGMyVWdabTl5SUhOcFoyNWxjaTVjYmlBZ0lDQnphV2R1WlhJZ1BTQnViM0p0WVd4cGVtVlFjbTkyYVdSbGNpaHBibkIxZEM1emFXZHVaWElwTzF4dUlDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUM4dlkyOXVjM1J5ZFdOMElHRWdjSEp2ZG1sa1pYSWdhVzVtWlhKeWFXNW5JSE5wWjI1cGJtY2dabkp2YlNCeVpXZHBiMjR1WEc0Z0lDQWdjMmxuYm1WeUlEMGdLQ2tnUFQ1Y2JpQWdJQ0FnSUc1dmNtMWhiR2w2WlZCeWIzWnBaR1Z5S0dsdWNIVjBMbkpsWjJsdmJpa29LVnh1SUNBZ0lDQWdJQ0F1ZEdobGJpaGhjM2x1WXlBb2NtVm5hVzl1S1NBOVBpQmJLR0YzWVdsMElHbHVjSFYwTG5KbFoybHZia2x1Wm05UWNtOTJhV1JsY2loeVpXZHBiMjRwS1NCOGZDQjdmU3dnY21WbmFXOXVYU0JoY3lCYlVtVm5hVzl1U1c1bWJ5d2djM1J5YVc1blhTbGNiaUFnSUNBZ0lDQWdMblJvWlc0b0tGdHlaV2RwYjI1SmJtWnZMQ0J5WldkcGIyNWRLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2V5QnphV2R1YVc1blVtVm5hVzl1TENCemFXZHVhVzVuVTJWeWRtbGpaU0I5SUQwZ2NtVm5hVzl1U1c1bWJ6dGNiaUFnSUNBZ0lDQWdJQ0F2TDNWd1pHRjBaU0JqYkdsbGJuUW5jeUJ6YVc1bmFXNW5JSEpsWjJsdmJpQmhibVFnYzJsbmJtbHVaeUJ6WlhKMmFXTmxJR052Ym1acFp5QnBaaUIwYUdWNUlHRnlaU0J5WlhOdmJIWmxaQzVjYmlBZ0lDQWdJQ0FnSUNBdkwzTnBaMjVwYm1jZ2NtVm5hVzl1SUhKbGMyOXNkbWx1WnlCdmNtUmxjam9nZFhObGNpQnpkWEJ3YkdsbFpDQnphV2R1YVc1blVtVm5hVzl1SUMwK0lHVnVaSEJ2YVc1MGN5NXFjMjl1SUdsdVptVnljbVZrSUhKbFoybHZiaUF0UGlCamJHbGxiblFnY21WbmFXOXVYRzRnSUNBZ0lDQWdJQ0FnYVc1d2RYUXVjMmxuYm1sdVoxSmxaMmx2YmlBOUlHbHVjSFYwTG5OcFoyNXBibWRTWldkcGIyNGdmSHdnYzJsbmJtbHVaMUpsWjJsdmJpQjhmQ0J5WldkcGIyNDdYRzRnSUNBZ0lDQWdJQ0FnTHk5emFXZHVhVzVuSUc1aGJXVWdjbVZ6YjJ4MmFXNW5JRzl5WkdWeU9seHVJQ0FnSUNBZ0lDQWdJQzh2ZFhObGNpQnpkWEJ3YkdsbFpDQnphV2R1YVc1blRtRnRaU0F0UGlCbGJtUndiMmx1ZEhNdWFuTnZiaUJwYm1abGNuSmxaQ0FvWTNKbFpHVnVkR2xoYkNCelkyOXdaU0F0UGlCdGIyUmxiQ0JoY201T1lXMWxjM0JoWTJVcElDMCtJRzF2WkdWc0lITmxjblpwWTJVZ2FXUmNiaUFnSUNBZ0lDQWdJQ0JwYm5CMWRDNXphV2R1YVc1blRtRnRaU0E5SUdsdWNIVjBMbk5wWjI1cGJtZE9ZVzFsSUh4OElITnBaMjVwYm1kVFpYSjJhV05sSUh4OElHbHVjSFYwTG5ObGNuWnBZMlZKWkR0Y2JseHVJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnVTJsbmJtRjBkWEpsVmpRb2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWTNKbFpHVnVkR2xoYkhNNklHNXZjbTFoYkdsNlpXUkRjbVZrY3l4Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsWjJsdmJqb2dhVzV3ZFhRdWMybG5ibWx1WjFKbFoybHZiaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lITmxjblpwWTJVNklHbHVjSFYwTG5OcFoyNXBibWRPWVcxbExGeHVJQ0FnSUNBZ0lDQWdJQ0FnYzJoaE1qVTJMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2RYSnBSWE5qWVhCbFVHRjBhRG9nYzJsbmJtbHVaMFZ6WTJGd1pWQmhkR2dzWEc0Z0lDQWdJQ0FnSUNBZ2ZTazdYRzRnSUNBZ0lDQWdJSDBwTzF4dUlDQjlYRzVjYmlBZ2NtVjBkWEp1SUh0Y2JpQWdJQ0F1TGk1cGJuQjFkQ3hjYmlBZ0lDQnplWE4wWlcxRGJHOWphMDltWm5ObGRDeGNiaUFnSUNCemFXZHVhVzVuUlhOallYQmxVR0YwYUN4Y2JpQWdJQ0JqY21Wa1pXNTBhV0ZzY3pvZ2JtOXliV0ZzYVhwbFpFTnlaV1J6TEZ4dUlDQWdJSE5wWjI1bGNpeGNiaUFnZlR0Y2JuMWNibHh1Wm5WdVkzUnBiMjRnYm05eWJXRnNhWHBsVUhKdmRtbGtaWEk4VkQ0b2FXNXdkWFE2SUZRZ2ZDQlFjbTkyYVdSbGNqeFVQaWs2SUZCeWIzWnBaR1Z5UEZRK0lIdGNiaUFnYVdZZ0tIUjVjR1Z2WmlCcGJuQjFkQ0E5UFQwZ1hDSnZZbXBsWTNSY0lpa2dlMXh1SUNBZ0lHTnZibk4wSUhCeWIyMXBjMmxtYVdWa0lEMGdVSEp2YldselpTNXlaWE52YkhabEtHbHVjSFYwS1R0Y2JpQWdJQ0J5WlhSMWNtNGdLQ2tnUFQ0Z2NISnZiV2x6YVdacFpXUTdYRzRnSUgxY2JpQWdjbVYwZFhKdUlHbHVjSFYwSUdGeklGQnliM1pwWkdWeVBGUStPMXh1ZlZ4dUlsMTkiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-signing/dist/es/configurations.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-signing/dist/es/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-signing/dist/es/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   awsAuthMiddleware: () => (/* reexport safe */ _middleware__WEBPACK_IMPORTED_MODULE_1__.awsAuthMiddleware),\n/* harmony export */   awsAuthMiddlewareOptions: () => (/* reexport safe */ _middleware__WEBPACK_IMPORTED_MODULE_1__.awsAuthMiddlewareOptions),\n/* harmony export */   getAwsAuthPlugin: () => (/* reexport safe */ _middleware__WEBPACK_IMPORTED_MODULE_1__.getAwsAuthPlugin),\n/* harmony export */   resolveAwsAuthConfig: () => (/* reexport safe */ _configurations__WEBPACK_IMPORTED_MODULE_0__.resolveAwsAuthConfig)\n/* harmony export */ });\n/* harmony import */ var _configurations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./configurations */ \"(ssr)/./node_modules/@aws-sdk/middleware-signing/dist/es/configurations.js\");\n/* harmony import */ var _middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./middleware */ \"(ssr)/./node_modules/@aws-sdk/middleware-signing/dist/es/middleware.js\");\n\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2NvbmZpZ3VyYXRpb25zXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9taWRkbGV3YXJlXCI7XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1zaWduaW5nL2Rpc3QvZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWlDO0FBQ0o7QUFDN0IsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9taWRkbGV3YXJlLXNpZ25pbmcvZGlzdC9lcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9jb25maWd1cmF0aW9uc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vbWlkZGxld2FyZVwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYVc1a1pYZ3Vhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOHVMaTl6Y21NdmFXNWtaWGd1ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRXNZMEZCWXl4clFrRkJhMElzUTBGQlF6dEJRVU5xUXl4alFVRmpMR05CUVdNc1EwRkJReUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSW1WNGNHOXlkQ0FxSUdaeWIyMGdYQ0l1TDJOdmJtWnBaM1Z5WVhScGIyNXpYQ0k3WEc1bGVIQnZjblFnS2lCbWNtOXRJRndpTGk5dGFXUmtiR1YzWVhKbFhDSTdYRzRpWFgwPSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-signing/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-signing/dist/es/middleware.js":
/*!************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-signing/dist/es/middleware.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   awsAuthMiddleware: () => (/* binding */ awsAuthMiddleware),\n/* harmony export */   awsAuthMiddlewareOptions: () => (/* binding */ awsAuthMiddlewareOptions),\n/* harmony export */   getAwsAuthPlugin: () => (/* binding */ getAwsAuthPlugin)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/middleware-signing/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/protocol-http */ \"(ssr)/./node_modules/@aws-sdk/protocol-http/dist/es/index.js\");\n\n\nvar isClockSkewed = function (newServerTime, systemClockOffset) {\n    return Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - newServerTime) >= 300000;\n};\nvar getSkewCorrectedDate = function (systemClockOffset) { return new Date(Date.now() + systemClockOffset); };\nfunction awsAuthMiddleware(options) {\n    return function (next, context) {\n        return function (args) {\n            return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function () {\n                var signer, _a, output, _b, _c, headers, dateHeader, serverTime;\n                var _d;\n                return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_e) {\n                    switch (_e.label) {\n                        case 0:\n                            if (!_aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest.isInstance(args.request))\n                                return [2 /*return*/, next(args)];\n                            if (!(typeof options.signer === \"function\")) return [3 /*break*/, 2];\n                            return [4 /*yield*/, options.signer()];\n                        case 1:\n                            _a = _e.sent();\n                            return [3 /*break*/, 3];\n                        case 2:\n                            _a = options.signer;\n                            _e.label = 3;\n                        case 3:\n                            signer = _a;\n                            _b = next;\n                            _c = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, args)];\n                            _d = {};\n                            return [4 /*yield*/, signer.sign(args.request, {\n                                    signingDate: new Date(Date.now() + options.systemClockOffset),\n                                    signingRegion: context[\"signing_region\"],\n                                    signingService: context[\"signing_service\"],\n                                })];\n                        case 4: return [4 /*yield*/, _b.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([(_d.request = _e.sent(), _d)]))])];\n                        case 5:\n                            output = _e.sent();\n                            headers = output.response.headers;\n                            dateHeader = headers && (headers.date || headers.Date);\n                            if (dateHeader) {\n                                serverTime = Date.parse(dateHeader);\n                                if (isClockSkewed(serverTime, options.systemClockOffset)) {\n                                    options.systemClockOffset = serverTime - Date.now();\n                                }\n                            }\n                            return [2 /*return*/, output];\n                    }\n                });\n            });\n        };\n    };\n}\nvar awsAuthMiddlewareOptions = {\n    name: \"awsAuthMiddleware\",\n    tags: [\"SIGNATURE\", \"AWSAUTH\"],\n    relation: \"after\",\n    toMiddleware: \"retryMiddleware\",\n    override: true,\n};\nvar getAwsAuthPlugin = function (options) { return ({\n    applyToStack: function (clientStack) {\n        clientStack.addRelativeTo(awsAuthMiddleware(options), awsAuthMiddlewareOptions);\n    },\n}); };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWlkZGxld2FyZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taWRkbGV3YXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFhckQsSUFBTSxhQUFhLEdBQUcsVUFBQyxhQUFxQixFQUFFLGlCQUF5QjtJQUNyRSxPQUFBLElBQUksQ0FBQyxHQUFHLENBQUMsb0JBQW9CLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxPQUFPLEVBQUUsR0FBRyxhQUFhLENBQUMsSUFBSSxNQUFNO0FBQXJGLENBQXFGLENBQUM7QUFFeEYsSUFBTSxvQkFBb0IsR0FBRyxVQUFDLGlCQUF5QixJQUFLLE9BQUEsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLGlCQUFpQixDQUFDLEVBQXhDLENBQXdDLENBQUM7QUFFckcsTUFBTSxVQUFVLGlCQUFpQixDQUMvQixPQUE4QjtJQUU5QixPQUFPLFVBQUMsSUFBb0MsRUFBRSxPQUFnQztRQUM1RSxPQUFBLFVBQWdCLElBQXFDOzs7Ozs7OzRCQUNuRCxJQUFJLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO2dDQUFFLHNCQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBQztpQ0FDOUMsQ0FBQSxPQUFPLE9BQU8sQ0FBQyxNQUFNLEtBQUssVUFBVSxDQUFBLEVBQXBDLHdCQUFvQzs0QkFBRyxxQkFBTSxPQUFPLENBQUMsTUFBTSxFQUFFLEVBQUE7OzRCQUF0QixLQUFBLFNBQXNCLENBQUE7Ozs0QkFBRyxLQUFBLE9BQU8sQ0FBQyxNQUFNLENBQUE7Ozs0QkFBdkYsTUFBTSxLQUFpRjs0QkFDeEUsS0FBQSxJQUFJLENBQUE7K0NBQ3BCLElBQUk7OzRCQUNFLHFCQUFNLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRTtvQ0FDdkMsV0FBVyxFQUFFLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxPQUFPLENBQUMsaUJBQWlCLENBQUM7b0NBQzdELGFBQWEsRUFBRSxPQUFPLENBQUMsZ0JBQWdCLENBQUM7b0NBQ3hDLGNBQWMsRUFBRSxPQUFPLENBQUMsaUJBQWlCLENBQUM7aUNBQzNDLENBQUMsRUFBQTtnQ0FOVyxxQkFBTSxxREFFbkIsVUFBTyxHQUFFLFNBSVAsVUFDRixFQUFBOzs0QkFQSSxNQUFNLEdBQUcsU0FPYjs0QkFFTSxPQUFPLEdBQUssTUFBTSxDQUFDLFFBQWUsUUFBM0IsQ0FBNEI7NEJBQ3JDLFVBQVUsR0FBRyxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxJQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQzs0QkFDN0QsSUFBSSxVQUFVLEVBQUU7Z0NBQ1IsVUFBVSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUM7Z0NBQzFDLElBQUksYUFBYSxDQUFDLFVBQVUsRUFBRSxPQUFPLENBQUMsaUJBQWlCLENBQUMsRUFBRTtvQ0FDeEQsT0FBTyxDQUFDLGlCQUFpQixHQUFHLFVBQVUsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7aUNBQ3JEOzZCQUNGOzRCQUVELHNCQUFPLE1BQU0sRUFBQzs7OztTQUNmO0lBdEJELENBc0JDLENBQUM7QUFDTixDQUFDO0FBRUQsTUFBTSxDQUFDLElBQU0sd0JBQXdCLEdBQThCO0lBQ2pFLElBQUksRUFBRSxtQkFBbUI7SUFDekIsSUFBSSxFQUFFLENBQUMsV0FBVyxFQUFFLFNBQVMsQ0FBQztJQUM5QixRQUFRLEVBQUUsT0FBTztJQUNqQixZQUFZLEVBQUUsaUJBQWlCO0lBQy9CLFFBQVEsRUFBRSxJQUFJO0NBQ2YsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLGdCQUFnQixHQUFHLFVBQUMsT0FBOEIsSUFBMEIsT0FBQSxDQUFDO0lBQ3hGLFlBQVksRUFBRSxVQUFDLFdBQVc7UUFDeEIsV0FBVyxDQUFDLGFBQWEsQ0FBQyxpQkFBaUIsQ0FBQyxPQUFPLENBQUMsRUFBRSx3QkFBd0IsQ0FBQyxDQUFDO0lBQ2xGLENBQUM7Q0FDRixDQUFDLEVBSnVGLENBSXZGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwUmVxdWVzdCB9IGZyb20gXCJAYXdzLXNkay9wcm90b2NvbC1odHRwXCI7XG5pbXBvcnQge1xuICBGaW5hbGl6ZUhhbmRsZXIsXG4gIEZpbmFsaXplSGFuZGxlckFyZ3VtZW50cyxcbiAgRmluYWxpemVIYW5kbGVyT3V0cHV0LFxuICBGaW5hbGl6ZVJlcXVlc3RNaWRkbGV3YXJlLFxuICBIYW5kbGVyRXhlY3V0aW9uQ29udGV4dCxcbiAgUGx1Z2dhYmxlLFxuICBSZWxhdGl2ZU1pZGRsZXdhcmVPcHRpb25zLFxufSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuaW1wb3J0IHsgQXdzQXV0aFJlc29sdmVkQ29uZmlnIH0gZnJvbSBcIi4vY29uZmlndXJhdGlvbnNcIjtcblxuY29uc3QgaXNDbG9ja1NrZXdlZCA9IChuZXdTZXJ2ZXJUaW1lOiBudW1iZXIsIHN5c3RlbUNsb2NrT2Zmc2V0OiBudW1iZXIpID0+XG4gIE1hdGguYWJzKGdldFNrZXdDb3JyZWN0ZWREYXRlKHN5c3RlbUNsb2NrT2Zmc2V0KS5nZXRUaW1lKCkgLSBuZXdTZXJ2ZXJUaW1lKSA+PSAzMDAwMDA7XG5cbmNvbnN0IGdldFNrZXdDb3JyZWN0ZWREYXRlID0gKHN5c3RlbUNsb2NrT2Zmc2V0OiBudW1iZXIpID0+IG5ldyBEYXRlKERhdGUubm93KCkgKyBzeXN0ZW1DbG9ja09mZnNldCk7XG5cbmV4cG9ydCBmdW5jdGlvbiBhd3NBdXRoTWlkZGxld2FyZTxJbnB1dCBleHRlbmRzIG9iamVjdCwgT3V0cHV0IGV4dGVuZHMgb2JqZWN0PihcbiAgb3B0aW9uczogQXdzQXV0aFJlc29sdmVkQ29uZmlnXG4pOiBGaW5hbGl6ZVJlcXVlc3RNaWRkbGV3YXJlPElucHV0LCBPdXRwdXQ+IHtcbiAgcmV0dXJuIChuZXh0OiBGaW5hbGl6ZUhhbmRsZXI8SW5wdXQsIE91dHB1dD4sIGNvbnRleHQ6IEhhbmRsZXJFeGVjdXRpb25Db250ZXh0KTogRmluYWxpemVIYW5kbGVyPElucHV0LCBPdXRwdXQ+ID0+XG4gICAgYXN5bmMgZnVuY3Rpb24gKGFyZ3M6IEZpbmFsaXplSGFuZGxlckFyZ3VtZW50czxJbnB1dD4pOiBQcm9taXNlPEZpbmFsaXplSGFuZGxlck91dHB1dDxPdXRwdXQ+PiB7XG4gICAgICBpZiAoIUh0dHBSZXF1ZXN0LmlzSW5zdGFuY2UoYXJncy5yZXF1ZXN0KSkgcmV0dXJuIG5leHQoYXJncyk7XG4gICAgICBjb25zdCBzaWduZXIgPSB0eXBlb2Ygb3B0aW9ucy5zaWduZXIgPT09IFwiZnVuY3Rpb25cIiA/IGF3YWl0IG9wdGlvbnMuc2lnbmVyKCkgOiBvcHRpb25zLnNpZ25lcjtcbiAgICAgIGNvbnN0IG91dHB1dCA9IGF3YWl0IG5leHQoe1xuICAgICAgICAuLi5hcmdzLFxuICAgICAgICByZXF1ZXN0OiBhd2FpdCBzaWduZXIuc2lnbihhcmdzLnJlcXVlc3QsIHtcbiAgICAgICAgICBzaWduaW5nRGF0ZTogbmV3IERhdGUoRGF0ZS5ub3coKSArIG9wdGlvbnMuc3lzdGVtQ2xvY2tPZmZzZXQpLFxuICAgICAgICAgIHNpZ25pbmdSZWdpb246IGNvbnRleHRbXCJzaWduaW5nX3JlZ2lvblwiXSxcbiAgICAgICAgICBzaWduaW5nU2VydmljZTogY29udGV4dFtcInNpZ25pbmdfc2VydmljZVwiXSxcbiAgICAgICAgfSksXG4gICAgICB9KTtcblxuICAgICAgY29uc3QgeyBoZWFkZXJzIH0gPSBvdXRwdXQucmVzcG9uc2UgYXMgYW55O1xuICAgICAgY29uc3QgZGF0ZUhlYWRlciA9IGhlYWRlcnMgJiYgKGhlYWRlcnMuZGF0ZSB8fCBoZWFkZXJzLkRhdGUpO1xuICAgICAgaWYgKGRhdGVIZWFkZXIpIHtcbiAgICAgICAgY29uc3Qgc2VydmVyVGltZSA9IERhdGUucGFyc2UoZGF0ZUhlYWRlcik7XG4gICAgICAgIGlmIChpc0Nsb2NrU2tld2VkKHNlcnZlclRpbWUsIG9wdGlvbnMuc3lzdGVtQ2xvY2tPZmZzZXQpKSB7XG4gICAgICAgICAgb3B0aW9ucy5zeXN0ZW1DbG9ja09mZnNldCA9IHNlcnZlclRpbWUgLSBEYXRlLm5vdygpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBvdXRwdXQ7XG4gICAgfTtcbn1cblxuZXhwb3J0IGNvbnN0IGF3c0F1dGhNaWRkbGV3YXJlT3B0aW9uczogUmVsYXRpdmVNaWRkbGV3YXJlT3B0aW9ucyA9IHtcbiAgbmFtZTogXCJhd3NBdXRoTWlkZGxld2FyZVwiLFxuICB0YWdzOiBbXCJTSUdOQVRVUkVcIiwgXCJBV1NBVVRIXCJdLFxuICByZWxhdGlvbjogXCJhZnRlclwiLFxuICB0b01pZGRsZXdhcmU6IFwicmV0cnlNaWRkbGV3YXJlXCIsXG4gIG92ZXJyaWRlOiB0cnVlLFxufTtcblxuZXhwb3J0IGNvbnN0IGdldEF3c0F1dGhQbHVnaW4gPSAob3B0aW9uczogQXdzQXV0aFJlc29sdmVkQ29uZmlnKTogUGx1Z2dhYmxlPGFueSwgYW55PiA9PiAoe1xuICBhcHBseVRvU3RhY2s6IChjbGllbnRTdGFjaykgPT4ge1xuICAgIGNsaWVudFN0YWNrLmFkZFJlbGF0aXZlVG8oYXdzQXV0aE1pZGRsZXdhcmUob3B0aW9ucyksIGF3c0F1dGhNaWRkbGV3YXJlT3B0aW9ucyk7XG4gIH0sXG59KTtcbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-signing/dist/es/middleware.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-signing/node_modules/tslib/tslib.es6.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-signing/node_modules/tslib/tslib.es6.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-signing/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-stack/dist/es/MiddlewareStack.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-stack/dist/es/MiddlewareStack.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   constructStack: () => (/* binding */ constructStack)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/middleware-stack/node_modules/tslib/tslib.es6.js\");\n\nvar constructStack = function () {\n    var absoluteEntries = [];\n    var relativeEntries = [];\n    var entriesNameSet = new Set();\n    var sort = function (entries) {\n        return entries.sort(function (a, b) {\n            return stepWeights[b.step] - stepWeights[a.step] ||\n                priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"];\n        });\n    };\n    var removeByName = function (toRemove) {\n        var isRemoved = false;\n        var filterCb = function (entry) {\n            if (entry.name && entry.name === toRemove) {\n                isRemoved = true;\n                entriesNameSet.delete(toRemove);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    var removeByReference = function (toRemove) {\n        var isRemoved = false;\n        var filterCb = function (entry) {\n            if (entry.middleware === toRemove) {\n                isRemoved = true;\n                if (entry.name)\n                    entriesNameSet.delete(entry.name);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    var cloneTo = function (toStack) {\n        absoluteEntries.forEach(function (entry) {\n            //@ts-ignore\n            toStack.add(entry.middleware, (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, entry));\n        });\n        relativeEntries.forEach(function (entry) {\n            //@ts-ignore\n            toStack.addRelativeTo(entry.middleware, (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, entry));\n        });\n        return toStack;\n    };\n    var expandRelativeMiddlewareList = function (from) {\n        var expandedMiddlewareList = [];\n        from.before.forEach(function (entry) {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push.apply(expandedMiddlewareList, (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__spread)(expandRelativeMiddlewareList(entry)));\n            }\n        });\n        expandedMiddlewareList.push(from);\n        from.after.reverse().forEach(function (entry) {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push.apply(expandedMiddlewareList, (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__spread)(expandRelativeMiddlewareList(entry)));\n            }\n        });\n        return expandedMiddlewareList;\n    };\n    /**\n     * Get a final list of middleware in the order of being executed in the resolved handler.\n     */\n    var getMiddlewareList = function () {\n        var normalizedAbsoluteEntries = [];\n        var normalizedRelativeEntries = [];\n        var normalizedEntriesNameMap = {};\n        absoluteEntries.forEach(function (entry) {\n            var normalizedEntry = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, entry), { before: [], after: [] });\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedAbsoluteEntries.push(normalizedEntry);\n        });\n        relativeEntries.forEach(function (entry) {\n            var normalizedEntry = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, entry), { before: [], after: [] });\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedRelativeEntries.push(normalizedEntry);\n        });\n        normalizedRelativeEntries.forEach(function (entry) {\n            if (entry.toMiddleware) {\n                var toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n                if (toMiddleware === undefined) {\n                    throw new Error(entry.toMiddleware + \" is not found when adding \" + (entry.name || \"anonymous\") + \" middleware \" + entry.relation + \" \" + entry.toMiddleware);\n                }\n                if (entry.relation === \"after\") {\n                    toMiddleware.after.push(entry);\n                }\n                if (entry.relation === \"before\") {\n                    toMiddleware.before.push(entry);\n                }\n            }\n        });\n        var mainChain = sort(normalizedAbsoluteEntries)\n            .map(expandRelativeMiddlewareList)\n            .reduce(function (wholeList, expendedMiddlewareList) {\n            // TODO: Replace it with Array.flat();\n            wholeList.push.apply(wholeList, (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__spread)(expendedMiddlewareList));\n            return wholeList;\n        }, []);\n        return mainChain.map(function (entry) { return entry.middleware; });\n    };\n    var stack = {\n        add: function (middleware, options) {\n            if (options === void 0) { options = {}; }\n            var name = options.name, override = options.override;\n            var entry = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({ step: \"initialize\", priority: \"normal\", middleware: middleware }, options);\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(\"Duplicate middleware name '\" + name + \"'\");\n                    var toOverrideIndex = absoluteEntries.findIndex(function (entry) { return entry.name === name; });\n                    var toOverride = absoluteEntries[toOverrideIndex];\n                    if (toOverride.step !== entry.step || toOverride.priority !== entry.priority) {\n                        throw new Error(\"\\\"\" + name + \"\\\" middleware with \" + toOverride.priority + \" priority in \" + toOverride.step + \" step cannot be \" +\n                            (\"overridden by same-name middleware with \" + entry.priority + \" priority in \" + entry.step + \" step.\"));\n                    }\n                    absoluteEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            absoluteEntries.push(entry);\n        },\n        addRelativeTo: function (middleware, options) {\n            var name = options.name, override = options.override;\n            var entry = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({ middleware: middleware }, options);\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(\"Duplicate middleware name '\" + name + \"'\");\n                    var toOverrideIndex = relativeEntries.findIndex(function (entry) { return entry.name === name; });\n                    var toOverride = relativeEntries[toOverrideIndex];\n                    if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n                        throw new Error(\"\\\"\" + name + \"\\\" middleware \" + toOverride.relation + \" \\\"\" + toOverride.toMiddleware + \"\\\" middleware cannot be overridden \" +\n                            (\"by same-name middleware \" + entry.relation + \" \\\"\" + entry.toMiddleware + \"\\\" middleware.\"));\n                    }\n                    relativeEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            relativeEntries.push(entry);\n        },\n        clone: function () { return cloneTo(constructStack()); },\n        use: function (plugin) {\n            plugin.applyToStack(stack);\n        },\n        remove: function (toRemove) {\n            if (typeof toRemove === \"string\")\n                return removeByName(toRemove);\n            else\n                return removeByReference(toRemove);\n        },\n        removeByTag: function (toRemove) {\n            var isRemoved = false;\n            var filterCb = function (entry) {\n                var tags = entry.tags, name = entry.name;\n                if (tags && tags.includes(toRemove)) {\n                    if (name)\n                        entriesNameSet.delete(name);\n                    isRemoved = true;\n                    return false;\n                }\n                return true;\n            };\n            absoluteEntries = absoluteEntries.filter(filterCb);\n            relativeEntries = relativeEntries.filter(filterCb);\n            return isRemoved;\n        },\n        concat: function (from) {\n            var cloned = cloneTo(constructStack());\n            cloned.use(from);\n            return cloned;\n        },\n        applyToStack: cloneTo,\n        resolve: function (handler, context) {\n            var e_1, _a;\n            try {\n                for (var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__values)(getMiddlewareList().reverse()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var middleware = _c.value;\n                    handler = middleware(handler, context);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return handler;\n        },\n    };\n    return stack;\n};\nvar stepWeights = {\n    initialize: 5,\n    serialize: 4,\n    build: 3,\n    finalizeRequest: 2,\n    deserialize: 1,\n};\nvar priorityWeights = {\n    high: 3,\n    normal: 2,\n    low: 1,\n};\n//# sourceMappingURL=data:application/json;base64,//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-stack/dist/es/MiddlewareStack.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-stack/dist/es/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-stack/dist/es/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   constructStack: () => (/* reexport safe */ _MiddlewareStack__WEBPACK_IMPORTED_MODULE_0__.constructStack)\n/* harmony export */ });\n/* harmony import */ var _MiddlewareStack__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MiddlewareStack */ \"(ssr)/./node_modules/@aws-sdk/middleware-stack/dist/es/MiddlewareStack.js\");\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxtQkFBbUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL01pZGRsZXdhcmVTdGFja1wiO1xuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1zdGFjay9kaXN0L2VzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtDO0FBQ2xDLDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1zdGFjay9kaXN0L2VzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL01pZGRsZXdhcmVTdGFja1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYVc1a1pYZ3Vhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOHVMaTl6Y21NdmFXNWtaWGd1ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRXNZMEZCWXl4dFFrRkJiVUlzUTBGQlF5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbVY0Y0c5eWRDQXFJR1p5YjIwZ1hDSXVMMDFwWkdSc1pYZGhjbVZUZEdGamExd2lPMXh1SWwxOSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-stack/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-stack/node_modules/tslib/tslib.es6.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-stack/node_modules/tslib/tslib.es6.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-stack/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-user-agent/dist/es/configurations.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-user-agent/dist/es/configurations.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resolveUserAgentConfig: () => (/* binding */ resolveUserAgentConfig)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/middleware-user-agent/node_modules/tslib/tslib.es6.js\");\n\nfunction resolveUserAgentConfig(input) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, input), { customUserAgent: typeof input.customUserAgent === \"string\" ? [[input.customUserAgent]] : input.customUserAgent });\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29uZmlndXJhdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQWdCQSxNQUFNLFVBQVUsc0JBQXNCLENBQ3BDLEtBQW9EO0lBRXBELDZCQUNLLEtBQUssS0FDUixlQUFlLEVBQUUsT0FBTyxLQUFLLENBQUMsZUFBZSxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsZUFBZSxJQUM5RztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcm92aWRlciwgVXNlckFnZW50IH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5leHBvcnQgaW50ZXJmYWNlIFVzZXJBZ2VudElucHV0Q29uZmlnIHtcbiAgLyoqXG4gICAqIFRoZSBjdXN0b20gdXNlciBhZ2VudCBoZWFkZXIgdGhhdCB3b3VsZCBiZSBhcHBlbmRlZCB0byBkZWZhdWx0IG9uZVxuICAgKi9cbiAgY3VzdG9tVXNlckFnZW50Pzogc3RyaW5nIHwgVXNlckFnZW50O1xufVxuaW50ZXJmYWNlIFByZXZpb3VzbHlSZXNvbHZlZCB7XG4gIGRlZmF1bHRVc2VyQWdlbnRQcm92aWRlcjogUHJvdmlkZXI8VXNlckFnZW50PjtcbiAgcnVudGltZTogc3RyaW5nO1xufVxuZXhwb3J0IGludGVyZmFjZSBVc2VyQWdlbnRSZXNvbHZlZENvbmZpZyB7XG4gIGRlZmF1bHRVc2VyQWdlbnRQcm92aWRlcjogUHJvdmlkZXI8VXNlckFnZW50PjtcbiAgY3VzdG9tVXNlckFnZW50PzogVXNlckFnZW50O1xuICBydW50aW1lOiBzdHJpbmc7XG59XG5leHBvcnQgZnVuY3Rpb24gcmVzb2x2ZVVzZXJBZ2VudENvbmZpZzxUPihcbiAgaW5wdXQ6IFQgJiBQcmV2aW91c2x5UmVzb2x2ZWQgJiBVc2VyQWdlbnRJbnB1dENvbmZpZ1xuKTogVCAmIFVzZXJBZ2VudFJlc29sdmVkQ29uZmlnIHtcbiAgcmV0dXJuIHtcbiAgICAuLi5pbnB1dCxcbiAgICBjdXN0b21Vc2VyQWdlbnQ6IHR5cGVvZiBpbnB1dC5jdXN0b21Vc2VyQWdlbnQgPT09IFwic3RyaW5nXCIgPyBbW2lucHV0LmN1c3RvbVVzZXJBZ2VudF1dIDogaW5wdXQuY3VzdG9tVXNlckFnZW50LFxuICB9O1xufVxuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS11c2VyLWFnZW50L2Rpc3QvZXMvY29uZmlndXJhdGlvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBaUM7QUFDMUI7QUFDUCxXQUFXLCtDQUFRLENBQUMsK0NBQVEsR0FBRyxZQUFZLGdIQUFnSDtBQUMzSjtBQUNBLDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS11c2VyLWFnZW50L2Rpc3QvZXMvY29uZmlndXJhdGlvbnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19hc3NpZ24gfSBmcm9tIFwidHNsaWJcIjtcbmV4cG9ydCBmdW5jdGlvbiByZXNvbHZlVXNlckFnZW50Q29uZmlnKGlucHV0KSB7XG4gICAgcmV0dXJuIF9fYXNzaWduKF9fYXNzaWduKHt9LCBpbnB1dCksIHsgY3VzdG9tVXNlckFnZW50OiB0eXBlb2YgaW5wdXQuY3VzdG9tVXNlckFnZW50ID09PSBcInN0cmluZ1wiID8gW1tpbnB1dC5jdXN0b21Vc2VyQWdlbnRdXSA6IGlucHV0LmN1c3RvbVVzZXJBZ2VudCB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVkyOXVabWxuZFhKaGRHbHZibk11YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTh1TGk5emNtTXZZMjl1Wm1sbmRYSmhkR2x2Ym5NdWRITWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklqdEJRV2RDUVN4TlFVRk5MRlZCUVZVc2MwSkJRWE5DTEVOQlEzQkRMRXRCUVc5RU8wbEJSWEJFTERaQ1FVTkxMRXRCUVVzc1MwRkRVaXhsUVVGbExFVkJRVVVzVDBGQlR5eExRVUZMTEVOQlFVTXNaVUZCWlN4TFFVRkxMRkZCUVZFc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEV0QlFVc3NRMEZCUXl4bFFVRmxMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eExRVUZMTEVOQlFVTXNaVUZCWlN4SlFVTTVSenRCUVVOS0xFTkJRVU1pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKcGJYQnZjblFnZXlCUWNtOTJhV1JsY2l3Z1ZYTmxja0ZuWlc1MElIMGdabkp2YlNCY0lrQmhkM010YzJSckwzUjVjR1Z6WENJN1hHNWxlSEJ2Y25RZ2FXNTBaWEptWVdObElGVnpaWEpCWjJWdWRFbHVjSFYwUTI5dVptbG5JSHRjYmlBZ0x5b3FYRzRnSUNBcUlGUm9aU0JqZFhOMGIyMGdkWE5sY2lCaFoyVnVkQ0JvWldGa1pYSWdkR2hoZENCM2IzVnNaQ0JpWlNCaGNIQmxibVJsWkNCMGJ5QmtaV1poZFd4MElHOXVaVnh1SUNBZ0tpOWNiaUFnWTNWemRHOXRWWE5sY2tGblpXNTBQem9nYzNSeWFXNW5JSHdnVlhObGNrRm5aVzUwTzF4dWZWeHVhVzUwWlhKbVlXTmxJRkJ5WlhacGIzVnpiSGxTWlhOdmJIWmxaQ0I3WEc0Z0lHUmxabUYxYkhSVmMyVnlRV2RsYm5SUWNtOTJhV1JsY2pvZ1VISnZkbWxrWlhJOFZYTmxja0ZuWlc1MFBqdGNiaUFnY25WdWRHbHRaVG9nYzNSeWFXNW5PMXh1ZlZ4dVpYaHdiM0owSUdsdWRHVnlabUZqWlNCVmMyVnlRV2RsYm5SU1pYTnZiSFpsWkVOdmJtWnBaeUI3WEc0Z0lHUmxabUYxYkhSVmMyVnlRV2RsYm5SUWNtOTJhV1JsY2pvZ1VISnZkbWxrWlhJOFZYTmxja0ZuWlc1MFBqdGNiaUFnWTNWemRHOXRWWE5sY2tGblpXNTBQem9nVlhObGNrRm5aVzUwTzF4dUlDQnlkVzUwYVcxbE9pQnpkSEpwYm1jN1hHNTlYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdjbVZ6YjJ4MlpWVnpaWEpCWjJWdWRFTnZibVpwWnp4VVBpaGNiaUFnYVc1d2RYUTZJRlFnSmlCUWNtVjJhVzkxYzJ4NVVtVnpiMngyWldRZ0ppQlZjMlZ5UVdkbGJuUkpibkIxZEVOdmJtWnBaMXh1S1RvZ1ZDQW1JRlZ6WlhKQloyVnVkRkpsYzI5c2RtVmtRMjl1Wm1sbklIdGNiaUFnY21WMGRYSnVJSHRjYmlBZ0lDQXVMaTVwYm5CMWRDeGNiaUFnSUNCamRYTjBiMjFWYzJWeVFXZGxiblE2SUhSNWNHVnZaaUJwYm5CMWRDNWpkWE4wYjIxVmMyVnlRV2RsYm5RZ1BUMDlJRndpYzNSeWFXNW5YQ0lnUHlCYlcybHVjSFYwTG1OMWMzUnZiVlZ6WlhKQloyVnVkRjFkSURvZ2FXNXdkWFF1WTNWemRHOXRWWE5sY2tGblpXNTBMRnh1SUNCOU8xeHVmVnh1SWwxOSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-user-agent/dist/es/configurations.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-user-agent/dist/es/constants.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-user-agent/dist/es/constants.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SPACE: () => (/* binding */ SPACE),\n/* harmony export */   UA_ESCAPE_REGEX: () => (/* binding */ UA_ESCAPE_REGEX),\n/* harmony export */   USER_AGENT: () => (/* binding */ USER_AGENT),\n/* harmony export */   X_AMZ_USER_AGENT: () => (/* binding */ X_AMZ_USER_AGENT)\n/* harmony export */ });\nvar USER_AGENT = \"user-agent\";\nvar X_AMZ_USER_AGENT = \"x-amz-user-agent\";\nvar SPACE = \" \";\nvar UA_ESCAPE_REGEX = /[^\\!\\#\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w]/g;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUMsSUFBTSxVQUFVLEdBQUcsWUFBWSxDQUFDO0FBRXZDLE1BQU0sQ0FBQyxJQUFNLGdCQUFnQixHQUFHLGtCQUFrQixDQUFDO0FBRW5ELE1BQU0sQ0FBQyxJQUFNLEtBQUssR0FBRyxHQUFHLENBQUM7QUFFekIsTUFBTSxDQUFDLElBQU0sZUFBZSxHQUFHLHdDQUF3QyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFVTRVJfQUdFTlQgPSBcInVzZXItYWdlbnRcIjtcblxuZXhwb3J0IGNvbnN0IFhfQU1aX1VTRVJfQUdFTlQgPSBcIngtYW16LXVzZXItYWdlbnRcIjtcblxuZXhwb3J0IGNvbnN0IFNQQUNFID0gXCIgXCI7XG5cbmV4cG9ydCBjb25zdCBVQV9FU0NBUEVfUkVHRVggPSAvW15cXCFcXCNcXCRcXCVcXCZcXCdcXCpcXCtcXC1cXC5cXF5cXF9cXGBcXHxcXH5cXGRcXHddL2c7XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS11c2VyLWFnZW50L2Rpc3QvZXMvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBTztBQUNBO0FBQ0E7QUFDQTtBQUNQLDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS11c2VyLWFnZW50L2Rpc3QvZXMvY29uc3RhbnRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgVVNFUl9BR0VOVCA9IFwidXNlci1hZ2VudFwiO1xuZXhwb3J0IHZhciBYX0FNWl9VU0VSX0FHRU5UID0gXCJ4LWFtei11c2VyLWFnZW50XCI7XG5leHBvcnQgdmFyIFNQQUNFID0gXCIgXCI7XG5leHBvcnQgdmFyIFVBX0VTQ0FQRV9SRUdFWCA9IC9bXlxcIVxcI1xcJFxcJVxcJlxcJ1xcKlxcK1xcLVxcLlxcXlxcX1xcYFxcfFxcflxcZFxcd10vZztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVkyOXVjM1JoYm5SekxtcHpJaXdpYzI5MWNtTmxVbTl2ZENJNklpSXNJbk52ZFhKalpYTWlPbHNpTGk0dkxpNHZjM0pqTDJOdmJuTjBZVzUwY3k1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hOUVVGTkxFTkJRVU1zU1VGQlRTeFZRVUZWTEVkQlFVY3NXVUZCV1N4RFFVRkRPMEZCUlhaRExFMUJRVTBzUTBGQlF5eEpRVUZOTEdkQ1FVRm5RaXhIUVVGSExHdENRVUZyUWl4RFFVRkRPMEZCUlc1RUxFMUJRVTBzUTBGQlF5eEpRVUZOTEV0QlFVc3NSMEZCUnl4SFFVRkhMRU5CUVVNN1FVRkZla0lzVFVGQlRTeERRVUZETEVsQlFVMHNaVUZCWlN4SFFVRkhMSGREUVVGM1F5eERRVUZESWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaVpYaHdiM0owSUdOdmJuTjBJRlZUUlZKZlFVZEZUbFFnUFNCY0luVnpaWEl0WVdkbGJuUmNJanRjYmx4dVpYaHdiM0owSUdOdmJuTjBJRmhmUVUxYVgxVlRSVkpmUVVkRlRsUWdQU0JjSW5ndFlXMTZMWFZ6WlhJdFlXZGxiblJjSWp0Y2JseHVaWGh3YjNKMElHTnZibk4wSUZOUVFVTkZJRDBnWENJZ1hDSTdYRzVjYm1WNGNHOXlkQ0JqYjI1emRDQlZRVjlGVTBOQlVFVmZVa1ZIUlZnZ1BTQXZXMTVjWENGY1hDTmNYQ1JjWENWY1hDWmNYQ2RjWENwY1hDdGNYQzFjWEM1Y1hGNWNYRjljWEdCY1hIeGNYSDVjWEdSY1hIZGRMMmM3WEc0aVhYMD0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-user-agent/dist/es/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-user-agent/dist/es/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-user-agent/dist/es/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getUserAgentMiddlewareOptions: () => (/* reexport safe */ _user_agent_middleware__WEBPACK_IMPORTED_MODULE_1__.getUserAgentMiddlewareOptions),\n/* harmony export */   getUserAgentPlugin: () => (/* reexport safe */ _user_agent_middleware__WEBPACK_IMPORTED_MODULE_1__.getUserAgentPlugin),\n/* harmony export */   resolveUserAgentConfig: () => (/* reexport safe */ _configurations__WEBPACK_IMPORTED_MODULE_0__.resolveUserAgentConfig),\n/* harmony export */   userAgentMiddleware: () => (/* reexport safe */ _user_agent_middleware__WEBPACK_IMPORTED_MODULE_1__.userAgentMiddleware)\n/* harmony export */ });\n/* harmony import */ var _configurations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./configurations */ \"(ssr)/./node_modules/@aws-sdk/middleware-user-agent/dist/es/configurations.js\");\n/* harmony import */ var _user_agent_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./user-agent-middleware */ \"(ssr)/./node_modules/@aws-sdk/middleware-user-agent/dist/es/user-agent-middleware.js\");\n\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyxjQUFjLHlCQUF5QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vY29uZmlndXJhdGlvbnNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3VzZXItYWdlbnQtbWlkZGxld2FyZVwiO1xuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS11c2VyLWFnZW50L2Rpc3QvZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWlDO0FBQ087QUFDeEMsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9taWRkbGV3YXJlLXVzZXItYWdlbnQvZGlzdC9lcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9jb25maWd1cmF0aW9uc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdXNlci1hZ2VudC1taWRkbGV3YXJlXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lhVzVrWlhndWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12YVc1a1pYZ3VkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1kwRkJZeXhyUWtGQmEwSXNRMEZCUXp0QlFVTnFReXhqUVVGakxIbENRVUY1UWl4RFFVRkRJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpWlhod2IzSjBJQ29nWm5KdmJTQmNJaTR2WTI5dVptbG5kWEpoZEdsdmJuTmNJanRjYm1WNGNHOXlkQ0FxSUdaeWIyMGdYQ0l1TDNWelpYSXRZV2RsYm5RdGJXbGtaR3hsZDJGeVpWd2lPMXh1SWwxOSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-user-agent/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-user-agent/dist/es/user-agent-middleware.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-user-agent/dist/es/user-agent-middleware.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getUserAgentMiddlewareOptions: () => (/* binding */ getUserAgentMiddlewareOptions),\n/* harmony export */   getUserAgentPlugin: () => (/* binding */ getUserAgentPlugin),\n/* harmony export */   userAgentMiddleware: () => (/* binding */ userAgentMiddleware)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/middleware-user-agent/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/protocol-http */ \"(ssr)/./node_modules/@aws-sdk/protocol-http/dist/es/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@aws-sdk/middleware-user-agent/dist/es/constants.js\");\n\n\n\n/**\n * Build user agent header sections from:\n * 1. runtime-specific default user agent provider;\n * 2. custom user agent from `customUserAgent` client config;\n * 3. handler execution context set by internal SDK components;\n * The built user agent will be set to `x-amz-user-agent` header for ALL the\n * runtimes.\n * Please note that any override to the `user-agent` or `x-amz-user-agent` header\n * in the HTTP request is discouraged. Please use `customUserAgent` client\n * config or middleware setting the `userAgent` context to generate desired user\n * agent.\n */\nvar userAgentMiddleware = function (options) { return function (next, context) { return function (args) { return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(void 0, void 0, void 0, function () {\n    var request, headers, userAgent, defaultUserAgent, customUserAgent, normalUAValue;\n    var _a, _b;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__generator)(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                request = args.request;\n                if (!_aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest.isInstance(request))\n                    return [2 /*return*/, next(args)];\n                headers = request.headers;\n                userAgent = ((_a = context === null || context === void 0 ? void 0 : context.userAgent) === null || _a === void 0 ? void 0 : _a.map(escapeUserAgent)) || [];\n                return [4 /*yield*/, options.defaultUserAgentProvider()];\n            case 1:\n                defaultUserAgent = (_c.sent()).map(escapeUserAgent);\n                customUserAgent = ((_b = options === null || options === void 0 ? void 0 : options.customUserAgent) === null || _b === void 0 ? void 0 : _b.map(escapeUserAgent)) || [];\n                // Set value to AWS-specific user agent header\n                headers[_constants__WEBPACK_IMPORTED_MODULE_1__.X_AMZ_USER_AGENT] = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spread)(defaultUserAgent, userAgent, customUserAgent).join(_constants__WEBPACK_IMPORTED_MODULE_1__.SPACE);\n                normalUAValue = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spread)(defaultUserAgent.filter(function (section) { return section.startsWith(\"aws-sdk-\"); }), customUserAgent).join(_constants__WEBPACK_IMPORTED_MODULE_1__.SPACE);\n                if (options.runtime !== \"browser\" && normalUAValue) {\n                    headers[_constants__WEBPACK_IMPORTED_MODULE_1__.USER_AGENT] = headers[_constants__WEBPACK_IMPORTED_MODULE_1__.USER_AGENT] ? headers[_constants__WEBPACK_IMPORTED_MODULE_1__.USER_AGENT] + \" \" + normalUAValue : normalUAValue;\n                }\n                return [2 /*return*/, next((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, args), { request: request }))];\n        }\n    });\n}); }; }; };\n/**\n * Escape the each pair according to https://tools.ietf.org/html/rfc5234 and join the pair with pattern `name/version`.\n * User agent name may include prefix like `md/`, `api/`, `os/` etc., we should not escape the `/` after the prefix.\n * @private\n */\nvar escapeUserAgent = function (_a) {\n    var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__read)(_a, 2), name = _b[0], version = _b[1];\n    var prefixSeparatorIndex = name.indexOf(\"/\");\n    var prefix = name.substring(0, prefixSeparatorIndex); // If no prefix, prefix is just \"\"\n    var uaName = name.substring(prefixSeparatorIndex + 1);\n    if (prefix === \"api\") {\n        uaName = uaName.toLowerCase();\n    }\n    return [prefix, uaName, version]\n        .filter(function (item) { return item && item.length > 0; })\n        .map(function (item) { return item === null || item === void 0 ? void 0 : item.replace(_constants__WEBPACK_IMPORTED_MODULE_1__.UA_ESCAPE_REGEX, \"_\"); })\n        .join(\"/\");\n};\nvar getUserAgentMiddlewareOptions = {\n    name: \"getUserAgentMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n    override: true,\n};\nvar getUserAgentPlugin = function (config) { return ({\n    applyToStack: function (clientStack) {\n        clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n    },\n}); };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1hZ2VudC1taWRkbGV3YXJlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3VzZXItYWdlbnQtbWlkZGxld2FyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBY3JELE9BQU8sRUFBRSxLQUFLLEVBQUUsZUFBZSxFQUFFLFVBQVUsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUVuRjs7Ozs7Ozs7Ozs7R0FXRztBQUNILE1BQU0sQ0FBQyxJQUFNLG1CQUFtQixHQUFHLFVBQUMsT0FBZ0MsSUFBSyxPQUFBLFVBQ3ZFLElBQTRCLEVBQzVCLE9BQWdDLElBQ0wsT0FBQSxVQUFPLElBQWdDOzs7Ozs7Z0JBQzFELE9BQU8sR0FBSyxJQUFJLFFBQVQsQ0FBVTtnQkFDekIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDO29CQUFFLHNCQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBQztnQkFDaEQsT0FBTyxHQUFLLE9BQU8sUUFBWixDQUFhO2dCQUN0QixTQUFTLEdBQUcsT0FBQSxPQUFPLGFBQVAsT0FBTyx1QkFBUCxPQUFPLENBQUUsU0FBUywwQ0FBRSxHQUFHLENBQUMsZUFBZSxNQUFLLEVBQUUsQ0FBQztnQkFDdkMscUJBQU0sT0FBTyxDQUFDLHdCQUF3QixFQUFFLEVBQUE7O2dCQUE1RCxnQkFBZ0IsR0FBRyxDQUFDLFNBQXdDLENBQUMsQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDO2dCQUNsRixlQUFlLEdBQUcsT0FBQSxPQUFPLGFBQVAsT0FBTyx1QkFBUCxPQUFPLENBQUUsZUFBZSwwQ0FBRSxHQUFHLENBQUMsZUFBZSxNQUFLLEVBQUUsQ0FBQztnQkFDN0UsOENBQThDO2dCQUM5QyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxTQUFJLGdCQUFnQixFQUFLLFNBQVMsRUFBSyxlQUFlLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUUxRixhQUFhLEdBQUcsU0FDakIsZ0JBQWdCLENBQUMsTUFBTSxDQUFDLFVBQUMsT0FBTyxJQUFLLE9BQUEsT0FBTyxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsRUFBOUIsQ0FBOEIsQ0FBQyxFQUNwRSxlQUFlLEVBQ2xCLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztnQkFDZCxJQUFJLE9BQU8sQ0FBQyxPQUFPLEtBQUssU0FBUyxJQUFJLGFBQWEsRUFBRTtvQkFDbEQsT0FBTyxDQUFDLFVBQVUsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUksT0FBTyxDQUFDLFVBQVUsQ0FBQyxTQUFJLGFBQWUsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDO2lCQUN2RztnQkFFRCxzQkFBTyxJQUFJLHVCQUNOLElBQUksS0FDUCxPQUFPLFNBQUEsSUFDUCxFQUFDOzs7S0FDSixFQXRCNEIsQ0FzQjVCLEVBekJ3RSxDQXlCeEUsQ0FBQztBQUVGOzs7O0dBSUc7QUFDSCxJQUFNLGVBQWUsR0FBRyxVQUFDLEVBQThCO1FBQTlCLEtBQUEsYUFBOEIsRUFBN0IsSUFBSSxRQUFBLEVBQUUsT0FBTyxRQUFBO0lBQ3JDLElBQU0sb0JBQW9CLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUMvQyxJQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxvQkFBb0IsQ0FBQyxDQUFDLENBQUMsa0NBQWtDO0lBQzFGLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDdEQsSUFBSSxNQUFNLEtBQUssS0FBSyxFQUFFO1FBQ3BCLE1BQU0sR0FBRyxNQUFNLENBQUMsV0FBVyxFQUFFLENBQUM7S0FDL0I7SUFDRCxPQUFPLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxPQUFPLENBQUM7U0FDN0IsTUFBTSxDQUFDLFVBQUMsSUFBSSxJQUFLLE9BQUEsSUFBSSxJQUFJLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUF2QixDQUF1QixDQUFDO1NBQ3pDLEdBQUcsQ0FBQyxVQUFDLElBQUksV0FBSyxJQUFJLGFBQUosSUFBSSx1QkFBSixJQUFJLENBQUUsT0FBTyxDQUFDLGVBQWUsRUFBRSxHQUFHLElBQUMsQ0FBQztTQUNsRCxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDZixDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSw2QkFBNkIsR0FBMkM7SUFDbkYsSUFBSSxFQUFFLHdCQUF3QjtJQUM5QixJQUFJLEVBQUUsT0FBTztJQUNiLFFBQVEsRUFBRSxLQUFLO0lBQ2YsSUFBSSxFQUFFLENBQUMsZ0JBQWdCLEVBQUUsWUFBWSxDQUFDO0lBQ3RDLFFBQVEsRUFBRSxJQUFJO0NBQ2YsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLGtCQUFrQixHQUFHLFVBQUMsTUFBK0IsSUFBMEIsT0FBQSxDQUFDO0lBQzNGLFlBQVksRUFBRSxVQUFDLFdBQVc7UUFDeEIsV0FBVyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxNQUFNLENBQUMsRUFBRSw2QkFBNkIsQ0FBQyxDQUFDO0lBQzlFLENBQUM7Q0FDRixDQUFDLEVBSjBGLENBSTFGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwUmVxdWVzdCB9IGZyb20gXCJAYXdzLXNkay9wcm90b2NvbC1odHRwXCI7XG5pbXBvcnQge1xuICBBYnNvbHV0ZUxvY2F0aW9uLFxuICBCdWlsZEhhbmRsZXIsXG4gIEJ1aWxkSGFuZGxlckFyZ3VtZW50cyxcbiAgQnVpbGRIYW5kbGVyT3B0aW9ucyxcbiAgQnVpbGRIYW5kbGVyT3V0cHV0LFxuICBIYW5kbGVyRXhlY3V0aW9uQ29udGV4dCxcbiAgTWV0YWRhdGFCZWFyZXIsXG4gIFBsdWdnYWJsZSxcbiAgVXNlckFnZW50UGFpcixcbn0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmltcG9ydCB7IFVzZXJBZ2VudFJlc29sdmVkQ29uZmlnIH0gZnJvbSBcIi4vY29uZmlndXJhdGlvbnNcIjtcbmltcG9ydCB7IFNQQUNFLCBVQV9FU0NBUEVfUkVHRVgsIFVTRVJfQUdFTlQsIFhfQU1aX1VTRVJfQUdFTlQgfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcblxuLyoqXG4gKiBCdWlsZCB1c2VyIGFnZW50IGhlYWRlciBzZWN0aW9ucyBmcm9tOlxuICogMS4gcnVudGltZS1zcGVjaWZpYyBkZWZhdWx0IHVzZXIgYWdlbnQgcHJvdmlkZXI7XG4gKiAyLiBjdXN0b20gdXNlciBhZ2VudCBmcm9tIGBjdXN0b21Vc2VyQWdlbnRgIGNsaWVudCBjb25maWc7XG4gKiAzLiBoYW5kbGVyIGV4ZWN1dGlvbiBjb250ZXh0IHNldCBieSBpbnRlcm5hbCBTREsgY29tcG9uZW50cztcbiAqIFRoZSBidWlsdCB1c2VyIGFnZW50IHdpbGwgYmUgc2V0IHRvIGB4LWFtei11c2VyLWFnZW50YCBoZWFkZXIgZm9yIEFMTCB0aGVcbiAqIHJ1bnRpbWVzLlxuICogUGxlYXNlIG5vdGUgdGhhdCBhbnkgb3ZlcnJpZGUgdG8gdGhlIGB1c2VyLWFnZW50YCBvciBgeC1hbXotdXNlci1hZ2VudGAgaGVhZGVyXG4gKiBpbiB0aGUgSFRUUCByZXF1ZXN0IGlzIGRpc2NvdXJhZ2VkLiBQbGVhc2UgdXNlIGBjdXN0b21Vc2VyQWdlbnRgIGNsaWVudFxuICogY29uZmlnIG9yIG1pZGRsZXdhcmUgc2V0dGluZyB0aGUgYHVzZXJBZ2VudGAgY29udGV4dCB0byBnZW5lcmF0ZSBkZXNpcmVkIHVzZXJcbiAqIGFnZW50LlxuICovXG5leHBvcnQgY29uc3QgdXNlckFnZW50TWlkZGxld2FyZSA9IChvcHRpb25zOiBVc2VyQWdlbnRSZXNvbHZlZENvbmZpZykgPT4gPE91dHB1dCBleHRlbmRzIE1ldGFkYXRhQmVhcmVyPihcbiAgbmV4dDogQnVpbGRIYW5kbGVyPGFueSwgYW55PixcbiAgY29udGV4dDogSGFuZGxlckV4ZWN1dGlvbkNvbnRleHRcbik6IEJ1aWxkSGFuZGxlcjxhbnksIGFueT4gPT4gYXN5bmMgKGFyZ3M6IEJ1aWxkSGFuZGxlckFyZ3VtZW50czxhbnk+KTogUHJvbWlzZTxCdWlsZEhhbmRsZXJPdXRwdXQ8T3V0cHV0Pj4gPT4ge1xuICBjb25zdCB7IHJlcXVlc3QgfSA9IGFyZ3M7XG4gIGlmICghSHR0cFJlcXVlc3QuaXNJbnN0YW5jZShyZXF1ZXN0KSkgcmV0dXJuIG5leHQoYXJncyk7XG4gIGNvbnN0IHsgaGVhZGVycyB9ID0gcmVxdWVzdDtcbiAgY29uc3QgdXNlckFnZW50ID0gY29udGV4dD8udXNlckFnZW50Py5tYXAoZXNjYXBlVXNlckFnZW50KSB8fCBbXTtcbiAgY29uc3QgZGVmYXVsdFVzZXJBZ2VudCA9IChhd2FpdCBvcHRpb25zLmRlZmF1bHRVc2VyQWdlbnRQcm92aWRlcigpKS5tYXAoZXNjYXBlVXNlckFnZW50KTtcbiAgY29uc3QgY3VzdG9tVXNlckFnZW50ID0gb3B0aW9ucz8uY3VzdG9tVXNlckFnZW50Py5tYXAoZXNjYXBlVXNlckFnZW50KSB8fCBbXTtcbiAgLy8gU2V0IHZhbHVlIHRvIEFXUy1zcGVjaWZpYyB1c2VyIGFnZW50IGhlYWRlclxuICBoZWFkZXJzW1hfQU1aX1VTRVJfQUdFTlRdID0gWy4uLmRlZmF1bHRVc2VyQWdlbnQsIC4uLnVzZXJBZ2VudCwgLi4uY3VzdG9tVXNlckFnZW50XS5qb2luKFNQQUNFKTtcbiAgLy8gR2V0IHZhbHVlIHRvIGJlIHNlbnQgd2l0aCBub24tQVdTLXNwZWNpZmljIHVzZXIgYWdlbnQgaGVhZGVyLlxuICBjb25zdCBub3JtYWxVQVZhbHVlID0gW1xuICAgIC4uLmRlZmF1bHRVc2VyQWdlbnQuZmlsdGVyKChzZWN0aW9uKSA9PiBzZWN0aW9uLnN0YXJ0c1dpdGgoXCJhd3Mtc2RrLVwiKSksXG4gICAgLi4uY3VzdG9tVXNlckFnZW50LFxuICBdLmpvaW4oU1BBQ0UpO1xuICBpZiAob3B0aW9ucy5ydW50aW1lICE9PSBcImJyb3dzZXJcIiAmJiBub3JtYWxVQVZhbHVlKSB7XG4gICAgaGVhZGVyc1tVU0VSX0FHRU5UXSA9IGhlYWRlcnNbVVNFUl9BR0VOVF0gPyBgJHtoZWFkZXJzW1VTRVJfQUdFTlRdfSAke25vcm1hbFVBVmFsdWV9YCA6IG5vcm1hbFVBVmFsdWU7XG4gIH1cblxuICByZXR1cm4gbmV4dCh7XG4gICAgLi4uYXJncyxcbiAgICByZXF1ZXN0LFxuICB9KTtcbn07XG5cbi8qKlxuICogRXNjYXBlIHRoZSBlYWNoIHBhaXIgYWNjb3JkaW5nIHRvIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM1MjM0IGFuZCBqb2luIHRoZSBwYWlyIHdpdGggcGF0dGVybiBgbmFtZS92ZXJzaW9uYC5cbiAqIFVzZXIgYWdlbnQgbmFtZSBtYXkgaW5jbHVkZSBwcmVmaXggbGlrZSBgbWQvYCwgYGFwaS9gLCBgb3MvYCBldGMuLCB3ZSBzaG91bGQgbm90IGVzY2FwZSB0aGUgYC9gIGFmdGVyIHRoZSBwcmVmaXguXG4gKiBAcHJpdmF0ZVxuICovXG5jb25zdCBlc2NhcGVVc2VyQWdlbnQgPSAoW25hbWUsIHZlcnNpb25dOiBVc2VyQWdlbnRQYWlyKTogc3RyaW5nID0+IHtcbiAgY29uc3QgcHJlZml4U2VwYXJhdG9ySW5kZXggPSBuYW1lLmluZGV4T2YoXCIvXCIpO1xuICBjb25zdCBwcmVmaXggPSBuYW1lLnN1YnN0cmluZygwLCBwcmVmaXhTZXBhcmF0b3JJbmRleCk7IC8vIElmIG5vIHByZWZpeCwgcHJlZml4IGlzIGp1c3QgXCJcIlxuICBsZXQgdWFOYW1lID0gbmFtZS5zdWJzdHJpbmcocHJlZml4U2VwYXJhdG9ySW5kZXggKyAxKTtcbiAgaWYgKHByZWZpeCA9PT0gXCJhcGlcIikge1xuICAgIHVhTmFtZSA9IHVhTmFtZS50b0xvd2VyQ2FzZSgpO1xuICB9XG4gIHJldHVybiBbcHJlZml4LCB1YU5hbWUsIHZlcnNpb25dXG4gICAgLmZpbHRlcigoaXRlbSkgPT4gaXRlbSAmJiBpdGVtLmxlbmd0aCA+IDApXG4gICAgLm1hcCgoaXRlbSkgPT4gaXRlbT8ucmVwbGFjZShVQV9FU0NBUEVfUkVHRVgsIFwiX1wiKSlcbiAgICAuam9pbihcIi9cIik7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0VXNlckFnZW50TWlkZGxld2FyZU9wdGlvbnM6IEJ1aWxkSGFuZGxlck9wdGlvbnMgJiBBYnNvbHV0ZUxvY2F0aW9uID0ge1xuICBuYW1lOiBcImdldFVzZXJBZ2VudE1pZGRsZXdhcmVcIixcbiAgc3RlcDogXCJidWlsZFwiLFxuICBwcmlvcml0eTogXCJsb3dcIixcbiAgdGFnczogW1wiU0VUX1VTRVJfQUdFTlRcIiwgXCJVU0VSX0FHRU5UXCJdLFxuICBvdmVycmlkZTogdHJ1ZSxcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRVc2VyQWdlbnRQbHVnaW4gPSAoY29uZmlnOiBVc2VyQWdlbnRSZXNvbHZlZENvbmZpZyk6IFBsdWdnYWJsZTxhbnksIGFueT4gPT4gKHtcbiAgYXBwbHlUb1N0YWNrOiAoY2xpZW50U3RhY2spID0+IHtcbiAgICBjbGllbnRTdGFjay5hZGQodXNlckFnZW50TWlkZGxld2FyZShjb25maWcpLCBnZXRVc2VyQWdlbnRNaWRkbGV3YXJlT3B0aW9ucyk7XG4gIH0sXG59KTtcbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-user-agent/dist/es/user-agent-middleware.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/middleware-user-agent/node_modules/tslib/tslib.es6.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-user-agent/node_modules/tslib/tslib.es6.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/middleware-user-agent/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/node-config-provider/dist/es/configLoader.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@aws-sdk/node-config-provider/dist/es/configLoader.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadConfig: () => (/* binding */ loadConfig)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/property-provider */ \"(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/index.js\");\n/* harmony import */ var _fromEnv__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fromEnv */ \"(ssr)/./node_modules/@aws-sdk/node-config-provider/dist/es/fromEnv.js\");\n/* harmony import */ var _fromSharedConfigFiles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fromSharedConfigFiles */ \"(ssr)/./node_modules/@aws-sdk/node-config-provider/dist/es/fromSharedConfigFiles.js\");\n/* harmony import */ var _fromStatic__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fromStatic */ \"(ssr)/./node_modules/@aws-sdk/node-config-provider/dist/es/fromStatic.js\");\n\n\n\n\nvar loadConfig = function (_a, configuration) {\n    var environmentVariableSelector = _a.environmentVariableSelector, configFileSelector = _a.configFileSelector, defaultValue = _a.default;\n    if (configuration === void 0) { configuration = {}; }\n    return (0,_aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__.memoize)((0,_aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__.chain)((0,_fromEnv__WEBPACK_IMPORTED_MODULE_1__.fromEnv)(environmentVariableSelector), (0,_fromSharedConfigFiles__WEBPACK_IMPORTED_MODULE_2__.fromSharedConfigFiles)(configFileSelector, configuration), (0,_fromStatic__WEBPACK_IMPORTED_MODULE_3__.fromStatic)(defaultValue)));\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnTG9hZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbmZpZ0xvYWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRzVELE9BQU8sRUFBRSxPQUFPLEVBQWlCLE1BQU0sV0FBVyxDQUFDO0FBQ25ELE9BQU8sRUFBRSxxQkFBcUIsRUFBc0MsTUFBTSx5QkFBeUIsQ0FBQztBQUNwRyxPQUFPLEVBQUUsVUFBVSxFQUFvQixNQUFNLGNBQWMsQ0FBQztBQXFCNUQsTUFBTSxDQUFDLElBQU0sVUFBVSxHQUFHLFVBQ3hCLEVBQW9HLEVBQ3BHLGFBQXNDO1FBRHBDLDJCQUEyQixpQ0FBQSxFQUFFLGtCQUFrQix3QkFBQSxFQUFXLFlBQVksYUFBQTtJQUN4RSw4QkFBQSxFQUFBLGtCQUFzQztJQUV0QyxPQUFBLE9BQU8sQ0FDTCxLQUFLLENBQ0gsT0FBTyxDQUFDLDJCQUEyQixDQUFDLEVBQ3BDLHFCQUFxQixDQUFDLGtCQUFrQixFQUFFLGFBQWEsQ0FBQyxFQUN4RCxVQUFVLENBQUMsWUFBWSxDQUFDLENBQ3pCLENBQ0Y7QUFORCxDQU1DLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjaGFpbiwgbWVtb2l6ZSB9IGZyb20gXCJAYXdzLXNkay9wcm9wZXJ0eS1wcm92aWRlclwiO1xuaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuaW1wb3J0IHsgZnJvbUVudiwgR2V0dGVyRnJvbUVudiB9IGZyb20gXCIuL2Zyb21FbnZcIjtcbmltcG9ydCB7IGZyb21TaGFyZWRDb25maWdGaWxlcywgR2V0dGVyRnJvbUNvbmZpZywgU2hhcmVkQ29uZmlnSW5pdCB9IGZyb20gXCIuL2Zyb21TaGFyZWRDb25maWdGaWxlc1wiO1xuaW1wb3J0IHsgZnJvbVN0YXRpYywgRnJvbVN0YXRpY0NvbmZpZyB9IGZyb20gXCIuL2Zyb21TdGF0aWNcIjtcblxuZXhwb3J0IHR5cGUgTG9jYWxDb25maWdPcHRpb25zID0gU2hhcmVkQ29uZmlnSW5pdDtcblxuZXhwb3J0IGludGVyZmFjZSBMb2FkZWRDb25maWdTZWxlY3RvcnM8VD4ge1xuICAvKipcbiAgICogQSBnZXR0ZXIgZnVuY3Rpb24gZ2V0dGluZyB0aGUgY29uZmlnIHZhbHVlcyBmcm9tIGFsbCB0aGUgZW52aXJvbm1lbnRcbiAgICogdmFyaWFibGVzLlxuICAgKi9cbiAgZW52aXJvbm1lbnRWYXJpYWJsZVNlbGVjdG9yOiBHZXR0ZXJGcm9tRW52PFQ+O1xuICAvKipcbiAgICogQSBnZXR0ZXIgZnVuY3Rpb24gZ2V0dGluZyBjb25maWcgdmFsdWVzIGFzc29jaWF0ZWQgd2l0aCB0aGUgaW5mZXJyZWRcbiAgICogcHJvZmlsZSBmcm9tIHNoYXJlZCBJTkkgZmlsZXNcbiAgICovXG4gIGNvbmZpZ0ZpbGVTZWxlY3RvcjogR2V0dGVyRnJvbUNvbmZpZzxUPjtcbiAgLyoqXG4gICAqIERlZmF1bHQgdmFsdWUgb3IgZ2V0dGVyXG4gICAqL1xuICBkZWZhdWx0OiBGcm9tU3RhdGljQ29uZmlnPFQ+O1xufVxuXG5leHBvcnQgY29uc3QgbG9hZENvbmZpZyA9IDxUID0gc3RyaW5nPihcbiAgeyBlbnZpcm9ubWVudFZhcmlhYmxlU2VsZWN0b3IsIGNvbmZpZ0ZpbGVTZWxlY3RvciwgZGVmYXVsdDogZGVmYXVsdFZhbHVlIH06IExvYWRlZENvbmZpZ1NlbGVjdG9yczxUPixcbiAgY29uZmlndXJhdGlvbjogTG9jYWxDb25maWdPcHRpb25zID0ge31cbik6IFByb3ZpZGVyPFQ+ID0+XG4gIG1lbW9pemUoXG4gICAgY2hhaW4oXG4gICAgICBmcm9tRW52KGVudmlyb25tZW50VmFyaWFibGVTZWxlY3RvciksXG4gICAgICBmcm9tU2hhcmVkQ29uZmlnRmlsZXMoY29uZmlnRmlsZVNlbGVjdG9yLCBjb25maWd1cmF0aW9uKSxcbiAgICAgIGZyb21TdGF0aWMoZGVmYXVsdFZhbHVlKVxuICAgIClcbiAgKTtcbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbm9kZS1jb25maWctcHJvdmlkZXIvZGlzdC9lcy9jb25maWdMb2FkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNEQ7QUFDeEI7QUFDNEI7QUFDdEI7QUFDbkM7QUFDUDtBQUNBLG9DQUFvQztBQUNwQyxXQUFXLG1FQUFPLENBQUMsaUVBQUssQ0FBQyxpREFBTywrQkFBK0IsNkVBQXFCLHFDQUFxQyx1REFBVTtBQUNuSTtBQUNBLDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbm9kZS1jb25maWctcHJvdmlkZXIvZGlzdC9lcy9jb25maWdMb2FkZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2hhaW4sIG1lbW9pemUgfSBmcm9tIFwiQGF3cy1zZGsvcHJvcGVydHktcHJvdmlkZXJcIjtcbmltcG9ydCB7IGZyb21FbnYgfSBmcm9tIFwiLi9mcm9tRW52XCI7XG5pbXBvcnQgeyBmcm9tU2hhcmVkQ29uZmlnRmlsZXMgfSBmcm9tIFwiLi9mcm9tU2hhcmVkQ29uZmlnRmlsZXNcIjtcbmltcG9ydCB7IGZyb21TdGF0aWMgfSBmcm9tIFwiLi9mcm9tU3RhdGljXCI7XG5leHBvcnQgdmFyIGxvYWRDb25maWcgPSBmdW5jdGlvbiAoX2EsIGNvbmZpZ3VyYXRpb24pIHtcbiAgICB2YXIgZW52aXJvbm1lbnRWYXJpYWJsZVNlbGVjdG9yID0gX2EuZW52aXJvbm1lbnRWYXJpYWJsZVNlbGVjdG9yLCBjb25maWdGaWxlU2VsZWN0b3IgPSBfYS5jb25maWdGaWxlU2VsZWN0b3IsIGRlZmF1bHRWYWx1ZSA9IF9hLmRlZmF1bHQ7XG4gICAgaWYgKGNvbmZpZ3VyYXRpb24gPT09IHZvaWQgMCkgeyBjb25maWd1cmF0aW9uID0ge307IH1cbiAgICByZXR1cm4gbWVtb2l6ZShjaGFpbihmcm9tRW52KGVudmlyb25tZW50VmFyaWFibGVTZWxlY3RvciksIGZyb21TaGFyZWRDb25maWdGaWxlcyhjb25maWdGaWxlU2VsZWN0b3IsIGNvbmZpZ3VyYXRpb24pLCBmcm9tU3RhdGljKGRlZmF1bHRWYWx1ZSkpKTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lZMjl1Wm1sblRHOWhaR1Z5TG1weklpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhNaU9sc2lMaTR2TGk0dmMzSmpMMk52Ym1acFoweHZZV1JsY2k1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hQUVVGUExFVkJRVVVzUzBGQlN5eEZRVUZGTEU5QlFVOHNSVUZCUlN4TlFVRk5MRFJDUVVFMFFpeERRVUZETzBGQlJ6VkVMRTlCUVU4c1JVRkJSU3hQUVVGUExFVkJRV2xDTEUxQlFVMHNWMEZCVnl4RFFVRkRPMEZCUTI1RUxFOUJRVThzUlVGQlJTeHhRa0ZCY1VJc1JVRkJjME1zVFVGQlRTeDVRa0ZCZVVJc1EwRkJRenRCUVVOd1J5eFBRVUZQTEVWQlFVVXNWVUZCVlN4RlFVRnZRaXhOUVVGTkxHTkJRV01zUTBGQlF6dEJRWEZDTlVRc1RVRkJUU3hEUVVGRExFbEJRVTBzVlVGQlZTeEhRVUZITEZWQlEzaENMRVZCUVc5SExFVkJRM0JITEdGQlFYTkRPMUZCUkhCRExESkNRVUV5UWl4cFEwRkJRU3hGUVVGRkxHdENRVUZyUWl4M1FrRkJRU3hGUVVGWExGbEJRVmtzWVVGQlFUdEpRVU40UlN3NFFrRkJRU3hGUVVGQkxHdENRVUZ6UXp0SlFVVjBReXhQUVVGQkxFOUJRVThzUTBGRFRDeExRVUZMTEVOQlEwZ3NUMEZCVHl4RFFVRkRMREpDUVVFeVFpeERRVUZETEVWQlEzQkRMSEZDUVVGeFFpeERRVUZETEd0Q1FVRnJRaXhGUVVGRkxHRkJRV0VzUTBGQlF5eEZRVU40UkN4VlFVRlZMRU5CUVVNc1dVRkJXU3hEUVVGRExFTkJRM3BDTEVOQlEwWTdRVUZPUkN4RFFVMURMRU5CUVVNaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SnBiWEJ2Y25RZ2V5QmphR0ZwYml3Z2JXVnRiMmw2WlNCOUlHWnliMjBnWENKQVlYZHpMWE5rYXk5d2NtOXdaWEowZVMxd2NtOTJhV1JsY2x3aU8xeHVhVzF3YjNKMElIc2dVSEp2ZG1sa1pYSWdmU0JtY205dElGd2lRR0YzY3kxelpHc3ZkSGx3WlhOY0lqdGNibHh1YVcxd2IzSjBJSHNnWm5KdmJVVnVkaXdnUjJWMGRHVnlSbkp2YlVWdWRpQjlJR1p5YjIwZ1hDSXVMMlp5YjIxRmJuWmNJanRjYm1sdGNHOXlkQ0I3SUdaeWIyMVRhR0Z5WldSRGIyNW1hV2RHYVd4bGN5d2dSMlYwZEdWeVJuSnZiVU52Ym1acFp5d2dVMmhoY21Wa1EyOXVabWxuU1c1cGRDQjlJR1p5YjIwZ1hDSXVMMlp5YjIxVGFHRnlaV1JEYjI1bWFXZEdhV3hsYzF3aU8xeHVhVzF3YjNKMElIc2dabkp2YlZOMFlYUnBZeXdnUm5KdmJWTjBZWFJwWTBOdmJtWnBaeUI5SUdaeWIyMGdYQ0l1TDJaeWIyMVRkR0YwYVdOY0lqdGNibHh1Wlhod2IzSjBJSFI1Y0dVZ1RHOWpZV3hEYjI1bWFXZFBjSFJwYjI1eklEMGdVMmhoY21Wa1EyOXVabWxuU1c1cGREdGNibHh1Wlhod2IzSjBJR2x1ZEdWeVptRmpaU0JNYjJGa1pXUkRiMjVtYVdkVFpXeGxZM1J2Y25NOFZENGdlMXh1SUNBdktpcGNiaUFnSUNvZ1FTQm5aWFIwWlhJZ1puVnVZM1JwYjI0Z1oyVjBkR2x1WnlCMGFHVWdZMjl1Wm1sbklIWmhiSFZsY3lCbWNtOXRJR0ZzYkNCMGFHVWdaVzUyYVhKdmJtMWxiblJjYmlBZ0lDb2dkbUZ5YVdGaWJHVnpMbHh1SUNBZ0tpOWNiaUFnWlc1MmFYSnZibTFsYm5SV1lYSnBZV0pzWlZObGJHVmpkRzl5T2lCSFpYUjBaWEpHY205dFJXNTJQRlErTzF4dUlDQXZLaXBjYmlBZ0lDb2dRU0JuWlhSMFpYSWdablZ1WTNScGIyNGdaMlYwZEdsdVp5QmpiMjVtYVdjZ2RtRnNkV1Z6SUdGemMyOWphV0YwWldRZ2QybDBhQ0IwYUdVZ2FXNW1aWEp5WldSY2JpQWdJQ29nY0hKdlptbHNaU0JtY205dElITm9ZWEpsWkNCSlRra2dabWxzWlhOY2JpQWdJQ292WEc0Z0lHTnZibVpwWjBacGJHVlRaV3hsWTNSdmNqb2dSMlYwZEdWeVJuSnZiVU52Ym1acFp6eFVQanRjYmlBZ0x5b3FYRzRnSUNBcUlFUmxabUYxYkhRZ2RtRnNkV1VnYjNJZ1oyVjBkR1Z5WEc0Z0lDQXFMMXh1SUNCa1pXWmhkV3gwT2lCR2NtOXRVM1JoZEdsalEyOXVabWxuUEZRK08xeHVmVnh1WEc1bGVIQnZjblFnWTI5dWMzUWdiRzloWkVOdmJtWnBaeUE5SUR4VUlEMGdjM1J5YVc1blBpaGNiaUFnZXlCbGJuWnBjbTl1YldWdWRGWmhjbWxoWW14bFUyVnNaV04wYjNJc0lHTnZibVpwWjBacGJHVlRaV3hsWTNSdmNpd2daR1ZtWVhWc2REb2daR1ZtWVhWc2RGWmhiSFZsSUgwNklFeHZZV1JsWkVOdmJtWnBaMU5sYkdWamRHOXljenhVUGl4Y2JpQWdZMjl1Wm1sbmRYSmhkR2x2YmpvZ1RHOWpZV3hEYjI1bWFXZFBjSFJwYjI1eklEMGdlMzFjYmlrNklGQnliM1pwWkdWeVBGUStJRDArWEc0Z0lHMWxiVzlwZW1Vb1hHNGdJQ0FnWTJoaGFXNG9YRzRnSUNBZ0lDQm1jbTl0Ulc1MktHVnVkbWx5YjI1dFpXNTBWbUZ5YVdGaWJHVlRaV3hsWTNSdmNpa3NYRzRnSUNBZ0lDQm1jbTl0VTJoaGNtVmtRMjl1Wm1sblJtbHNaWE1vWTI5dVptbG5SbWxzWlZObGJHVmpkRzl5TENCamIyNW1hV2QxY21GMGFXOXVLU3hjYmlBZ0lDQWdJR1p5YjIxVGRHRjBhV01vWkdWbVlYVnNkRlpoYkhWbEtWeHVJQ0FnSUNsY2JpQWdLVHRjYmlKZGZRPT0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/node-config-provider/dist/es/configLoader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/node-config-provider/dist/es/fromEnv.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@aws-sdk/node-config-provider/dist/es/fromEnv.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromEnv: () => (/* binding */ fromEnv)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/node-config-provider/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/property-provider */ \"(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/index.js\");\n\n\n/**\n * Get config value given the environment variable name or getter from\n * environment variable.\n */\nvar fromEnv = function (envVarSelector) { return function () { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {\n    var config;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        try {\n            config = envVarSelector(process.env);\n            if (config === undefined) {\n                throw new Error();\n            }\n            return [2 /*return*/, config];\n        }\n        catch (e) {\n            throw new _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__.ProviderError(e.message || \"Cannot load config from environment variables with getter: \" + envVarSelector);\n        }\n        return [2 /*return*/];\n    });\n}); }; };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbUVudi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9mcm9tRW52LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFLM0Q7OztHQUdHO0FBQ0gsTUFBTSxDQUFDLElBQU0sT0FBTyxHQUFHLFVBQWEsY0FBZ0MsSUFBa0IsT0FBQTs7O1FBQ3BGLElBQUk7WUFDSSxNQUFNLEdBQUcsY0FBYyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUMzQyxJQUFJLE1BQU0sS0FBSyxTQUFTLEVBQUU7Z0JBQ3hCLE1BQU0sSUFBSSxLQUFLLEVBQUUsQ0FBQzthQUNuQjtZQUNELHNCQUFPLE1BQVcsRUFBQztTQUNwQjtRQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ1YsTUFBTSxJQUFJLGFBQWEsQ0FDckIsQ0FBQyxDQUFDLE9BQU8sSUFBSSxnRUFBOEQsY0FBZ0IsQ0FDNUYsQ0FBQztTQUNIOzs7S0FDRixFQVpxRixDQVlyRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvdmlkZXJFcnJvciB9IGZyb20gXCJAYXdzLXNkay9wcm9wZXJ0eS1wcm92aWRlclwiO1xuaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuZXhwb3J0IHR5cGUgR2V0dGVyRnJvbUVudjxUPiA9IChlbnY6IE5vZGVKUy5Qcm9jZXNzRW52KSA9PiBUIHwgdW5kZWZpbmVkO1xuXG4vKipcbiAqIEdldCBjb25maWcgdmFsdWUgZ2l2ZW4gdGhlIGVudmlyb25tZW50IHZhcmlhYmxlIG5hbWUgb3IgZ2V0dGVyIGZyb21cbiAqIGVudmlyb25tZW50IHZhcmlhYmxlLlxuICovXG5leHBvcnQgY29uc3QgZnJvbUVudiA9IDxUID0gc3RyaW5nPihlbnZWYXJTZWxlY3RvcjogR2V0dGVyRnJvbUVudjxUPik6IFByb3ZpZGVyPFQ+ID0+IGFzeW5jICgpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBjb25maWcgPSBlbnZWYXJTZWxlY3Rvcihwcm9jZXNzLmVudik7XG4gICAgaWYgKGNvbmZpZyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbmZpZyBhcyBUO1xuICB9IGNhdGNoIChlKSB7XG4gICAgdGhyb3cgbmV3IFByb3ZpZGVyRXJyb3IoXG4gICAgICBlLm1lc3NhZ2UgfHwgYENhbm5vdCBsb2FkIGNvbmZpZyBmcm9tIGVudmlyb25tZW50IHZhcmlhYmxlcyB3aXRoIGdldHRlcjogJHtlbnZWYXJTZWxlY3Rvcn1gXG4gICAgKTtcbiAgfVxufTtcbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbm9kZS1jb25maWctcHJvdmlkZXIvZGlzdC9lcy9mcm9tRW52LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUErQztBQUNZO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ08sMENBQTBDLHFCQUFxQixPQUFPLGdEQUFTO0FBQ3RGO0FBQ0EsV0FBVyxrREFBVztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHFFQUFhO0FBQ25DO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsQ0FBQztBQUNELDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbm9kZS1jb25maWctcHJvdmlkZXIvZGlzdC9lcy9mcm9tRW52LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fYXdhaXRlciwgX19nZW5lcmF0b3IgfSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IFByb3ZpZGVyRXJyb3IgfSBmcm9tIFwiQGF3cy1zZGsvcHJvcGVydHktcHJvdmlkZXJcIjtcbi8qKlxuICogR2V0IGNvbmZpZyB2YWx1ZSBnaXZlbiB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGUgbmFtZSBvciBnZXR0ZXIgZnJvbVxuICogZW52aXJvbm1lbnQgdmFyaWFibGUuXG4gKi9cbmV4cG9ydCB2YXIgZnJvbUVudiA9IGZ1bmN0aW9uIChlbnZWYXJTZWxlY3RvcikgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyByZXR1cm4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgY29uZmlnO1xuICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbmZpZyA9IGVudlZhclNlbGVjdG9yKHByb2Nlc3MuZW52KTtcbiAgICAgICAgICAgIGlmIChjb25maWcgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIGNvbmZpZ107XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBQcm92aWRlckVycm9yKGUubWVzc2FnZSB8fCBcIkNhbm5vdCBsb2FkIGNvbmZpZyBmcm9tIGVudmlyb25tZW50IHZhcmlhYmxlcyB3aXRoIGdldHRlcjogXCIgKyBlbnZWYXJTZWxlY3Rvcik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi9dO1xuICAgIH0pO1xufSk7IH07IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2labkp2YlVWdWRpNXFjeUlzSW5OdmRYSmpaVkp2YjNRaU9pSWlMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMM055WXk5bWNtOXRSVzUyTG5SeklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lJN1FVRkJRU3hQUVVGUExFVkJRVVVzWVVGQllTeEZRVUZGTEUxQlFVMHNORUpCUVRSQ0xFTkJRVU03UVVGTE0wUTdPenRIUVVkSE8wRkJRMGdzVFVGQlRTeERRVUZETEVsQlFVMHNUMEZCVHl4SFFVRkhMRlZCUVdFc1kwRkJaME1zU1VGQmEwSXNUMEZCUVRzN08xRkJRM0JHTEVsQlFVazdXVUZEU1N4TlFVRk5MRWRCUVVjc1kwRkJZeXhEUVVGRExFOUJRVThzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXp0WlFVTXpReXhKUVVGSkxFMUJRVTBzUzBGQlN5eFRRVUZUTEVWQlFVVTdaMEpCUTNoQ0xFMUJRVTBzU1VGQlNTeExRVUZMTEVWQlFVVXNRMEZCUXp0aFFVTnVRanRaUVVORUxITkNRVUZQTEUxQlFWY3NSVUZCUXp0VFFVTndRanRSUVVGRExFOUJRVThzUTBGQlF5eEZRVUZGTzFsQlExWXNUVUZCVFN4SlFVRkpMR0ZCUVdFc1EwRkRja0lzUTBGQlF5eERRVUZETEU5QlFVOHNTVUZCU1N4blJVRkJPRVFzWTBGQlowSXNRMEZETlVZc1EwRkJRenRUUVVOSU96czdTMEZEUml4RlFWcHhSaXhEUVZseVJpeERRVUZESWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaWFXMXdiM0owSUhzZ1VISnZkbWxrWlhKRmNuSnZjaUI5SUdaeWIyMGdYQ0pBWVhkekxYTmtheTl3Y205d1pYSjBlUzF3Y205MmFXUmxjbHdpTzF4dWFXMXdiM0owSUhzZ1VISnZkbWxrWlhJZ2ZTQm1jbTl0SUZ3aVFHRjNjeTF6WkdzdmRIbHdaWE5jSWp0Y2JseHVaWGh3YjNKMElIUjVjR1VnUjJWMGRHVnlSbkp2YlVWdWRqeFVQaUE5SUNobGJuWTZJRTV2WkdWS1V5NVFjbTlqWlhOelJXNTJLU0E5UGlCVUlId2dkVzVrWldacGJtVmtPMXh1WEc0dktpcGNiaUFxSUVkbGRDQmpiMjVtYVdjZ2RtRnNkV1VnWjJsMlpXNGdkR2hsSUdWdWRtbHliMjV0Wlc1MElIWmhjbWxoWW14bElHNWhiV1VnYjNJZ1oyVjBkR1Z5SUdaeWIyMWNiaUFxSUdWdWRtbHliMjV0Wlc1MElIWmhjbWxoWW14bExseHVJQ292WEc1bGVIQnZjblFnWTI5dWMzUWdabkp2YlVWdWRpQTlJRHhVSUQwZ2MzUnlhVzVuUGlobGJuWldZWEpUWld4bFkzUnZjam9nUjJWMGRHVnlSbkp2YlVWdWRqeFVQaWs2SUZCeWIzWnBaR1Z5UEZRK0lEMCtJR0Z6ZVc1aklDZ3BJRDArSUh0Y2JpQWdkSEo1SUh0Y2JpQWdJQ0JqYjI1emRDQmpiMjVtYVdjZ1BTQmxiblpXWVhKVFpXeGxZM1J2Y2lod2NtOWpaWE56TG1WdWRpazdYRzRnSUNBZ2FXWWdLR052Ym1acFp5QTlQVDBnZFc1a1pXWnBibVZrS1NCN1hHNGdJQ0FnSUNCMGFISnZkeUJ1WlhjZ1JYSnliM0lvS1R0Y2JpQWdJQ0I5WEc0Z0lDQWdjbVYwZFhKdUlHTnZibVpwWnlCaGN5QlVPMXh1SUNCOUlHTmhkR05vSUNobEtTQjdYRzRnSUNBZ2RHaHliM2NnYm1WM0lGQnliM1pwWkdWeVJYSnliM0lvWEc0Z0lDQWdJQ0JsTG0xbGMzTmhaMlVnZkh3Z1lFTmhibTV2ZENCc2IyRmtJR052Ym1acFp5Qm1jbTl0SUdWdWRtbHliMjV0Wlc1MElIWmhjbWxoWW14bGN5QjNhWFJvSUdkbGRIUmxjam9nSkh0bGJuWldZWEpUWld4bFkzUnZjbjFnWEc0Z0lDQWdLVHRjYmlBZ2ZWeHVmVHRjYmlKZGZRPT0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/node-config-provider/dist/es/fromEnv.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/node-config-provider/dist/es/fromSharedConfigFiles.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/node-config-provider/dist/es/fromSharedConfigFiles.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ENV_PROFILE: () => (/* binding */ ENV_PROFILE),\n/* harmony export */   fromSharedConfigFiles: () => (/* binding */ fromSharedConfigFiles)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/node-config-provider/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/property-provider */ \"(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_shared_ini_file_loader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/shared-ini-file-loader */ \"(ssr)/./node_modules/@aws-sdk/shared-ini-file-loader/dist/es/index.js\");\n\n\n\nvar DEFAULT_PROFILE = \"default\";\nvar ENV_PROFILE = \"AWS_PROFILE\";\n/**\n * Get config value from the shared config files with inferred profile name.\n */\nvar fromSharedConfigFiles = function (configSelector, _a) {\n    if (_a === void 0) { _a = {}; }\n    var _b = _a.preferredFile, preferredFile = _b === void 0 ? \"config\" : _b, init = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__rest)(_a, [\"preferredFile\"]);\n    return function () { return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(void 0, void 0, void 0, function () {\n        var _a, loadedConfig, _b, profile, _c, configFile, credentialsFile, profileFromCredentials, profileFromConfig, mergedProfile, configValue;\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__generator)(this, function (_d) {\n            switch (_d.label) {\n                case 0:\n                    _a = init.loadedConfig, loadedConfig = _a === void 0 ? (0,_aws_sdk_shared_ini_file_loader__WEBPACK_IMPORTED_MODULE_1__.loadSharedConfigFiles)(init) : _a, _b = init.profile, profile = _b === void 0 ? process.env[ENV_PROFILE] || DEFAULT_PROFILE : _b;\n                    return [4 /*yield*/, loadedConfig];\n                case 1:\n                    _c = _d.sent(), configFile = _c.configFile, credentialsFile = _c.credentialsFile;\n                    profileFromCredentials = credentialsFile[profile] || {};\n                    profileFromConfig = configFile[profile] || {};\n                    mergedProfile = preferredFile === \"config\"\n                        ? (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, profileFromCredentials), profileFromConfig) : (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, profileFromConfig), profileFromCredentials);\n                    try {\n                        configValue = configSelector(mergedProfile);\n                        if (configValue === undefined) {\n                            throw new Error();\n                        }\n                        return [2 /*return*/, configValue];\n                    }\n                    catch (e) {\n                        throw new _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__.ProviderError(e.message || \"Cannot load config for profile \" + profile + \" in SDK configuration files with getter: \" + configSelector);\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    }); };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbVNoYXJlZENvbmZpZ0ZpbGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2Zyb21TaGFyZWRDb25maWdGaWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzNELE9BQU8sRUFDTCxxQkFBcUIsR0FJdEIsTUFBTSxpQ0FBaUMsQ0FBQztBQUd6QyxJQUFNLGVBQWUsR0FBRyxTQUFTLENBQUM7QUFDbEMsTUFBTSxDQUFDLElBQU0sV0FBVyxHQUFHLGFBQWEsQ0FBQztBQTBCekM7O0dBRUc7QUFDSCxNQUFNLENBQUMsSUFBTSxxQkFBcUIsR0FBRyxVQUNuQyxjQUFtQyxFQUNuQyxFQUE0RDtJQUE1RCxtQkFBQSxFQUFBLE9BQTREO0lBQTFELElBQUEscUJBQXdCLEVBQXhCLGFBQWEsbUJBQUcsUUFBUSxLQUFBLEVBQUssSUFBSSxjQUFuQyxpQkFBcUMsQ0FBRjtJQUNuQixPQUFBOzs7OztvQkFDUixLQUFzRyxJQUFJLGFBQWhFLEVBQTFDLFlBQVksbUJBQUcscUJBQXFCLENBQUMsSUFBSSxDQUFDLEtBQUEsRUFBRSxLQUEwRCxJQUFJLFFBQVQsRUFBckQsT0FBTyxtQkFBRyxPQUFPLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxJQUFJLGVBQWUsS0FBQSxDQUFVO29CQUUzRSxxQkFBTSxZQUFZLEVBQUE7O29CQUFwRCxLQUFrQyxTQUFrQixFQUFsRCxVQUFVLGdCQUFBLEVBQUUsZUFBZSxxQkFBQTtvQkFFN0Isc0JBQXNCLEdBQUcsZUFBZSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztvQkFDeEQsaUJBQWlCLEdBQUcsVUFBVSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztvQkFDOUMsYUFBYSxHQUNqQixhQUFhLEtBQUssUUFBUTt3QkFDeEIsQ0FBQyx1QkFBTSxzQkFBc0IsR0FBSyxpQkFBaUIsRUFDbkQsQ0FBQyx1QkFBTSxpQkFBaUIsR0FBSyxzQkFBc0IsQ0FBRSxDQUFDO29CQUUxRCxJQUFJO3dCQUNJLFdBQVcsR0FBRyxjQUFjLENBQUMsYUFBYSxDQUFDLENBQUM7d0JBQ2xELElBQUksV0FBVyxLQUFLLFNBQVMsRUFBRTs0QkFDN0IsTUFBTSxJQUFJLEtBQUssRUFBRSxDQUFDO3lCQUNuQjt3QkFDRCxzQkFBTyxXQUFXLEVBQUM7cUJBQ3BCO29CQUFDLE9BQU8sQ0FBQyxFQUFFO3dCQUNWLE1BQU0sSUFBSSxhQUFhLENBQ3JCLENBQUMsQ0FBQyxPQUFPLElBQUksb0NBQWtDLE9BQU8saURBQTRDLGNBQWdCLENBQ25ILENBQUM7cUJBQ0g7Ozs7U0FDRixDQUFBO0NBQUEsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByb3ZpZGVyRXJyb3IgfSBmcm9tIFwiQGF3cy1zZGsvcHJvcGVydHktcHJvdmlkZXJcIjtcbmltcG9ydCB7XG4gIGxvYWRTaGFyZWRDb25maWdGaWxlcyxcbiAgUHJvZmlsZSxcbiAgU2hhcmVkQ29uZmlnRmlsZXMsXG4gIFNoYXJlZENvbmZpZ0luaXQgYXMgQmFzZVNoYXJlZENvbmZpZ0luaXQsXG59IGZyb20gXCJAYXdzLXNkay9zaGFyZWQtaW5pLWZpbGUtbG9hZGVyXCI7XG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5jb25zdCBERUZBVUxUX1BST0ZJTEUgPSBcImRlZmF1bHRcIjtcbmV4cG9ydCBjb25zdCBFTlZfUFJPRklMRSA9IFwiQVdTX1BST0ZJTEVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTaGFyZWRDb25maWdJbml0IGV4dGVuZHMgQmFzZVNoYXJlZENvbmZpZ0luaXQge1xuICAvKipcbiAgICogVGhlIGNvbmZpZ3VyYXRpb24gcHJvZmlsZSB0byB1c2UuXG4gICAqL1xuICBwcm9maWxlPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgcHJlZmVycmVkIHNoYXJlZCBpbmkgZmlsZSB0byBsb2FkIHRoZSBjb25maWcuIFwiY29uZmlnXCIgb3B0aW9uIHJlZmVycyB0b1xuICAgKiB0aGUgc2hhcmVkIGNvbmZpZyBmaWxlKGRlZmF1bHRzIHRvIGB+Ly5hd3MvY29uZmlnYCkuIFwiY3JlZGVudGlhbHNcIiBvcHRpb25cbiAgICogcmVmZXJzIHRvIHRoZSBzaGFyZWQgY3JlZGVudGlhbHMgZmlsZShkZWZhdWx0cyB0byBgfi8uYXdzL2NyZWRlbnRpYWxzYClcbiAgICovXG4gIHByZWZlcnJlZEZpbGU/OiBcImNvbmZpZ1wiIHwgXCJjcmVkZW50aWFsc1wiO1xuXG4gIC8qKlxuICAgKiBBIHByb21pc2UgdGhhdCB3aWxsIGJlIHJlc29sdmVkIHdpdGggbG9hZGVkIGFuZCBwYXJzZWQgY3JlZGVudGlhbHMgZmlsZXMuXG4gICAqIFVzZWQgdG8gYXZvaWQgbG9hZGluZyBzaGFyZWQgY29uZmlnIGZpbGVzIG11bHRpcGxlIHRpbWVzLlxuICAgKlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIGxvYWRlZENvbmZpZz86IFByb21pc2U8U2hhcmVkQ29uZmlnRmlsZXM+O1xufVxuXG5leHBvcnQgdHlwZSBHZXR0ZXJGcm9tQ29uZmlnPFQ+ID0gKHByb2ZpbGU6IFByb2ZpbGUpID0+IFQgfCB1bmRlZmluZWQ7XG5cbi8qKlxuICogR2V0IGNvbmZpZyB2YWx1ZSBmcm9tIHRoZSBzaGFyZWQgY29uZmlnIGZpbGVzIHdpdGggaW5mZXJyZWQgcHJvZmlsZSBuYW1lLlxuICovXG5leHBvcnQgY29uc3QgZnJvbVNoYXJlZENvbmZpZ0ZpbGVzID0gPFQgPSBzdHJpbmc+KFxuICBjb25maWdTZWxlY3RvcjogR2V0dGVyRnJvbUNvbmZpZzxUPixcbiAgeyBwcmVmZXJyZWRGaWxlID0gXCJjb25maWdcIiwgLi4uaW5pdCB9OiBTaGFyZWRDb25maWdJbml0ID0ge31cbik6IFByb3ZpZGVyPFQ+ID0+IGFzeW5jICgpID0+IHtcbiAgY29uc3QgeyBsb2FkZWRDb25maWcgPSBsb2FkU2hhcmVkQ29uZmlnRmlsZXMoaW5pdCksIHByb2ZpbGUgPSBwcm9jZXNzLmVudltFTlZfUFJPRklMRV0gfHwgREVGQVVMVF9QUk9GSUxFIH0gPSBpbml0O1xuXG4gIGNvbnN0IHsgY29uZmlnRmlsZSwgY3JlZGVudGlhbHNGaWxlIH0gPSBhd2FpdCBsb2FkZWRDb25maWc7XG5cbiAgY29uc3QgcHJvZmlsZUZyb21DcmVkZW50aWFscyA9IGNyZWRlbnRpYWxzRmlsZVtwcm9maWxlXSB8fCB7fTtcbiAgY29uc3QgcHJvZmlsZUZyb21Db25maWcgPSBjb25maWdGaWxlW3Byb2ZpbGVdIHx8IHt9O1xuICBjb25zdCBtZXJnZWRQcm9maWxlID1cbiAgICBwcmVmZXJyZWRGaWxlID09PSBcImNvbmZpZ1wiXG4gICAgICA/IHsgLi4ucHJvZmlsZUZyb21DcmVkZW50aWFscywgLi4ucHJvZmlsZUZyb21Db25maWcgfVxuICAgICAgOiB7IC4uLnByb2ZpbGVGcm9tQ29uZmlnLCAuLi5wcm9maWxlRnJvbUNyZWRlbnRpYWxzIH07XG5cbiAgdHJ5IHtcbiAgICBjb25zdCBjb25maWdWYWx1ZSA9IGNvbmZpZ1NlbGVjdG9yKG1lcmdlZFByb2ZpbGUpO1xuICAgIGlmIChjb25maWdWYWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbmZpZ1ZhbHVlO1xuICB9IGNhdGNoIChlKSB7XG4gICAgdGhyb3cgbmV3IFByb3ZpZGVyRXJyb3IoXG4gICAgICBlLm1lc3NhZ2UgfHwgYENhbm5vdCBsb2FkIGNvbmZpZyBmb3IgcHJvZmlsZSAke3Byb2ZpbGV9IGluIFNESyBjb25maWd1cmF0aW9uIGZpbGVzIHdpdGggZ2V0dGVyOiAke2NvbmZpZ1NlbGVjdG9yfWBcbiAgICApO1xuICB9XG59O1xuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/node-config-provider/dist/es/fromSharedConfigFiles.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/node-config-provider/dist/es/fromStatic.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@aws-sdk/node-config-provider/dist/es/fromStatic.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromStatic: () => (/* binding */ fromStatic)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/node-config-provider/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/property-provider */ \"(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/index.js\");\n\n\nvar isFunction = function (func) { return typeof func === \"function\"; };\nvar fromStatic = function (defaultValue) {\n    return isFunction(defaultValue) ? function () { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n        return [2 /*return*/, defaultValue()];\n    }); }); } : (0,_aws_sdk_property_provider__WEBPACK_IMPORTED_MODULE_0__.fromStatic)(defaultValue);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbVN0YXRpYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9mcm9tU3RhdGljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxJQUFJLGlCQUFpQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFLN0UsSUFBTSxVQUFVLEdBQUcsVUFBSSxJQUF5QixJQUF3QixPQUFBLE9BQU8sSUFBSSxLQUFLLFVBQVUsRUFBMUIsQ0FBMEIsQ0FBQztBQUVuRyxNQUFNLENBQUMsSUFBTSxVQUFVLEdBQUcsVUFBSSxZQUFpQztJQUM3RCxPQUFBLFVBQVUsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFBWSxzQkFBQSxZQUFZLEVBQUUsRUFBQTthQUFBLENBQUMsQ0FBQyxDQUFDLGlCQUFpQixDQUFDLFlBQVksQ0FBQztBQUF2RixDQUF1RixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZnJvbVN0YXRpYyBhcyBjb252ZXJ0VG9Qcm92aWRlciB9IGZyb20gXCJAYXdzLXNkay9wcm9wZXJ0eS1wcm92aWRlclwiO1xuaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuZXhwb3J0IHR5cGUgRnJvbVN0YXRpY0NvbmZpZzxUPiA9IFQgfCAoKCkgPT4gVCk7XG50eXBlIEdldHRlcjxUPiA9ICgpID0+IFQ7XG5jb25zdCBpc0Z1bmN0aW9uID0gPFQ+KGZ1bmM6IEZyb21TdGF0aWNDb25maWc8VD4pOiBmdW5jIGlzIEdldHRlcjxUPiA9PiB0eXBlb2YgZnVuYyA9PT0gXCJmdW5jdGlvblwiO1xuXG5leHBvcnQgY29uc3QgZnJvbVN0YXRpYyA9IDxUPihkZWZhdWx0VmFsdWU6IEZyb21TdGF0aWNDb25maWc8VD4pOiBQcm92aWRlcjxUPiA9PlxuICBpc0Z1bmN0aW9uKGRlZmF1bHRWYWx1ZSkgPyBhc3luYyAoKSA9PiBkZWZhdWx0VmFsdWUoKSA6IGNvbnZlcnRUb1Byb3ZpZGVyKGRlZmF1bHRWYWx1ZSk7XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbm9kZS1jb25maWctcHJvdmlkZXIvZGlzdC9lcy9mcm9tU3RhdGljLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUErQztBQUM4QjtBQUM3RSxtQ0FBbUM7QUFDNUI7QUFDUCxvREFBb0QsT0FBTyxnREFBUyx1Q0FBdUMsT0FBTyxrREFBVztBQUM3SDtBQUNBLEtBQUssSUFBSSxLQUFLLEVBQUUsc0VBQWlCO0FBQ2pDO0FBQ0EsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9ub2RlLWNvbmZpZy1wcm92aWRlci9kaXN0L2VzL2Zyb21TdGF0aWMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19hd2FpdGVyLCBfX2dlbmVyYXRvciB9IGZyb20gXCJ0c2xpYlwiO1xuaW1wb3J0IHsgZnJvbVN0YXRpYyBhcyBjb252ZXJ0VG9Qcm92aWRlciB9IGZyb20gXCJAYXdzLXNkay9wcm9wZXJ0eS1wcm92aWRlclwiO1xudmFyIGlzRnVuY3Rpb24gPSBmdW5jdGlvbiAoZnVuYykgeyByZXR1cm4gdHlwZW9mIGZ1bmMgPT09IFwiZnVuY3Rpb25cIjsgfTtcbmV4cG9ydCB2YXIgZnJvbVN0YXRpYyA9IGZ1bmN0aW9uIChkZWZhdWx0VmFsdWUpIHtcbiAgICByZXR1cm4gaXNGdW5jdGlvbihkZWZhdWx0VmFsdWUpID8gZnVuY3Rpb24gKCkgeyByZXR1cm4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgZGVmYXVsdFZhbHVlKCldO1xuICAgIH0pOyB9KTsgfSA6IGNvbnZlcnRUb1Byb3ZpZGVyKGRlZmF1bHRWYWx1ZSk7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pWm5KdmJWTjBZWFJwWXk1cWN5SXNJbk52ZFhKalpWSnZiM1FpT2lJaUxDSnpiM1Z5WTJWeklqcGJJaTR1THk0dUwzTnlZeTltY205dFUzUmhkR2xqTG5SeklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lJN1FVRkJRU3hQUVVGUExFVkJRVVVzVlVGQlZTeEpRVUZKTEdsQ1FVRnBRaXhGUVVGRkxFMUJRVTBzTkVKQlFUUkNMRU5CUVVNN1FVRkxOMFVzU1VGQlRTeFZRVUZWTEVkQlFVY3NWVUZCU1N4SlFVRjVRaXhKUVVGM1FpeFBRVUZCTEU5QlFVOHNTVUZCU1N4TFFVRkxMRlZCUVZVc1JVRkJNVUlzUTBGQk1FSXNRMEZCUXp0QlFVVnVSeXhOUVVGTkxFTkJRVU1zU1VGQlRTeFZRVUZWTEVkQlFVY3NWVUZCU1N4WlFVRnBRenRKUVVNM1JDeFBRVUZCTEZWQlFWVXNRMEZCUXl4WlFVRlpMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU03VVVGQldTeHpRa0ZCUVN4WlFVRlpMRVZCUVVVc1JVRkJRVHRoUVVGQkxFTkJRVU1zUTBGQlF5eERRVUZETEdsQ1FVRnBRaXhEUVVGRExGbEJRVmtzUTBGQlF6dEJRVUYyUml4RFFVRjFSaXhEUVVGRElpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lhVzF3YjNKMElIc2dabkp2YlZOMFlYUnBZeUJoY3lCamIyNTJaWEowVkc5UWNtOTJhV1JsY2lCOUlHWnliMjBnWENKQVlYZHpMWE5rYXk5d2NtOXdaWEowZVMxd2NtOTJhV1JsY2x3aU8xeHVhVzF3YjNKMElIc2dVSEp2ZG1sa1pYSWdmU0JtY205dElGd2lRR0YzY3kxelpHc3ZkSGx3WlhOY0lqdGNibHh1Wlhod2IzSjBJSFI1Y0dVZ1JuSnZiVk4wWVhScFkwTnZibVpwWnp4VVBpQTlJRlFnZkNBb0tDa2dQVDRnVkNrN1hHNTBlWEJsSUVkbGRIUmxjanhVUGlBOUlDZ3BJRDArSUZRN1hHNWpiMjV6ZENCcGMwWjFibU4wYVc5dUlEMGdQRlErS0daMWJtTTZJRVp5YjIxVGRHRjBhV05EYjI1bWFXYzhWRDRwT2lCbWRXNWpJR2x6SUVkbGRIUmxjanhVUGlBOVBpQjBlWEJsYjJZZ1puVnVZeUE5UFQwZ1hDSm1kVzVqZEdsdmJsd2lPMXh1WEc1bGVIQnZjblFnWTI5dWMzUWdabkp2YlZOMFlYUnBZeUE5SUR4VVBpaGtaV1poZFd4MFZtRnNkV1U2SUVaeWIyMVRkR0YwYVdORGIyNW1hV2M4VkQ0cE9pQlFjbTkyYVdSbGNqeFVQaUE5UGx4dUlDQnBjMFoxYm1OMGFXOXVLR1JsWm1GMWJIUldZV3gxWlNrZ1B5QmhjM2x1WXlBb0tTQTlQaUJrWldaaGRXeDBWbUZzZFdVb0tTQTZJR052Ym5abGNuUlViMUJ5YjNacFpHVnlLR1JsWm1GMWJIUldZV3gxWlNrN1hHNGlYWDA9Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/node-config-provider/dist/es/fromStatic.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/node-config-provider/dist/es/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@aws-sdk/node-config-provider/dist/es/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadConfig: () => (/* reexport safe */ _configLoader__WEBPACK_IMPORTED_MODULE_0__.loadConfig)\n/* harmony export */ });\n/* harmony import */ var _configLoader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./configLoader */ \"(ssr)/./node_modules/@aws-sdk/node-config-provider/dist/es/configLoader.js\");\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxnQkFBZ0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2NvbmZpZ0xvYWRlclwiO1xuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbm9kZS1jb25maWctcHJvdmlkZXIvZGlzdC9lcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErQjtBQUMvQiwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL25vZGUtY29uZmlnLXByb3ZpZGVyL2Rpc3QvZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vY29uZmlnTG9hZGVyXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lhVzVrWlhndWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12YVc1a1pYZ3VkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1kwRkJZeXhuUWtGQlowSXNRMEZCUXlJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYkltVjRjRzl5ZENBcUlHWnliMjBnWENJdUwyTnZibVpwWjB4dllXUmxjbHdpTzF4dUlsMTkiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/node-config-provider/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/node-config-provider/node_modules/tslib/tslib.es6.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/node-config-provider/node_modules/tslib/tslib.es6.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/node-config-provider/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/constants.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@aws-sdk/node-http-handler/dist/es/constants.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NODEJS_TIMEOUT_ERROR_CODES: () => (/* binding */ NODEJS_TIMEOUT_ERROR_CODES)\n/* harmony export */ });\n/**\n * Node.js system error codes that indicate timeout.\n */\nvar NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"EPIPE\", \"ETIMEDOUT\"];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUNILE1BQU0sQ0FBQyxJQUFNLDBCQUEwQixHQUFHLENBQUMsWUFBWSxFQUFFLE9BQU8sRUFBRSxXQUFXLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTm9kZS5qcyBzeXN0ZW0gZXJyb3IgY29kZXMgdGhhdCBpbmRpY2F0ZSB0aW1lb3V0LlxuICovXG5leHBvcnQgY29uc3QgTk9ERUpTX1RJTUVPVVRfRVJST1JfQ09ERVMgPSBbXCJFQ09OTlJFU0VUXCIsIFwiRVBJUEVcIiwgXCJFVElNRURPVVRcIl07XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbm9kZS1odHRwLWhhbmRsZXIvZGlzdC9lcy9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9ub2RlLWh0dHAtaGFuZGxlci9kaXN0L2VzL2NvbnN0YW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIE5vZGUuanMgc3lzdGVtIGVycm9yIGNvZGVzIHRoYXQgaW5kaWNhdGUgdGltZW91dC5cbiAqL1xuZXhwb3J0IHZhciBOT0RFSlNfVElNRU9VVF9FUlJPUl9DT0RFUyA9IFtcIkVDT05OUkVTRVRcIiwgXCJFUElQRVwiLCBcIkVUSU1FRE9VVFwiXTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVkyOXVjM1JoYm5SekxtcHpJaXdpYzI5MWNtTmxVbTl2ZENJNklpSXNJbk52ZFhKalpYTWlPbHNpTGk0dkxpNHZjM0pqTDJOdmJuTjBZVzUwY3k1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRVHM3UjBGRlJ6dEJRVU5JTEUxQlFVMHNRMEZCUXl4SlFVRk5MREJDUVVFd1FpeEhRVUZITEVOQlFVTXNXVUZCV1N4RlFVRkZMRTlCUVU4c1JVRkJSU3hYUVVGWExFTkJRVU1zUTBGQlF5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJaThxS2x4dUlDb2dUbTlrWlM1cWN5QnplWE4wWlcwZ1pYSnliM0lnWTI5a1pYTWdkR2hoZENCcGJtUnBZMkYwWlNCMGFXMWxiM1YwTGx4dUlDb3ZYRzVsZUhCdmNuUWdZMjl1YzNRZ1RrOUVSVXBUWDFSSlRVVlBWVlJmUlZKU1QxSmZRMDlFUlZNZ1BTQmJYQ0pGUTA5T1RsSkZVMFZVWENJc0lGd2lSVkJKVUVWY0lpd2dYQ0pGVkVsTlJVUlBWVlJjSWwwN1hHNGlYWDA9Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/get-transformed-headers.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/node-http-handler/dist/es/get-transformed-headers.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTransformedHeaders: () => (/* binding */ getTransformedHeaders)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/node-http-handler/node_modules/tslib/tslib.es6.js\");\n\nvar getTransformedHeaders = function (headers) {\n    var e_1, _a;\n    var transformedHeaders = {};\n    try {\n        for (var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__values)(Object.keys(headers)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var name = _c.value;\n            var headerValues = headers[name];\n            transformedHeaders[name] = Array.isArray(headerValues) ? headerValues.join(\",\") : headerValues;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return transformedHeaders;\n};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LXRyYW5zZm9ybWVkLWhlYWRlcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZ2V0LXRyYW5zZm9ybWVkLWhlYWRlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUdBLElBQU0scUJBQXFCLEdBQUcsVUFBQyxPQUE0Qjs7SUFDekQsSUFBTSxrQkFBa0IsR0FBYyxFQUFFLENBQUM7O1FBRXpDLEtBQW1CLElBQUEsS0FBQSxTQUFBLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUEsZ0JBQUEsNEJBQUU7WUFBcEMsSUFBTSxJQUFJLFdBQUE7WUFDYixJQUFNLFlBQVksR0FBVyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDM0Msa0JBQWtCLENBQUMsSUFBSSxDQUFDLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDO1NBQ2hHOzs7Ozs7Ozs7SUFFRCxPQUFPLGtCQUFrQixDQUFDO0FBQzVCLENBQUMsQ0FBQztBQUVGLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSGVhZGVyQmFnIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5pbXBvcnQgeyBJbmNvbWluZ0h0dHBIZWFkZXJzIH0gZnJvbSBcImh0dHAyXCI7XG5cbmNvbnN0IGdldFRyYW5zZm9ybWVkSGVhZGVycyA9IChoZWFkZXJzOiBJbmNvbWluZ0h0dHBIZWFkZXJzKSA9PiB7XG4gIGNvbnN0IHRyYW5zZm9ybWVkSGVhZGVyczogSGVhZGVyQmFnID0ge307XG5cbiAgZm9yIChjb25zdCBuYW1lIG9mIE9iamVjdC5rZXlzKGhlYWRlcnMpKSB7XG4gICAgY29uc3QgaGVhZGVyVmFsdWVzID0gPHN0cmluZz5oZWFkZXJzW25hbWVdO1xuICAgIHRyYW5zZm9ybWVkSGVhZGVyc1tuYW1lXSA9IEFycmF5LmlzQXJyYXkoaGVhZGVyVmFsdWVzKSA/IGhlYWRlclZhbHVlcy5qb2luKFwiLFwiKSA6IGhlYWRlclZhbHVlcztcbiAgfVxuXG4gIHJldHVybiB0cmFuc2Zvcm1lZEhlYWRlcnM7XG59O1xuXG5leHBvcnQgeyBnZXRUcmFuc2Zvcm1lZEhlYWRlcnMgfTtcbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbm9kZS1odHRwLWhhbmRsZXIvZGlzdC9lcy9nZXQtdHJhbnNmb3JtZWQtaGVhZGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwrQ0FBUSx3Q0FBd0MsVUFBVTtBQUNoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFFBQVE7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ2lDO0FBQ2pDLDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbm9kZS1odHRwLWhhbmRsZXIvZGlzdC9lcy9nZXQtdHJhbnNmb3JtZWQtaGVhZGVycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX3ZhbHVlcyB9IGZyb20gXCJ0c2xpYlwiO1xudmFyIGdldFRyYW5zZm9ybWVkSGVhZGVycyA9IGZ1bmN0aW9uIChoZWFkZXJzKSB7XG4gICAgdmFyIGVfMSwgX2E7XG4gICAgdmFyIHRyYW5zZm9ybWVkSGVhZGVycyA9IHt9O1xuICAgIHRyeSB7XG4gICAgICAgIGZvciAodmFyIF9iID0gX192YWx1ZXMoT2JqZWN0LmtleXMoaGVhZGVycykpLCBfYyA9IF9iLm5leHQoKTsgIV9jLmRvbmU7IF9jID0gX2IubmV4dCgpKSB7XG4gICAgICAgICAgICB2YXIgbmFtZSA9IF9jLnZhbHVlO1xuICAgICAgICAgICAgdmFyIGhlYWRlclZhbHVlcyA9IGhlYWRlcnNbbmFtZV07XG4gICAgICAgICAgICB0cmFuc2Zvcm1lZEhlYWRlcnNbbmFtZV0gPSBBcnJheS5pc0FycmF5KGhlYWRlclZhbHVlcykgPyBoZWFkZXJWYWx1ZXMuam9pbihcIixcIikgOiBoZWFkZXJWYWx1ZXM7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2F0Y2ggKGVfMV8xKSB7IGVfMSA9IHsgZXJyb3I6IGVfMV8xIH07IH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChfYyAmJiAhX2MuZG9uZSAmJiAoX2EgPSBfYi5yZXR1cm4pKSBfYS5jYWxsKF9iKTtcbiAgICAgICAgfVxuICAgICAgICBmaW5hbGx5IHsgaWYgKGVfMSkgdGhyb3cgZV8xLmVycm9yOyB9XG4gICAgfVxuICAgIHJldHVybiB0cmFuc2Zvcm1lZEhlYWRlcnM7XG59O1xuZXhwb3J0IHsgZ2V0VHJhbnNmb3JtZWRIZWFkZXJzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2laMlYwTFhSeVlXNXpabTl5YldWa0xXaGxZV1JsY25NdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12WjJWMExYUnlZVzV6Wm05eWJXVmtMV2hsWVdSbGNuTXVkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanRCUVVkQkxFbEJRVTBzY1VKQlFYRkNMRWRCUVVjc1ZVRkJReXhQUVVFMFFqczdTVUZEZWtRc1NVRkJUU3hyUWtGQmEwSXNSMEZCWXl4RlFVRkZMRU5CUVVNN08xRkJSWHBETEV0QlFXMUNMRWxCUVVFc1MwRkJRU3hUUVVGQkxFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRU5CUVVFc1owSkJRVUVzTkVKQlFVVTdXVUZCY0VNc1NVRkJUU3hKUVVGSkxGZEJRVUU3V1VGRFlpeEpRVUZOTEZsQlFWa3NSMEZCVnl4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03V1VGRE0wTXNhMEpCUVd0Q0xFTkJRVU1zU1VGQlNTeERRVUZETEVkQlFVY3NTMEZCU3l4RFFVRkRMRTlCUVU4c1EwRkJReXhaUVVGWkxFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNXVUZCV1N4RFFVRkRMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNXVUZCV1N4RFFVRkRPMU5CUTJoSE96czdPenM3T3pzN1NVRkZSQ3hQUVVGUExHdENRVUZyUWl4RFFVRkRPMEZCUXpWQ0xFTkJRVU1zUTBGQlF6dEJRVVZHTEU5QlFVOHNSVUZCUlN4eFFrRkJjVUlzUlVGQlJTeERRVUZESWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaWFXMXdiM0owSUhzZ1NHVmhaR1Z5UW1GbklIMGdabkp2YlNCY0lrQmhkM010YzJSckwzUjVjR1Z6WENJN1hHNXBiWEJ2Y25RZ2V5QkpibU52YldsdVowaDBkSEJJWldGa1pYSnpJSDBnWm5KdmJTQmNJbWgwZEhBeVhDSTdYRzVjYm1OdmJuTjBJR2RsZEZSeVlXNXpabTl5YldWa1NHVmhaR1Z5Y3lBOUlDaG9aV0ZrWlhKek9pQkpibU52YldsdVowaDBkSEJJWldGa1pYSnpLU0E5UGlCN1hHNGdJR052Ym5OMElIUnlZVzV6Wm05eWJXVmtTR1ZoWkdWeWN6b2dTR1ZoWkdWeVFtRm5JRDBnZTMwN1hHNWNiaUFnWm05eUlDaGpiMjV6ZENCdVlXMWxJRzltSUU5aWFtVmpkQzVyWlhsektHaGxZV1JsY25NcEtTQjdYRzRnSUNBZ1kyOXVjM1FnYUdWaFpHVnlWbUZzZFdWeklEMGdQSE4wY21sdVp6NW9aV0ZrWlhKelcyNWhiV1ZkTzF4dUlDQWdJSFJ5WVc1elptOXliV1ZrU0dWaFpHVnljMXR1WVcxbFhTQTlJRUZ5Y21GNUxtbHpRWEp5WVhrb2FHVmhaR1Z5Vm1Gc2RXVnpLU0EvSUdobFlXUmxjbFpoYkhWbGN5NXFiMmx1S0Z3aUxGd2lLU0E2SUdobFlXUmxjbFpoYkhWbGN6dGNiaUFnZlZ4dVhHNGdJSEpsZEhWeWJpQjBjbUZ1YzJadmNtMWxaRWhsWVdSbGNuTTdYRzU5TzF4dVhHNWxlSEJ2Y25RZ2V5Qm5aWFJVY21GdWMyWnZjbTFsWkVobFlXUmxjbk1nZlR0Y2JpSmRmUT09Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/get-transformed-headers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@aws-sdk/node-http-handler/dist/es/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NodeHttp2Handler: () => (/* reexport safe */ _node_http2_handler__WEBPACK_IMPORTED_MODULE_1__.NodeHttp2Handler),\n/* harmony export */   NodeHttpHandler: () => (/* reexport safe */ _node_http_handler__WEBPACK_IMPORTED_MODULE_0__.NodeHttpHandler),\n/* harmony export */   streamCollector: () => (/* reexport safe */ _stream_collector__WEBPACK_IMPORTED_MODULE_2__.streamCollector)\n/* harmony export */ });\n/* harmony import */ var _node_http_handler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node-http-handler */ \"(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/node-http-handler.js\");\n/* harmony import */ var _node_http2_handler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node-http2-handler */ \"(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/node-http2-handler.js\");\n/* harmony import */ var _stream_collector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stream-collector */ \"(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/stream-collector/index.js\");\n\n\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxxQkFBcUIsQ0FBQztBQUNwQyxjQUFjLHNCQUFzQixDQUFDO0FBQ3JDLGNBQWMsb0JBQW9CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9ub2RlLWh0dHAtaGFuZGxlclwiO1xuZXhwb3J0ICogZnJvbSBcIi4vbm9kZS1odHRwMi1oYW5kbGVyXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zdHJlYW0tY29sbGVjdG9yXCI7XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbm9kZS1odHRwLWhhbmRsZXIvZGlzdC9lcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBb0M7QUFDQztBQUNGO0FBQ25DLDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbm9kZS1odHRwLWhhbmRsZXIvZGlzdC9lcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9ub2RlLWh0dHAtaGFuZGxlclwiO1xuZXhwb3J0ICogZnJvbSBcIi4vbm9kZS1odHRwMi1oYW5kbGVyXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zdHJlYW0tY29sbGVjdG9yXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lhVzVrWlhndWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12YVc1a1pYZ3VkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1kwRkJZeXh4UWtGQmNVSXNRMEZCUXp0QlFVTndReXhqUVVGakxITkNRVUZ6UWl4RFFVRkRPMEZCUTNKRExHTkJRV01zYjBKQlFXOUNMRU5CUVVNaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SmxlSEJ2Y25RZ0tpQm1jbTl0SUZ3aUxpOXViMlJsTFdoMGRIQXRhR0Z1Wkd4bGNsd2lPMXh1Wlhod2IzSjBJQ29nWm5KdmJTQmNJaTR2Ym05a1pTMW9kSFJ3TWkxb1lXNWtiR1Z5WENJN1hHNWxlSEJ2Y25RZ0tpQm1jbTl0SUZ3aUxpOXpkSEpsWVcwdFkyOXNiR1ZqZEc5eVhDSTdYRzRpWFgwPSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/node-http-handler.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@aws-sdk/node-http-handler/dist/es/node-http-handler.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NodeHttpHandler: () => (/* binding */ NodeHttpHandler)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/protocol-http */ \"(ssr)/./node_modules/@aws-sdk/protocol-http/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_querystring_builder__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/querystring-builder */ \"(ssr)/./node_modules/@aws-sdk/querystring-builder/dist/es/index.js\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(http__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! https */ \"https\");\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(https__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/constants.js\");\n/* harmony import */ var _get_transformed_headers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./get-transformed-headers */ \"(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/get-transformed-headers.js\");\n/* harmony import */ var _set_connection_timeout__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./set-connection-timeout */ \"(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/set-connection-timeout.js\");\n/* harmony import */ var _set_socket_timeout__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./set-socket-timeout */ \"(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/set-socket-timeout.js\");\n/* harmony import */ var _write_request_body__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./write-request-body */ \"(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/write-request-body.js\");\n\n\n\n\n\n\n\n\n\nvar NodeHttpHandler = /** @class */ (function () {\n    function NodeHttpHandler(_a) {\n        var _b = _a === void 0 ? {} : _a, connectionTimeout = _b.connectionTimeout, socketTimeout = _b.socketTimeout, httpAgent = _b.httpAgent, httpsAgent = _b.httpsAgent;\n        // Node http handler is hard-coded to http/1.1: https://github.com/nodejs/node/blob/ff5664b83b89c55e4ab5d5f60068fb457f1f5872/lib/_http_server.js#L286\n        this.metadata = { handlerProtocol: \"http/1.1\" };\n        this.connectionTimeout = connectionTimeout;\n        this.socketTimeout = socketTimeout;\n        var keepAlive = true;\n        var maxSockets = 50;\n        this.httpAgent = httpAgent || new http__WEBPACK_IMPORTED_MODULE_2__.Agent({ keepAlive: keepAlive, maxSockets: maxSockets });\n        this.httpsAgent = httpsAgent || new https__WEBPACK_IMPORTED_MODULE_3__.Agent({ keepAlive: keepAlive, maxSockets: maxSockets });\n    }\n    NodeHttpHandler.prototype.destroy = function () {\n        this.httpAgent.destroy();\n        this.httpsAgent.destroy();\n    };\n    NodeHttpHandler.prototype.handle = function (request, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, abortSignal = _b.abortSignal;\n        return new Promise(function (resolve, reject) {\n            // if the request was already aborted, prevent doing extra work\n            if (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted) {\n                var abortError = new Error(\"Request aborted\");\n                abortError.name = \"AbortError\";\n                reject(abortError);\n                return;\n            }\n            // determine which http(s) client to use\n            var isSSL = request.protocol === \"https:\";\n            var queryString = (0,_aws_sdk_querystring_builder__WEBPACK_IMPORTED_MODULE_1__.buildQueryString)(request.query || {});\n            var nodeHttpsOptions = {\n                headers: request.headers,\n                host: request.hostname,\n                method: request.method,\n                path: queryString ? request.path + \"?\" + queryString : request.path,\n                port: request.port,\n                agent: isSSL ? _this.httpsAgent : _this.httpAgent,\n            };\n            // create the http request\n            var requestFunc = isSSL ? https__WEBPACK_IMPORTED_MODULE_3__.request : http__WEBPACK_IMPORTED_MODULE_2__.request;\n            var req = requestFunc(nodeHttpsOptions, function (res) {\n                var httpResponse = new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpResponse({\n                    statusCode: res.statusCode || -1,\n                    headers: (0,_get_transformed_headers__WEBPACK_IMPORTED_MODULE_5__.getTransformedHeaders)(res.headers),\n                    body: res,\n                });\n                resolve({ response: httpResponse });\n            });\n            req.on(\"error\", function (err) {\n                if (_constants__WEBPACK_IMPORTED_MODULE_4__.NODEJS_TIMEOUT_ERROR_CODES.includes(err.code)) {\n                    reject(Object.assign(err, { name: \"TimeoutError\" }));\n                }\n                else {\n                    reject(err);\n                }\n            });\n            // wire-up any timeout logic\n            (0,_set_connection_timeout__WEBPACK_IMPORTED_MODULE_6__.setConnectionTimeout)(req, reject, _this.connectionTimeout);\n            (0,_set_socket_timeout__WEBPACK_IMPORTED_MODULE_7__.setSocketTimeout)(req, reject, _this.socketTimeout);\n            // wire-up abort logic\n            if (abortSignal) {\n                abortSignal.onabort = function () {\n                    // ensure request is destroyed\n                    req.abort();\n                    var abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n            }\n            (0,_write_request_body__WEBPACK_IMPORTED_MODULE_8__.writeRequestBody)(req, request);\n        });\n    };\n    return NodeHttpHandler;\n}());\n\n//# sourceMappingURL=data:application/json;base64,# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/node-http-handler.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/node-http2-handler.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@aws-sdk/node-http-handler/dist/es/node-http2-handler.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NodeHttp2Handler: () => (/* binding */ NodeHttp2Handler)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/node-http-handler/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/protocol-http */ \"(ssr)/./node_modules/@aws-sdk/protocol-http/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_querystring_builder__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/querystring-builder */ \"(ssr)/./node_modules/@aws-sdk/querystring-builder/dist/es/index.js\");\n/* harmony import */ var http2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! http2 */ \"http2\");\n/* harmony import */ var http2__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(http2__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _get_transformed_headers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./get-transformed-headers */ \"(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/get-transformed-headers.js\");\n/* harmony import */ var _write_request_body__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./write-request-body */ \"(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/write-request-body.js\");\n\n\n\n\n\n\nvar NodeHttp2Handler = /** @class */ (function () {\n    function NodeHttp2Handler(_a) {\n        var _b = _a === void 0 ? {} : _a, requestTimeout = _b.requestTimeout, sessionTimeout = _b.sessionTimeout;\n        this.metadata = { handlerProtocol: \"h2\" };\n        this.requestTimeout = requestTimeout;\n        this.sessionTimeout = sessionTimeout;\n        this.connectionPool = new Map();\n    }\n    NodeHttp2Handler.prototype.destroy = function () {\n        var e_1, _a;\n        try {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            for (var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__values)(this.connectionPool), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__read)(_c.value, 2), _ = _d[0], http2Session = _d[1];\n                http2Session.destroy();\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        this.connectionPool.clear();\n    };\n    NodeHttp2Handler.prototype.handle = function (request, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, abortSignal = _b.abortSignal;\n        return new Promise(function (resolve, reject) {\n            var _a;\n            // if the request was already aborted, prevent doing extra work\n            if (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted) {\n                var abortError = new Error(\"Request aborted\");\n                abortError.name = \"AbortError\";\n                reject(abortError);\n                return;\n            }\n            var hostname = request.hostname, method = request.method, port = request.port, protocol = request.protocol, path = request.path, query = request.query;\n            var queryString = (0,_aws_sdk_querystring_builder__WEBPACK_IMPORTED_MODULE_1__.buildQueryString)(query || {});\n            // create the http2 request\n            var req = _this.getSession(protocol + \"//\" + hostname + (port ? \":\" + port : \"\")).request((0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)({}, request.headers), (_a = {}, _a[http2__WEBPACK_IMPORTED_MODULE_2__.constants.HTTP2_HEADER_PATH] = queryString ? path + \"?\" + queryString : path, _a[http2__WEBPACK_IMPORTED_MODULE_2__.constants.HTTP2_HEADER_METHOD] = method, _a)));\n            req.on(\"response\", function (headers) {\n                var httpResponse = new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpResponse({\n                    statusCode: headers[\":status\"] || -1,\n                    headers: (0,_get_transformed_headers__WEBPACK_IMPORTED_MODULE_3__.getTransformedHeaders)(headers),\n                    body: req,\n                });\n                resolve({ response: httpResponse });\n            });\n            req.on(\"error\", reject);\n            req.on(\"frameError\", reject);\n            req.on(\"aborted\", reject);\n            var requestTimeout = _this.requestTimeout;\n            if (requestTimeout) {\n                req.setTimeout(requestTimeout, function () {\n                    req.close();\n                    var timeoutError = new Error(\"Stream timed out because of no activity for \" + requestTimeout + \" ms\");\n                    timeoutError.name = \"TimeoutError\";\n                    reject(timeoutError);\n                });\n            }\n            if (abortSignal) {\n                abortSignal.onabort = function () {\n                    req.close();\n                    var abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n            }\n            (0,_write_request_body__WEBPACK_IMPORTED_MODULE_4__.writeRequestBody)(req, request);\n        });\n    };\n    NodeHttp2Handler.prototype.getSession = function (authority) {\n        var connectionPool = this.connectionPool;\n        var existingSession = connectionPool.get(authority);\n        if (existingSession)\n            return existingSession;\n        var newSession = (0,http2__WEBPACK_IMPORTED_MODULE_2__.connect)(authority);\n        connectionPool.set(authority, newSession);\n        var sessionTimeout = this.sessionTimeout;\n        if (sessionTimeout) {\n            newSession.setTimeout(sessionTimeout, function () {\n                newSession.close();\n                connectionPool.delete(authority);\n            });\n        }\n        return newSession;\n    };\n    return NodeHttp2Handler;\n}());\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZS1odHRwMi1oYW5kbGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL25vZGUtaHR0cDItaGFuZGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUE0QixZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUNoRixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUVoRSxPQUFPLEVBQXNCLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxPQUFPLENBQUM7QUFFL0QsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDbEUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFvQnhEO0lBTUUsMEJBQVksRUFBZ0U7WUFBaEUscUJBQThELEVBQUUsS0FBQSxFQUE5RCxjQUFjLG9CQUFBLEVBQUUsY0FBYyxvQkFBQTtRQUY1QixhQUFRLEdBQUcsRUFBRSxlQUFlLEVBQUUsSUFBSSxFQUFFLENBQUM7UUFHbkQsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLEdBQUcsRUFBOEIsQ0FBQztJQUM5RCxDQUFDO0lBRUQsa0NBQU8sR0FBUDs7O1lBQ0UsNkRBQTZEO1lBQzdELEtBQWdDLElBQUEsS0FBQSxTQUFBLElBQUksQ0FBQyxjQUFjLENBQUEsZ0JBQUEsNEJBQUU7Z0JBQTFDLElBQUEsS0FBQSxtQkFBaUIsRUFBaEIsQ0FBQyxRQUFBLEVBQUUsWUFBWSxRQUFBO2dCQUN6QixZQUFZLENBQUMsT0FBTyxFQUFFLENBQUM7YUFDeEI7Ozs7Ozs7OztRQUNELElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDOUIsQ0FBQztJQUVELGlDQUFNLEdBQU4sVUFBTyxPQUFvQixFQUFFLEVBQXdDO1FBQXJFLGlCQXNEQztZQXRENEIscUJBQXNDLEVBQUUsS0FBQSxFQUF0QyxXQUFXLGlCQUFBO1FBQ3hDLE9BQU8sSUFBSSxPQUFPLENBQUMsVUFBQyxPQUFPLEVBQUUsTUFBTTs7WUFDakMsK0RBQStEO1lBQy9ELElBQUksV0FBVyxhQUFYLFdBQVcsdUJBQVgsV0FBVyxDQUFFLE9BQU8sRUFBRTtnQkFDeEIsSUFBTSxVQUFVLEdBQUcsSUFBSSxLQUFLLENBQUMsaUJBQWlCLENBQUMsQ0FBQztnQkFDaEQsVUFBVSxDQUFDLElBQUksR0FBRyxZQUFZLENBQUM7Z0JBQy9CLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQztnQkFDbkIsT0FBTzthQUNSO1lBRU8sSUFBQSxRQUFRLEdBQTBDLE9BQU8sU0FBakQsRUFBRSxNQUFNLEdBQWtDLE9BQU8sT0FBekMsRUFBRSxJQUFJLEdBQTRCLE9BQU8sS0FBbkMsRUFBRSxRQUFRLEdBQWtCLE9BQU8sU0FBekIsRUFBRSxJQUFJLEdBQVksT0FBTyxLQUFuQixFQUFFLEtBQUssR0FBSyxPQUFPLE1BQVosQ0FBYTtZQUNsRSxJQUFNLFdBQVcsR0FBRyxnQkFBZ0IsQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDLENBQUM7WUFFbEQsMkJBQTJCO1lBQzNCLElBQU0sR0FBRyxHQUFHLEtBQUksQ0FBQyxVQUFVLENBQUksUUFBUSxVQUFLLFFBQVEsSUFBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLE1BQUksSUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUUsQ0FBQyxDQUFDLE9BQU8sdUJBQ25GLE9BQU8sQ0FBQyxPQUFPLGdCQUNqQixTQUFTLENBQUMsaUJBQWlCLElBQUcsV0FBVyxDQUFDLENBQUMsQ0FBSSxJQUFJLFNBQUksV0FBYSxDQUFDLENBQUMsQ0FBQyxJQUFJLEtBQzNFLFNBQVMsQ0FBQyxtQkFBbUIsSUFBRyxNQUFNLE9BQ3ZDLENBQUM7WUFFSCxHQUFHLENBQUMsRUFBRSxDQUFDLFVBQVUsRUFBRSxVQUFDLE9BQU87Z0JBQ3pCLElBQU0sWUFBWSxHQUFHLElBQUksWUFBWSxDQUFDO29CQUNwQyxVQUFVLEVBQUUsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztvQkFDcEMsT0FBTyxFQUFFLHFCQUFxQixDQUFDLE9BQU8sQ0FBQztvQkFDdkMsSUFBSSxFQUFFLEdBQUc7aUJBQ1YsQ0FBQyxDQUFDO2dCQUNILE9BQU8sQ0FBQyxFQUFFLFFBQVEsRUFBRSxZQUFZLEVBQUUsQ0FBQyxDQUFDO1lBQ3RDLENBQUMsQ0FBQyxDQUFDO1lBRUgsR0FBRyxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFDeEIsR0FBRyxDQUFDLEVBQUUsQ0FBQyxZQUFZLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFDN0IsR0FBRyxDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFFMUIsSUFBTSxjQUFjLEdBQUcsS0FBSSxDQUFDLGNBQWMsQ0FBQztZQUMzQyxJQUFJLGNBQWMsRUFBRTtnQkFDbEIsR0FBRyxDQUFDLFVBQVUsQ0FBQyxjQUFjLEVBQUU7b0JBQzdCLEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQztvQkFDWixJQUFNLFlBQVksR0FBRyxJQUFJLEtBQUssQ0FBQyxpREFBK0MsY0FBYyxRQUFLLENBQUMsQ0FBQztvQkFDbkcsWUFBWSxDQUFDLElBQUksR0FBRyxjQUFjLENBQUM7b0JBQ25DLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztnQkFDdkIsQ0FBQyxDQUFDLENBQUM7YUFDSjtZQUVELElBQUksV0FBVyxFQUFFO2dCQUNmLFdBQVcsQ0FBQyxPQUFPLEdBQUc7b0JBQ3BCLEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQztvQkFDWixJQUFNLFVBQVUsR0FBRyxJQUFJLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO29CQUNoRCxVQUFVLENBQUMsSUFBSSxHQUFHLFlBQVksQ0FBQztvQkFDL0IsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO2dCQUNyQixDQUFDLENBQUM7YUFDSDtZQUVELGdCQUFnQixDQUFDLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUNqQyxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFTyxxQ0FBVSxHQUFsQixVQUFtQixTQUFpQjtRQUNsQyxJQUFNLGNBQWMsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDO1FBQzNDLElBQU0sZUFBZSxHQUFHLGNBQWMsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDdEQsSUFBSSxlQUFlO1lBQUUsT0FBTyxlQUFlLENBQUM7UUFFNUMsSUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3RDLGNBQWMsQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBRTFDLElBQU0sY0FBYyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUM7UUFDM0MsSUFBSSxjQUFjLEVBQUU7WUFDbEIsVUFBVSxDQUFDLFVBQVUsQ0FBQyxjQUFjLEVBQUU7Z0JBQ3BDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztnQkFDbkIsY0FBYyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUNuQyxDQUFDLENBQUMsQ0FBQztTQUNKO1FBQ0QsT0FBTyxVQUFVLENBQUM7SUFDcEIsQ0FBQztJQUNILHVCQUFDO0FBQUQsQ0FBQyxBQTdGRCxJQTZGQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBIYW5kbGVyLCBIdHRwUmVxdWVzdCwgSHR0cFJlc3BvbnNlIH0gZnJvbSBcIkBhd3Mtc2RrL3Byb3RvY29sLWh0dHBcIjtcbmltcG9ydCB7IGJ1aWxkUXVlcnlTdHJpbmcgfSBmcm9tIFwiQGF3cy1zZGsvcXVlcnlzdHJpbmctYnVpbGRlclwiO1xuaW1wb3J0IHsgSHR0cEhhbmRsZXJPcHRpb25zIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5pbXBvcnQgeyBDbGllbnRIdHRwMlNlc3Npb24sIGNvbm5lY3QsIGNvbnN0YW50cyB9IGZyb20gXCJodHRwMlwiO1xuXG5pbXBvcnQgeyBnZXRUcmFuc2Zvcm1lZEhlYWRlcnMgfSBmcm9tIFwiLi9nZXQtdHJhbnNmb3JtZWQtaGVhZGVyc1wiO1xuaW1wb3J0IHsgd3JpdGVSZXF1ZXN0Qm9keSB9IGZyb20gXCIuL3dyaXRlLXJlcXVlc3QtYm9keVwiO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIGh0dHAyIG9wdGlvbnMgdGhhdCBjYW4gYmUgcGFzc2VkIHRvIGEgbm9kZSBodHRwMiBjbGllbnQuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTm9kZUh0dHAySGFuZGxlck9wdGlvbnMge1xuICAvKipcbiAgICogVGhlIG1heGltdW0gdGltZSBpbiBtaWxsaXNlY29uZHMgdGhhdCBhIHN0cmVhbSBtYXkgcmVtYWluIGlkbGUgYmVmb3JlIGl0XG4gICAqIGlzIGNsb3NlZC5cbiAgICovXG4gIHJlcXVlc3RUaW1lb3V0PzogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBUaGUgbWF4aW11bSB0aW1lIGluIG1pbGxpc2Vjb25kcyB0aGF0IGEgc2Vzc2lvbiBvciBzb2NrZXQgbWF5IHJlbWFpbiBpZGxlXG4gICAqIGJlZm9yZSBpdCBpcyBjbG9zZWQuXG4gICAqIGh0dHBzOi8vbm9kZWpzLm9yZy9kb2NzL2xhdGVzdC12MTIueC9hcGkvaHR0cDIuaHRtbCNodHRwMl9odHRwMnNlc3Npb25fYW5kX3NvY2tldHNcbiAgICovXG4gIHNlc3Npb25UaW1lb3V0PzogbnVtYmVyO1xufVxuXG5leHBvcnQgY2xhc3MgTm9kZUh0dHAySGFuZGxlciBpbXBsZW1lbnRzIEh0dHBIYW5kbGVyIHtcbiAgcHJpdmF0ZSByZWFkb25seSByZXF1ZXN0VGltZW91dD86IG51bWJlcjtcbiAgcHJpdmF0ZSByZWFkb25seSBzZXNzaW9uVGltZW91dD86IG51bWJlcjtcbiAgcHJpdmF0ZSByZWFkb25seSBjb25uZWN0aW9uUG9vbDogTWFwPHN0cmluZywgQ2xpZW50SHR0cDJTZXNzaW9uPjtcbiAgcHVibGljIHJlYWRvbmx5IG1ldGFkYXRhID0geyBoYW5kbGVyUHJvdG9jb2w6IFwiaDJcIiB9O1xuXG4gIGNvbnN0cnVjdG9yKHsgcmVxdWVzdFRpbWVvdXQsIHNlc3Npb25UaW1lb3V0IH06IE5vZGVIdHRwMkhhbmRsZXJPcHRpb25zID0ge30pIHtcbiAgICB0aGlzLnJlcXVlc3RUaW1lb3V0ID0gcmVxdWVzdFRpbWVvdXQ7XG4gICAgdGhpcy5zZXNzaW9uVGltZW91dCA9IHNlc3Npb25UaW1lb3V0O1xuICAgIHRoaXMuY29ubmVjdGlvblBvb2wgPSBuZXcgTWFwPHN0cmluZywgQ2xpZW50SHR0cDJTZXNzaW9uPigpO1xuICB9XG5cbiAgZGVzdHJveSgpOiB2b2lkIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzXG4gICAgZm9yIChjb25zdCBbXywgaHR0cDJTZXNzaW9uXSBvZiB0aGlzLmNvbm5lY3Rpb25Qb29sKSB7XG4gICAgICBodHRwMlNlc3Npb24uZGVzdHJveSgpO1xuICAgIH1cbiAgICB0aGlzLmNvbm5lY3Rpb25Qb29sLmNsZWFyKCk7XG4gIH1cblxuICBoYW5kbGUocmVxdWVzdDogSHR0cFJlcXVlc3QsIHsgYWJvcnRTaWduYWwgfTogSHR0cEhhbmRsZXJPcHRpb25zID0ge30pOiBQcm9taXNlPHsgcmVzcG9uc2U6IEh0dHBSZXNwb25zZSB9PiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIC8vIGlmIHRoZSByZXF1ZXN0IHdhcyBhbHJlYWR5IGFib3J0ZWQsIHByZXZlbnQgZG9pbmcgZXh0cmEgd29ya1xuICAgICAgaWYgKGFib3J0U2lnbmFsPy5hYm9ydGVkKSB7XG4gICAgICAgIGNvbnN0IGFib3J0RXJyb3IgPSBuZXcgRXJyb3IoXCJSZXF1ZXN0IGFib3J0ZWRcIik7XG4gICAgICAgIGFib3J0RXJyb3IubmFtZSA9IFwiQWJvcnRFcnJvclwiO1xuICAgICAgICByZWplY3QoYWJvcnRFcnJvcik7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY29uc3QgeyBob3N0bmFtZSwgbWV0aG9kLCBwb3J0LCBwcm90b2NvbCwgcGF0aCwgcXVlcnkgfSA9IHJlcXVlc3Q7XG4gICAgICBjb25zdCBxdWVyeVN0cmluZyA9IGJ1aWxkUXVlcnlTdHJpbmcocXVlcnkgfHwge30pO1xuXG4gICAgICAvLyBjcmVhdGUgdGhlIGh0dHAyIHJlcXVlc3RcbiAgICAgIGNvbnN0IHJlcSA9IHRoaXMuZ2V0U2Vzc2lvbihgJHtwcm90b2NvbH0vLyR7aG9zdG5hbWV9JHtwb3J0ID8gYDoke3BvcnR9YCA6IFwiXCJ9YCkucmVxdWVzdCh7XG4gICAgICAgIC4uLnJlcXVlc3QuaGVhZGVycyxcbiAgICAgICAgW2NvbnN0YW50cy5IVFRQMl9IRUFERVJfUEFUSF06IHF1ZXJ5U3RyaW5nID8gYCR7cGF0aH0/JHtxdWVyeVN0cmluZ31gIDogcGF0aCxcbiAgICAgICAgW2NvbnN0YW50cy5IVFRQMl9IRUFERVJfTUVUSE9EXTogbWV0aG9kLFxuICAgICAgfSk7XG5cbiAgICAgIHJlcS5vbihcInJlc3BvbnNlXCIsIChoZWFkZXJzKSA9PiB7XG4gICAgICAgIGNvbnN0IGh0dHBSZXNwb25zZSA9IG5ldyBIdHRwUmVzcG9uc2Uoe1xuICAgICAgICAgIHN0YXR1c0NvZGU6IGhlYWRlcnNbXCI6c3RhdHVzXCJdIHx8IC0xLFxuICAgICAgICAgIGhlYWRlcnM6IGdldFRyYW5zZm9ybWVkSGVhZGVycyhoZWFkZXJzKSxcbiAgICAgICAgICBib2R5OiByZXEsXG4gICAgICAgIH0pO1xuICAgICAgICByZXNvbHZlKHsgcmVzcG9uc2U6IGh0dHBSZXNwb25zZSB9KTtcbiAgICAgIH0pO1xuXG4gICAgICByZXEub24oXCJlcnJvclwiLCByZWplY3QpO1xuICAgICAgcmVxLm9uKFwiZnJhbWVFcnJvclwiLCByZWplY3QpO1xuICAgICAgcmVxLm9uKFwiYWJvcnRlZFwiLCByZWplY3QpO1xuXG4gICAgICBjb25zdCByZXF1ZXN0VGltZW91dCA9IHRoaXMucmVxdWVzdFRpbWVvdXQ7XG4gICAgICBpZiAocmVxdWVzdFRpbWVvdXQpIHtcbiAgICAgICAgcmVxLnNldFRpbWVvdXQocmVxdWVzdFRpbWVvdXQsICgpID0+IHtcbiAgICAgICAgICByZXEuY2xvc2UoKTtcbiAgICAgICAgICBjb25zdCB0aW1lb3V0RXJyb3IgPSBuZXcgRXJyb3IoYFN0cmVhbSB0aW1lZCBvdXQgYmVjYXVzZSBvZiBubyBhY3Rpdml0eSBmb3IgJHtyZXF1ZXN0VGltZW91dH0gbXNgKTtcbiAgICAgICAgICB0aW1lb3V0RXJyb3IubmFtZSA9IFwiVGltZW91dEVycm9yXCI7XG4gICAgICAgICAgcmVqZWN0KHRpbWVvdXRFcnJvcik7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBpZiAoYWJvcnRTaWduYWwpIHtcbiAgICAgICAgYWJvcnRTaWduYWwub25hYm9ydCA9ICgpID0+IHtcbiAgICAgICAgICByZXEuY2xvc2UoKTtcbiAgICAgICAgICBjb25zdCBhYm9ydEVycm9yID0gbmV3IEVycm9yKFwiUmVxdWVzdCBhYm9ydGVkXCIpO1xuICAgICAgICAgIGFib3J0RXJyb3IubmFtZSA9IFwiQWJvcnRFcnJvclwiO1xuICAgICAgICAgIHJlamVjdChhYm9ydEVycm9yKTtcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgd3JpdGVSZXF1ZXN0Qm9keShyZXEsIHJlcXVlc3QpO1xuICAgIH0pO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRTZXNzaW9uKGF1dGhvcml0eTogc3RyaW5nKTogQ2xpZW50SHR0cDJTZXNzaW9uIHtcbiAgICBjb25zdCBjb25uZWN0aW9uUG9vbCA9IHRoaXMuY29ubmVjdGlvblBvb2w7XG4gICAgY29uc3QgZXhpc3RpbmdTZXNzaW9uID0gY29ubmVjdGlvblBvb2wuZ2V0KGF1dGhvcml0eSk7XG4gICAgaWYgKGV4aXN0aW5nU2Vzc2lvbikgcmV0dXJuIGV4aXN0aW5nU2Vzc2lvbjtcblxuICAgIGNvbnN0IG5ld1Nlc3Npb24gPSBjb25uZWN0KGF1dGhvcml0eSk7XG4gICAgY29ubmVjdGlvblBvb2wuc2V0KGF1dGhvcml0eSwgbmV3U2Vzc2lvbik7XG5cbiAgICBjb25zdCBzZXNzaW9uVGltZW91dCA9IHRoaXMuc2Vzc2lvblRpbWVvdXQ7XG4gICAgaWYgKHNlc3Npb25UaW1lb3V0KSB7XG4gICAgICBuZXdTZXNzaW9uLnNldFRpbWVvdXQoc2Vzc2lvblRpbWVvdXQsICgpID0+IHtcbiAgICAgICAgbmV3U2Vzc2lvbi5jbG9zZSgpO1xuICAgICAgICBjb25uZWN0aW9uUG9vbC5kZWxldGUoYXV0aG9yaXR5KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gbmV3U2Vzc2lvbjtcbiAgfVxufVxuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/node-http2-handler.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/set-connection-timeout.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/node-http-handler/dist/es/set-connection-timeout.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setConnectionTimeout: () => (/* binding */ setConnectionTimeout)\n/* harmony export */ });\nvar setConnectionTimeout = function (request, reject, timeoutInMs) {\n    if (timeoutInMs === void 0) { timeoutInMs = 0; }\n    if (!timeoutInMs) {\n        return;\n    }\n    request.on(\"socket\", function (socket) {\n        if (socket.connecting) {\n            // Throw a connecting timeout error unless a connection is made within x time.\n            var timeoutId_1 = setTimeout(function () {\n                // destroy the request.\n                request.destroy();\n                reject(Object.assign(new Error(\"Socket timed out without establishing a connection within \" + timeoutInMs + \" ms\"), {\n                    name: \"TimeoutError\",\n                }));\n            }, timeoutInMs);\n            // if the connection was established, cancel the timeout.\n            socket.on(\"connect\", function () {\n                clearTimeout(timeoutId_1);\n            });\n        }\n    });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0LWNvbm5lY3Rpb24tdGltZW91dC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zZXQtY29ubmVjdGlvbi10aW1lb3V0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE1BQU0sQ0FBQyxJQUFNLG9CQUFvQixHQUFHLFVBQUMsT0FBc0IsRUFBRSxNQUE0QixFQUFFLFdBQWU7SUFBZiw0QkFBQSxFQUFBLGVBQWU7SUFDeEcsSUFBSSxDQUFDLFdBQVcsRUFBRTtRQUNoQixPQUFPO0tBQ1I7SUFFRCxPQUFPLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxVQUFDLE1BQWM7UUFDbEMsSUFBSSxNQUFNLENBQUMsVUFBVSxFQUFFO1lBQ3JCLDhFQUE4RTtZQUM5RSxJQUFNLFdBQVMsR0FBRyxVQUFVLENBQUM7Z0JBQzNCLHVCQUF1QjtnQkFDdkIsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDO2dCQUNsQixNQUFNLENBQ0osTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEtBQUssQ0FBQywrREFBNkQsV0FBVyxRQUFLLENBQUMsRUFBRTtvQkFDdEcsSUFBSSxFQUFFLGNBQWM7aUJBQ3JCLENBQUMsQ0FDSCxDQUFDO1lBQ0osQ0FBQyxFQUFFLFdBQVcsQ0FBQyxDQUFDO1lBRWhCLHlEQUF5RDtZQUN6RCxNQUFNLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRTtnQkFDbkIsWUFBWSxDQUFDLFdBQVMsQ0FBQyxDQUFDO1lBQzFCLENBQUMsQ0FBQyxDQUFDO1NBQ0o7SUFDSCxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENsaWVudFJlcXVlc3QgfSBmcm9tIFwiaHR0cFwiO1xuaW1wb3J0IHsgU29ja2V0IH0gZnJvbSBcIm5ldFwiO1xuXG5leHBvcnQgY29uc3Qgc2V0Q29ubmVjdGlvblRpbWVvdXQgPSAocmVxdWVzdDogQ2xpZW50UmVxdWVzdCwgcmVqZWN0OiAoZXJyOiBFcnJvcikgPT4gdm9pZCwgdGltZW91dEluTXMgPSAwKSA9PiB7XG4gIGlmICghdGltZW91dEluTXMpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICByZXF1ZXN0Lm9uKFwic29ja2V0XCIsIChzb2NrZXQ6IFNvY2tldCkgPT4ge1xuICAgIGlmIChzb2NrZXQuY29ubmVjdGluZykge1xuICAgICAgLy8gVGhyb3cgYSBjb25uZWN0aW5nIHRpbWVvdXQgZXJyb3IgdW5sZXNzIGEgY29ubmVjdGlvbiBpcyBtYWRlIHdpdGhpbiB4IHRpbWUuXG4gICAgICBjb25zdCB0aW1lb3V0SWQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgLy8gZGVzdHJveSB0aGUgcmVxdWVzdC5cbiAgICAgICAgcmVxdWVzdC5kZXN0cm95KCk7XG4gICAgICAgIHJlamVjdChcbiAgICAgICAgICBPYmplY3QuYXNzaWduKG5ldyBFcnJvcihgU29ja2V0IHRpbWVkIG91dCB3aXRob3V0IGVzdGFibGlzaGluZyBhIGNvbm5lY3Rpb24gd2l0aGluICR7dGltZW91dEluTXN9IG1zYCksIHtcbiAgICAgICAgICAgIG5hbWU6IFwiVGltZW91dEVycm9yXCIsXG4gICAgICAgICAgfSlcbiAgICAgICAgKTtcbiAgICAgIH0sIHRpbWVvdXRJbk1zKTtcblxuICAgICAgLy8gaWYgdGhlIGNvbm5lY3Rpb24gd2FzIGVzdGFibGlzaGVkLCBjYW5jZWwgdGhlIHRpbWVvdXQuXG4gICAgICBzb2NrZXQub24oXCJjb25uZWN0XCIsICgpID0+IHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xufTtcbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbm9kZS1odHRwLWhhbmRsZXIvZGlzdC9lcy9zZXQtY29ubmVjdGlvbi10aW1lb3V0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQLGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxLQUFLO0FBQ0w7QUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL25vZGUtaHR0cC1oYW5kbGVyL2Rpc3QvZXMvc2V0LWNvbm5lY3Rpb24tdGltZW91dC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIHNldENvbm5lY3Rpb25UaW1lb3V0ID0gZnVuY3Rpb24gKHJlcXVlc3QsIHJlamVjdCwgdGltZW91dEluTXMpIHtcbiAgICBpZiAodGltZW91dEluTXMgPT09IHZvaWQgMCkgeyB0aW1lb3V0SW5NcyA9IDA7IH1cbiAgICBpZiAoIXRpbWVvdXRJbk1zKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgcmVxdWVzdC5vbihcInNvY2tldFwiLCBmdW5jdGlvbiAoc29ja2V0KSB7XG4gICAgICAgIGlmIChzb2NrZXQuY29ubmVjdGluZykge1xuICAgICAgICAgICAgLy8gVGhyb3cgYSBjb25uZWN0aW5nIHRpbWVvdXQgZXJyb3IgdW5sZXNzIGEgY29ubmVjdGlvbiBpcyBtYWRlIHdpdGhpbiB4IHRpbWUuXG4gICAgICAgICAgICB2YXIgdGltZW91dElkXzEgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAvLyBkZXN0cm95IHRoZSByZXF1ZXN0LlxuICAgICAgICAgICAgICAgIHJlcXVlc3QuZGVzdHJveSgpO1xuICAgICAgICAgICAgICAgIHJlamVjdChPYmplY3QuYXNzaWduKG5ldyBFcnJvcihcIlNvY2tldCB0aW1lZCBvdXQgd2l0aG91dCBlc3RhYmxpc2hpbmcgYSBjb25uZWN0aW9uIHdpdGhpbiBcIiArIHRpbWVvdXRJbk1zICsgXCIgbXNcIiksIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJUaW1lb3V0RXJyb3JcIixcbiAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICB9LCB0aW1lb3V0SW5Ncyk7XG4gICAgICAgICAgICAvLyBpZiB0aGUgY29ubmVjdGlvbiB3YXMgZXN0YWJsaXNoZWQsIGNhbmNlbCB0aGUgdGltZW91dC5cbiAgICAgICAgICAgIHNvY2tldC5vbihcImNvbm5lY3RcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SWRfMSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0pO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWMyVjBMV052Ym01bFkzUnBiMjR0ZEdsdFpXOTFkQzVxY3lJc0luTnZkWEpqWlZKdmIzUWlPaUlpTENKemIzVnlZMlZ6SWpwYklpNHVMeTR1TDNOeVl5OXpaWFF0WTI5dWJtVmpkR2x2YmkxMGFXMWxiM1YwTG5SeklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVZEJMRTFCUVUwc1EwRkJReXhKUVVGTkxHOUNRVUZ2UWl4SFFVRkhMRlZCUVVNc1QwRkJjMElzUlVGQlJTeE5RVUUwUWl4RlFVRkZMRmRCUVdVN1NVRkJaaXcwUWtGQlFTeEZRVUZCTEdWQlFXVTdTVUZEZUVjc1NVRkJTU3hEUVVGRExGZEJRVmNzUlVGQlJUdFJRVU5vUWl4UFFVRlBPMHRCUTFJN1NVRkZSQ3hQUVVGUExFTkJRVU1zUlVGQlJTeERRVUZETEZGQlFWRXNSVUZCUlN4VlFVRkRMRTFCUVdNN1VVRkRiRU1zU1VGQlNTeE5RVUZOTEVOQlFVTXNWVUZCVlN4RlFVRkZPMWxCUTNKQ0xEaEZRVUU0UlR0WlFVTTVSU3hKUVVGTkxGZEJRVk1zUjBGQlJ5eFZRVUZWTEVOQlFVTTdaMEpCUXpOQ0xIVkNRVUYxUWp0blFrRkRka0lzVDBGQlR5eERRVUZETEU5QlFVOHNSVUZCUlN4RFFVRkRPMmRDUVVOc1FpeE5RVUZOTEVOQlEwb3NUVUZCVFN4RFFVRkRMRTFCUVUwc1EwRkJReXhKUVVGSkxFdEJRVXNzUTBGQlF5d3JSRUZCTmtRc1YwRkJWeXhSUVVGTExFTkJRVU1zUlVGQlJUdHZRa0ZEZEVjc1NVRkJTU3hGUVVGRkxHTkJRV003YVVKQlEzSkNMRU5CUVVNc1EwRkRTQ3hEUVVGRE8xbEJRMG9zUTBGQlF5eEZRVUZGTEZkQlFWY3NRMEZCUXl4RFFVRkRPMWxCUldoQ0xIbEVRVUY1UkR0WlFVTjZSQ3hOUVVGTkxFTkJRVU1zUlVGQlJTeERRVUZETEZOQlFWTXNSVUZCUlR0blFrRkRia0lzV1VGQldTeERRVUZETEZkQlFWTXNRMEZCUXl4RFFVRkRPMWxCUXpGQ0xFTkJRVU1zUTBGQlF5eERRVUZETzFOQlEwbzdTVUZEU0N4RFFVRkRMRU5CUVVNc1EwRkJRenRCUVVOTUxFTkJRVU1zUTBGQlF5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbWx0Y0c5eWRDQjdJRU5zYVdWdWRGSmxjWFZsYzNRZ2ZTQm1jbTl0SUZ3aWFIUjBjRndpTzF4dWFXMXdiM0owSUhzZ1UyOWphMlYwSUgwZ1puSnZiU0JjSW01bGRGd2lPMXh1WEc1bGVIQnZjblFnWTI5dWMzUWdjMlYwUTI5dWJtVmpkR2x2YmxScGJXVnZkWFFnUFNBb2NtVnhkV1Z6ZERvZ1EyeHBaVzUwVW1WeGRXVnpkQ3dnY21WcVpXTjBPaUFvWlhKeU9pQkZjbkp2Y2lrZ1BUNGdkbTlwWkN3Z2RHbHRaVzkxZEVsdVRYTWdQU0F3S1NBOVBpQjdYRzRnSUdsbUlDZ2hkR2x0Wlc5MWRFbHVUWE1wSUh0Y2JpQWdJQ0J5WlhSMWNtNDdYRzRnSUgxY2JseHVJQ0J5WlhGMVpYTjBMbTl1S0Z3aWMyOWphMlYwWENJc0lDaHpiMk5yWlhRNklGTnZZMnRsZENrZ1BUNGdlMXh1SUNBZ0lHbG1JQ2h6YjJOclpYUXVZMjl1Ym1WamRHbHVaeWtnZTF4dUlDQWdJQ0FnTHk4Z1ZHaHliM2NnWVNCamIyNXVaV04wYVc1bklIUnBiV1Z2ZFhRZ1pYSnliM0lnZFc1c1pYTnpJR0VnWTI5dWJtVmpkR2x2YmlCcGN5QnRZV1JsSUhkcGRHaHBiaUI0SUhScGJXVXVYRzRnSUNBZ0lDQmpiMjV6ZENCMGFXMWxiM1YwU1dRZ1BTQnpaWFJVYVcxbGIzVjBLQ2dwSUQwK0lIdGNiaUFnSUNBZ0lDQWdMeThnWkdWemRISnZlU0IwYUdVZ2NtVnhkV1Z6ZEM1Y2JpQWdJQ0FnSUNBZ2NtVnhkV1Z6ZEM1a1pYTjBjbTk1S0NrN1hHNGdJQ0FnSUNBZ0lISmxhbVZqZENoY2JpQWdJQ0FnSUNBZ0lDQlBZbXBsWTNRdVlYTnphV2R1S0c1bGR5QkZjbkp2Y2loZ1UyOWphMlYwSUhScGJXVmtJRzkxZENCM2FYUm9iM1YwSUdWemRHRmliR2x6YUdsdVp5QmhJR052Ym01bFkzUnBiMjRnZDJsMGFHbHVJQ1I3ZEdsdFpXOTFkRWx1VFhOOUlHMXpZQ2tzSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklGd2lWR2x0Wlc5MWRFVnljbTl5WENJc1hHNGdJQ0FnSUNBZ0lDQWdmU2xjYmlBZ0lDQWdJQ0FnS1R0Y2JpQWdJQ0FnSUgwc0lIUnBiV1Z2ZFhSSmJrMXpLVHRjYmx4dUlDQWdJQ0FnTHk4Z2FXWWdkR2hsSUdOdmJtNWxZM1JwYjI0Z2QyRnpJR1Z6ZEdGaWJHbHphR1ZrTENCallXNWpaV3dnZEdobElIUnBiV1Z2ZFhRdVhHNGdJQ0FnSUNCemIyTnJaWFF1YjI0b1hDSmpiMjV1WldOMFhDSXNJQ2dwSUQwK0lIdGNiaUFnSUNBZ0lDQWdZMnhsWVhKVWFXMWxiM1YwS0hScGJXVnZkWFJKWkNrN1hHNGdJQ0FnSUNCOUtUdGNiaUFnSUNCOVhHNGdJSDBwTzF4dWZUdGNiaUpkZlE9PSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/set-connection-timeout.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/set-socket-timeout.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@aws-sdk/node-http-handler/dist/es/set-socket-timeout.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setSocketTimeout: () => (/* binding */ setSocketTimeout)\n/* harmony export */ });\nvar setSocketTimeout = function (request, reject, timeoutInMs) {\n    if (timeoutInMs === void 0) { timeoutInMs = 0; }\n    request.setTimeout(timeoutInMs, function () {\n        // destroy the request\n        request.destroy();\n        reject(Object.assign(new Error(\"Connection timed out after \" + timeoutInMs + \" ms\"), { name: \"TimeoutError\" }));\n    });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0LXNvY2tldC10aW1lb3V0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3NldC1zb2NrZXQtdGltZW91dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsSUFBTSxnQkFBZ0IsR0FBRyxVQUFDLE9BQXNCLEVBQUUsTUFBNEIsRUFBRSxXQUFlO0lBQWYsNEJBQUEsRUFBQSxlQUFlO0lBQ3BHLE9BQU8sQ0FBQyxVQUFVLENBQUMsV0FBVyxFQUFFO1FBQzlCLHNCQUFzQjtRQUN0QixPQUFPLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDbEIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxLQUFLLENBQUMsZ0NBQThCLFdBQVcsUUFBSyxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsY0FBYyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzdHLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2xpZW50UmVxdWVzdCB9IGZyb20gXCJodHRwXCI7XG5cbmV4cG9ydCBjb25zdCBzZXRTb2NrZXRUaW1lb3V0ID0gKHJlcXVlc3Q6IENsaWVudFJlcXVlc3QsIHJlamVjdDogKGVycjogRXJyb3IpID0+IHZvaWQsIHRpbWVvdXRJbk1zID0gMCkgPT4ge1xuICByZXF1ZXN0LnNldFRpbWVvdXQodGltZW91dEluTXMsICgpID0+IHtcbiAgICAvLyBkZXN0cm95IHRoZSByZXF1ZXN0XG4gICAgcmVxdWVzdC5kZXN0cm95KCk7XG4gICAgcmVqZWN0KE9iamVjdC5hc3NpZ24obmV3IEVycm9yKGBDb25uZWN0aW9uIHRpbWVkIG91dCBhZnRlciAke3RpbWVvdXRJbk1zfSBtc2ApLCB7IG5hbWU6IFwiVGltZW91dEVycm9yXCIgfSkpO1xuICB9KTtcbn07XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbm9kZS1odHRwLWhhbmRsZXIvZGlzdC9lcy9zZXQtc29ja2V0LXRpbWVvdXQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1Asa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLCtGQUErRixzQkFBc0I7QUFDckgsS0FBSztBQUNMO0FBQ0EsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9ub2RlLWh0dHAtaGFuZGxlci9kaXN0L2VzL3NldC1zb2NrZXQtdGltZW91dC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIHNldFNvY2tldFRpbWVvdXQgPSBmdW5jdGlvbiAocmVxdWVzdCwgcmVqZWN0LCB0aW1lb3V0SW5Ncykge1xuICAgIGlmICh0aW1lb3V0SW5NcyA9PT0gdm9pZCAwKSB7IHRpbWVvdXRJbk1zID0gMDsgfVxuICAgIHJlcXVlc3Quc2V0VGltZW91dCh0aW1lb3V0SW5NcywgZnVuY3Rpb24gKCkge1xuICAgICAgICAvLyBkZXN0cm95IHRoZSByZXF1ZXN0XG4gICAgICAgIHJlcXVlc3QuZGVzdHJveSgpO1xuICAgICAgICByZWplY3QoT2JqZWN0LmFzc2lnbihuZXcgRXJyb3IoXCJDb25uZWN0aW9uIHRpbWVkIG91dCBhZnRlciBcIiArIHRpbWVvdXRJbk1zICsgXCIgbXNcIiksIHsgbmFtZTogXCJUaW1lb3V0RXJyb3JcIiB9KSk7XG4gICAgfSk7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYzJWMExYTnZZMnRsZEMxMGFXMWxiM1YwTG1weklpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhNaU9sc2lMaTR2TGk0dmMzSmpMM05sZEMxemIyTnJaWFF0ZEdsdFpXOTFkQzUwY3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGRlFTeE5RVUZOTEVOQlFVTXNTVUZCVFN4blFrRkJaMElzUjBGQlJ5eFZRVUZETEU5QlFYTkNMRVZCUVVVc1RVRkJORUlzUlVGQlJTeFhRVUZsTzBsQlFXWXNORUpCUVVFc1JVRkJRU3hsUVVGbE8wbEJRM0JITEU5QlFVOHNRMEZCUXl4VlFVRlZMRU5CUVVNc1YwRkJWeXhGUVVGRk8xRkJRemxDTEhOQ1FVRnpRanRSUVVOMFFpeFBRVUZQTEVOQlFVTXNUMEZCVHl4RlFVRkZMRU5CUVVNN1VVRkRiRUlzVFVGQlRTeERRVUZETEUxQlFVMHNRMEZCUXl4TlFVRk5MRU5CUVVNc1NVRkJTU3hMUVVGTExFTkJRVU1zWjBOQlFUaENMRmRCUVZjc1VVRkJTeXhEUVVGRExFVkJRVVVzUlVGQlJTeEpRVUZKTEVWQlFVVXNZMEZCWXl4RlFVRkZMRU5CUVVNc1EwRkJReXhEUVVGRE8wbEJRemRITEVOQlFVTXNRMEZCUXl4RFFVRkRPMEZCUTB3c1EwRkJReXhEUVVGRElpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lhVzF3YjNKMElIc2dRMnhwWlc1MFVtVnhkV1Z6ZENCOUlHWnliMjBnWENKb2RIUndYQ0k3WEc1Y2JtVjRjRzl5ZENCamIyNXpkQ0J6WlhSVGIyTnJaWFJVYVcxbGIzVjBJRDBnS0hKbGNYVmxjM1E2SUVOc2FXVnVkRkpsY1hWbGMzUXNJSEpsYW1WamREb2dLR1Z5Y2pvZ1JYSnliM0lwSUQwK0lIWnZhV1FzSUhScGJXVnZkWFJKYmsxeklEMGdNQ2tnUFQ0Z2UxeHVJQ0J5WlhGMVpYTjBMbk5sZEZScGJXVnZkWFFvZEdsdFpXOTFkRWx1VFhNc0lDZ3BJRDArSUh0Y2JpQWdJQ0F2THlCa1pYTjBjbTk1SUhSb1pTQnlaWEYxWlhOMFhHNGdJQ0FnY21WeGRXVnpkQzVrWlhOMGNtOTVLQ2s3WEc0Z0lDQWdjbVZxWldOMEtFOWlhbVZqZEM1aGMzTnBaMjRvYm1WM0lFVnljbTl5S0dCRGIyNXVaV04wYVc5dUlIUnBiV1ZrSUc5MWRDQmhablJsY2lBa2UzUnBiV1Z2ZFhSSmJrMXpmU0J0YzJBcExDQjdJRzVoYldVNklGd2lWR2x0Wlc5MWRFVnljbTl5WENJZ2ZTa3BPMXh1SUNCOUtUdGNibjA3WEc0aVhYMD0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/set-socket-timeout.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/stream-collector/collector.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/node-http-handler/dist/es/stream-collector/collector.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Collector: () => (/* binding */ Collector)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/node-http-handler/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stream */ \"stream\");\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(stream__WEBPACK_IMPORTED_MODULE_0__);\n\n\nvar Collector = /** @class */ (function (_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__extends)(Collector, _super);\n    function Collector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.bufferedBytes = [];\n        return _this;\n    }\n    Collector.prototype._write = function (chunk, encoding, callback) {\n        this.bufferedBytes.push(chunk);\n        callback();\n    };\n    return Collector;\n}(stream__WEBPACK_IMPORTED_MODULE_0__.Writable));\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sbGVjdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3N0cmVhbS1jb2xsZWN0b3IvY29sbGVjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQ2xDO0lBQStCLDZCQUFRO0lBQXZDO1FBQUEscUVBTUM7UUFMaUIsbUJBQWEsR0FBYSxFQUFFLENBQUM7O0lBSy9DLENBQUM7SUFKQywwQkFBTSxHQUFOLFVBQU8sS0FBYSxFQUFFLFFBQWdCLEVBQUUsUUFBK0I7UUFDckUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDL0IsUUFBUSxFQUFFLENBQUM7SUFDYixDQUFDO0lBQ0gsZ0JBQUM7QUFBRCxDQUFDLEFBTkQsQ0FBK0IsUUFBUSxHQU10QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFdyaXRhYmxlIH0gZnJvbSBcInN0cmVhbVwiO1xuZXhwb3J0IGNsYXNzIENvbGxlY3RvciBleHRlbmRzIFdyaXRhYmxlIHtcbiAgcHVibGljIHJlYWRvbmx5IGJ1ZmZlcmVkQnl0ZXM6IEJ1ZmZlcltdID0gW107XG4gIF93cml0ZShjaHVuazogQnVmZmVyLCBlbmNvZGluZzogc3RyaW5nLCBjYWxsYmFjazogKGVycj86IEVycm9yKSA9PiB2b2lkKSB7XG4gICAgdGhpcy5idWZmZXJlZEJ5dGVzLnB1c2goY2h1bmspO1xuICAgIGNhbGxiYWNrKCk7XG4gIH1cbn1cbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbm9kZS1odHRwLWhhbmRsZXIvZGlzdC9lcy9zdHJlYW0tY29sbGVjdG9yL2NvbGxlY3Rvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWtDO0FBQ0E7QUFDbEM7QUFDQSxJQUFJLGdEQUFTO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLENBQUMsNENBQVE7QUFDVztBQUNyQiwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL25vZGUtaHR0cC1oYW5kbGVyL2Rpc3QvZXMvc3RyZWFtLWNvbGxlY3Rvci9jb2xsZWN0b3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19leHRlbmRzIH0gZnJvbSBcInRzbGliXCI7XG5pbXBvcnQgeyBXcml0YWJsZSB9IGZyb20gXCJzdHJlYW1cIjtcbnZhciBDb2xsZWN0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKENvbGxlY3RvciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBDb2xsZWN0b3IoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5idWZmZXJlZEJ5dGVzID0gW107XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgQ29sbGVjdG9yLnByb3RvdHlwZS5fd3JpdGUgPSBmdW5jdGlvbiAoY2h1bmssIGVuY29kaW5nLCBjYWxsYmFjaykge1xuICAgICAgICB0aGlzLmJ1ZmZlcmVkQnl0ZXMucHVzaChjaHVuayk7XG4gICAgICAgIGNhbGxiYWNrKCk7XG4gICAgfTtcbiAgICByZXR1cm4gQ29sbGVjdG9yO1xufShXcml0YWJsZSkpO1xuZXhwb3J0IHsgQ29sbGVjdG9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lZMjlzYkdWamRHOXlMbXB6SWl3aWMyOTFjbU5sVW05dmRDSTZJaUlzSW5OdmRYSmpaWE1pT2xzaUxpNHZMaTR2TGk0dmMzSmpMM04wY21WaGJTMWpiMnhzWldOMGIzSXZZMjlzYkdWamRHOXlMblJ6SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUk3UVVGQlFTeFBRVUZQTEVWQlFVVXNVVUZCVVN4RlFVRkZMRTFCUVUwc1VVRkJVU3hEUVVGRE8wRkJRMnhETzBsQlFTdENMRFpDUVVGUk8wbEJRWFpETzFGQlFVRXNjVVZCVFVNN1VVRk1hVUlzYlVKQlFXRXNSMEZCWVN4RlFVRkZMRU5CUVVNN08wbEJTeTlETEVOQlFVTTdTVUZLUXl3d1FrRkJUU3hIUVVGT0xGVkJRVThzUzBGQllTeEZRVUZGTEZGQlFXZENMRVZCUVVVc1VVRkJLMEk3VVVGRGNrVXNTVUZCU1N4RFFVRkRMR0ZCUVdFc1EwRkJReXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTTdVVUZETDBJc1VVRkJVU3hGUVVGRkxFTkJRVU03U1VGRFlpeERRVUZETzBsQlEwZ3NaMEpCUVVNN1FVRkJSQ3hEUVVGRExFRkJUa1FzUTBGQkswSXNVVUZCVVN4SFFVMTBReUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSW1sdGNHOXlkQ0I3SUZkeWFYUmhZbXhsSUgwZ1puSnZiU0JjSW5OMGNtVmhiVndpTzF4dVpYaHdiM0owSUdOc1lYTnpJRU52Ykd4bFkzUnZjaUJsZUhSbGJtUnpJRmR5YVhSaFlteGxJSHRjYmlBZ2NIVmliR2xqSUhKbFlXUnZibXg1SUdKMVptWmxjbVZrUW5sMFpYTTZJRUoxWm1abGNsdGRJRDBnVzEwN1hHNGdJRjkzY21sMFpTaGphSFZ1YXpvZ1FuVm1abVZ5TENCbGJtTnZaR2x1WnpvZ2MzUnlhVzVuTENCallXeHNZbUZqYXpvZ0tHVnljajg2SUVWeWNtOXlLU0E5UGlCMmIybGtLU0I3WEc0Z0lDQWdkR2hwY3k1aWRXWm1aWEpsWkVKNWRHVnpMbkIxYzJnb1kyaDFibXNwTzF4dUlDQWdJR05oYkd4aVlXTnJLQ2s3WEc0Z0lIMWNibjFjYmlKZGZRPT0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/stream-collector/collector.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/stream-collector/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/node-http-handler/dist/es/stream-collector/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   streamCollector: () => (/* binding */ streamCollector)\n/* harmony export */ });\n/* harmony import */ var _collector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./collector */ \"(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/stream-collector/collector.js\");\n\nvar streamCollector = function (stream) {\n    return new Promise(function (resolve, reject) {\n        var collector = new _collector__WEBPACK_IMPORTED_MODULE_0__.Collector();\n        stream.pipe(collector);\n        stream.on(\"error\", function (err) {\n            // if the source errors, the destination stream needs to manually end\n            collector.end();\n            reject(err);\n        });\n        collector.on(\"error\", reject);\n        collector.on(\"finish\", function () {\n            var bytes = new Uint8Array(Buffer.concat(this.bufferedBytes));\n            resolve(bytes);\n        });\n    });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc3RyZWFtLWNvbGxlY3Rvci9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRXhDLE1BQU0sQ0FBQyxJQUFNLGVBQWUsR0FBb0IsVUFBQyxNQUFnQjtJQUMvRCxPQUFBLElBQUksT0FBTyxDQUFDLFVBQUMsT0FBTyxFQUFFLE1BQU07UUFDMUIsSUFBTSxTQUFTLEdBQUcsSUFBSSxTQUFTLEVBQUUsQ0FBQztRQUNsQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3ZCLE1BQU0sQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLFVBQUMsR0FBRztZQUNyQixxRUFBcUU7WUFDckUsU0FBUyxDQUFDLEdBQUcsRUFBRSxDQUFDO1lBQ2hCLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNkLENBQUMsQ0FBQyxDQUFDO1FBQ0gsU0FBUyxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDOUIsU0FBUyxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUU7WUFDckIsSUFBTSxLQUFLLEdBQUcsSUFBSSxVQUFVLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztZQUNoRSxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDakIsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUM7QUFiRixDQWFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdHJlYW1Db2xsZWN0b3IgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcbmltcG9ydCB7IFJlYWRhYmxlIH0gZnJvbSBcInN0cmVhbVwiO1xuXG5pbXBvcnQgeyBDb2xsZWN0b3IgfSBmcm9tIFwiLi9jb2xsZWN0b3JcIjtcblxuZXhwb3J0IGNvbnN0IHN0cmVhbUNvbGxlY3RvcjogU3RyZWFtQ29sbGVjdG9yID0gKHN0cmVhbTogUmVhZGFibGUpOiBQcm9taXNlPFVpbnQ4QXJyYXk+ID0+XG4gIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBjb25zdCBjb2xsZWN0b3IgPSBuZXcgQ29sbGVjdG9yKCk7XG4gICAgc3RyZWFtLnBpcGUoY29sbGVjdG9yKTtcbiAgICBzdHJlYW0ub24oXCJlcnJvclwiLCAoZXJyKSA9PiB7XG4gICAgICAvLyBpZiB0aGUgc291cmNlIGVycm9ycywgdGhlIGRlc3RpbmF0aW9uIHN0cmVhbSBuZWVkcyB0byBtYW51YWxseSBlbmRcbiAgICAgIGNvbGxlY3Rvci5lbmQoKTtcbiAgICAgIHJlamVjdChlcnIpO1xuICAgIH0pO1xuICAgIGNvbGxlY3Rvci5vbihcImVycm9yXCIsIHJlamVjdCk7XG4gICAgY29sbGVjdG9yLm9uKFwiZmluaXNoXCIsIGZ1bmN0aW9uICh0aGlzOiBDb2xsZWN0b3IpIHtcbiAgICAgIGNvbnN0IGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoQnVmZmVyLmNvbmNhdCh0aGlzLmJ1ZmZlcmVkQnl0ZXMpKTtcbiAgICAgIHJlc29sdmUoYnl0ZXMpO1xuICAgIH0pO1xuICB9KTtcbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbm9kZS1odHRwLWhhbmRsZXIvZGlzdC9lcy9zdHJlYW0tY29sbGVjdG9yL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdDO0FBQ2pDO0FBQ1A7QUFDQSw0QkFBNEIsaURBQVM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL25vZGUtaHR0cC1oYW5kbGVyL2Rpc3QvZXMvc3RyZWFtLWNvbGxlY3Rvci9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb2xsZWN0b3IgfSBmcm9tIFwiLi9jb2xsZWN0b3JcIjtcbmV4cG9ydCB2YXIgc3RyZWFtQ29sbGVjdG9yID0gZnVuY3Rpb24gKHN0cmVhbSkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIHZhciBjb2xsZWN0b3IgPSBuZXcgQ29sbGVjdG9yKCk7XG4gICAgICAgIHN0cmVhbS5waXBlKGNvbGxlY3Rvcik7XG4gICAgICAgIHN0cmVhbS5vbihcImVycm9yXCIsIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgIC8vIGlmIHRoZSBzb3VyY2UgZXJyb3JzLCB0aGUgZGVzdGluYXRpb24gc3RyZWFtIG5lZWRzIHRvIG1hbnVhbGx5IGVuZFxuICAgICAgICAgICAgY29sbGVjdG9yLmVuZCgpO1xuICAgICAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgIH0pO1xuICAgICAgICBjb2xsZWN0b3Iub24oXCJlcnJvclwiLCByZWplY3QpO1xuICAgICAgICBjb2xsZWN0b3Iub24oXCJmaW5pc2hcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoQnVmZmVyLmNvbmNhdCh0aGlzLmJ1ZmZlcmVkQnl0ZXMpKTtcbiAgICAgICAgICAgIHJlc29sdmUoYnl0ZXMpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lhVzVrWlhndWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOHVMaTl6Y21NdmMzUnlaV0Z0TFdOdmJHeGxZM1J2Y2k5cGJtUmxlQzUwY3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGSFFTeFBRVUZQTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1lVRkJZU3hEUVVGRE8wRkJSWGhETEUxQlFVMHNRMEZCUXl4SlFVRk5MR1ZCUVdVc1IwRkJiMElzVlVGQlF5eE5RVUZuUWp0SlFVTXZSQ3hQUVVGQkxFbEJRVWtzVDBGQlR5eERRVUZETEZWQlFVTXNUMEZCVHl4RlFVRkZMRTFCUVUwN1VVRkRNVUlzU1VGQlRTeFRRVUZUTEVkQlFVY3NTVUZCU1N4VFFVRlRMRVZCUVVVc1EwRkJRenRSUVVOc1F5eE5RVUZOTEVOQlFVTXNTVUZCU1N4RFFVRkRMRk5CUVZNc1EwRkJReXhEUVVGRE8xRkJRM1pDTEUxQlFVMHNRMEZCUXl4RlFVRkZMRU5CUVVNc1QwRkJUeXhGUVVGRkxGVkJRVU1zUjBGQlJ6dFpRVU55UWl4eFJVRkJjVVU3V1VGRGNrVXNVMEZCVXl4RFFVRkRMRWRCUVVjc1JVRkJSU3hEUVVGRE8xbEJRMmhDTEUxQlFVMHNRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJRenRSUVVOa0xFTkJRVU1zUTBGQlF5eERRVUZETzFGQlEwZ3NVMEZCVXl4RFFVRkRMRVZCUVVVc1EwRkJReXhQUVVGUExFVkJRVVVzVFVGQlRTeERRVUZETEVOQlFVTTdVVUZET1VJc1UwRkJVeXhEUVVGRExFVkJRVVVzUTBGQlF5eFJRVUZSTEVWQlFVVTdXVUZEY2tJc1NVRkJUU3hMUVVGTExFZEJRVWNzU1VGQlNTeFZRVUZWTEVOQlFVTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU1zWVVGQllTeERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTm9SU3hQUVVGUExFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTTdVVUZEYWtJc1EwRkJReXhEUVVGRExFTkJRVU03U1VGRFRDeERRVUZETEVOQlFVTTdRVUZpUml4RFFXRkZMRU5CUVVNaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SnBiWEJ2Y25RZ2V5QlRkSEpsWVcxRGIyeHNaV04wYjNJZ2ZTQm1jbTl0SUZ3aVFHRjNjeTF6WkdzdmRIbHdaWE5jSWp0Y2JtbHRjRzl5ZENCN0lGSmxZV1JoWW14bElIMGdabkp2YlNCY0luTjBjbVZoYlZ3aU8xeHVYRzVwYlhCdmNuUWdleUJEYjJ4c1pXTjBiM0lnZlNCbWNtOXRJRndpTGk5amIyeHNaV04wYjNKY0lqdGNibHh1Wlhod2IzSjBJR052Ym5OMElITjBjbVZoYlVOdmJHeGxZM1J2Y2pvZ1UzUnlaV0Z0UTI5c2JHVmpkRzl5SUQwZ0tITjBjbVZoYlRvZ1VtVmhaR0ZpYkdVcE9pQlFjbTl0YVhObFBGVnBiblE0UVhKeVlYaytJRDArWEc0Z0lHNWxkeUJRY205dGFYTmxLQ2h5WlhOdmJIWmxMQ0J5WldwbFkzUXBJRDArSUh0Y2JpQWdJQ0JqYjI1emRDQmpiMnhzWldOMGIzSWdQU0J1WlhjZ1EyOXNiR1ZqZEc5eUtDazdYRzRnSUNBZ2MzUnlaV0Z0TG5CcGNHVW9ZMjlzYkdWamRHOXlLVHRjYmlBZ0lDQnpkSEpsWVcwdWIyNG9YQ0psY25KdmNsd2lMQ0FvWlhKeUtTQTlQaUI3WEc0Z0lDQWdJQ0F2THlCcFppQjBhR1VnYzI5MWNtTmxJR1Z5Y205eWN5d2dkR2hsSUdSbGMzUnBibUYwYVc5dUlITjBjbVZoYlNCdVpXVmtjeUIwYnlCdFlXNTFZV3hzZVNCbGJtUmNiaUFnSUNBZ0lHTnZiR3hsWTNSdmNpNWxibVFvS1R0Y2JpQWdJQ0FnSUhKbGFtVmpkQ2hsY25JcE8xeHVJQ0FnSUgwcE8xeHVJQ0FnSUdOdmJHeGxZM1J2Y2k1dmJpaGNJbVZ5Y205eVhDSXNJSEpsYW1WamRDazdYRzRnSUNBZ1kyOXNiR1ZqZEc5eUxtOXVLRndpWm1sdWFYTm9YQ0lzSUdaMWJtTjBhVzl1SUNoMGFHbHpPaUJEYjJ4c1pXTjBiM0lwSUh0Y2JpQWdJQ0FnSUdOdmJuTjBJR0o1ZEdWeklEMGdibVYzSUZWcGJuUTRRWEp5WVhrb1FuVm1abVZ5TG1OdmJtTmhkQ2gwYUdsekxtSjFabVpsY21Wa1FubDBaWE1wS1R0Y2JpQWdJQ0FnSUhKbGMyOXNkbVVvWW5sMFpYTXBPMXh1SUNBZ0lIMHBPMXh1SUNCOUtUdGNiaUpkZlE9PSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/stream-collector/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/write-request-body.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@aws-sdk/node-http-handler/dist/es/write-request-body.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   writeRequestBody: () => (/* binding */ writeRequestBody)\n/* harmony export */ });\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stream */ \"stream\");\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(stream__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction writeRequestBody(httpRequest, request) {\n    var expect = request.headers[\"Expect\"] || request.headers[\"expect\"];\n    if (expect === \"100-continue\") {\n        httpRequest.on(\"continue\", function () {\n            writeBody(httpRequest, request.body);\n        });\n    }\n    else {\n        writeBody(httpRequest, request.body);\n    }\n}\nfunction writeBody(httpRequest, body) {\n    if (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__.Readable) {\n        // pipe automatically handles end\n        body.pipe(httpRequest);\n    }\n    else if (body) {\n        httpRequest.end(Buffer.from(body));\n    }\n    else {\n        httpRequest.end();\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid3JpdGUtcmVxdWVzdC1ib2R5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3dyaXRlLXJlcXVlc3QtYm9keS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBRWxDLE1BQU0sVUFBVSxnQkFBZ0IsQ0FBQyxXQUE4QyxFQUFFLE9BQW9CO0lBQ25HLElBQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksT0FBTyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN0RSxJQUFJLE1BQU0sS0FBSyxjQUFjLEVBQUU7UUFDN0IsV0FBVyxDQUFDLEVBQUUsQ0FBQyxVQUFVLEVBQUU7WUFDekIsU0FBUyxDQUFDLFdBQVcsRUFBRSxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkMsQ0FBQyxDQUFDLENBQUM7S0FDSjtTQUFNO1FBQ0wsU0FBUyxDQUFDLFdBQVcsRUFBRSxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDdEM7QUFDSCxDQUFDO0FBRUQsU0FBUyxTQUFTLENBQ2hCLFdBQThDLEVBQzlDLElBQXFFO0lBRXJFLElBQUksSUFBSSxZQUFZLFFBQVEsRUFBRTtRQUM1QixpQ0FBaUM7UUFDakMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztLQUN4QjtTQUFNLElBQUksSUFBSSxFQUFFO1FBQ2YsV0FBVyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7S0FDcEM7U0FBTTtRQUNMLFdBQVcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztLQUNuQjtBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwUmVxdWVzdCB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuaW1wb3J0IHsgQ2xpZW50UmVxdWVzdCB9IGZyb20gXCJodHRwXCI7XG5pbXBvcnQgeyBDbGllbnRIdHRwMlN0cmVhbSB9IGZyb20gXCJodHRwMlwiO1xuaW1wb3J0IHsgUmVhZGFibGUgfSBmcm9tIFwic3RyZWFtXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiB3cml0ZVJlcXVlc3RCb2R5KGh0dHBSZXF1ZXN0OiBDbGllbnRSZXF1ZXN0IHwgQ2xpZW50SHR0cDJTdHJlYW0sIHJlcXVlc3Q6IEh0dHBSZXF1ZXN0KSB7XG4gIGNvbnN0IGV4cGVjdCA9IHJlcXVlc3QuaGVhZGVyc1tcIkV4cGVjdFwiXSB8fCByZXF1ZXN0LmhlYWRlcnNbXCJleHBlY3RcIl07XG4gIGlmIChleHBlY3QgPT09IFwiMTAwLWNvbnRpbnVlXCIpIHtcbiAgICBodHRwUmVxdWVzdC5vbihcImNvbnRpbnVlXCIsICgpID0+IHtcbiAgICAgIHdyaXRlQm9keShodHRwUmVxdWVzdCwgcmVxdWVzdC5ib2R5KTtcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICB3cml0ZUJvZHkoaHR0cFJlcXVlc3QsIHJlcXVlc3QuYm9keSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gd3JpdGVCb2R5KFxuICBodHRwUmVxdWVzdDogQ2xpZW50UmVxdWVzdCB8IENsaWVudEh0dHAyU3RyZWFtLFxuICBib2R5Pzogc3RyaW5nIHwgQXJyYXlCdWZmZXIgfCBBcnJheUJ1ZmZlclZpZXcgfCBSZWFkYWJsZSB8IFVpbnQ4QXJyYXlcbikge1xuICBpZiAoYm9keSBpbnN0YW5jZW9mIFJlYWRhYmxlKSB7XG4gICAgLy8gcGlwZSBhdXRvbWF0aWNhbGx5IGhhbmRsZXMgZW5kXG4gICAgYm9keS5waXBlKGh0dHBSZXF1ZXN0KTtcbiAgfSBlbHNlIGlmIChib2R5KSB7XG4gICAgaHR0cFJlcXVlc3QuZW5kKEJ1ZmZlci5mcm9tKGJvZHkpKTtcbiAgfSBlbHNlIHtcbiAgICBodHRwUmVxdWVzdC5lbmQoKTtcbiAgfVxufVxuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbm9kZS1odHRwLWhhbmRsZXIvZGlzdC9lcy93cml0ZS1yZXF1ZXN0LWJvZHkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtDO0FBQzNCO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDRDQUFRO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9ub2RlLWh0dHAtaGFuZGxlci9kaXN0L2VzL3dyaXRlLXJlcXVlc3QtYm9keS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZWFkYWJsZSB9IGZyb20gXCJzdHJlYW1cIjtcbmV4cG9ydCBmdW5jdGlvbiB3cml0ZVJlcXVlc3RCb2R5KGh0dHBSZXF1ZXN0LCByZXF1ZXN0KSB7XG4gICAgdmFyIGV4cGVjdCA9IHJlcXVlc3QuaGVhZGVyc1tcIkV4cGVjdFwiXSB8fCByZXF1ZXN0LmhlYWRlcnNbXCJleHBlY3RcIl07XG4gICAgaWYgKGV4cGVjdCA9PT0gXCIxMDAtY29udGludWVcIikge1xuICAgICAgICBodHRwUmVxdWVzdC5vbihcImNvbnRpbnVlXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHdyaXRlQm9keShodHRwUmVxdWVzdCwgcmVxdWVzdC5ib2R5KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB3cml0ZUJvZHkoaHR0cFJlcXVlc3QsIHJlcXVlc3QuYm9keSk7XG4gICAgfVxufVxuZnVuY3Rpb24gd3JpdGVCb2R5KGh0dHBSZXF1ZXN0LCBib2R5KSB7XG4gICAgaWYgKGJvZHkgaW5zdGFuY2VvZiBSZWFkYWJsZSkge1xuICAgICAgICAvLyBwaXBlIGF1dG9tYXRpY2FsbHkgaGFuZGxlcyBlbmRcbiAgICAgICAgYm9keS5waXBlKGh0dHBSZXF1ZXN0KTtcbiAgICB9XG4gICAgZWxzZSBpZiAoYm9keSkge1xuICAgICAgICBodHRwUmVxdWVzdC5lbmQoQnVmZmVyLmZyb20oYm9keSkpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgaHR0cFJlcXVlc3QuZW5kKCk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pZDNKcGRHVXRjbVZ4ZFdWemRDMWliMlI1TG1weklpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhNaU9sc2lMaTR2TGk0dmMzSmpMM2R5YVhSbExYSmxjWFZsYzNRdFltOWtlUzUwY3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGSFFTeFBRVUZQTEVWQlFVVXNVVUZCVVN4RlFVRkZMRTFCUVUwc1VVRkJVU3hEUVVGRE8wRkJSV3hETEUxQlFVMHNWVUZCVlN4blFrRkJaMElzUTBGQlF5eFhRVUU0UXl4RlFVRkZMRTlCUVc5Q08wbEJRMjVITEVsQlFVMHNUVUZCVFN4SFFVRkhMRTlCUVU4c1EwRkJReXhQUVVGUExFTkJRVU1zVVVGQlVTeERRVUZETEVsQlFVa3NUMEZCVHl4RFFVRkRMRTlCUVU4c1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGQlF6dEpRVU4wUlN4SlFVRkpMRTFCUVUwc1MwRkJTeXhqUVVGakxFVkJRVVU3VVVGRE4wSXNWMEZCVnl4RFFVRkRMRVZCUVVVc1EwRkJReXhWUVVGVkxFVkJRVVU3V1VGRGVrSXNVMEZCVXl4RFFVRkRMRmRCUVZjc1JVRkJSU3hQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdVVUZEZGtNc1EwRkJReXhEUVVGRExFTkJRVU03UzBGRFNqdFRRVUZOTzFGQlEwd3NVMEZCVXl4RFFVRkRMRmRCUVZjc1JVRkJSU3hQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdTMEZEZEVNN1FVRkRTQ3hEUVVGRE8wRkJSVVFzVTBGQlV5eFRRVUZUTEVOQlEyaENMRmRCUVRoRExFVkJRemxETEVsQlFYRkZPMGxCUlhKRkxFbEJRVWtzU1VGQlNTeFpRVUZaTEZGQlFWRXNSVUZCUlR0UlFVTTFRaXhwUTBGQmFVTTdVVUZEYWtNc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eFhRVUZYTEVOQlFVTXNRMEZCUXp0TFFVTjRRanRUUVVGTkxFbEJRVWtzU1VGQlNTeEZRVUZGTzFGQlEyWXNWMEZCVnl4RFFVRkRMRWRCUVVjc1EwRkJReXhOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRMRU5CUVVNN1MwRkRjRU03VTBGQlRUdFJRVU5NTEZkQlFWY3NRMEZCUXl4SFFVRkhMRVZCUVVVc1EwRkJRenRMUVVOdVFqdEJRVU5JTEVOQlFVTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpwYlhCdmNuUWdleUJJZEhSd1VtVnhkV1Z6ZENCOUlHWnliMjBnWENKQVlYZHpMWE5rYXk5MGVYQmxjMXdpTzF4dWFXMXdiM0owSUhzZ1EyeHBaVzUwVW1WeGRXVnpkQ0I5SUdaeWIyMGdYQ0pvZEhSd1hDSTdYRzVwYlhCdmNuUWdleUJEYkdsbGJuUklkSFJ3TWxOMGNtVmhiU0I5SUdaeWIyMGdYQ0pvZEhSd01sd2lPMXh1YVcxd2IzSjBJSHNnVW1WaFpHRmliR1VnZlNCbWNtOXRJRndpYzNSeVpXRnRYQ0k3WEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCM2NtbDBaVkpsY1hWbGMzUkNiMlI1S0doMGRIQlNaWEYxWlhOME9pQkRiR2xsYm5SU1pYRjFaWE4wSUh3Z1EyeHBaVzUwU0hSMGNESlRkSEpsWVcwc0lISmxjWFZsYzNRNklFaDBkSEJTWlhGMVpYTjBLU0I3WEc0Z0lHTnZibk4wSUdWNGNHVmpkQ0E5SUhKbGNYVmxjM1F1YUdWaFpHVnljMXRjSWtWNGNHVmpkRndpWFNCOGZDQnlaWEYxWlhOMExtaGxZV1JsY25OYlhDSmxlSEJsWTNSY0lsMDdYRzRnSUdsbUlDaGxlSEJsWTNRZ1BUMDlJRndpTVRBd0xXTnZiblJwYm5WbFhDSXBJSHRjYmlBZ0lDQm9kSFJ3VW1WeGRXVnpkQzV2YmloY0ltTnZiblJwYm5WbFhDSXNJQ2dwSUQwK0lIdGNiaUFnSUNBZ0lIZHlhWFJsUW05a2VTaG9kSFJ3VW1WeGRXVnpkQ3dnY21WeGRXVnpkQzVpYjJSNUtUdGNiaUFnSUNCOUtUdGNiaUFnZlNCbGJITmxJSHRjYmlBZ0lDQjNjbWwwWlVKdlpIa29hSFIwY0ZKbGNYVmxjM1FzSUhKbGNYVmxjM1F1WW05a2VTazdYRzRnSUgxY2JuMWNibHh1Wm5WdVkzUnBiMjRnZDNKcGRHVkNiMlI1S0Z4dUlDQm9kSFJ3VW1WeGRXVnpkRG9nUTJ4cFpXNTBVbVZ4ZFdWemRDQjhJRU5zYVdWdWRFaDBkSEF5VTNSeVpXRnRMRnh1SUNCaWIyUjVQem9nYzNSeWFXNW5JSHdnUVhKeVlYbENkV1ptWlhJZ2ZDQkJjbkpoZVVKMVptWmxjbFpwWlhjZ2ZDQlNaV0ZrWVdKc1pTQjhJRlZwYm5RNFFYSnlZWGxjYmlrZ2UxeHVJQ0JwWmlBb1ltOWtlU0JwYm5OMFlXNWpaVzltSUZKbFlXUmhZbXhsS1NCN1hHNGdJQ0FnTHk4Z2NHbHdaU0JoZFhSdmJXRjBhV05oYkd4NUlHaGhibVJzWlhNZ1pXNWtYRzRnSUNBZ1ltOWtlUzV3YVhCbEtHaDBkSEJTWlhGMVpYTjBLVHRjYmlBZ2ZTQmxiSE5sSUdsbUlDaGliMlI1S1NCN1hHNGdJQ0FnYUhSMGNGSmxjWFZsYzNRdVpXNWtLRUoxWm1abGNpNW1jbTl0S0dKdlpIa3BLVHRjYmlBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0JvZEhSd1VtVnhkV1Z6ZEM1bGJtUW9LVHRjYmlBZ2ZWeHVmVnh1SWwxOSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/node-http-handler/dist/es/write-request-body.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/node-http-handler/node_modules/tslib/tslib.es6.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/node-http-handler/node_modules/tslib/tslib.es6.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/node-http-handler/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/ProviderError.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@aws-sdk/property-provider/dist/es/ProviderError.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProviderError: () => (/* binding */ ProviderError)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/property-provider/node_modules/tslib/tslib.es6.js\");\n\n/**\n * An error representing a failure of an individual credential provider.\n *\n * This error class has special meaning to the {@link chain} method. If a\n * provider in the chain is rejected with an error, the chain will only proceed\n * to the next provider if the value of the `tryNextLink` property on the error\n * is truthy. This allows individual providers to halt the chain and also\n * ensures the chain will stop if an entirely unexpected error is encountered.\n */\nvar ProviderError = /** @class */ (function (_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(ProviderError, _super);\n    function ProviderError(message, tryNextLink) {\n        if (tryNextLink === void 0) { tryNextLink = true; }\n        var _this = _super.call(this, message) || this;\n        _this.tryNextLink = tryNextLink;\n        return _this;\n    }\n    return ProviderError;\n}(Error));\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJvdmlkZXJFcnJvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Qcm92aWRlckVycm9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7R0FRRztBQUNIO0lBQW1DLGlDQUFLO0lBQ3RDLHVCQUFZLE9BQWUsRUFBa0IsV0FBMkI7UUFBM0IsNEJBQUEsRUFBQSxrQkFBMkI7UUFBeEUsWUFDRSxrQkFBTSxPQUFPLENBQUMsU0FDZjtRQUY0QyxpQkFBVyxHQUFYLFdBQVcsQ0FBZ0I7O0lBRXhFLENBQUM7SUFDSCxvQkFBQztBQUFELENBQUMsQUFKRCxDQUFtQyxLQUFLLEdBSXZDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBbiBlcnJvciByZXByZXNlbnRpbmcgYSBmYWlsdXJlIG9mIGFuIGluZGl2aWR1YWwgY3JlZGVudGlhbCBwcm92aWRlci5cbiAqXG4gKiBUaGlzIGVycm9yIGNsYXNzIGhhcyBzcGVjaWFsIG1lYW5pbmcgdG8gdGhlIHtAbGluayBjaGFpbn0gbWV0aG9kLiBJZiBhXG4gKiBwcm92aWRlciBpbiB0aGUgY2hhaW4gaXMgcmVqZWN0ZWQgd2l0aCBhbiBlcnJvciwgdGhlIGNoYWluIHdpbGwgb25seSBwcm9jZWVkXG4gKiB0byB0aGUgbmV4dCBwcm92aWRlciBpZiB0aGUgdmFsdWUgb2YgdGhlIGB0cnlOZXh0TGlua2AgcHJvcGVydHkgb24gdGhlIGVycm9yXG4gKiBpcyB0cnV0aHkuIFRoaXMgYWxsb3dzIGluZGl2aWR1YWwgcHJvdmlkZXJzIHRvIGhhbHQgdGhlIGNoYWluIGFuZCBhbHNvXG4gKiBlbnN1cmVzIHRoZSBjaGFpbiB3aWxsIHN0b3AgaWYgYW4gZW50aXJlbHkgdW5leHBlY3RlZCBlcnJvciBpcyBlbmNvdW50ZXJlZC5cbiAqL1xuZXhwb3J0IGNsYXNzIFByb3ZpZGVyRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2U6IHN0cmluZywgcHVibGljIHJlYWRvbmx5IHRyeU5leHRMaW5rOiBib29sZWFuID0gdHJ1ZSkge1xuICAgIHN1cGVyKG1lc3NhZ2UpO1xuICB9XG59XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvcHJvcGVydHktcHJvdmlkZXIvZGlzdC9lcy9Qcm92aWRlckVycm9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCxhQUFhO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksZ0RBQVM7QUFDYjtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUN3QjtBQUN6QiwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL3Byb3BlcnR5LXByb3ZpZGVyL2Rpc3QvZXMvUHJvdmlkZXJFcnJvci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX2V4dGVuZHMgfSBmcm9tIFwidHNsaWJcIjtcbi8qKlxuICogQW4gZXJyb3IgcmVwcmVzZW50aW5nIGEgZmFpbHVyZSBvZiBhbiBpbmRpdmlkdWFsIGNyZWRlbnRpYWwgcHJvdmlkZXIuXG4gKlxuICogVGhpcyBlcnJvciBjbGFzcyBoYXMgc3BlY2lhbCBtZWFuaW5nIHRvIHRoZSB7QGxpbmsgY2hhaW59IG1ldGhvZC4gSWYgYVxuICogcHJvdmlkZXIgaW4gdGhlIGNoYWluIGlzIHJlamVjdGVkIHdpdGggYW4gZXJyb3IsIHRoZSBjaGFpbiB3aWxsIG9ubHkgcHJvY2VlZFxuICogdG8gdGhlIG5leHQgcHJvdmlkZXIgaWYgdGhlIHZhbHVlIG9mIHRoZSBgdHJ5TmV4dExpbmtgIHByb3BlcnR5IG9uIHRoZSBlcnJvclxuICogaXMgdHJ1dGh5LiBUaGlzIGFsbG93cyBpbmRpdmlkdWFsIHByb3ZpZGVycyB0byBoYWx0IHRoZSBjaGFpbiBhbmQgYWxzb1xuICogZW5zdXJlcyB0aGUgY2hhaW4gd2lsbCBzdG9wIGlmIGFuIGVudGlyZWx5IHVuZXhwZWN0ZWQgZXJyb3IgaXMgZW5jb3VudGVyZWQuXG4gKi9cbnZhciBQcm92aWRlckVycm9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhQcm92aWRlckVycm9yLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFByb3ZpZGVyRXJyb3IobWVzc2FnZSwgdHJ5TmV4dExpbmspIHtcbiAgICAgICAgaWYgKHRyeU5leHRMaW5rID09PSB2b2lkIDApIHsgdHJ5TmV4dExpbmsgPSB0cnVlOyB9XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIG1lc3NhZ2UpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLnRyeU5leHRMaW5rID0gdHJ5TmV4dExpbms7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIFByb3ZpZGVyRXJyb3I7XG59KEVycm9yKSk7XG5leHBvcnQgeyBQcm92aWRlckVycm9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lVSEp2ZG1sa1pYSkZjbkp2Y2k1cWN5SXNJbk52ZFhKalpWSnZiM1FpT2lJaUxDSnpiM1Z5WTJWeklqcGJJaTR1THk0dUwzTnlZeTlRY205MmFXUmxja1Z5Y205eUxuUnpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSTdRVUZCUVRzN096czdPenM3UjBGUlJ6dEJRVU5JTzBsQlFXMURMR2xEUVVGTE8wbEJRM1JETEhWQ1FVRlpMRTlCUVdVc1JVRkJhMElzVjBGQk1rSTdVVUZCTTBJc05FSkJRVUVzUlVGQlFTeHJRa0ZCTWtJN1VVRkJlRVVzV1VGRFJTeHJRa0ZCVFN4UFFVRlBMRU5CUVVNc1UwRkRaanRSUVVZMFF5eHBRa0ZCVnl4SFFVRllMRmRCUVZjc1EwRkJaMEk3TzBsQlJYaEZMRU5CUVVNN1NVRkRTQ3h2UWtGQlF6dEJRVUZFTEVOQlFVTXNRVUZLUkN4RFFVRnRReXhMUVVGTExFZEJTWFpESWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaUx5b3FYRzRnS2lCQmJpQmxjbkp2Y2lCeVpYQnlaWE5sYm5ScGJtY2dZU0JtWVdsc2RYSmxJRzltSUdGdUlHbHVaR2wyYVdSMVlXd2dZM0psWkdWdWRHbGhiQ0J3Y205MmFXUmxjaTVjYmlBcVhHNGdLaUJVYUdseklHVnljbTl5SUdOc1lYTnpJR2hoY3lCemNHVmphV0ZzSUcxbFlXNXBibWNnZEc4Z2RHaGxJSHRBYkdsdWF5QmphR0ZwYm4wZ2JXVjBhRzlrTGlCSlppQmhYRzRnS2lCd2NtOTJhV1JsY2lCcGJpQjBhR1VnWTJoaGFXNGdhWE1nY21WcVpXTjBaV1FnZDJsMGFDQmhiaUJsY25KdmNpd2dkR2hsSUdOb1lXbHVJSGRwYkd3Z2IyNXNlU0J3Y205alpXVmtYRzRnS2lCMGJ5QjBhR1VnYm1WNGRDQndjbTkyYVdSbGNpQnBaaUIwYUdVZ2RtRnNkV1VnYjJZZ2RHaGxJR0IwY25sT1pYaDBUR2x1YTJBZ2NISnZjR1Z5ZEhrZ2IyNGdkR2hsSUdWeWNtOXlYRzRnS2lCcGN5QjBjblYwYUhrdUlGUm9hWE1nWVd4c2IzZHpJR2x1WkdsMmFXUjFZV3dnY0hKdmRtbGtaWEp6SUhSdklHaGhiSFFnZEdobElHTm9ZV2x1SUdGdVpDQmhiSE52WEc0Z0tpQmxibk4xY21WeklIUm9aU0JqYUdGcGJpQjNhV3hzSUhOMGIzQWdhV1lnWVc0Z1pXNTBhWEpsYkhrZ2RXNWxlSEJsWTNSbFpDQmxjbkp2Y2lCcGN5QmxibU52ZFc1MFpYSmxaQzVjYmlBcUwxeHVaWGh3YjNKMElHTnNZWE56SUZCeWIzWnBaR1Z5UlhKeWIzSWdaWGgwWlc1a2N5QkZjbkp2Y2lCN1hHNGdJR052Ym5OMGNuVmpkRzl5S0cxbGMzTmhaMlU2SUhOMGNtbHVaeXdnY0hWaWJHbGpJSEpsWVdSdmJteDVJSFJ5ZVU1bGVIUk1hVzVyT2lCaWIyOXNaV0Z1SUQwZ2RISjFaU2tnZTF4dUlDQWdJSE4xY0dWeUtHMWxjM05oWjJVcE8xeHVJQ0I5WEc1OVhHNGlYWDA9Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/ProviderError.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/chain.js":
/*!******************************************************************!*\
  !*** ./node_modules/@aws-sdk/property-provider/dist/es/chain.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   chain: () => (/* binding */ chain)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/property-provider/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _ProviderError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ProviderError */ \"(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/ProviderError.js\");\n\n\n/**\n * Compose a single credential provider function from multiple credential\n * providers. The first provider in the argument list will always be invoked;\n * subsequent providers in the list will be invoked in the order in which the\n * were received if the preceding provider did not successfully resolve.\n *\n * If no providers were received or no provider resolves successfully, the\n * returned promise will be rejected.\n */\nfunction chain() {\n    var providers = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        providers[_i] = arguments[_i];\n    }\n    return function () {\n        var e_1, _a;\n        var promise = Promise.reject(new _ProviderError__WEBPACK_IMPORTED_MODULE_0__.ProviderError(\"No providers in chain\"));\n        var _loop_1 = function (provider) {\n            promise = promise.catch(function (err) {\n                if (err === null || err === void 0 ? void 0 : err.tryNextLink) {\n                    return provider();\n                }\n                throw err;\n            });\n        };\n        try {\n            for (var providers_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__values)(providers), providers_1_1 = providers_1.next(); !providers_1_1.done; providers_1_1 = providers_1.next()) {\n                var provider = providers_1_1.value;\n                _loop_1(provider);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (providers_1_1 && !providers_1_1.done && (_a = providers_1.return)) _a.call(providers_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return promise;\n    };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhaW4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY2hhaW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUVBLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUVoRDs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sVUFBVSxLQUFLO0lBQUksbUJBQWdDO1NBQWhDLFVBQWdDLEVBQWhDLHFCQUFnQyxFQUFoQyxJQUFnQztRQUFoQyw4QkFBZ0M7O0lBQ3ZELE9BQU87O1FBQ0wsSUFBSSxPQUFPLEdBQWUsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLGFBQWEsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLENBQUM7Z0NBQzFFLFFBQVE7WUFDakIsT0FBTyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsVUFBQyxHQUFRO2dCQUMvQixJQUFJLEdBQUcsYUFBSCxHQUFHLHVCQUFILEdBQUcsQ0FBRSxXQUFXLEVBQUU7b0JBQ3BCLE9BQU8sUUFBUSxFQUFFLENBQUM7aUJBQ25CO2dCQUVELE1BQU0sR0FBRyxDQUFDO1lBQ1osQ0FBQyxDQUFDLENBQUM7OztZQVBMLEtBQXVCLElBQUEsY0FBQSxTQUFBLFNBQVMsQ0FBQSxvQ0FBQTtnQkFBM0IsSUFBTSxRQUFRLHNCQUFBO3dCQUFSLFFBQVE7YUFRbEI7Ozs7Ozs7OztRQUVELE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUMsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5pbXBvcnQgeyBQcm92aWRlckVycm9yIH0gZnJvbSBcIi4vUHJvdmlkZXJFcnJvclwiO1xuXG4vKipcbiAqIENvbXBvc2UgYSBzaW5nbGUgY3JlZGVudGlhbCBwcm92aWRlciBmdW5jdGlvbiBmcm9tIG11bHRpcGxlIGNyZWRlbnRpYWxcbiAqIHByb3ZpZGVycy4gVGhlIGZpcnN0IHByb3ZpZGVyIGluIHRoZSBhcmd1bWVudCBsaXN0IHdpbGwgYWx3YXlzIGJlIGludm9rZWQ7XG4gKiBzdWJzZXF1ZW50IHByb3ZpZGVycyBpbiB0aGUgbGlzdCB3aWxsIGJlIGludm9rZWQgaW4gdGhlIG9yZGVyIGluIHdoaWNoIHRoZVxuICogd2VyZSByZWNlaXZlZCBpZiB0aGUgcHJlY2VkaW5nIHByb3ZpZGVyIGRpZCBub3Qgc3VjY2Vzc2Z1bGx5IHJlc29sdmUuXG4gKlxuICogSWYgbm8gcHJvdmlkZXJzIHdlcmUgcmVjZWl2ZWQgb3Igbm8gcHJvdmlkZXIgcmVzb2x2ZXMgc3VjY2Vzc2Z1bGx5LCB0aGVcbiAqIHJldHVybmVkIHByb21pc2Ugd2lsbCBiZSByZWplY3RlZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNoYWluPFQ+KC4uLnByb3ZpZGVyczogQXJyYXk8UHJvdmlkZXI8VD4+KTogUHJvdmlkZXI8VD4ge1xuICByZXR1cm4gKCkgPT4ge1xuICAgIGxldCBwcm9taXNlOiBQcm9taXNlPFQ+ID0gUHJvbWlzZS5yZWplY3QobmV3IFByb3ZpZGVyRXJyb3IoXCJObyBwcm92aWRlcnMgaW4gY2hhaW5cIikpO1xuICAgIGZvciAoY29uc3QgcHJvdmlkZXIgb2YgcHJvdmlkZXJzKSB7XG4gICAgICBwcm9taXNlID0gcHJvbWlzZS5jYXRjaCgoZXJyOiBhbnkpID0+IHtcbiAgICAgICAgaWYgKGVycj8udHJ5TmV4dExpbmspIHtcbiAgICAgICAgICByZXR1cm4gcHJvdmlkZXIoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRocm93IGVycjtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBwcm9taXNlO1xuICB9O1xufVxuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvcHJvcGVydHktcHJvdmlkZXIvZGlzdC9lcy9jaGFpbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBaUM7QUFDZTtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EscUJBQXFCLHVCQUF1QjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5Qyx5REFBYTtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLG1DQUFtQywrQ0FBUSxpREFBaUQscUJBQXFCO0FBQ2pIO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFFBQVE7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL3Byb3BlcnR5LXByb3ZpZGVyL2Rpc3QvZXMvY2hhaW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX192YWx1ZXMgfSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IFByb3ZpZGVyRXJyb3IgfSBmcm9tIFwiLi9Qcm92aWRlckVycm9yXCI7XG4vKipcbiAqIENvbXBvc2UgYSBzaW5nbGUgY3JlZGVudGlhbCBwcm92aWRlciBmdW5jdGlvbiBmcm9tIG11bHRpcGxlIGNyZWRlbnRpYWxcbiAqIHByb3ZpZGVycy4gVGhlIGZpcnN0IHByb3ZpZGVyIGluIHRoZSBhcmd1bWVudCBsaXN0IHdpbGwgYWx3YXlzIGJlIGludm9rZWQ7XG4gKiBzdWJzZXF1ZW50IHByb3ZpZGVycyBpbiB0aGUgbGlzdCB3aWxsIGJlIGludm9rZWQgaW4gdGhlIG9yZGVyIGluIHdoaWNoIHRoZVxuICogd2VyZSByZWNlaXZlZCBpZiB0aGUgcHJlY2VkaW5nIHByb3ZpZGVyIGRpZCBub3Qgc3VjY2Vzc2Z1bGx5IHJlc29sdmUuXG4gKlxuICogSWYgbm8gcHJvdmlkZXJzIHdlcmUgcmVjZWl2ZWQgb3Igbm8gcHJvdmlkZXIgcmVzb2x2ZXMgc3VjY2Vzc2Z1bGx5LCB0aGVcbiAqIHJldHVybmVkIHByb21pc2Ugd2lsbCBiZSByZWplY3RlZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNoYWluKCkge1xuICAgIHZhciBwcm92aWRlcnMgPSBbXTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICBwcm92aWRlcnNbX2ldID0gYXJndW1lbnRzW19pXTtcbiAgICB9XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGVfMSwgX2E7XG4gICAgICAgIHZhciBwcm9taXNlID0gUHJvbWlzZS5yZWplY3QobmV3IFByb3ZpZGVyRXJyb3IoXCJObyBwcm92aWRlcnMgaW4gY2hhaW5cIikpO1xuICAgICAgICB2YXIgX2xvb3BfMSA9IGZ1bmN0aW9uIChwcm92aWRlcikge1xuICAgICAgICAgICAgcHJvbWlzZSA9IHByb21pc2UuY2F0Y2goZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgICAgICAgIGlmIChlcnIgPT09IG51bGwgfHwgZXJyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBlcnIudHJ5TmV4dExpbmspIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3ZpZGVyKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgZm9yICh2YXIgcHJvdmlkZXJzXzEgPSBfX3ZhbHVlcyhwcm92aWRlcnMpLCBwcm92aWRlcnNfMV8xID0gcHJvdmlkZXJzXzEubmV4dCgpOyAhcHJvdmlkZXJzXzFfMS5kb25lOyBwcm92aWRlcnNfMV8xID0gcHJvdmlkZXJzXzEubmV4dCgpKSB7XG4gICAgICAgICAgICAgICAgdmFyIHByb3ZpZGVyID0gcHJvdmlkZXJzXzFfMS52YWx1ZTtcbiAgICAgICAgICAgICAgICBfbG9vcF8xKHByb3ZpZGVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZV8xXzEpIHsgZV8xID0geyBlcnJvcjogZV8xXzEgfTsgfVxuICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgaWYgKHByb3ZpZGVyc18xXzEgJiYgIXByb3ZpZGVyc18xXzEuZG9uZSAmJiAoX2EgPSBwcm92aWRlcnNfMS5yZXR1cm4pKSBfYS5jYWxsKHByb3ZpZGVyc18xKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZpbmFsbHkgeyBpZiAoZV8xKSB0aHJvdyBlXzEuZXJyb3I7IH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcHJvbWlzZTtcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pWTJoaGFXNHVhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOHVMaTl6Y21NdlkyaGhhVzR1ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWp0QlFVVkJMRTlCUVU4c1JVRkJSU3hoUVVGaExFVkJRVVVzVFVGQlRTeHBRa0ZCYVVJc1EwRkJRenRCUVVWb1JEczdPenM3T3pzN1IwRlJSenRCUVVOSUxFMUJRVTBzVlVGQlZTeExRVUZMTzBsQlFVa3NiVUpCUVdkRE8xTkJRV2hETEZWQlFXZERMRVZCUVdoRExIRkNRVUZuUXl4RlFVRm9ReXhKUVVGblF6dFJRVUZvUXl3NFFrRkJaME03TzBsQlEzWkVMRTlCUVU4N08xRkJRMHdzU1VGQlNTeFBRVUZQTEVkQlFXVXNUMEZCVHl4RFFVRkRMRTFCUVUwc1EwRkJReXhKUVVGSkxHRkJRV0VzUTBGQlF5eDFRa0ZCZFVJc1EwRkJReXhEUVVGRExFTkJRVU03WjBOQlF6RkZMRkZCUVZFN1dVRkRha0lzVDBGQlR5eEhRVUZITEU5QlFVOHNRMEZCUXl4TFFVRkxMRU5CUVVNc1ZVRkJReXhIUVVGUk8yZENRVU12UWl4SlFVRkpMRWRCUVVjc1lVRkJTQ3hIUVVGSExIVkNRVUZJTEVkQlFVY3NRMEZCUlN4WFFVRlhMRVZCUVVVN2IwSkJRM0JDTEU5QlFVOHNVVUZCVVN4RlFVRkZMRU5CUVVNN2FVSkJRMjVDTzJkQ1FVVkVMRTFCUVUwc1IwRkJSeXhEUVVGRE8xbEJRMW9zUTBGQlF5eERRVUZETEVOQlFVTTdPenRaUVZCTUxFdEJRWFZDTEVsQlFVRXNZMEZCUVN4VFFVRkJMRk5CUVZNc1EwRkJRU3h2UTBGQlFUdG5Ra0ZCTTBJc1NVRkJUU3hSUVVGUkxITkNRVUZCTzNkQ1FVRlNMRkZCUVZFN1lVRlJiRUk3T3pzN096czdPenRSUVVWRUxFOUJRVThzVDBGQlR5eERRVUZETzBsQlEycENMRU5CUVVNc1EwRkJRenRCUVVOS0xFTkJRVU1pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKcGJYQnZjblFnZXlCUWNtOTJhV1JsY2lCOUlHWnliMjBnWENKQVlYZHpMWE5rYXk5MGVYQmxjMXdpTzF4dVhHNXBiWEJ2Y25RZ2V5QlFjbTkyYVdSbGNrVnljbTl5SUgwZ1puSnZiU0JjSWk0dlVISnZkbWxrWlhKRmNuSnZjbHdpTzF4dVhHNHZLaXBjYmlBcUlFTnZiWEJ2YzJVZ1lTQnphVzVuYkdVZ1kzSmxaR1Z1ZEdsaGJDQndjbTkyYVdSbGNpQm1kVzVqZEdsdmJpQm1jbTl0SUcxMWJIUnBjR3hsSUdOeVpXUmxiblJwWVd4Y2JpQXFJSEJ5YjNacFpHVnljeTRnVkdobElHWnBjbk4wSUhCeWIzWnBaR1Z5SUdsdUlIUm9aU0JoY21kMWJXVnVkQ0JzYVhOMElIZHBiR3dnWVd4M1lYbHpJR0psSUdsdWRtOXJaV1E3WEc0Z0tpQnpkV0p6WlhGMVpXNTBJSEJ5YjNacFpHVnljeUJwYmlCMGFHVWdiR2x6ZENCM2FXeHNJR0psSUdsdWRtOXJaV1FnYVc0Z2RHaGxJRzl5WkdWeUlHbHVJSGRvYVdOb0lIUm9aVnh1SUNvZ2QyVnlaU0J5WldObGFYWmxaQ0JwWmlCMGFHVWdjSEpsWTJWa2FXNW5JSEJ5YjNacFpHVnlJR1JwWkNCdWIzUWdjM1ZqWTJWemMyWjFiR3g1SUhKbGMyOXNkbVV1WEc0Z0tseHVJQ29nU1dZZ2JtOGdjSEp2ZG1sa1pYSnpJSGRsY21VZ2NtVmpaV2wyWldRZ2IzSWdibThnY0hKdmRtbGtaWElnY21WemIyeDJaWE1nYzNWalkyVnpjMloxYkd4NUxDQjBhR1ZjYmlBcUlISmxkSFZ5Ym1Wa0lIQnliMjFwYzJVZ2QybHNiQ0JpWlNCeVpXcGxZM1JsWkM1Y2JpQXFMMXh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJR05vWVdsdVBGUStLQzR1TG5CeWIzWnBaR1Z5Y3pvZ1FYSnlZWGs4VUhKdmRtbGtaWEk4VkQ0K0tUb2dVSEp2ZG1sa1pYSThWRDRnZTF4dUlDQnlaWFIxY200Z0tDa2dQVDRnZTF4dUlDQWdJR3hsZENCd2NtOXRhWE5sT2lCUWNtOXRhWE5sUEZRK0lEMGdVSEp2YldselpTNXlaV3BsWTNRb2JtVjNJRkJ5YjNacFpHVnlSWEp5YjNJb1hDSk9ieUJ3Y205MmFXUmxjbk1nYVc0Z1kyaGhhVzVjSWlrcE8xeHVJQ0FnSUdadmNpQW9ZMjl1YzNRZ2NISnZkbWxrWlhJZ2IyWWdjSEp2ZG1sa1pYSnpLU0I3WEc0Z0lDQWdJQ0J3Y205dGFYTmxJRDBnY0hKdmJXbHpaUzVqWVhSamFDZ29aWEp5T2lCaGJua3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLR1Z5Y2o4dWRISjVUbVY0ZEV4cGJtc3BJSHRjYmlBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnY0hKdmRtbGtaWElvS1R0Y2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJSFJvY205M0lHVnljanRjYmlBZ0lDQWdJSDBwTzF4dUlDQWdJSDFjYmx4dUlDQWdJSEpsZEhWeWJpQndjbTl0YVhObE8xeHVJQ0I5TzF4dWZWeHVJbDE5Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/chain.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/fromStatic.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@aws-sdk/property-provider/dist/es/fromStatic.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromStatic: () => (/* binding */ fromStatic)\n/* harmony export */ });\nvar fromStatic = function (staticValue) { return function () { return Promise.resolve(staticValue); }; };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbVN0YXRpYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9mcm9tU3RhdGljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sQ0FBQyxJQUFNLFVBQVUsR0FBRyxVQUFJLFdBQWMsSUFBa0IsT0FBQSxjQUFNLE9BQUEsT0FBTyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsRUFBNUIsQ0FBNEIsRUFBbEMsQ0FBa0MsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmV4cG9ydCBjb25zdCBmcm9tU3RhdGljID0gPFQ+KHN0YXRpY1ZhbHVlOiBUKTogUHJvdmlkZXI8VD4gPT4gKCkgPT4gUHJvbWlzZS5yZXNvbHZlKHN0YXRpY1ZhbHVlKTtcbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvcHJvcGVydHktcHJvdmlkZXIvZGlzdC9lcy9mcm9tU3RhdGljLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTywwQ0FBMEMscUJBQXFCO0FBQ3RFLDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvcHJvcGVydHktcHJvdmlkZXIvZGlzdC9lcy9mcm9tU3RhdGljLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgZnJvbVN0YXRpYyA9IGZ1bmN0aW9uIChzdGF0aWNWYWx1ZSkgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHN0YXRpY1ZhbHVlKTsgfTsgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVpuSnZiVk4wWVhScFl5NXFjeUlzSW5OdmRYSmpaVkp2YjNRaU9pSWlMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMM055WXk5bWNtOXRVM1JoZEdsakxuUnpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRVVZCTEUxQlFVMHNRMEZCUXl4SlFVRk5MRlZCUVZVc1IwRkJSeXhWUVVGSkxGZEJRV01zU1VGQmEwSXNUMEZCUVN4alFVRk5MRTlCUVVFc1QwRkJUeXhEUVVGRExFOUJRVThzUTBGQlF5eFhRVUZYTEVOQlFVTXNSVUZCTlVJc1EwRkJORUlzUlVGQmJFTXNRMEZCYTBNc1EwRkJReUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSW1sdGNHOXlkQ0I3SUZCeWIzWnBaR1Z5SUgwZ1puSnZiU0JjSWtCaGQzTXRjMlJyTDNSNWNHVnpYQ0k3WEc1Y2JtVjRjRzl5ZENCamIyNXpkQ0JtY205dFUzUmhkR2xqSUQwZ1BGUStLSE4wWVhScFkxWmhiSFZsT2lCVUtUb2dVSEp2ZG1sa1pYSThWRDRnUFQ0Z0tDa2dQVDRnVUhKdmJXbHpaUzV5WlhOdmJIWmxLSE4wWVhScFkxWmhiSFZsS1R0Y2JpSmRmUT09Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/fromStatic.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@aws-sdk/property-provider/dist/es/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProviderError: () => (/* reexport safe */ _ProviderError__WEBPACK_IMPORTED_MODULE_3__.ProviderError),\n/* harmony export */   chain: () => (/* reexport safe */ _chain__WEBPACK_IMPORTED_MODULE_0__.chain),\n/* harmony export */   fromStatic: () => (/* reexport safe */ _fromStatic__WEBPACK_IMPORTED_MODULE_1__.fromStatic),\n/* harmony export */   memoize: () => (/* reexport safe */ _memoize__WEBPACK_IMPORTED_MODULE_2__.memoize)\n/* harmony export */ });\n/* harmony import */ var _chain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chain */ \"(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/chain.js\");\n/* harmony import */ var _fromStatic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fromStatic */ \"(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/fromStatic.js\");\n/* harmony import */ var _memoize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./memoize */ \"(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/memoize.js\");\n/* harmony import */ var _ProviderError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ProviderError */ \"(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/ProviderError.js\");\n\n\n\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxTQUFTLENBQUM7QUFDeEIsY0FBYyxjQUFjLENBQUM7QUFDN0IsY0FBYyxXQUFXLENBQUM7QUFDMUIsY0FBYyxpQkFBaUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2NoYWluXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9mcm9tU3RhdGljXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9tZW1vaXplXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9Qcm92aWRlckVycm9yXCI7XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvcHJvcGVydHktcHJvdmlkZXIvZGlzdC9lcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUF3QjtBQUNLO0FBQ0g7QUFDTTtBQUNoQywyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL3Byb3BlcnR5LXByb3ZpZGVyL2Rpc3QvZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vY2hhaW5cIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Zyb21TdGF0aWNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL21lbW9pemVcIjtcbmV4cG9ydCAqIGZyb20gXCIuL1Byb3ZpZGVyRXJyb3JcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWFXNWtaWGd1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTh1TGk5emNtTXZhVzVrWlhndWRITWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzWTBGQll5eFRRVUZUTEVOQlFVTTdRVUZEZUVJc1kwRkJZeXhqUVVGakxFTkJRVU03UVVGRE4wSXNZMEZCWXl4WFFVRlhMRU5CUVVNN1FVRkRNVUlzWTBGQll5eHBRa0ZCYVVJc1EwRkJReUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSW1WNGNHOXlkQ0FxSUdaeWIyMGdYQ0l1TDJOb1lXbHVYQ0k3WEc1bGVIQnZjblFnS2lCbWNtOXRJRndpTGk5bWNtOXRVM1JoZEdsalhDSTdYRzVsZUhCdmNuUWdLaUJtY205dElGd2lMaTl0WlcxdmFYcGxYQ0k3WEc1bGVIQnZjblFnS2lCbWNtOXRJRndpTGk5UWNtOTJhV1JsY2tWeWNtOXlYQ0k3WEc0aVhYMD0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/memoize.js":
/*!********************************************************************!*\
  !*** ./node_modules/@aws-sdk/property-provider/dist/es/memoize.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   memoize: () => (/* binding */ memoize)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/property-provider/node_modules/tslib/tslib.es6.js\");\n\nvar memoize = function (provider, isExpired, requiresRefresh) {\n    var result;\n    var hasResult;\n    if (isExpired === undefined) {\n        // This is a static memoization; no need to incorporate refreshing\n        return function () {\n            if (!hasResult) {\n                result = provider();\n                hasResult = true;\n            }\n            return result;\n        };\n    }\n    var isConstant = false;\n    return function () { return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(void 0, void 0, void 0, function () {\n        var resolved;\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!hasResult) {\n                        result = provider();\n                        hasResult = true;\n                    }\n                    if (isConstant) {\n                        return [2 /*return*/, result];\n                    }\n                    return [4 /*yield*/, result];\n                case 1:\n                    resolved = _a.sent();\n                    if (requiresRefresh && !requiresRefresh(resolved)) {\n                        isConstant = true;\n                        return [2 /*return*/, resolved];\n                    }\n                    if (isExpired(resolved)) {\n                        return [2 /*return*/, (result = provider())];\n                    }\n                    return [2 /*return*/, resolved];\n            }\n        });\n    }); };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVtb2l6ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tZW1vaXplLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUEwQ0EsTUFBTSxDQUFDLElBQU0sT0FBTyxHQUFvQixVQUN0QyxRQUFxQixFQUNyQixTQUFvQyxFQUNwQyxlQUEwQztJQUUxQyxJQUFJLE1BQVcsQ0FBQztJQUNoQixJQUFJLFNBQWtCLENBQUM7SUFDdkIsSUFBSSxTQUFTLEtBQUssU0FBUyxFQUFFO1FBQzNCLGtFQUFrRTtRQUNsRSxPQUFPO1lBQ0wsSUFBSSxDQUFDLFNBQVMsRUFBRTtnQkFDZCxNQUFNLEdBQUcsUUFBUSxFQUFFLENBQUM7Z0JBQ3BCLFNBQVMsR0FBRyxJQUFJLENBQUM7YUFDbEI7WUFDRCxPQUFPLE1BQU0sQ0FBQztRQUNoQixDQUFDLENBQUM7S0FDSDtJQUVELElBQUksVUFBVSxHQUFHLEtBQUssQ0FBQztJQUV2QixPQUFPOzs7OztvQkFDTCxJQUFJLENBQUMsU0FBUyxFQUFFO3dCQUNkLE1BQU0sR0FBRyxRQUFRLEVBQUUsQ0FBQzt3QkFDcEIsU0FBUyxHQUFHLElBQUksQ0FBQztxQkFDbEI7b0JBQ0QsSUFBSSxVQUFVLEVBQUU7d0JBQ2Qsc0JBQU8sTUFBTSxFQUFDO3FCQUNmO29CQUVnQixxQkFBTSxNQUFNLEVBQUE7O29CQUF2QixRQUFRLEdBQUcsU0FBWTtvQkFDN0IsSUFBSSxlQUFlLElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLEVBQUU7d0JBQ2pELFVBQVUsR0FBRyxJQUFJLENBQUM7d0JBQ2xCLHNCQUFPLFFBQVEsRUFBQztxQkFDakI7b0JBQ0QsSUFBSSxTQUFTLENBQUMsUUFBUSxDQUFDLEVBQUU7d0JBQ3ZCLHNCQUFPLENBQUMsTUFBTSxHQUFHLFFBQVEsRUFBRSxDQUFDLEVBQUM7cUJBQzlCO29CQUNELHNCQUFPLFFBQVEsRUFBQzs7O1NBQ2pCLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5pbnRlcmZhY2UgTWVtb2l6ZU92ZXJsb2FkIHtcbiAgLyoqXG4gICAqXG4gICAqIERlY29yYXRlcyBhIHByb3ZpZGVyIGZ1bmN0aW9uIHdpdGggZWl0aGVyIHN0YXRpYyBtZW1vaXphdGlvbi5cbiAgICpcbiAgICogVG8gY3JlYXRlIGEgc3RhdGljYWxseSBtZW1vaXplZCBwcm92aWRlciwgc3VwcGx5IGEgcHJvdmlkZXIgYXMgdGhlIG9ubHlcbiAgICogYXJndW1lbnQgdG8gdGhpcyBmdW5jdGlvbi4gVGhlIHByb3ZpZGVyIHdpbGwgYmUgaW52b2tlZCBvbmNlLCBhbmQgYWxsXG4gICAqIGludm9jYXRpb25zIG9mIHRoZSBwcm92aWRlciByZXR1cm5lZCBieSBgbWVtb2l6ZWAgd2lsbCByZXR1cm4gdGhlIHNhbWVcbiAgICogcHJvbWlzZSBvYmplY3QuXG4gICAqXG4gICAqIEBwYXJhbSBwcm92aWRlciBUaGUgcHJvdmlkZXIgd2hvc2UgcmVzdWx0IHNob3VsZCBiZSBjYWNoZWQgaW5kZWZpbml0ZWx5LlxuICAgKi9cbiAgPFQ+KHByb3ZpZGVyOiBQcm92aWRlcjxUPik6IFByb3ZpZGVyPFQ+O1xuXG4gIC8qKlxuICAgKiBEZWNvcmF0ZXMgYSBwcm92aWRlciBmdW5jdGlvbiB3aXRoIHJlZnJlc2hpbmcgbWVtb2l6YXRpb24uXG4gICAqXG4gICAqIEBwYXJhbSBwcm92aWRlciAgICAgICAgICBUaGUgcHJvdmlkZXIgd2hvc2UgcmVzdWx0IHNob3VsZCBiZSBjYWNoZWQuXG4gICAqIEBwYXJhbSBpc0V4cGlyZWQgICAgICAgICBBIGZ1bmN0aW9uIHRoYXQgd2lsbCBldmFsdWF0ZSB0aGUgcmVzb2x2ZWQgdmFsdWUgYW5kXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICBkZXRlcm1pbmUgaWYgaXQgaXMgZXhwaXJlZC4gRm9yIGV4YW1wbGUsIHdoZW5cbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgIG1lbW9pemluZyBBV1MgY3JlZGVudGlhbCBwcm92aWRlcnMsIHRoaXMgZnVuY3Rpb25cbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgIHNob3VsZCByZXR1cm4gYHRydWVgIHdoZW4gdGhlIGNyZWRlbnRpYWwnc1xuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwaXJhdGlvbiBpcyBpbiB0aGUgcGFzdCAob3IgdmVyeSBuZWFyIGZ1dHVyZSkgYW5kXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICBgZmFsc2VgIG90aGVyd2lzZS5cbiAgICogQHBhcmFtIHJlcXVpcmVzUmVmcmVzaCAgIEEgZnVuY3Rpb24gdGhhdCB3aWxsIGV2YWx1YXRlIHRoZSByZXNvbHZlZCB2YWx1ZSBhbmRcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgIGRldGVybWluZSBpZiBpdCByZXByZXNlbnRzIHN0YXRpYyB2YWx1ZSBvciBvbmUgdGhhdFxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgd2lsbCBldmVudHVhbGx5IG5lZWQgdG8gYmUgcmVmcmVzaGVkLiBGb3IgZXhhbXBsZSxcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgIEFXUyBjcmVkZW50aWFscyB0aGF0IGhhdmUgbm8gZGVmaW5lZCBleHBpcmF0aW9uIHdpbGxcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgIG5ldmVyIG5lZWQgdG8gYmUgcmVmcmVzaGVkLCBzbyB0aGlzIGZ1bmN0aW9uIHdvdWxkXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYHRydWVgIGlmIHRoZSBjcmVkZW50aWFscyByZXNvbHZlZCBieSB0aGVcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgIHVuZGVybHlpbmcgcHJvdmlkZXIgaGFkIGFuIGV4cGlyYXRpb24gYW5kIGBmYWxzZWBcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgIG90aGVyd2lzZS5cbiAgICovXG4gIDxUPihcbiAgICBwcm92aWRlcjogUHJvdmlkZXI8VD4sXG4gICAgaXNFeHBpcmVkOiAocmVzb2x2ZWQ6IFQpID0+IGJvb2xlYW4sXG4gICAgcmVxdWlyZXNSZWZyZXNoPzogKHJlc29sdmVkOiBUKSA9PiBib29sZWFuXG4gICk6IFByb3ZpZGVyPFQ+O1xufVxuXG5leHBvcnQgY29uc3QgbWVtb2l6ZTogTWVtb2l6ZU92ZXJsb2FkID0gPFQ+KFxuICBwcm92aWRlcjogUHJvdmlkZXI8VD4sXG4gIGlzRXhwaXJlZD86IChyZXNvbHZlZDogVCkgPT4gYm9vbGVhbixcbiAgcmVxdWlyZXNSZWZyZXNoPzogKHJlc29sdmVkOiBUKSA9PiBib29sZWFuXG4pOiBQcm92aWRlcjxUPiA9PiB7XG4gIGxldCByZXN1bHQ6IGFueTtcbiAgbGV0IGhhc1Jlc3VsdDogYm9vbGVhbjtcbiAgaWYgKGlzRXhwaXJlZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgLy8gVGhpcyBpcyBhIHN0YXRpYyBtZW1vaXphdGlvbjsgbm8gbmVlZCB0byBpbmNvcnBvcmF0ZSByZWZyZXNoaW5nXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGlmICghaGFzUmVzdWx0KSB7XG4gICAgICAgIHJlc3VsdCA9IHByb3ZpZGVyKCk7XG4gICAgICAgIGhhc1Jlc3VsdCA9IHRydWU7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH07XG4gIH1cblxuICBsZXQgaXNDb25zdGFudCA9IGZhbHNlO1xuXG4gIHJldHVybiBhc3luYyAoKSA9PiB7XG4gICAgaWYgKCFoYXNSZXN1bHQpIHtcbiAgICAgIHJlc3VsdCA9IHByb3ZpZGVyKCk7XG4gICAgICBoYXNSZXN1bHQgPSB0cnVlO1xuICAgIH1cbiAgICBpZiAoaXNDb25zdGFudCkge1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICBjb25zdCByZXNvbHZlZCA9IGF3YWl0IHJlc3VsdDtcbiAgICBpZiAocmVxdWlyZXNSZWZyZXNoICYmICFyZXF1aXJlc1JlZnJlc2gocmVzb2x2ZWQpKSB7XG4gICAgICBpc0NvbnN0YW50ID0gdHJ1ZTtcbiAgICAgIHJldHVybiByZXNvbHZlZDtcbiAgICB9XG4gICAgaWYgKGlzRXhwaXJlZChyZXNvbHZlZCkpIHtcbiAgICAgIHJldHVybiAocmVzdWx0ID0gcHJvdmlkZXIoKSk7XG4gICAgfVxuICAgIHJldHVybiByZXNvbHZlZDtcbiAgfTtcbn07XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/property-provider/dist/es/memoize.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/property-provider/node_modules/tslib/tslib.es6.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/property-provider/node_modules/tslib/tslib.es6.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/property-provider/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/protocol-http/dist/es/httpHandler.js":
/*!********************************************************************!*\
  !*** ./node_modules/@aws-sdk/protocol-http/dist/es/httpHandler.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cEhhbmRsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaHR0cEhhbmRsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBIYW5kbGVyT3B0aW9ucywgUmVxdWVzdEhhbmRsZXIgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuaW1wb3J0IHsgSHR0cFJlcXVlc3QgfSBmcm9tIFwiLi9odHRwUmVxdWVzdFwiO1xuaW1wb3J0IHsgSHR0cFJlc3BvbnNlIH0gZnJvbSBcIi4vaHR0cFJlc3BvbnNlXCI7XG5cbmV4cG9ydCB0eXBlIEh0dHBIYW5kbGVyID0gUmVxdWVzdEhhbmRsZXI8SHR0cFJlcXVlc3QsIEh0dHBSZXNwb25zZSwgSHR0cEhhbmRsZXJPcHRpb25zPjtcbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvcHJvdG9jb2wtaHR0cC9kaXN0L2VzL2h0dHBIYW5kbGVyLmpzIiwibWFwcGluZ3MiOiI7QUFBVTtBQUNWLDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvcHJvdG9jb2wtaHR0cC9kaXN0L2VzL2h0dHBIYW5kbGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWFIUjBjRWhoYm1Sc1pYSXVhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOHVMaTl6Y21NdmFIUjBjRWhoYm1Sc1pYSXVkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJaUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSW1sdGNHOXlkQ0I3SUVoMGRIQklZVzVrYkdWeVQzQjBhVzl1Y3l3Z1VtVnhkV1Z6ZEVoaGJtUnNaWElnZlNCbWNtOXRJRndpUUdGM2N5MXpaR3N2ZEhsd1pYTmNJanRjYmx4dWFXMXdiM0owSUhzZ1NIUjBjRkpsY1hWbGMzUWdmU0JtY205dElGd2lMaTlvZEhSd1VtVnhkV1Z6ZEZ3aU8xeHVhVzF3YjNKMElIc2dTSFIwY0ZKbGMzQnZibk5sSUgwZ1puSnZiU0JjSWk0dmFIUjBjRkpsYzNCdmJuTmxYQ0k3WEc1Y2JtVjRjRzl5ZENCMGVYQmxJRWgwZEhCSVlXNWtiR1Z5SUQwZ1VtVnhkV1Z6ZEVoaGJtUnNaWEk4U0hSMGNGSmxjWFZsYzNRc0lFaDBkSEJTWlhOd2IyNXpaU3dnU0hSMGNFaGhibVJzWlhKUGNIUnBiMjV6UGp0Y2JpSmRmUT09Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/protocol-http/dist/es/httpHandler.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/protocol-http/dist/es/httpRequest.js":
/*!********************************************************************!*\
  !*** ./node_modules/@aws-sdk/protocol-http/dist/es/httpRequest.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpRequest: () => (/* binding */ HttpRequest)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/protocol-http/node_modules/tslib/tslib.es6.js\");\n\nvar HttpRequest = /** @class */ (function () {\n    function HttpRequest(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.substr(-1) !== \":\"\n                ? options.protocol + \":\"\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? \"/\" + options.path : options.path) : \"/\";\n    }\n    HttpRequest.isInstance = function (request) {\n        //determine if request is a valid httpRequest\n        if (!request)\n            return false;\n        var req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    };\n    HttpRequest.prototype.clone = function () {\n        var cloned = new HttpRequest((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, this), { headers: (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, this.headers) }));\n        if (cloned.query)\n            cloned.query = cloneQuery(cloned.query);\n        return cloned;\n    };\n    return HttpRequest;\n}());\n\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce(function (carry, paramName) {\n        var _a;\n        var param = query[paramName];\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, carry), (_a = {}, _a[paramName] = Array.isArray(param) ? (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__spread)(param) : param, _a));\n    }, {});\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cFJlcXVlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaHR0cFJlcXVlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQU1BO0lBVUUscUJBQVksT0FBMkI7UUFDckMsSUFBSSxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUMsTUFBTSxJQUFJLEtBQUssQ0FBQztRQUN0QyxJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxRQUFRLElBQUksV0FBVyxDQUFDO1FBQ2hELElBQUksQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQztRQUN6QixJQUFJLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLE9BQU8sSUFBSSxFQUFFLENBQUM7UUFDckMsSUFBSSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDLFFBQVE7WUFDOUIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRztnQkFDbkMsQ0FBQyxDQUFJLE9BQU8sQ0FBQyxRQUFRLE1BQUc7Z0JBQ3hCLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUTtZQUNwQixDQUFDLENBQUMsUUFBUSxDQUFDO1FBQ2IsSUFBSSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsTUFBSSxPQUFPLENBQUMsSUFBTSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQztJQUN4RyxDQUFDO0lBRU0sc0JBQVUsR0FBakIsVUFBa0IsT0FBZ0I7UUFDaEMsNkNBQTZDO1FBQzdDLElBQUksQ0FBQyxPQUFPO1lBQUUsT0FBTyxLQUFLLENBQUM7UUFDM0IsSUFBTSxHQUFHLEdBQVEsT0FBTyxDQUFDO1FBQ3pCLE9BQU8sQ0FDTCxRQUFRLElBQUksR0FBRztZQUNmLFVBQVUsSUFBSSxHQUFHO1lBQ2pCLFVBQVUsSUFBSSxHQUFHO1lBQ2pCLE1BQU0sSUFBSSxHQUFHO1lBQ2IsT0FBTyxHQUFHLENBQUMsT0FBTyxDQUFDLEtBQUssUUFBUTtZQUNoQyxPQUFPLEdBQUcsQ0FBQyxTQUFTLENBQUMsS0FBSyxRQUFRLENBQ25DLENBQUM7SUFDSixDQUFDO0lBRUQsMkJBQUssR0FBTDtRQUNFLElBQU0sTUFBTSxHQUFHLElBQUksV0FBVyx1QkFDekIsSUFBSSxLQUNQLE9BQU8sZUFBTyxJQUFJLENBQUMsT0FBTyxLQUMxQixDQUFDO1FBQ0gsSUFBSSxNQUFNLENBQUMsS0FBSztZQUFFLE1BQU0sQ0FBQyxLQUFLLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMxRCxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0lBQ0gsa0JBQUM7QUFBRCxDQUFDLEFBL0NELElBK0NDOztBQUVELFNBQVMsVUFBVSxDQUFDLEtBQXdCO0lBQzFDLE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBQyxLQUF3QixFQUFFLFNBQWlCOztRQUMzRSxJQUFNLEtBQUssR0FBRyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDL0IsNkJBQ0ssS0FBSyxnQkFDUCxTQUFTLElBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLFVBQUssS0FBSyxFQUFFLENBQUMsQ0FBQyxLQUFLLE9BQ3REO0lBQ0osQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQ1QsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVuZHBvaW50LCBIZWFkZXJCYWcsIEh0dHBNZXNzYWdlLCBIdHRwUmVxdWVzdCBhcyBJSHR0cFJlcXVlc3QsIFF1ZXJ5UGFyYW1ldGVyQmFnIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbnR5cGUgSHR0cFJlcXVlc3RPcHRpb25zID0gUGFydGlhbDxIdHRwTWVzc2FnZT4gJiBQYXJ0aWFsPEVuZHBvaW50PiAmIHsgbWV0aG9kPzogc3RyaW5nIH07XG5cbmV4cG9ydCBpbnRlcmZhY2UgSHR0cFJlcXVlc3QgZXh0ZW5kcyBJSHR0cFJlcXVlc3Qge31cblxuZXhwb3J0IGNsYXNzIEh0dHBSZXF1ZXN0IGltcGxlbWVudHMgSHR0cE1lc3NhZ2UsIEVuZHBvaW50IHtcbiAgcHVibGljIG1ldGhvZDogc3RyaW5nO1xuICBwdWJsaWMgcHJvdG9jb2w6IHN0cmluZztcbiAgcHVibGljIGhvc3RuYW1lOiBzdHJpbmc7XG4gIHB1YmxpYyBwb3J0PzogbnVtYmVyO1xuICBwdWJsaWMgcGF0aDogc3RyaW5nO1xuICBwdWJsaWMgcXVlcnk6IFF1ZXJ5UGFyYW1ldGVyQmFnO1xuICBwdWJsaWMgaGVhZGVyczogSGVhZGVyQmFnO1xuICBwdWJsaWMgYm9keT86IGFueTtcblxuICBjb25zdHJ1Y3RvcihvcHRpb25zOiBIdHRwUmVxdWVzdE9wdGlvbnMpIHtcbiAgICB0aGlzLm1ldGhvZCA9IG9wdGlvbnMubWV0aG9kIHx8IFwiR0VUXCI7XG4gICAgdGhpcy5ob3N0bmFtZSA9IG9wdGlvbnMuaG9zdG5hbWUgfHwgXCJsb2NhbGhvc3RcIjtcbiAgICB0aGlzLnBvcnQgPSBvcHRpb25zLnBvcnQ7XG4gICAgdGhpcy5xdWVyeSA9IG9wdGlvbnMucXVlcnkgfHwge307XG4gICAgdGhpcy5oZWFkZXJzID0gb3B0aW9ucy5oZWFkZXJzIHx8IHt9O1xuICAgIHRoaXMuYm9keSA9IG9wdGlvbnMuYm9keTtcbiAgICB0aGlzLnByb3RvY29sID0gb3B0aW9ucy5wcm90b2NvbFxuICAgICAgPyBvcHRpb25zLnByb3RvY29sLnN1YnN0cigtMSkgIT09IFwiOlwiXG4gICAgICAgID8gYCR7b3B0aW9ucy5wcm90b2NvbH06YFxuICAgICAgICA6IG9wdGlvbnMucHJvdG9jb2xcbiAgICAgIDogXCJodHRwczpcIjtcbiAgICB0aGlzLnBhdGggPSBvcHRpb25zLnBhdGggPyAob3B0aW9ucy5wYXRoLmNoYXJBdCgwKSAhPT0gXCIvXCIgPyBgLyR7b3B0aW9ucy5wYXRofWAgOiBvcHRpb25zLnBhdGgpIDogXCIvXCI7XG4gIH1cblxuICBzdGF0aWMgaXNJbnN0YW5jZShyZXF1ZXN0OiB1bmtub3duKTogcmVxdWVzdCBpcyBIdHRwUmVxdWVzdCB7XG4gICAgLy9kZXRlcm1pbmUgaWYgcmVxdWVzdCBpcyBhIHZhbGlkIGh0dHBSZXF1ZXN0XG4gICAgaWYgKCFyZXF1ZXN0KSByZXR1cm4gZmFsc2U7XG4gICAgY29uc3QgcmVxOiBhbnkgPSByZXF1ZXN0O1xuICAgIHJldHVybiAoXG4gICAgICBcIm1ldGhvZFwiIGluIHJlcSAmJlxuICAgICAgXCJwcm90b2NvbFwiIGluIHJlcSAmJlxuICAgICAgXCJob3N0bmFtZVwiIGluIHJlcSAmJlxuICAgICAgXCJwYXRoXCIgaW4gcmVxICYmXG4gICAgICB0eXBlb2YgcmVxW1wicXVlcnlcIl0gPT09IFwib2JqZWN0XCIgJiZcbiAgICAgIHR5cGVvZiByZXFbXCJoZWFkZXJzXCJdID09PSBcIm9iamVjdFwiXG4gICAgKTtcbiAgfVxuXG4gIGNsb25lKCk6IEh0dHBSZXF1ZXN0IHtcbiAgICBjb25zdCBjbG9uZWQgPSBuZXcgSHR0cFJlcXVlc3Qoe1xuICAgICAgLi4udGhpcyxcbiAgICAgIGhlYWRlcnM6IHsgLi4udGhpcy5oZWFkZXJzIH0sXG4gICAgfSk7XG4gICAgaWYgKGNsb25lZC5xdWVyeSkgY2xvbmVkLnF1ZXJ5ID0gY2xvbmVRdWVyeShjbG9uZWQucXVlcnkpO1xuICAgIHJldHVybiBjbG9uZWQ7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2xvbmVRdWVyeShxdWVyeTogUXVlcnlQYXJhbWV0ZXJCYWcpOiBRdWVyeVBhcmFtZXRlckJhZyB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhxdWVyeSkucmVkdWNlKChjYXJyeTogUXVlcnlQYXJhbWV0ZXJCYWcsIHBhcmFtTmFtZTogc3RyaW5nKSA9PiB7XG4gICAgY29uc3QgcGFyYW0gPSBxdWVyeVtwYXJhbU5hbWVdO1xuICAgIHJldHVybiB7XG4gICAgICAuLi5jYXJyeSxcbiAgICAgIFtwYXJhbU5hbWVdOiBBcnJheS5pc0FycmF5KHBhcmFtKSA/IFsuLi5wYXJhbV0gOiBwYXJhbSxcbiAgICB9O1xuICB9LCB7fSk7XG59XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvcHJvdG9jb2wtaHR0cC9kaXN0L2VzL2h0dHBSZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW1EO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLCtDQUFRLENBQUMsK0NBQVEsR0FBRyxXQUFXLFNBQVMsK0NBQVEsR0FBRyxpQkFBaUI7QUFDekc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDc0I7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLCtDQUFRLENBQUMsK0NBQVEsR0FBRyxrQkFBa0IseUNBQXlDLCtDQUFRO0FBQ3RHLEtBQUssSUFBSTtBQUNUO0FBQ0EsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9wcm90b2NvbC1odHRwL2Rpc3QvZXMvaHR0cFJlcXVlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19hc3NpZ24sIF9fcmVhZCwgX19zcHJlYWQgfSBmcm9tIFwidHNsaWJcIjtcbnZhciBIdHRwUmVxdWVzdCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBIdHRwUmVxdWVzdChvcHRpb25zKSB7XG4gICAgICAgIHRoaXMubWV0aG9kID0gb3B0aW9ucy5tZXRob2QgfHwgXCJHRVRcIjtcbiAgICAgICAgdGhpcy5ob3N0bmFtZSA9IG9wdGlvbnMuaG9zdG5hbWUgfHwgXCJsb2NhbGhvc3RcIjtcbiAgICAgICAgdGhpcy5wb3J0ID0gb3B0aW9ucy5wb3J0O1xuICAgICAgICB0aGlzLnF1ZXJ5ID0gb3B0aW9ucy5xdWVyeSB8fCB7fTtcbiAgICAgICAgdGhpcy5oZWFkZXJzID0gb3B0aW9ucy5oZWFkZXJzIHx8IHt9O1xuICAgICAgICB0aGlzLmJvZHkgPSBvcHRpb25zLmJvZHk7XG4gICAgICAgIHRoaXMucHJvdG9jb2wgPSBvcHRpb25zLnByb3RvY29sXG4gICAgICAgICAgICA/IG9wdGlvbnMucHJvdG9jb2wuc3Vic3RyKC0xKSAhPT0gXCI6XCJcbiAgICAgICAgICAgICAgICA/IG9wdGlvbnMucHJvdG9jb2wgKyBcIjpcIlxuICAgICAgICAgICAgICAgIDogb3B0aW9ucy5wcm90b2NvbFxuICAgICAgICAgICAgOiBcImh0dHBzOlwiO1xuICAgICAgICB0aGlzLnBhdGggPSBvcHRpb25zLnBhdGggPyAob3B0aW9ucy5wYXRoLmNoYXJBdCgwKSAhPT0gXCIvXCIgPyBcIi9cIiArIG9wdGlvbnMucGF0aCA6IG9wdGlvbnMucGF0aCkgOiBcIi9cIjtcbiAgICB9XG4gICAgSHR0cFJlcXVlc3QuaXNJbnN0YW5jZSA9IGZ1bmN0aW9uIChyZXF1ZXN0KSB7XG4gICAgICAgIC8vZGV0ZXJtaW5lIGlmIHJlcXVlc3QgaXMgYSB2YWxpZCBodHRwUmVxdWVzdFxuICAgICAgICBpZiAoIXJlcXVlc3QpXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIHZhciByZXEgPSByZXF1ZXN0O1xuICAgICAgICByZXR1cm4gKFwibWV0aG9kXCIgaW4gcmVxICYmXG4gICAgICAgICAgICBcInByb3RvY29sXCIgaW4gcmVxICYmXG4gICAgICAgICAgICBcImhvc3RuYW1lXCIgaW4gcmVxICYmXG4gICAgICAgICAgICBcInBhdGhcIiBpbiByZXEgJiZcbiAgICAgICAgICAgIHR5cGVvZiByZXFbXCJxdWVyeVwiXSA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICAgICAgdHlwZW9mIHJlcVtcImhlYWRlcnNcIl0gPT09IFwib2JqZWN0XCIpO1xuICAgIH07XG4gICAgSHR0cFJlcXVlc3QucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgY2xvbmVkID0gbmV3IEh0dHBSZXF1ZXN0KF9fYXNzaWduKF9fYXNzaWduKHt9LCB0aGlzKSwgeyBoZWFkZXJzOiBfX2Fzc2lnbih7fSwgdGhpcy5oZWFkZXJzKSB9KSk7XG4gICAgICAgIGlmIChjbG9uZWQucXVlcnkpXG4gICAgICAgICAgICBjbG9uZWQucXVlcnkgPSBjbG9uZVF1ZXJ5KGNsb25lZC5xdWVyeSk7XG4gICAgICAgIHJldHVybiBjbG9uZWQ7XG4gICAgfTtcbiAgICByZXR1cm4gSHR0cFJlcXVlc3Q7XG59KCkpO1xuZXhwb3J0IHsgSHR0cFJlcXVlc3QgfTtcbmZ1bmN0aW9uIGNsb25lUXVlcnkocXVlcnkpIHtcbiAgICByZXR1cm4gT2JqZWN0LmtleXMocXVlcnkpLnJlZHVjZShmdW5jdGlvbiAoY2FycnksIHBhcmFtTmFtZSkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHZhciBwYXJhbSA9IHF1ZXJ5W3BhcmFtTmFtZV07XG4gICAgICAgIHJldHVybiBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgY2FycnkpLCAoX2EgPSB7fSwgX2FbcGFyYW1OYW1lXSA9IEFycmF5LmlzQXJyYXkocGFyYW0pID8gX19zcHJlYWQocGFyYW0pIDogcGFyYW0sIF9hKSk7XG4gICAgfSwge30pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYUhSMGNGSmxjWFZsYzNRdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12YUhSMGNGSmxjWFZsYzNRdWRITWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklqdEJRVTFCTzBsQlZVVXNjVUpCUVZrc1QwRkJNa0k3VVVGRGNrTXNTVUZCU1N4RFFVRkRMRTFCUVUwc1IwRkJSeXhQUVVGUExFTkJRVU1zVFVGQlRTeEpRVUZKTEV0QlFVc3NRMEZCUXp0UlFVTjBReXhKUVVGSkxFTkJRVU1zVVVGQlVTeEhRVUZITEU5QlFVOHNRMEZCUXl4UlFVRlJMRWxCUVVrc1YwRkJWeXhEUVVGRE8xRkJRMmhFTEVsQlFVa3NRMEZCUXl4SlFVRkpMRWRCUVVjc1QwRkJUeXhEUVVGRExFbEJRVWtzUTBGQlF6dFJRVU42UWl4SlFVRkpMRU5CUVVNc1MwRkJTeXhIUVVGSExFOUJRVThzUTBGQlF5eExRVUZMTEVsQlFVa3NSVUZCUlN4RFFVRkRPMUZCUTJwRExFbEJRVWtzUTBGQlF5eFBRVUZQTEVkQlFVY3NUMEZCVHl4RFFVRkRMRTlCUVU4c1NVRkJTU3hGUVVGRkxFTkJRVU03VVVGRGNrTXNTVUZCU1N4RFFVRkRMRWxCUVVrc1IwRkJSeXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETzFGQlEzcENMRWxCUVVrc1EwRkJReXhSUVVGUkxFZEJRVWNzVDBGQlR5eERRVUZETEZGQlFWRTdXVUZET1VJc1EwRkJReXhEUVVGRExFOUJRVThzUTBGQlF5eFJRVUZSTEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFdEJRVXNzUjBGQlJ6dG5Ra0ZEYmtNc1EwRkJReXhEUVVGSkxFOUJRVThzUTBGQlF5eFJRVUZSTEUxQlFVYzdaMEpCUTNoQ0xFTkJRVU1zUTBGQlF5eFBRVUZQTEVOQlFVTXNVVUZCVVR0WlFVTndRaXhEUVVGRExFTkJRVU1zVVVGQlVTeERRVUZETzFGQlEySXNTVUZCU1N4RFFVRkRMRWxCUVVrc1IwRkJSeXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRTlCUVU4c1EwRkJReXhKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTXNRMEZCUXl4TFFVRkxMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU1zVFVGQlNTeFBRVUZQTEVOQlFVTXNTVUZCVFN4RFFVRkRMRU5CUVVNc1EwRkJReXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRWRCUVVjc1EwRkJRenRKUVVONFJ5eERRVUZETzBsQlJVMHNjMEpCUVZVc1IwRkJha0lzVlVGQmEwSXNUMEZCWjBJN1VVRkRhRU1zTmtOQlFUWkRPMUZCUXpkRExFbEJRVWtzUTBGQlF5eFBRVUZQTzFsQlFVVXNUMEZCVHl4TFFVRkxMRU5CUVVNN1VVRkRNMElzU1VGQlRTeEhRVUZITEVkQlFWRXNUMEZCVHl4RFFVRkRPMUZCUTNwQ0xFOUJRVThzUTBGRFRDeFJRVUZSTEVsQlFVa3NSMEZCUnp0WlFVTm1MRlZCUVZVc1NVRkJTU3hIUVVGSE8xbEJRMnBDTEZWQlFWVXNTVUZCU1N4SFFVRkhPMWxCUTJwQ0xFMUJRVTBzU1VGQlNTeEhRVUZITzFsQlEySXNUMEZCVHl4SFFVRkhMRU5CUVVNc1QwRkJUeXhEUVVGRExFdEJRVXNzVVVGQlVUdFpRVU5vUXl4UFFVRlBMRWRCUVVjc1EwRkJReXhUUVVGVExFTkJRVU1zUzBGQlN5eFJRVUZSTEVOQlEyNURMRU5CUVVNN1NVRkRTaXhEUVVGRE8wbEJSVVFzTWtKQlFVc3NSMEZCVER0UlFVTkZMRWxCUVUwc1RVRkJUU3hIUVVGSExFbEJRVWtzVjBGQlZ5eDFRa0ZEZWtJc1NVRkJTU3hMUVVOUUxFOUJRVThzWlVGQlR5eEpRVUZKTEVOQlFVTXNUMEZCVHl4TFFVTXhRaXhEUVVGRE8xRkJRMGdzU1VGQlNTeE5RVUZOTEVOQlFVTXNTMEZCU3p0WlFVRkZMRTFCUVUwc1EwRkJReXhMUVVGTExFZEJRVWNzVlVGQlZTeERRVUZETEUxQlFVMHNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJRenRSUVVNeFJDeFBRVUZQTEUxQlFVMHNRMEZCUXp0SlFVTm9RaXhEUVVGRE8wbEJRMGdzYTBKQlFVTTdRVUZCUkN4RFFVRkRMRUZCTDBORUxFbEJLME5ET3p0QlFVVkVMRk5CUVZNc1ZVRkJWU3hEUVVGRExFdEJRWGRDTzBsQlF6RkRMRTlCUVU4c1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXl4TlFVRk5MRU5CUVVNc1ZVRkJReXhMUVVGM1FpeEZRVUZGTEZOQlFXbENPenRSUVVNelJTeEpRVUZOTEV0QlFVc3NSMEZCUnl4TFFVRkxMRU5CUVVNc1UwRkJVeXhEUVVGRExFTkJRVU03VVVGREwwSXNOa0pCUTBzc1MwRkJTeXhuUWtGRFVDeFRRVUZUTEVsQlFVY3NTMEZCU3l4RFFVRkRMRTlCUVU4c1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eERRVUZETEZWQlFVc3NTMEZCU3l4RlFVRkZMRU5CUVVNc1EwRkJReXhMUVVGTExFOUJRM1JFTzBsQlEwb3NRMEZCUXl4RlFVRkZMRVZCUVVVc1EwRkJReXhEUVVGRE8wRkJRMVFzUTBGQlF5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbWx0Y0c5eWRDQjdJRVZ1WkhCdmFXNTBMQ0JJWldGa1pYSkNZV2NzSUVoMGRIQk5aWE56WVdkbExDQklkSFJ3VW1WeGRXVnpkQ0JoY3lCSlNIUjBjRkpsY1hWbGMzUXNJRkYxWlhKNVVHRnlZVzFsZEdWeVFtRm5JSDBnWm5KdmJTQmNJa0JoZDNNdGMyUnJMM1I1Y0dWelhDSTdYRzVjYm5SNWNHVWdTSFIwY0ZKbGNYVmxjM1JQY0hScGIyNXpJRDBnVUdGeWRHbGhiRHhJZEhSd1RXVnpjMkZuWlQ0Z0ppQlFZWEowYVdGc1BFVnVaSEJ2YVc1MFBpQW1JSHNnYldWMGFHOWtQem9nYzNSeWFXNW5JSDA3WEc1Y2JtVjRjRzl5ZENCcGJuUmxjbVpoWTJVZ1NIUjBjRkpsY1hWbGMzUWdaWGgwWlc1a2N5QkpTSFIwY0ZKbGNYVmxjM1FnZTMxY2JseHVaWGh3YjNKMElHTnNZWE56SUVoMGRIQlNaWEYxWlhOMElHbHRjR3hsYldWdWRITWdTSFIwY0UxbGMzTmhaMlVzSUVWdVpIQnZhVzUwSUh0Y2JpQWdjSFZpYkdsaklHMWxkR2h2WkRvZ2MzUnlhVzVuTzF4dUlDQndkV0pzYVdNZ2NISnZkRzlqYjJ3NklITjBjbWx1Wnp0Y2JpQWdjSFZpYkdsaklHaHZjM1J1WVcxbE9pQnpkSEpwYm1jN1hHNGdJSEIxWW14cFl5QndiM0owUHpvZ2JuVnRZbVZ5TzF4dUlDQndkV0pzYVdNZ2NHRjBhRG9nYzNSeWFXNW5PMXh1SUNCd2RXSnNhV01nY1hWbGNuazZJRkYxWlhKNVVHRnlZVzFsZEdWeVFtRm5PMXh1SUNCd2RXSnNhV01nYUdWaFpHVnljem9nU0dWaFpHVnlRbUZuTzF4dUlDQndkV0pzYVdNZ1ltOWtlVDg2SUdGdWVUdGNibHh1SUNCamIyNXpkSEoxWTNSdmNpaHZjSFJwYjI1ek9pQklkSFJ3VW1WeGRXVnpkRTl3ZEdsdmJuTXBJSHRjYmlBZ0lDQjBhR2x6TG0xbGRHaHZaQ0E5SUc5d2RHbHZibk11YldWMGFHOWtJSHg4SUZ3aVIwVlVYQ0k3WEc0Z0lDQWdkR2hwY3k1b2IzTjBibUZ0WlNBOUlHOXdkR2x2Ym5NdWFHOXpkRzVoYldVZ2ZId2dYQ0pzYjJOaGJHaHZjM1JjSWp0Y2JpQWdJQ0IwYUdsekxuQnZjblFnUFNCdmNIUnBiMjV6TG5CdmNuUTdYRzRnSUNBZ2RHaHBjeTV4ZFdWeWVTQTlJRzl3ZEdsdmJuTXVjWFZsY25rZ2ZId2dlMzA3WEc0Z0lDQWdkR2hwY3k1b1pXRmtaWEp6SUQwZ2IzQjBhVzl1Y3k1b1pXRmtaWEp6SUh4OElIdDlPMXh1SUNBZ0lIUm9hWE11WW05a2VTQTlJRzl3ZEdsdmJuTXVZbTlrZVR0Y2JpQWdJQ0IwYUdsekxuQnliM1J2WTI5c0lEMGdiM0IwYVc5dWN5NXdjbTkwYjJOdmJGeHVJQ0FnSUNBZ1B5QnZjSFJwYjI1ekxuQnliM1J2WTI5c0xuTjFZbk4wY2lndE1Ta2dJVDA5SUZ3aU9sd2lYRzRnSUNBZ0lDQWdJRDhnWUNSN2IzQjBhVzl1Y3k1d2NtOTBiMk52YkgwNllGeHVJQ0FnSUNBZ0lDQTZJRzl3ZEdsdmJuTXVjSEp2ZEc5amIyeGNiaUFnSUNBZ0lEb2dYQ0pvZEhSd2N6cGNJanRjYmlBZ0lDQjBhR2x6TG5CaGRHZ2dQU0J2Y0hScGIyNXpMbkJoZEdnZ1B5QW9iM0IwYVc5dWN5NXdZWFJvTG1Ob1lYSkJkQ2d3S1NBaFBUMGdYQ0l2WENJZ1B5QmdMeVI3YjNCMGFXOXVjeTV3WVhSb2ZXQWdPaUJ2Y0hScGIyNXpMbkJoZEdncElEb2dYQ0l2WENJN1hHNGdJSDFjYmx4dUlDQnpkR0YwYVdNZ2FYTkpibk4wWVc1alpTaHlaWEYxWlhOME9pQjFibXR1YjNkdUtUb2djbVZ4ZFdWemRDQnBjeUJJZEhSd1VtVnhkV1Z6ZENCN1hHNGdJQ0FnTHk5a1pYUmxjbTFwYm1VZ2FXWWdjbVZ4ZFdWemRDQnBjeUJoSUhaaGJHbGtJR2gwZEhCU1pYRjFaWE4wWEc0Z0lDQWdhV1lnS0NGeVpYRjFaWE4wS1NCeVpYUjFjbTRnWm1Gc2MyVTdYRzRnSUNBZ1kyOXVjM1FnY21WeE9pQmhibmtnUFNCeVpYRjFaWE4wTzF4dUlDQWdJSEpsZEhWeWJpQW9YRzRnSUNBZ0lDQmNJbTFsZEdodlpGd2lJR2x1SUhKbGNTQW1KbHh1SUNBZ0lDQWdYQ0p3Y205MGIyTnZiRndpSUdsdUlISmxjU0FtSmx4dUlDQWdJQ0FnWENKb2IzTjBibUZ0WlZ3aUlHbHVJSEpsY1NBbUpseHVJQ0FnSUNBZ1hDSndZWFJvWENJZ2FXNGdjbVZ4SUNZbVhHNGdJQ0FnSUNCMGVYQmxiMllnY21WeFcxd2ljWFZsY25sY0lsMGdQVDA5SUZ3aWIySnFaV04wWENJZ0ppWmNiaUFnSUNBZ0lIUjVjR1Z2WmlCeVpYRmJYQ0pvWldGa1pYSnpYQ0pkSUQwOVBTQmNJbTlpYW1WamRGd2lYRzRnSUNBZ0tUdGNiaUFnZlZ4dVhHNGdJR05zYjI1bEtDazZJRWgwZEhCU1pYRjFaWE4wSUh0Y2JpQWdJQ0JqYjI1emRDQmpiRzl1WldRZ1BTQnVaWGNnU0hSMGNGSmxjWFZsYzNRb2UxeHVJQ0FnSUNBZ0xpNHVkR2hwY3l4Y2JpQWdJQ0FnSUdobFlXUmxjbk02SUhzZ0xpNHVkR2hwY3k1b1pXRmtaWEp6SUgwc1hHNGdJQ0FnZlNrN1hHNGdJQ0FnYVdZZ0tHTnNiMjVsWkM1eGRXVnllU2tnWTJ4dmJtVmtMbkYxWlhKNUlEMGdZMnh2Ym1WUmRXVnllU2hqYkc5dVpXUXVjWFZsY25rcE8xeHVJQ0FnSUhKbGRIVnliaUJqYkc5dVpXUTdYRzRnSUgxY2JuMWNibHh1Wm5WdVkzUnBiMjRnWTJ4dmJtVlJkV1Z5ZVNoeGRXVnllVG9nVVhWbGNubFFZWEpoYldWMFpYSkNZV2NwT2lCUmRXVnllVkJoY21GdFpYUmxja0poWnlCN1hHNGdJSEpsZEhWeWJpQlBZbXBsWTNRdWEyVjVjeWh4ZFdWeWVTa3VjbVZrZFdObEtDaGpZWEp5ZVRvZ1VYVmxjbmxRWVhKaGJXVjBaWEpDWVdjc0lIQmhjbUZ0VG1GdFpUb2djM1J5YVc1bktTQTlQaUI3WEc0Z0lDQWdZMjl1YzNRZ2NHRnlZVzBnUFNCeGRXVnllVnR3WVhKaGJVNWhiV1ZkTzF4dUlDQWdJSEpsZEhWeWJpQjdYRzRnSUNBZ0lDQXVMaTVqWVhKeWVTeGNiaUFnSUNBZ0lGdHdZWEpoYlU1aGJXVmRPaUJCY25KaGVTNXBjMEZ5Y21GNUtIQmhjbUZ0S1NBL0lGc3VMaTV3WVhKaGJWMGdPaUJ3WVhKaGJTeGNiaUFnSUNCOU8xeHVJQ0I5TENCN2ZTazdYRzU5WEc0aVhYMD0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/protocol-http/dist/es/httpRequest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/protocol-http/dist/es/httpResponse.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@aws-sdk/protocol-http/dist/es/httpResponse.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpResponse: () => (/* binding */ HttpResponse)\n/* harmony export */ });\nvar HttpResponse = /** @class */ (function () {\n    function HttpResponse(options) {\n        this.statusCode = options.statusCode;\n        this.headers = options.headers || {};\n        this.body = options.body;\n    }\n    HttpResponse.isInstance = function (response) {\n        //determine if response is a valid HttpResponse\n        if (!response)\n            return false;\n        var resp = response;\n        return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n    };\n    return HttpResponse;\n}());\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cFJlc3BvbnNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2h0dHBSZXNwb25zZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFRQTtJQUtFLHNCQUFZLE9BQTRCO1FBQ3RDLElBQUksQ0FBQyxVQUFVLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQztRQUNyQyxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxPQUFPLElBQUksRUFBRSxDQUFDO1FBQ3JDLElBQUksQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQztJQUMzQixDQUFDO0lBRU0sdUJBQVUsR0FBakIsVUFBa0IsUUFBaUI7UUFDakMsK0NBQStDO1FBQy9DLElBQUksQ0FBQyxRQUFRO1lBQUUsT0FBTyxLQUFLLENBQUM7UUFDNUIsSUFBTSxJQUFJLEdBQUcsUUFBZSxDQUFDO1FBQzdCLE9BQU8sT0FBTyxJQUFJLENBQUMsVUFBVSxLQUFLLFFBQVEsSUFBSSxPQUFPLElBQUksQ0FBQyxPQUFPLEtBQUssUUFBUSxDQUFDO0lBQ2pGLENBQUM7SUFDSCxtQkFBQztBQUFELENBQUMsQUFqQkQsSUFpQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIZWFkZXJCYWcsIEh0dHBNZXNzYWdlLCBIdHRwUmVzcG9uc2UgYXMgSUh0dHBSZXNwb25zZSB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG50eXBlIEh0dHBSZXNwb25zZU9wdGlvbnMgPSBQYXJ0aWFsPEh0dHBNZXNzYWdlPiAmIHtcbiAgc3RhdHVzQ29kZTogbnVtYmVyO1xufTtcblxuZXhwb3J0IGludGVyZmFjZSBIdHRwUmVzcG9uc2UgZXh0ZW5kcyBJSHR0cFJlc3BvbnNlIHt9XG5cbmV4cG9ydCBjbGFzcyBIdHRwUmVzcG9uc2Uge1xuICBwdWJsaWMgc3RhdHVzQ29kZTogbnVtYmVyO1xuICBwdWJsaWMgaGVhZGVyczogSGVhZGVyQmFnO1xuICBwdWJsaWMgYm9keT86IGFueTtcblxuICBjb25zdHJ1Y3RvcihvcHRpb25zOiBIdHRwUmVzcG9uc2VPcHRpb25zKSB7XG4gICAgdGhpcy5zdGF0dXNDb2RlID0gb3B0aW9ucy5zdGF0dXNDb2RlO1xuICAgIHRoaXMuaGVhZGVycyA9IG9wdGlvbnMuaGVhZGVycyB8fCB7fTtcbiAgICB0aGlzLmJvZHkgPSBvcHRpb25zLmJvZHk7XG4gIH1cblxuICBzdGF0aWMgaXNJbnN0YW5jZShyZXNwb25zZTogdW5rbm93bik6IHJlc3BvbnNlIGlzIEh0dHBSZXNwb25zZSB7XG4gICAgLy9kZXRlcm1pbmUgaWYgcmVzcG9uc2UgaXMgYSB2YWxpZCBIdHRwUmVzcG9uc2VcbiAgICBpZiAoIXJlc3BvbnNlKSByZXR1cm4gZmFsc2U7XG4gICAgY29uc3QgcmVzcCA9IHJlc3BvbnNlIGFzIGFueTtcbiAgICByZXR1cm4gdHlwZW9mIHJlc3Auc3RhdHVzQ29kZSA9PT0gXCJudW1iZXJcIiAmJiB0eXBlb2YgcmVzcC5oZWFkZXJzID09PSBcIm9iamVjdFwiO1xuICB9XG59XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvcHJvdG9jb2wtaHR0cC9kaXN0L2VzL2h0dHBSZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDdUI7QUFDeEIsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9wcm90b2NvbC1odHRwL2Rpc3QvZXMvaHR0cFJlc3BvbnNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBIdHRwUmVzcG9uc2UgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gSHR0cFJlc3BvbnNlKG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5zdGF0dXNDb2RlID0gb3B0aW9ucy5zdGF0dXNDb2RlO1xuICAgICAgICB0aGlzLmhlYWRlcnMgPSBvcHRpb25zLmhlYWRlcnMgfHwge307XG4gICAgICAgIHRoaXMuYm9keSA9IG9wdGlvbnMuYm9keTtcbiAgICB9XG4gICAgSHR0cFJlc3BvbnNlLmlzSW5zdGFuY2UgPSBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgLy9kZXRlcm1pbmUgaWYgcmVzcG9uc2UgaXMgYSB2YWxpZCBIdHRwUmVzcG9uc2VcbiAgICAgICAgaWYgKCFyZXNwb25zZSlcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgdmFyIHJlc3AgPSByZXNwb25zZTtcbiAgICAgICAgcmV0dXJuIHR5cGVvZiByZXNwLnN0YXR1c0NvZGUgPT09IFwibnVtYmVyXCIgJiYgdHlwZW9mIHJlc3AuaGVhZGVycyA9PT0gXCJvYmplY3RcIjtcbiAgICB9O1xuICAgIHJldHVybiBIdHRwUmVzcG9uc2U7XG59KCkpO1xuZXhwb3J0IHsgSHR0cFJlc3BvbnNlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lhSFIwY0ZKbGMzQnZibk5sTG1weklpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhNaU9sc2lMaTR2TGk0dmMzSmpMMmgwZEhCU1pYTndiMjV6WlM1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRlJRVHRKUVV0RkxITkNRVUZaTEU5QlFUUkNPMUZCUTNSRExFbEJRVWtzUTBGQlF5eFZRVUZWTEVkQlFVY3NUMEZCVHl4RFFVRkRMRlZCUVZVc1EwRkJRenRSUVVOeVF5eEpRVUZKTEVOQlFVTXNUMEZCVHl4SFFVRkhMRTlCUVU4c1EwRkJReXhQUVVGUExFbEJRVWtzUlVGQlJTeERRVUZETzFGQlEzSkRMRWxCUVVrc1EwRkJReXhKUVVGSkxFZEJRVWNzVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXp0SlFVTXpRaXhEUVVGRE8wbEJSVTBzZFVKQlFWVXNSMEZCYWtJc1ZVRkJhMElzVVVGQmFVSTdVVUZEYWtNc0swTkJRU3RETzFGQlF5OURMRWxCUVVrc1EwRkJReXhSUVVGUk8xbEJRVVVzVDBGQlR5eExRVUZMTEVOQlFVTTdVVUZETlVJc1NVRkJUU3hKUVVGSkxFZEJRVWNzVVVGQlpTeERRVUZETzFGQlF6ZENMRTlCUVU4c1QwRkJUeXhKUVVGSkxFTkJRVU1zVlVGQlZTeExRVUZMTEZGQlFWRXNTVUZCU1N4UFFVRlBMRWxCUVVrc1EwRkJReXhQUVVGUExFdEJRVXNzVVVGQlVTeERRVUZETzBsQlEycEdMRU5CUVVNN1NVRkRTQ3h0UWtGQlF6dEJRVUZFTEVOQlFVTXNRVUZxUWtRc1NVRnBRa01pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKcGJYQnZjblFnZXlCSVpXRmtaWEpDWVdjc0lFaDBkSEJOWlhOellXZGxMQ0JJZEhSd1VtVnpjRzl1YzJVZ1lYTWdTVWgwZEhCU1pYTndiMjV6WlNCOUlHWnliMjBnWENKQVlYZHpMWE5rYXk5MGVYQmxjMXdpTzF4dVhHNTBlWEJsSUVoMGRIQlNaWE53YjI1elpVOXdkR2x2Ym5NZ1BTQlFZWEowYVdGc1BFaDBkSEJOWlhOellXZGxQaUFtSUh0Y2JpQWdjM1JoZEhWelEyOWtaVG9nYm5WdFltVnlPMXh1ZlR0Y2JseHVaWGh3YjNKMElHbHVkR1Z5Wm1GalpTQklkSFJ3VW1WemNHOXVjMlVnWlhoMFpXNWtjeUJKU0hSMGNGSmxjM0J2Ym5ObElIdDlYRzVjYm1WNGNHOXlkQ0JqYkdGemN5QklkSFJ3VW1WemNHOXVjMlVnZTF4dUlDQndkV0pzYVdNZ2MzUmhkSFZ6UTI5a1pUb2diblZ0WW1WeU8xeHVJQ0J3ZFdKc2FXTWdhR1ZoWkdWeWN6b2dTR1ZoWkdWeVFtRm5PMXh1SUNCd2RXSnNhV01nWW05a2VUODZJR0Z1ZVR0Y2JseHVJQ0JqYjI1emRISjFZM1J2Y2lodmNIUnBiMjV6T2lCSWRIUndVbVZ6Y0c5dWMyVlBjSFJwYjI1ektTQjdYRzRnSUNBZ2RHaHBjeTV6ZEdGMGRYTkRiMlJsSUQwZ2IzQjBhVzl1Y3k1emRHRjBkWE5EYjJSbE8xeHVJQ0FnSUhSb2FYTXVhR1ZoWkdWeWN5QTlJRzl3ZEdsdmJuTXVhR1ZoWkdWeWN5QjhmQ0I3ZlR0Y2JpQWdJQ0IwYUdsekxtSnZaSGtnUFNCdmNIUnBiMjV6TG1KdlpIazdYRzRnSUgxY2JseHVJQ0J6ZEdGMGFXTWdhWE5KYm5OMFlXNWpaU2h5WlhOd2IyNXpaVG9nZFc1cmJtOTNiaWs2SUhKbGMzQnZibk5sSUdseklFaDBkSEJTWlhOd2IyNXpaU0I3WEc0Z0lDQWdMeTlrWlhSbGNtMXBibVVnYVdZZ2NtVnpjRzl1YzJVZ2FYTWdZU0IyWVd4cFpDQklkSFJ3VW1WemNHOXVjMlZjYmlBZ0lDQnBaaUFvSVhKbGMzQnZibk5sS1NCeVpYUjFjbTRnWm1Gc2MyVTdYRzRnSUNBZ1kyOXVjM1FnY21WemNDQTlJSEpsYzNCdmJuTmxJR0Z6SUdGdWVUdGNiaUFnSUNCeVpYUjFjbTRnZEhsd1pXOW1JSEpsYzNBdWMzUmhkSFZ6UTI5a1pTQTlQVDBnWENKdWRXMWlaWEpjSWlBbUppQjBlWEJsYjJZZ2NtVnpjQzVvWldGa1pYSnpJRDA5UFNCY0ltOWlhbVZqZEZ3aU8xeHVJQ0I5WEc1OVhHNGlYWDA9Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/protocol-http/dist/es/httpResponse.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/protocol-http/dist/es/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@aws-sdk/protocol-http/dist/es/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpRequest: () => (/* reexport safe */ _httpRequest__WEBPACK_IMPORTED_MODULE_1__.HttpRequest),\n/* harmony export */   HttpResponse: () => (/* reexport safe */ _httpResponse__WEBPACK_IMPORTED_MODULE_0__.HttpResponse),\n/* harmony export */   isValidHostname: () => (/* reexport safe */ _isValidHostname__WEBPACK_IMPORTED_MODULE_3__.isValidHostname)\n/* harmony export */ });\n/* harmony import */ var _httpResponse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./httpResponse */ \"(ssr)/./node_modules/@aws-sdk/protocol-http/dist/es/httpResponse.js\");\n/* harmony import */ var _httpRequest__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./httpRequest */ \"(ssr)/./node_modules/@aws-sdk/protocol-http/dist/es/httpRequest.js\");\n/* harmony import */ var _httpHandler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./httpHandler */ \"(ssr)/./node_modules/@aws-sdk/protocol-http/dist/es/httpHandler.js\");\n/* harmony import */ var _isValidHostname__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./isValidHostname */ \"(ssr)/./node_modules/@aws-sdk/protocol-http/dist/es/isValidHostname.js\");\n\n\n\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxnQkFBZ0IsQ0FBQztBQUMvQixjQUFjLGVBQWUsQ0FBQztBQUM5QixjQUFjLGVBQWUsQ0FBQztBQUM5QixjQUFjLG1CQUFtQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vaHR0cFJlc3BvbnNlXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9odHRwUmVxdWVzdFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vaHR0cEhhbmRsZXJcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2lzVmFsaWRIb3N0bmFtZVwiO1xuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvcHJvdG9jb2wtaHR0cC9kaXN0L2VzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBK0I7QUFDRDtBQUNBO0FBQ0k7QUFDbEMsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9wcm90b2NvbC1odHRwL2Rpc3QvZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vaHR0cFJlc3BvbnNlXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9odHRwUmVxdWVzdFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vaHR0cEhhbmRsZXJcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2lzVmFsaWRIb3N0bmFtZVwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYVc1a1pYZ3Vhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOHVMaTl6Y21NdmFXNWtaWGd1ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRXNZMEZCWXl4blFrRkJaMElzUTBGQlF6dEJRVU12UWl4alFVRmpMR1ZCUVdVc1EwRkJRenRCUVVNNVFpeGpRVUZqTEdWQlFXVXNRMEZCUXp0QlFVTTVRaXhqUVVGakxHMUNRVUZ0UWl4RFFVRkRJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpWlhod2IzSjBJQ29nWm5KdmJTQmNJaTR2YUhSMGNGSmxjM0J2Ym5ObFhDSTdYRzVsZUhCdmNuUWdLaUJtY205dElGd2lMaTlvZEhSd1VtVnhkV1Z6ZEZ3aU8xeHVaWGh3YjNKMElDb2dabkp2YlNCY0lpNHZhSFIwY0VoaGJtUnNaWEpjSWp0Y2JtVjRjRzl5ZENBcUlHWnliMjBnWENJdUwybHpWbUZzYVdSSWIzTjBibUZ0WlZ3aU8xeHVJbDE5Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/protocol-http/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/protocol-http/dist/es/isValidHostname.js":
/*!************************************************************************!*\
  !*** ./node_modules/@aws-sdk/protocol-http/dist/es/isValidHostname.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isValidHostname: () => (/* binding */ isValidHostname)\n/* harmony export */ });\nfunction isValidHostname(hostname) {\n    var hostPattern = /^[a-z0-9][a-z0-9\\.\\-]*[a-z0-9]$/;\n    return hostPattern.test(hostname);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNWYWxpZEhvc3RuYW1lLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2lzVmFsaWRIb3N0bmFtZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLFVBQVUsZUFBZSxDQUFDLFFBQWdCO0lBQzlDLElBQU0sV0FBVyxHQUFHLGlDQUFpQyxDQUFDO0lBQ3RELE9BQU8sV0FBVyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUNwQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRIb3N0bmFtZShob3N0bmFtZTogc3RyaW5nKTogYm9vbGVhbiB7XG4gIGNvbnN0IGhvc3RQYXR0ZXJuID0gL15bYS16MC05XVthLXowLTlcXC5cXC1dKlthLXowLTldJC87XG4gIHJldHVybiBob3N0UGF0dGVybi50ZXN0KGhvc3RuYW1lKTtcbn1cbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvcHJvdG9jb2wtaHR0cC9kaXN0L2VzL2lzVmFsaWRIb3N0bmFtZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL3Byb3RvY29sLWh0dHAvZGlzdC9lcy9pc1ZhbGlkSG9zdG5hbWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRIb3N0bmFtZShob3N0bmFtZSkge1xuICAgIHZhciBob3N0UGF0dGVybiA9IC9eW2EtejAtOV1bYS16MC05XFwuXFwtXSpbYS16MC05XSQvO1xuICAgIHJldHVybiBob3N0UGF0dGVybi50ZXN0KGhvc3RuYW1lKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWFYTldZV3hwWkVodmMzUnVZVzFsTG1weklpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhNaU9sc2lMaTR2TGk0dmMzSmpMMmx6Vm1Gc2FXUkliM04wYm1GdFpTNTBjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4TlFVRk5MRlZCUVZVc1pVRkJaU3hEUVVGRExGRkJRV2RDTzBsQlF6bERMRWxCUVUwc1YwRkJWeXhIUVVGSExHbERRVUZwUXl4RFFVRkRPMGxCUTNSRUxFOUJRVThzVjBGQlZ5eERRVUZETEVsQlFVa3NRMEZCUXl4UlFVRlJMRU5CUVVNc1EwRkJRenRCUVVOd1F5eERRVUZESWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaVpYaHdiM0owSUdaMWJtTjBhVzl1SUdselZtRnNhV1JJYjNOMGJtRnRaU2hvYjNOMGJtRnRaVG9nYzNSeWFXNW5LVG9nWW05dmJHVmhiaUI3WEc0Z0lHTnZibk4wSUdodmMzUlFZWFIwWlhKdUlEMGdMMTViWVMxNk1DMDVYVnRoTFhvd0xUbGNYQzVjWEMxZEtsdGhMWG93TFRsZEpDODdYRzRnSUhKbGRIVnliaUJvYjNOMFVHRjBkR1Z5Ymk1MFpYTjBLR2h2YzNSdVlXMWxLVHRjYm4xY2JpSmRmUT09Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/protocol-http/dist/es/isValidHostname.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/protocol-http/node_modules/tslib/tslib.es6.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@aws-sdk/protocol-http/node_modules/tslib/tslib.es6.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/protocol-http/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/querystring-builder/dist/es/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@aws-sdk/querystring-builder/dist/es/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildQueryString: () => (/* binding */ buildQueryString)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/querystring-builder/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_util_uri_escape__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/util-uri-escape */ \"(ssr)/./node_modules/@aws-sdk/util-uri-escape/dist/es/index.js\");\n\n\nfunction buildQueryString(query) {\n    var e_1, _a;\n    var parts = [];\n    try {\n        for (var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__values)(Object.keys(query).sort()), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var key = _c.value;\n            var value = query[key];\n            key = (0,_aws_sdk_util_uri_escape__WEBPACK_IMPORTED_MODULE_0__.escapeUri)(key);\n            if (Array.isArray(value)) {\n                for (var i = 0, iLen = value.length; i < iLen; i++) {\n                    parts.push(key + \"=\" + (0,_aws_sdk_util_uri_escape__WEBPACK_IMPORTED_MODULE_0__.escapeUri)(value[i]));\n                }\n            }\n            else {\n                var qsEntry = key;\n                if (value || typeof value === \"string\") {\n                    qsEntry += \"=\" + (0,_aws_sdk_util_uri_escape__WEBPACK_IMPORTED_MODULE_0__.escapeUri)(value);\n                }\n                parts.push(qsEntry);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return parts.join(\"&\");\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUVyRCxNQUFNLFVBQVUsZ0JBQWdCLENBQUMsS0FBd0I7O0lBQ3ZELElBQU0sS0FBSyxHQUFhLEVBQUUsQ0FBQzs7UUFDM0IsS0FBZ0IsSUFBQSxLQUFBLFNBQUEsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQSxnQkFBQSw0QkFBRTtZQUF0QyxJQUFJLEdBQUcsV0FBQTtZQUNWLElBQU0sS0FBSyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUN6QixHQUFHLEdBQUcsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3JCLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtnQkFDeEIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsSUFBSSxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRTtvQkFDbEQsS0FBSyxDQUFDLElBQUksQ0FBSSxHQUFHLFNBQUksU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBRyxDQUFDLENBQUM7aUJBQzdDO2FBQ0Y7aUJBQU07Z0JBQ0wsSUFBSSxPQUFPLEdBQUcsR0FBRyxDQUFDO2dCQUNsQixJQUFJLEtBQUssSUFBSSxPQUFPLEtBQUssS0FBSyxRQUFRLEVBQUU7b0JBQ3RDLE9BQU8sSUFBSSxNQUFJLFNBQVMsQ0FBQyxLQUFLLENBQUcsQ0FBQztpQkFDbkM7Z0JBQ0QsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQzthQUNyQjtTQUNGOzs7Ozs7Ozs7SUFFRCxPQUFPLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDekIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFF1ZXJ5UGFyYW1ldGVyQmFnIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5pbXBvcnQgeyBlc2NhcGVVcmkgfSBmcm9tIFwiQGF3cy1zZGsvdXRpbC11cmktZXNjYXBlXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBidWlsZFF1ZXJ5U3RyaW5nKHF1ZXJ5OiBRdWVyeVBhcmFtZXRlckJhZyk6IHN0cmluZyB7XG4gIGNvbnN0IHBhcnRzOiBzdHJpbmdbXSA9IFtdO1xuICBmb3IgKGxldCBrZXkgb2YgT2JqZWN0LmtleXMocXVlcnkpLnNvcnQoKSkge1xuICAgIGNvbnN0IHZhbHVlID0gcXVlcnlba2V5XTtcbiAgICBrZXkgPSBlc2NhcGVVcmkoa2V5KTtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgIGZvciAobGV0IGkgPSAwLCBpTGVuID0gdmFsdWUubGVuZ3RoOyBpIDwgaUxlbjsgaSsrKSB7XG4gICAgICAgIHBhcnRzLnB1c2goYCR7a2V5fT0ke2VzY2FwZVVyaSh2YWx1ZVtpXSl9YCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGxldCBxc0VudHJ5ID0ga2V5O1xuICAgICAgaWYgKHZhbHVlIHx8IHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBxc0VudHJ5ICs9IGA9JHtlc2NhcGVVcmkodmFsdWUpfWA7XG4gICAgICB9XG4gICAgICBwYXJ0cy5wdXNoKHFzRW50cnkpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBwYXJ0cy5qb2luKFwiJlwiKTtcbn1cbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvcXVlcnlzdHJpbmctYnVpbGRlci9kaXN0L2VzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFpQztBQUNvQjtBQUM5QztBQUNQO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwrQ0FBUSw2Q0FBNkMsVUFBVTtBQUNyRjtBQUNBO0FBQ0Esa0JBQWtCLG1FQUFTO0FBQzNCO0FBQ0EscURBQXFELFVBQVU7QUFDL0QsMkNBQTJDLG1FQUFTO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsbUVBQVM7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixRQUFRO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvcXVlcnlzdHJpbmctYnVpbGRlci9kaXN0L2VzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fdmFsdWVzIH0gZnJvbSBcInRzbGliXCI7XG5pbXBvcnQgeyBlc2NhcGVVcmkgfSBmcm9tIFwiQGF3cy1zZGsvdXRpbC11cmktZXNjYXBlXCI7XG5leHBvcnQgZnVuY3Rpb24gYnVpbGRRdWVyeVN0cmluZyhxdWVyeSkge1xuICAgIHZhciBlXzEsIF9hO1xuICAgIHZhciBwYXJ0cyA9IFtdO1xuICAgIHRyeSB7XG4gICAgICAgIGZvciAodmFyIF9iID0gX192YWx1ZXMoT2JqZWN0LmtleXMocXVlcnkpLnNvcnQoKSksIF9jID0gX2IubmV4dCgpOyAhX2MuZG9uZTsgX2MgPSBfYi5uZXh0KCkpIHtcbiAgICAgICAgICAgIHZhciBrZXkgPSBfYy52YWx1ZTtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IHF1ZXJ5W2tleV07XG4gICAgICAgICAgICBrZXkgPSBlc2NhcGVVcmkoa2V5KTtcbiAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBpTGVuID0gdmFsdWUubGVuZ3RoOyBpIDwgaUxlbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHBhcnRzLnB1c2goa2V5ICsgXCI9XCIgKyBlc2NhcGVVcmkodmFsdWVbaV0pKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB2YXIgcXNFbnRyeSA9IGtleTtcbiAgICAgICAgICAgICAgICBpZiAodmFsdWUgfHwgdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgICAgIHFzRW50cnkgKz0gXCI9XCIgKyBlc2NhcGVVcmkodmFsdWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBwYXJ0cy5wdXNoKHFzRW50cnkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGNhdGNoIChlXzFfMSkgeyBlXzEgPSB7IGVycm9yOiBlXzFfMSB9OyB9XG4gICAgZmluYWxseSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAoX2MgJiYgIV9jLmRvbmUgJiYgKF9hID0gX2IucmV0dXJuKSkgX2EuY2FsbChfYik7XG4gICAgICAgIH1cbiAgICAgICAgZmluYWxseSB7IGlmIChlXzEpIHRocm93IGVfMS5lcnJvcjsgfVxuICAgIH1cbiAgICByZXR1cm4gcGFydHMuam9pbihcIiZcIik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lhVzVrWlhndWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12YVc1a1pYZ3VkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanRCUVVOQkxFOUJRVThzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN3d1FrRkJNRUlzUTBGQlF6dEJRVVZ5UkN4TlFVRk5MRlZCUVZVc1owSkJRV2RDTEVOQlFVTXNTMEZCZDBJN08wbEJRM1pFTEVsQlFVMHNTMEZCU3l4SFFVRmhMRVZCUVVVc1EwRkJRenM3VVVGRE0wSXNTMEZCWjBJc1NVRkJRU3hMUVVGQkxGTkJRVUVzVFVGQlRTeERRVUZETEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJReXhKUVVGSkxFVkJRVVVzUTBGQlFTeG5Ra0ZCUVN3MFFrRkJSVHRaUVVGMFF5eEpRVUZKTEVkQlFVY3NWMEZCUVR0WlFVTldMRWxCUVUwc1MwRkJTeXhIUVVGSExFdEJRVXNzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXp0WlFVTjZRaXhIUVVGSExFZEJRVWNzVTBGQlV5eERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRPMWxCUTNKQ0xFbEJRVWtzUzBGQlN5eERRVUZETEU5QlFVOHNRMEZCUXl4TFFVRkxMRU5CUVVNc1JVRkJSVHRuUWtGRGVFSXNTMEZCU3l4SlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRExFVkJRVVVzU1VGQlNTeEhRVUZITEV0QlFVc3NRMEZCUXl4TlFVRk5MRVZCUVVVc1EwRkJReXhIUVVGSExFbEJRVWtzUlVGQlJTeERRVUZETEVWQlFVVXNSVUZCUlR0dlFrRkRiRVFzUzBGQlN5eERRVUZETEVsQlFVa3NRMEZCU1N4SFFVRkhMRk5CUVVrc1UwRkJVeXhEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUnl4RFFVRkRMRU5CUVVNN2FVSkJRemRETzJGQlEwWTdhVUpCUVUwN1owSkJRMHdzU1VGQlNTeFBRVUZQTEVkQlFVY3NSMEZCUnl4RFFVRkRPMmRDUVVOc1FpeEpRVUZKTEV0QlFVc3NTVUZCU1N4UFFVRlBMRXRCUVVzc1MwRkJTeXhSUVVGUkxFVkJRVVU3YjBKQlEzUkRMRTlCUVU4c1NVRkJTU3hOUVVGSkxGTkJRVk1zUTBGQlF5eExRVUZMTEVOQlFVY3NRMEZCUXp0cFFrRkRia003WjBKQlEwUXNTMEZCU3l4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF6dGhRVU55UWp0VFFVTkdPenM3T3pzN096czdTVUZGUkN4UFFVRlBMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTTdRVUZEZWtJc1EwRkJReUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSW1sdGNHOXlkQ0I3SUZGMVpYSjVVR0Z5WVcxbGRHVnlRbUZuSUgwZ1puSnZiU0JjSWtCaGQzTXRjMlJyTDNSNWNHVnpYQ0k3WEc1cGJYQnZjblFnZXlCbGMyTmhjR1ZWY21rZ2ZTQm1jbTl0SUZ3aVFHRjNjeTF6WkdzdmRYUnBiQzExY21rdFpYTmpZWEJsWENJN1hHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQmlkV2xzWkZGMVpYSjVVM1J5YVc1bktIRjFaWEo1T2lCUmRXVnllVkJoY21GdFpYUmxja0poWnlrNklITjBjbWx1WnlCN1hHNGdJR052Ym5OMElIQmhjblJ6T2lCemRISnBibWRiWFNBOUlGdGRPMXh1SUNCbWIzSWdLR3hsZENCclpYa2diMllnVDJKcVpXTjBMbXRsZVhNb2NYVmxjbmtwTG5OdmNuUW9LU2tnZTF4dUlDQWdJR052Ym5OMElIWmhiSFZsSUQwZ2NYVmxjbmxiYTJWNVhUdGNiaUFnSUNCclpYa2dQU0JsYzJOaGNHVlZjbWtvYTJWNUtUdGNiaUFnSUNCcFppQW9RWEp5WVhrdWFYTkJjbkpoZVNoMllXeDFaU2twSUh0Y2JpQWdJQ0FnSUdadmNpQW9iR1YwSUdrZ1BTQXdMQ0JwVEdWdUlEMGdkbUZzZFdVdWJHVnVaM1JvT3lCcElEd2dhVXhsYmpzZ2FTc3JLU0I3WEc0Z0lDQWdJQ0FnSUhCaGNuUnpMbkIxYzJnb1lDUjdhMlY1ZlQwa2UyVnpZMkZ3WlZWeWFTaDJZV3gxWlZ0cFhTbDlZQ2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lHeGxkQ0J4YzBWdWRISjVJRDBnYTJWNU8xeHVJQ0FnSUNBZ2FXWWdLSFpoYkhWbElIeDhJSFI1Y0dWdlppQjJZV3gxWlNBOVBUMGdYQ0p6ZEhKcGJtZGNJaWtnZTF4dUlDQWdJQ0FnSUNCeGMwVnVkSEo1SUNzOUlHQTlKSHRsYzJOaGNHVlZjbWtvZG1Gc2RXVXBmV0E3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdJQ0J3WVhKMGN5NXdkWE5vS0hGelJXNTBjbmtwTzF4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUhKbGRIVnliaUJ3WVhKMGN5NXFiMmx1S0Z3aUpsd2lLVHRjYm4xY2JpSmRmUT09Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/querystring-builder/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/querystring-builder/node_modules/tslib/tslib.es6.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/querystring-builder/node_modules/tslib/tslib.es6.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/querystring-builder/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/querystring-parser/dist/es/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@aws-sdk/querystring-parser/dist/es/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseQueryString: () => (/* binding */ parseQueryString)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/querystring-parser/node_modules/tslib/tslib.es6.js\");\n\nfunction parseQueryString(querystring) {\n    var e_1, _a;\n    var query = {};\n    querystring = querystring.replace(/^\\?/, \"\");\n    if (querystring) {\n        try {\n            for (var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__values)(querystring.split(\"&\")), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var pair = _c.value;\n                var _d = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__read)(pair.split(\"=\"), 2), key = _d[0], _e = _d[1], value = _e === void 0 ? null : _e;\n                key = decodeURIComponent(key);\n                if (value) {\n                    value = decodeURIComponent(value);\n                }\n                if (!(key in query)) {\n                    query[key] = value;\n                }\n                else if (Array.isArray(query[key])) {\n                    query[key].push(value);\n                }\n                else {\n                    query[key] = [query[key], value];\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    return query;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUVBLE1BQU0sVUFBVSxnQkFBZ0IsQ0FBQyxXQUFtQjs7SUFDbEQsSUFBTSxLQUFLLEdBQXNCLEVBQUUsQ0FBQztJQUNwQyxXQUFXLEdBQUcsV0FBVyxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFFN0MsSUFBSSxXQUFXLEVBQUU7O1lBQ2YsS0FBbUIsSUFBQSxLQUFBLFNBQUEsV0FBVyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQSxnQkFBQSw0QkFBRTtnQkFBdEMsSUFBTSxJQUFJLFdBQUE7Z0JBQ1QsSUFBQSxLQUFBLE9BQXNCLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUEsRUFBcEMsR0FBRyxRQUFBLEVBQUUsVUFBWSxFQUFaLEtBQUssbUJBQUcsSUFBSSxLQUFtQixDQUFDO2dCQUMxQyxHQUFHLEdBQUcsa0JBQWtCLENBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQzlCLElBQUksS0FBSyxFQUFFO29CQUNULEtBQUssR0FBRyxrQkFBa0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztpQkFDbkM7Z0JBQ0QsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLEtBQUssQ0FBQyxFQUFFO29CQUNuQixLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDO2lCQUNwQjtxQkFBTSxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUU7b0JBQ25DLEtBQUssQ0FBQyxHQUFHLENBQW1CLENBQUMsSUFBSSxDQUFDLEtBQWUsQ0FBQyxDQUFDO2lCQUNyRDtxQkFBTTtvQkFDTCxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFXLEVBQUUsS0FBZSxDQUFDLENBQUM7aUJBQ3REO2FBQ0Y7Ozs7Ozs7OztLQUNGO0lBRUQsT0FBTyxLQUFLLENBQUM7QUFDZixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUXVlcnlQYXJhbWV0ZXJCYWcgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlUXVlcnlTdHJpbmcocXVlcnlzdHJpbmc6IHN0cmluZyk6IFF1ZXJ5UGFyYW1ldGVyQmFnIHtcbiAgY29uc3QgcXVlcnk6IFF1ZXJ5UGFyYW1ldGVyQmFnID0ge307XG4gIHF1ZXJ5c3RyaW5nID0gcXVlcnlzdHJpbmcucmVwbGFjZSgvXlxcPy8sIFwiXCIpO1xuXG4gIGlmIChxdWVyeXN0cmluZykge1xuICAgIGZvciAoY29uc3QgcGFpciBvZiBxdWVyeXN0cmluZy5zcGxpdChcIiZcIikpIHtcbiAgICAgIGxldCBba2V5LCB2YWx1ZSA9IG51bGxdID0gcGFpci5zcGxpdChcIj1cIik7XG4gICAgICBrZXkgPSBkZWNvZGVVUklDb21wb25lbnQoa2V5KTtcbiAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICB2YWx1ZSA9IGRlY29kZVVSSUNvbXBvbmVudCh2YWx1ZSk7XG4gICAgICB9XG4gICAgICBpZiAoIShrZXkgaW4gcXVlcnkpKSB7XG4gICAgICAgIHF1ZXJ5W2tleV0gPSB2YWx1ZTtcbiAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShxdWVyeVtrZXldKSkge1xuICAgICAgICAocXVlcnlba2V5XSBhcyBBcnJheTxzdHJpbmc+KS5wdXNoKHZhbHVlIGFzIHN0cmluZyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBxdWVyeVtrZXldID0gW3F1ZXJ5W2tleV0gYXMgc3RyaW5nLCB2YWx1ZSBhcyBzdHJpbmddO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBxdWVyeTtcbn1cbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvcXVlcnlzdHJpbmctcGFyc2VyL2Rpc3QvZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBeUM7QUFDbEM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLCtDQUFRLDBDQUEwQyxVQUFVO0FBQ3RGO0FBQ0EseUJBQXlCLDZDQUFNO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixRQUFRO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9xdWVyeXN0cmluZy1wYXJzZXIvZGlzdC9lcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX3JlYWQsIF9fdmFsdWVzIH0gZnJvbSBcInRzbGliXCI7XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VRdWVyeVN0cmluZyhxdWVyeXN0cmluZykge1xuICAgIHZhciBlXzEsIF9hO1xuICAgIHZhciBxdWVyeSA9IHt9O1xuICAgIHF1ZXJ5c3RyaW5nID0gcXVlcnlzdHJpbmcucmVwbGFjZSgvXlxcPy8sIFwiXCIpO1xuICAgIGlmIChxdWVyeXN0cmluZykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgZm9yICh2YXIgX2IgPSBfX3ZhbHVlcyhxdWVyeXN0cmluZy5zcGxpdChcIiZcIikpLCBfYyA9IF9iLm5leHQoKTsgIV9jLmRvbmU7IF9jID0gX2IubmV4dCgpKSB7XG4gICAgICAgICAgICAgICAgdmFyIHBhaXIgPSBfYy52YWx1ZTtcbiAgICAgICAgICAgICAgICB2YXIgX2QgPSBfX3JlYWQocGFpci5zcGxpdChcIj1cIiksIDIpLCBrZXkgPSBfZFswXSwgX2UgPSBfZFsxXSwgdmFsdWUgPSBfZSA9PT0gdm9pZCAwID8gbnVsbCA6IF9lO1xuICAgICAgICAgICAgICAgIGtleSA9IGRlY29kZVVSSUNvbXBvbmVudChrZXkpO1xuICAgICAgICAgICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IGRlY29kZVVSSUNvbXBvbmVudCh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICghKGtleSBpbiBxdWVyeSkpIHtcbiAgICAgICAgICAgICAgICAgICAgcXVlcnlba2V5XSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChBcnJheS5pc0FycmF5KHF1ZXJ5W2tleV0pKSB7XG4gICAgICAgICAgICAgICAgICAgIHF1ZXJ5W2tleV0ucHVzaCh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBxdWVyeVtrZXldID0gW3F1ZXJ5W2tleV0sIHZhbHVlXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVfMV8xKSB7IGVfMSA9IHsgZXJyb3I6IGVfMV8xIH07IH1cbiAgICAgICAgZmluYWxseSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGlmIChfYyAmJiAhX2MuZG9uZSAmJiAoX2EgPSBfYi5yZXR1cm4pKSBfYS5jYWxsKF9iKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZpbmFsbHkgeyBpZiAoZV8xKSB0aHJvdyBlXzEuZXJyb3I7IH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcXVlcnk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lhVzVrWlhndWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12YVc1a1pYZ3VkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanRCUVVWQkxFMUJRVTBzVlVGQlZTeG5Ra0ZCWjBJc1EwRkJReXhYUVVGdFFqczdTVUZEYkVRc1NVRkJUU3hMUVVGTExFZEJRWE5DTEVWQlFVVXNRMEZCUXp0SlFVTndReXhYUVVGWExFZEJRVWNzVjBGQlZ5eERRVUZETEU5QlFVOHNRMEZCUXl4TFFVRkxMRVZCUVVVc1JVRkJSU3hEUVVGRExFTkJRVU03U1VGRk4wTXNTVUZCU1N4WFFVRlhMRVZCUVVVN08xbEJRMllzUzBGQmJVSXNTVUZCUVN4TFFVRkJMRk5CUVVFc1YwRkJWeXhEUVVGRExFdEJRVXNzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUVN4blFrRkJRU3cwUWtGQlJUdG5Ra0ZCZEVNc1NVRkJUU3hKUVVGSkxGZEJRVUU3WjBKQlExUXNTVUZCUVN4TFFVRkJMRTlCUVhOQ0xFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNSMEZCUnl4RFFVRkRMRWxCUVVFc1JVRkJjRU1zUjBGQlJ5eFJRVUZCTEVWQlFVVXNWVUZCV1N4RlFVRmFMRXRCUVVzc2JVSkJRVWNzU1VGQlNTeExRVUZ0UWl4RFFVRkRPMmRDUVVNeFF5eEhRVUZITEVkQlFVY3NhMEpCUVd0Q0xFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTTdaMEpCUXpsQ0xFbEJRVWtzUzBGQlN5eEZRVUZGTzI5Q1FVTlVMRXRCUVVzc1IwRkJSeXhyUWtGQmEwSXNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJRenRwUWtGRGJrTTdaMEpCUTBRc1NVRkJTU3hEUVVGRExFTkJRVU1zUjBGQlJ5eEpRVUZKTEV0QlFVc3NRMEZCUXl4RlFVRkZPMjlDUVVOdVFpeExRVUZMTEVOQlFVTXNSMEZCUnl4RFFVRkRMRWRCUVVjc1MwRkJTeXhEUVVGRE8ybENRVU53UWp0eFFrRkJUU3hKUVVGSkxFdEJRVXNzUTBGQlF5eFBRVUZQTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFVkJRVVU3YjBKQlEyNURMRXRCUVVzc1EwRkJReXhIUVVGSExFTkJRVzFDTEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVdVc1EwRkJReXhEUVVGRE8ybENRVU55UkR0eFFrRkJUVHR2UWtGRFRDeExRVUZMTEVOQlFVTXNSMEZCUnl4RFFVRkRMRWRCUVVjc1EwRkJReXhMUVVGTExFTkJRVU1zUjBGQlJ5eERRVUZYTEVWQlFVVXNTMEZCWlN4RFFVRkRMRU5CUVVNN2FVSkJRM1JFTzJGQlEwWTdPenM3T3pzN096dExRVU5HTzBsQlJVUXNUMEZCVHl4TFFVRkxMRU5CUVVNN1FVRkRaaXhEUVVGRElpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lhVzF3YjNKMElIc2dVWFZsY25sUVlYSmhiV1YwWlhKQ1lXY2dmU0JtY205dElGd2lRR0YzY3kxelpHc3ZkSGx3WlhOY0lqdGNibHh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJSEJoY25ObFVYVmxjbmxUZEhKcGJtY29jWFZsY25semRISnBibWM2SUhOMGNtbHVaeWs2SUZGMVpYSjVVR0Z5WVcxbGRHVnlRbUZuSUh0Y2JpQWdZMjl1YzNRZ2NYVmxjbms2SUZGMVpYSjVVR0Z5WVcxbGRHVnlRbUZuSUQwZ2UzMDdYRzRnSUhGMVpYSjVjM1J5YVc1bklEMGdjWFZsY25semRISnBibWN1Y21Wd2JHRmpaU2d2WGx4Y1B5OHNJRndpWENJcE8xeHVYRzRnSUdsbUlDaHhkV1Z5ZVhOMGNtbHVaeWtnZTF4dUlDQWdJR1p2Y2lBb1kyOXVjM1FnY0dGcGNpQnZaaUJ4ZFdWeWVYTjBjbWx1Wnk1emNHeHBkQ2hjSWlaY0lpa3BJSHRjYmlBZ0lDQWdJR3hsZENCYmEyVjVMQ0IyWVd4MVpTQTlJRzUxYkd4ZElEMGdjR0ZwY2k1emNHeHBkQ2hjSWoxY0lpazdYRzRnSUNBZ0lDQnJaWGtnUFNCa1pXTnZaR1ZWVWtsRGIyMXdiMjVsYm5Rb2EyVjVLVHRjYmlBZ0lDQWdJR2xtSUNoMllXeDFaU2tnZTF4dUlDQWdJQ0FnSUNCMllXeDFaU0E5SUdSbFkyOWtaVlZTU1VOdmJYQnZibVZ1ZENoMllXeDFaU2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdJQ0JwWmlBb0lTaHJaWGtnYVc0Z2NYVmxjbmtwS1NCN1hHNGdJQ0FnSUNBZ0lIRjFaWEo1VzJ0bGVWMGdQU0IyWVd4MVpUdGNiaUFnSUNBZ0lIMGdaV3h6WlNCcFppQW9RWEp5WVhrdWFYTkJjbkpoZVNoeGRXVnllVnRyWlhsZEtTa2dlMXh1SUNBZ0lDQWdJQ0FvY1hWbGNubGJhMlY1WFNCaGN5QkJjbkpoZVR4emRISnBibWMrS1M1d2RYTm9LSFpoYkhWbElHRnpJSE4wY21sdVp5azdYRzRnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQnhkV1Z5ZVZ0clpYbGRJRDBnVzNGMVpYSjVXMnRsZVYwZ1lYTWdjM1J5YVc1bkxDQjJZV3gxWlNCaGN5QnpkSEpwYm1kZE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdmVnh1WEc0Z0lISmxkSFZ5YmlCeGRXVnllVHRjYm4xY2JpSmRmUT09Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/querystring-parser/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/querystring-parser/node_modules/tslib/tslib.es6.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/querystring-parser/node_modules/tslib/tslib.es6.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/querystring-parser/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/service-error-classification/dist/es/constants.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/service-error-classification/dist/es/constants.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CLOCK_SKEW_ERROR_CODES: () => (/* binding */ CLOCK_SKEW_ERROR_CODES),\n/* harmony export */   THROTTLING_ERROR_CODES: () => (/* binding */ THROTTLING_ERROR_CODES),\n/* harmony export */   TRANSIENT_ERROR_CODES: () => (/* binding */ TRANSIENT_ERROR_CODES),\n/* harmony export */   TRANSIENT_ERROR_STATUS_CODES: () => (/* binding */ TRANSIENT_ERROR_STATUS_CODES)\n/* harmony export */ });\n/**\n * Errors encountered when the client clock and server clock cannot agree on the\n * current time.\n *\n * These errors are retryable, assuming the SDK has enabled clock skew\n * correction.\n */\nvar CLOCK_SKEW_ERROR_CODES = [\n    \"AuthFailure\",\n    \"InvalidSignatureException\",\n    \"RequestExpired\",\n    \"RequestInTheFuture\",\n    \"RequestTimeTooSkewed\",\n    \"SignatureDoesNotMatch\",\n];\n/**\n * Errors that indicate the SDK is being throttled.\n *\n * These errors are always retryable.\n */\nvar THROTTLING_ERROR_CODES = [\n    \"BandwidthLimitExceeded\",\n    \"EC2ThrottledException\",\n    \"LimitExceededException\",\n    \"PriorRequestNotComplete\",\n    \"ProvisionedThroughputExceededException\",\n    \"RequestLimitExceeded\",\n    \"RequestThrottled\",\n    \"RequestThrottledException\",\n    \"SlowDown\",\n    \"ThrottledException\",\n    \"Throttling\",\n    \"ThrottlingException\",\n    \"TooManyRequestsException\",\n    \"TransactionInProgressException\",\n];\n/**\n * Error codes that indicate transient issues\n */\nvar TRANSIENT_ERROR_CODES = [\"AbortError\", \"TimeoutError\", \"RequestTimeout\", \"RequestTimeoutException\"];\n/**\n * Error codes that indicate transient issues\n */\nvar TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFDSCxNQUFNLENBQUMsSUFBTSxzQkFBc0IsR0FBRztJQUNwQyxhQUFhO0lBQ2IsMkJBQTJCO0lBQzNCLGdCQUFnQjtJQUNoQixvQkFBb0I7SUFDcEIsc0JBQXNCO0lBQ3RCLHVCQUF1QjtDQUN4QixDQUFDO0FBRUY7Ozs7R0FJRztBQUNILE1BQU0sQ0FBQyxJQUFNLHNCQUFzQixHQUFHO0lBQ3BDLHdCQUF3QjtJQUN4Qix1QkFBdUI7SUFDdkIsd0JBQXdCO0lBQ3hCLHlCQUF5QjtJQUN6Qix3Q0FBd0M7SUFDeEMsc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQiwyQkFBMkI7SUFDM0IsVUFBVTtJQUNWLG9CQUFvQjtJQUNwQixZQUFZO0lBQ1oscUJBQXFCO0lBQ3JCLDBCQUEwQjtJQUMxQixnQ0FBZ0M7Q0FDakMsQ0FBQztBQUVGOztHQUVHO0FBQ0gsTUFBTSxDQUFDLElBQU0scUJBQXFCLEdBQUcsQ0FBQyxZQUFZLEVBQUUsY0FBYyxFQUFFLGdCQUFnQixFQUFFLHlCQUF5QixDQUFDLENBQUM7QUFFakg7O0dBRUc7QUFDSCxNQUFNLENBQUMsSUFBTSw0QkFBNEIsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFcnJvcnMgZW5jb3VudGVyZWQgd2hlbiB0aGUgY2xpZW50IGNsb2NrIGFuZCBzZXJ2ZXIgY2xvY2sgY2Fubm90IGFncmVlIG9uIHRoZVxuICogY3VycmVudCB0aW1lLlxuICpcbiAqIFRoZXNlIGVycm9ycyBhcmUgcmV0cnlhYmxlLCBhc3N1bWluZyB0aGUgU0RLIGhhcyBlbmFibGVkIGNsb2NrIHNrZXdcbiAqIGNvcnJlY3Rpb24uXG4gKi9cbmV4cG9ydCBjb25zdCBDTE9DS19TS0VXX0VSUk9SX0NPREVTID0gW1xuICBcIkF1dGhGYWlsdXJlXCIsXG4gIFwiSW52YWxpZFNpZ25hdHVyZUV4Y2VwdGlvblwiLFxuICBcIlJlcXVlc3RFeHBpcmVkXCIsXG4gIFwiUmVxdWVzdEluVGhlRnV0dXJlXCIsXG4gIFwiUmVxdWVzdFRpbWVUb29Ta2V3ZWRcIixcbiAgXCJTaWduYXR1cmVEb2VzTm90TWF0Y2hcIixcbl07XG5cbi8qKlxuICogRXJyb3JzIHRoYXQgaW5kaWNhdGUgdGhlIFNESyBpcyBiZWluZyB0aHJvdHRsZWQuXG4gKlxuICogVGhlc2UgZXJyb3JzIGFyZSBhbHdheXMgcmV0cnlhYmxlLlxuICovXG5leHBvcnQgY29uc3QgVEhST1RUTElOR19FUlJPUl9DT0RFUyA9IFtcbiAgXCJCYW5kd2lkdGhMaW1pdEV4Y2VlZGVkXCIsXG4gIFwiRUMyVGhyb3R0bGVkRXhjZXB0aW9uXCIsXG4gIFwiTGltaXRFeGNlZWRlZEV4Y2VwdGlvblwiLFxuICBcIlByaW9yUmVxdWVzdE5vdENvbXBsZXRlXCIsXG4gIFwiUHJvdmlzaW9uZWRUaHJvdWdocHV0RXhjZWVkZWRFeGNlcHRpb25cIixcbiAgXCJSZXF1ZXN0TGltaXRFeGNlZWRlZFwiLFxuICBcIlJlcXVlc3RUaHJvdHRsZWRcIixcbiAgXCJSZXF1ZXN0VGhyb3R0bGVkRXhjZXB0aW9uXCIsXG4gIFwiU2xvd0Rvd25cIixcbiAgXCJUaHJvdHRsZWRFeGNlcHRpb25cIixcbiAgXCJUaHJvdHRsaW5nXCIsXG4gIFwiVGhyb3R0bGluZ0V4Y2VwdGlvblwiLFxuICBcIlRvb01hbnlSZXF1ZXN0c0V4Y2VwdGlvblwiLFxuICBcIlRyYW5zYWN0aW9uSW5Qcm9ncmVzc0V4Y2VwdGlvblwiLCAvLyBEeW5hbW9EQlxuXTtcblxuLyoqXG4gKiBFcnJvciBjb2RlcyB0aGF0IGluZGljYXRlIHRyYW5zaWVudCBpc3N1ZXNcbiAqL1xuZXhwb3J0IGNvbnN0IFRSQU5TSUVOVF9FUlJPUl9DT0RFUyA9IFtcIkFib3J0RXJyb3JcIiwgXCJUaW1lb3V0RXJyb3JcIiwgXCJSZXF1ZXN0VGltZW91dFwiLCBcIlJlcXVlc3RUaW1lb3V0RXhjZXB0aW9uXCJdO1xuXG4vKipcbiAqIEVycm9yIGNvZGVzIHRoYXQgaW5kaWNhdGUgdHJhbnNpZW50IGlzc3Vlc1xuICovXG5leHBvcnQgY29uc3QgVFJBTlNJRU5UX0VSUk9SX1NUQVRVU19DT0RFUyA9IFs1MDAsIDUwMiwgNTAzLCA1MDRdO1xuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc2VydmljZS1lcnJvci1jbGFzc2lmaWNhdGlvbi9kaXN0L2VzL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQLDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc2VydmljZS1lcnJvci1jbGFzc2lmaWNhdGlvbi9kaXN0L2VzL2NvbnN0YW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEVycm9ycyBlbmNvdW50ZXJlZCB3aGVuIHRoZSBjbGllbnQgY2xvY2sgYW5kIHNlcnZlciBjbG9jayBjYW5ub3QgYWdyZWUgb24gdGhlXG4gKiBjdXJyZW50IHRpbWUuXG4gKlxuICogVGhlc2UgZXJyb3JzIGFyZSByZXRyeWFibGUsIGFzc3VtaW5nIHRoZSBTREsgaGFzIGVuYWJsZWQgY2xvY2sgc2tld1xuICogY29ycmVjdGlvbi5cbiAqL1xuZXhwb3J0IHZhciBDTE9DS19TS0VXX0VSUk9SX0NPREVTID0gW1xuICAgIFwiQXV0aEZhaWx1cmVcIixcbiAgICBcIkludmFsaWRTaWduYXR1cmVFeGNlcHRpb25cIixcbiAgICBcIlJlcXVlc3RFeHBpcmVkXCIsXG4gICAgXCJSZXF1ZXN0SW5UaGVGdXR1cmVcIixcbiAgICBcIlJlcXVlc3RUaW1lVG9vU2tld2VkXCIsXG4gICAgXCJTaWduYXR1cmVEb2VzTm90TWF0Y2hcIixcbl07XG4vKipcbiAqIEVycm9ycyB0aGF0IGluZGljYXRlIHRoZSBTREsgaXMgYmVpbmcgdGhyb3R0bGVkLlxuICpcbiAqIFRoZXNlIGVycm9ycyBhcmUgYWx3YXlzIHJldHJ5YWJsZS5cbiAqL1xuZXhwb3J0IHZhciBUSFJPVFRMSU5HX0VSUk9SX0NPREVTID0gW1xuICAgIFwiQmFuZHdpZHRoTGltaXRFeGNlZWRlZFwiLFxuICAgIFwiRUMyVGhyb3R0bGVkRXhjZXB0aW9uXCIsXG4gICAgXCJMaW1pdEV4Y2VlZGVkRXhjZXB0aW9uXCIsXG4gICAgXCJQcmlvclJlcXVlc3ROb3RDb21wbGV0ZVwiLFxuICAgIFwiUHJvdmlzaW9uZWRUaHJvdWdocHV0RXhjZWVkZWRFeGNlcHRpb25cIixcbiAgICBcIlJlcXVlc3RMaW1pdEV4Y2VlZGVkXCIsXG4gICAgXCJSZXF1ZXN0VGhyb3R0bGVkXCIsXG4gICAgXCJSZXF1ZXN0VGhyb3R0bGVkRXhjZXB0aW9uXCIsXG4gICAgXCJTbG93RG93blwiLFxuICAgIFwiVGhyb3R0bGVkRXhjZXB0aW9uXCIsXG4gICAgXCJUaHJvdHRsaW5nXCIsXG4gICAgXCJUaHJvdHRsaW5nRXhjZXB0aW9uXCIsXG4gICAgXCJUb29NYW55UmVxdWVzdHNFeGNlcHRpb25cIixcbiAgICBcIlRyYW5zYWN0aW9uSW5Qcm9ncmVzc0V4Y2VwdGlvblwiLFxuXTtcbi8qKlxuICogRXJyb3IgY29kZXMgdGhhdCBpbmRpY2F0ZSB0cmFuc2llbnQgaXNzdWVzXG4gKi9cbmV4cG9ydCB2YXIgVFJBTlNJRU5UX0VSUk9SX0NPREVTID0gW1wiQWJvcnRFcnJvclwiLCBcIlRpbWVvdXRFcnJvclwiLCBcIlJlcXVlc3RUaW1lb3V0XCIsIFwiUmVxdWVzdFRpbWVvdXRFeGNlcHRpb25cIl07XG4vKipcbiAqIEVycm9yIGNvZGVzIHRoYXQgaW5kaWNhdGUgdHJhbnNpZW50IGlzc3Vlc1xuICovXG5leHBvcnQgdmFyIFRSQU5TSUVOVF9FUlJPUl9TVEFUVVNfQ09ERVMgPSBbNTAwLCA1MDIsIDUwMywgNTA0XTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVkyOXVjM1JoYm5SekxtcHpJaXdpYzI5MWNtTmxVbTl2ZENJNklpSXNJbk52ZFhKalpYTWlPbHNpTGk0dkxpNHZjM0pqTDJOdmJuTjBZVzUwY3k1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRVHM3T3pzN08wZEJUVWM3UVVGRFNDeE5RVUZOTEVOQlFVTXNTVUZCVFN4elFrRkJjMElzUjBGQlJ6dEpRVU53UXl4aFFVRmhPMGxCUTJJc01rSkJRVEpDTzBsQlF6TkNMR2RDUVVGblFqdEpRVU5vUWl4dlFrRkJiMEk3U1VGRGNFSXNjMEpCUVhOQ08wbEJRM1JDTEhWQ1FVRjFRanREUVVONFFpeERRVUZETzBGQlJVWTdPenM3UjBGSlJ6dEJRVU5JTEUxQlFVMHNRMEZCUXl4SlFVRk5MSE5DUVVGelFpeEhRVUZITzBsQlEzQkRMSGRDUVVGM1FqdEpRVU40UWl4MVFrRkJkVUk3U1VGRGRrSXNkMEpCUVhkQ08wbEJRM2hDTEhsQ1FVRjVRanRKUVVONlFpeDNRMEZCZDBNN1NVRkRlRU1zYzBKQlFYTkNPMGxCUTNSQ0xHdENRVUZyUWp0SlFVTnNRaXd5UWtGQk1rSTdTVUZETTBJc1ZVRkJWVHRKUVVOV0xHOUNRVUZ2UWp0SlFVTndRaXhaUVVGWk8wbEJRMW9zY1VKQlFYRkNPMGxCUTNKQ0xEQkNRVUV3UWp0SlFVTXhRaXhuUTBGQlowTTdRMEZEYWtNc1EwRkJRenRCUVVWR096dEhRVVZITzBGQlEwZ3NUVUZCVFN4RFFVRkRMRWxCUVUwc2NVSkJRWEZDTEVkQlFVY3NRMEZCUXl4WlFVRlpMRVZCUVVVc1kwRkJZeXhGUVVGRkxHZENRVUZuUWl4RlFVRkZMSGxDUVVGNVFpeERRVUZETEVOQlFVTTdRVUZGYWtnN08wZEJSVWM3UVVGRFNDeE5RVUZOTEVOQlFVTXNTVUZCVFN3MFFrRkJORUlzUjBGQlJ5eERRVUZETEVkQlFVY3NSVUZCUlN4SFFVRkhMRVZCUVVVc1IwRkJSeXhGUVVGRkxFZEJRVWNzUTBGQlF5eERRVUZESWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaUx5b3FYRzRnS2lCRmNuSnZjbk1nWlc1amIzVnVkR1Z5WldRZ2QyaGxiaUIwYUdVZ1kyeHBaVzUwSUdOc2IyTnJJR0Z1WkNCelpYSjJaWElnWTJ4dlkyc2dZMkZ1Ym05MElHRm5jbVZsSUc5dUlIUm9aVnh1SUNvZ1kzVnljbVZ1ZENCMGFXMWxMbHh1SUNwY2JpQXFJRlJvWlhObElHVnljbTl5Y3lCaGNtVWdjbVYwY25saFlteGxMQ0JoYzNOMWJXbHVaeUIwYUdVZ1UwUkxJR2hoY3lCbGJtRmliR1ZrSUdOc2IyTnJJSE5yWlhkY2JpQXFJR052Y25KbFkzUnBiMjR1WEc0Z0tpOWNibVY0Y0c5eWRDQmpiMjV6ZENCRFRFOURTMTlUUzBWWFgwVlNVazlTWDBOUFJFVlRJRDBnVzF4dUlDQmNJa0YxZEdoR1lXbHNkWEpsWENJc1hHNGdJRndpU1c1MllXeHBaRk5wWjI1aGRIVnlaVVY0WTJWd2RHbHZibHdpTEZ4dUlDQmNJbEpsY1hWbGMzUkZlSEJwY21Wa1hDSXNYRzRnSUZ3aVVtVnhkV1Z6ZEVsdVZHaGxSblYwZFhKbFhDSXNYRzRnSUZ3aVVtVnhkV1Z6ZEZScGJXVlViMjlUYTJWM1pXUmNJaXhjYmlBZ1hDSlRhV2R1WVhSMWNtVkViMlZ6VG05MFRXRjBZMmhjSWl4Y2JsMDdYRzVjYmk4cUtseHVJQ29nUlhKeWIzSnpJSFJvWVhRZ2FXNWthV05oZEdVZ2RHaGxJRk5FU3lCcGN5QmlaV2x1WnlCMGFISnZkSFJzWldRdVhHNGdLbHh1SUNvZ1ZHaGxjMlVnWlhKeWIzSnpJR0Z5WlNCaGJIZGhlWE1nY21WMGNubGhZbXhsTGx4dUlDb3ZYRzVsZUhCdmNuUWdZMjl1YzNRZ1ZFaFNUMVJVVEVsT1IxOUZVbEpQVWw5RFQwUkZVeUE5SUZ0Y2JpQWdYQ0pDWVc1a2QybGtkR2hNYVcxcGRFVjRZMlZsWkdWa1hDSXNYRzRnSUZ3aVJVTXlWR2h5YjNSMGJHVmtSWGhqWlhCMGFXOXVYQ0lzWEc0Z0lGd2lUR2x0YVhSRmVHTmxaV1JsWkVWNFkyVndkR2x2Ymx3aUxGeHVJQ0JjSWxCeWFXOXlVbVZ4ZFdWemRFNXZkRU52YlhCc1pYUmxYQ0lzWEc0Z0lGd2lVSEp2ZG1semFXOXVaV1JVYUhKdmRXZG9jSFYwUlhoalpXVmtaV1JGZUdObGNIUnBiMjVjSWl4Y2JpQWdYQ0pTWlhGMVpYTjBUR2x0YVhSRmVHTmxaV1JsWkZ3aUxGeHVJQ0JjSWxKbGNYVmxjM1JVYUhKdmRIUnNaV1JjSWl4Y2JpQWdYQ0pTWlhGMVpYTjBWR2h5YjNSMGJHVmtSWGhqWlhCMGFXOXVYQ0lzWEc0Z0lGd2lVMnh2ZDBSdmQyNWNJaXhjYmlBZ1hDSlVhSEp2ZEhSc1pXUkZlR05sY0hScGIyNWNJaXhjYmlBZ1hDSlVhSEp2ZEhSc2FXNW5YQ0lzWEc0Z0lGd2lWR2h5YjNSMGJHbHVaMFY0WTJWd2RHbHZibHdpTEZ4dUlDQmNJbFJ2YjAxaGJubFNaWEYxWlhOMGMwVjRZMlZ3ZEdsdmJsd2lMRnh1SUNCY0lsUnlZVzV6WVdOMGFXOXVTVzVRY205bmNtVnpjMFY0WTJWd2RHbHZibHdpTENBdkx5QkVlVzVoYlc5RVFseHVYVHRjYmx4dUx5b3FYRzRnS2lCRmNuSnZjaUJqYjJSbGN5QjBhR0YwSUdsdVpHbGpZWFJsSUhSeVlXNXphV1Z1ZENCcGMzTjFaWE5jYmlBcUwxeHVaWGh3YjNKMElHTnZibk4wSUZSU1FVNVRTVVZPVkY5RlVsSlBVbDlEVDBSRlV5QTlJRnRjSWtGaWIzSjBSWEp5YjNKY0lpd2dYQ0pVYVcxbGIzVjBSWEp5YjNKY0lpd2dYQ0pTWlhGMVpYTjBWR2x0Wlc5MWRGd2lMQ0JjSWxKbGNYVmxjM1JVYVcxbGIzVjBSWGhqWlhCMGFXOXVYQ0pkTzF4dVhHNHZLaXBjYmlBcUlFVnljbTl5SUdOdlpHVnpJSFJvWVhRZ2FXNWthV05oZEdVZ2RISmhibk5wWlc1MElHbHpjM1ZsYzF4dUlDb3ZYRzVsZUhCdmNuUWdZMjl1YzNRZ1ZGSkJUbE5KUlU1VVgwVlNVazlTWDFOVVFWUlZVMTlEVDBSRlV5QTlJRnMxTURBc0lEVXdNaXdnTlRBekxDQTFNRFJkTzF4dUlsMTkiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/service-error-classification/dist/es/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/service-error-classification/dist/es/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@aws-sdk/service-error-classification/dist/es/index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isClockSkewError: () => (/* binding */ isClockSkewError),\n/* harmony export */   isRetryableByTrait: () => (/* binding */ isRetryableByTrait),\n/* harmony export */   isThrottlingError: () => (/* binding */ isThrottlingError),\n/* harmony export */   isTransientError: () => (/* binding */ isTransientError)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@aws-sdk/service-error-classification/dist/es/constants.js\");\n\nvar isRetryableByTrait = function (error) { return error.$retryable !== undefined; };\nvar isClockSkewError = function (error) { return _constants__WEBPACK_IMPORTED_MODULE_0__.CLOCK_SKEW_ERROR_CODES.includes(error.name); };\nvar isThrottlingError = function (error) {\n    var _a, _b;\n    return ((_a = error.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode) === 429 ||\n        _constants__WEBPACK_IMPORTED_MODULE_0__.THROTTLING_ERROR_CODES.includes(error.name) ||\n        ((_b = error.$retryable) === null || _b === void 0 ? void 0 : _b.throttling) == true;\n};\nvar isTransientError = function (error) {\n    var _a;\n    return _constants__WEBPACK_IMPORTED_MODULE_0__.TRANSIENT_ERROR_CODES.includes(error.name) ||\n        _constants__WEBPACK_IMPORTED_MODULE_0__.TRANSIENT_ERROR_STATUS_CODES.includes(((_a = error.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode) || 0);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUNMLHNCQUFzQixFQUN0QixzQkFBc0IsRUFDdEIscUJBQXFCLEVBQ3JCLDRCQUE0QixHQUM3QixNQUFNLGFBQWEsQ0FBQztBQUVyQixNQUFNLENBQUMsSUFBTSxrQkFBa0IsR0FBRyxVQUFDLEtBQWUsSUFBSyxPQUFBLEtBQUssQ0FBQyxVQUFVLEtBQUssU0FBUyxFQUE5QixDQUE4QixDQUFDO0FBRXRGLE1BQU0sQ0FBQyxJQUFNLGdCQUFnQixHQUFHLFVBQUMsS0FBZSxJQUFLLE9BQUEsc0JBQXNCLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBM0MsQ0FBMkMsQ0FBQztBQUVqRyxNQUFNLENBQUMsSUFBTSxpQkFBaUIsR0FBRyxVQUFDLEtBQWU7O0lBQy9DLE9BQUEsT0FBQSxLQUFLLENBQUMsU0FBUywwQ0FBRSxjQUFjLE1BQUssR0FBRztRQUN2QyxzQkFBc0IsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztRQUMzQyxPQUFBLEtBQUssQ0FBQyxVQUFVLDBDQUFFLFVBQVUsS0FBSSxJQUFJLENBQUE7Q0FBQSxDQUFDO0FBRXZDLE1BQU0sQ0FBQyxJQUFNLGdCQUFnQixHQUFHLFVBQUMsS0FBZTs7SUFDOUMsT0FBQSxxQkFBcUIsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztRQUMxQyw0QkFBNEIsQ0FBQyxRQUFRLENBQUMsT0FBQSxLQUFLLENBQUMsU0FBUywwQ0FBRSxjQUFjLEtBQUksQ0FBQyxDQUFDLENBQUE7Q0FBQSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2RrRXJyb3IgfSBmcm9tIFwiQGF3cy1zZGsvc21pdGh5LWNsaWVudFwiO1xuXG5pbXBvcnQge1xuICBDTE9DS19TS0VXX0VSUk9SX0NPREVTLFxuICBUSFJPVFRMSU5HX0VSUk9SX0NPREVTLFxuICBUUkFOU0lFTlRfRVJST1JfQ09ERVMsXG4gIFRSQU5TSUVOVF9FUlJPUl9TVEFUVVNfQ09ERVMsXG59IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuXG5leHBvcnQgY29uc3QgaXNSZXRyeWFibGVCeVRyYWl0ID0gKGVycm9yOiBTZGtFcnJvcikgPT4gZXJyb3IuJHJldHJ5YWJsZSAhPT0gdW5kZWZpbmVkO1xuXG5leHBvcnQgY29uc3QgaXNDbG9ja1NrZXdFcnJvciA9IChlcnJvcjogU2RrRXJyb3IpID0+IENMT0NLX1NLRVdfRVJST1JfQ09ERVMuaW5jbHVkZXMoZXJyb3IubmFtZSk7XG5cbmV4cG9ydCBjb25zdCBpc1Rocm90dGxpbmdFcnJvciA9IChlcnJvcjogU2RrRXJyb3IpID0+XG4gIGVycm9yLiRtZXRhZGF0YT8uaHR0cFN0YXR1c0NvZGUgPT09IDQyOSB8fFxuICBUSFJPVFRMSU5HX0VSUk9SX0NPREVTLmluY2x1ZGVzKGVycm9yLm5hbWUpIHx8XG4gIGVycm9yLiRyZXRyeWFibGU/LnRocm90dGxpbmcgPT0gdHJ1ZTtcblxuZXhwb3J0IGNvbnN0IGlzVHJhbnNpZW50RXJyb3IgPSAoZXJyb3I6IFNka0Vycm9yKSA9PlxuICBUUkFOU0lFTlRfRVJST1JfQ09ERVMuaW5jbHVkZXMoZXJyb3IubmFtZSkgfHxcbiAgVFJBTlNJRU5UX0VSUk9SX1NUQVRVU19DT0RFUy5pbmNsdWRlcyhlcnJvci4kbWV0YWRhdGE/Lmh0dHBTdGF0dXNDb2RlIHx8IDApO1xuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc2VydmljZS1lcnJvci1jbGFzc2lmaWNhdGlvbi9kaXN0L2VzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW1JO0FBQzVILDRDQUE0QztBQUM1QywwQ0FBMEMsT0FBTyw4REFBc0I7QUFDdkU7QUFDUDtBQUNBO0FBQ0EsUUFBUSw4REFBc0I7QUFDOUI7QUFDQTtBQUNPO0FBQ1A7QUFDQSxXQUFXLDZEQUFxQjtBQUNoQyxRQUFRLG9FQUE0QjtBQUNwQztBQUNBLDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc2VydmljZS1lcnJvci1jbGFzc2lmaWNhdGlvbi9kaXN0L2VzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENMT0NLX1NLRVdfRVJST1JfQ09ERVMsIFRIUk9UVExJTkdfRVJST1JfQ09ERVMsIFRSQU5TSUVOVF9FUlJPUl9DT0RFUywgVFJBTlNJRU5UX0VSUk9SX1NUQVRVU19DT0RFUywgfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcbmV4cG9ydCB2YXIgaXNSZXRyeWFibGVCeVRyYWl0ID0gZnVuY3Rpb24gKGVycm9yKSB7IHJldHVybiBlcnJvci4kcmV0cnlhYmxlICE9PSB1bmRlZmluZWQ7IH07XG5leHBvcnQgdmFyIGlzQ2xvY2tTa2V3RXJyb3IgPSBmdW5jdGlvbiAoZXJyb3IpIHsgcmV0dXJuIENMT0NLX1NLRVdfRVJST1JfQ09ERVMuaW5jbHVkZXMoZXJyb3IubmFtZSk7IH07XG5leHBvcnQgdmFyIGlzVGhyb3R0bGluZ0Vycm9yID0gZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICByZXR1cm4gKChfYSA9IGVycm9yLiRtZXRhZGF0YSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmh0dHBTdGF0dXNDb2RlKSA9PT0gNDI5IHx8XG4gICAgICAgIFRIUk9UVExJTkdfRVJST1JfQ09ERVMuaW5jbHVkZXMoZXJyb3IubmFtZSkgfHxcbiAgICAgICAgKChfYiA9IGVycm9yLiRyZXRyeWFibGUpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi50aHJvdHRsaW5nKSA9PSB0cnVlO1xufTtcbmV4cG9ydCB2YXIgaXNUcmFuc2llbnRFcnJvciA9IGZ1bmN0aW9uIChlcnJvcikge1xuICAgIHZhciBfYTtcbiAgICByZXR1cm4gVFJBTlNJRU5UX0VSUk9SX0NPREVTLmluY2x1ZGVzKGVycm9yLm5hbWUpIHx8XG4gICAgICAgIFRSQU5TSUVOVF9FUlJPUl9TVEFUVVNfQ09ERVMuaW5jbHVkZXMoKChfYSA9IGVycm9yLiRtZXRhZGF0YSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmh0dHBTdGF0dXNDb2RlKSB8fCAwKTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lhVzVrWlhndWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12YVc1a1pYZ3VkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUlVFc1QwRkJUeXhGUVVOTUxITkNRVUZ6UWl4RlFVTjBRaXh6UWtGQmMwSXNSVUZEZEVJc2NVSkJRWEZDTEVWQlEzSkNMRFJDUVVFMFFpeEhRVU0zUWl4TlFVRk5MR0ZCUVdFc1EwRkJRenRCUVVWeVFpeE5RVUZOTEVOQlFVTXNTVUZCVFN4clFrRkJhMElzUjBGQlJ5eFZRVUZETEV0QlFXVXNTVUZCU3l4UFFVRkJMRXRCUVVzc1EwRkJReXhWUVVGVkxFdEJRVXNzVTBGQlV5eEZRVUU1UWl4RFFVRTRRaXhEUVVGRE8wRkJSWFJHTEUxQlFVMHNRMEZCUXl4SlFVRk5MR2RDUVVGblFpeEhRVUZITEZWQlFVTXNTMEZCWlN4SlFVRkxMRTlCUVVFc2MwSkJRWE5DTEVOQlFVTXNVVUZCVVN4RFFVRkRMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVU1zUlVGQk0wTXNRMEZCTWtNc1EwRkJRenRCUVVWcVJ5eE5RVUZOTEVOQlFVTXNTVUZCVFN4cFFrRkJhVUlzUjBGQlJ5eFZRVUZETEV0QlFXVTdPMGxCUXk5RExFOUJRVUVzVDBGQlFTeExRVUZMTEVOQlFVTXNVMEZCVXl3d1EwRkJSU3hqUVVGakxFMUJRVXNzUjBGQlJ6dFJRVU4yUXl4elFrRkJjMElzUTBGQlF5eFJRVUZSTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWxCUVVrc1EwRkJRenRSUVVNelF5eFBRVUZCTEV0QlFVc3NRMEZCUXl4VlFVRlZMREJEUVVGRkxGVkJRVlVzUzBGQlNTeEpRVUZKTEVOQlFVRTdRMEZCUVN4RFFVRkRPMEZCUlhaRExFMUJRVTBzUTBGQlF5eEpRVUZOTEdkQ1FVRm5RaXhIUVVGSExGVkJRVU1zUzBGQlpUczdTVUZET1VNc1QwRkJRU3h4UWtGQmNVSXNRMEZCUXl4UlFVRlJMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzUTBGQlF6dFJRVU14UXl3MFFrRkJORUlzUTBGQlF5eFJRVUZSTEVOQlFVTXNUMEZCUVN4TFFVRkxMRU5CUVVNc1UwRkJVeXd3UTBGQlJTeGpRVUZqTEV0QlFVa3NRMEZCUXl4RFFVRkRMRU5CUVVFN1EwRkJRU3hEUVVGRElpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lhVzF3YjNKMElIc2dVMlJyUlhKeWIzSWdmU0JtY205dElGd2lRR0YzY3kxelpHc3ZjMjFwZEdoNUxXTnNhV1Z1ZEZ3aU8xeHVYRzVwYlhCdmNuUWdlMXh1SUNCRFRFOURTMTlUUzBWWFgwVlNVazlTWDBOUFJFVlRMRnh1SUNCVVNGSlBWRlJNU1U1SFgwVlNVazlTWDBOUFJFVlRMRnh1SUNCVVVrRk9VMGxGVGxSZlJWSlNUMUpmUTA5RVJWTXNYRzRnSUZSU1FVNVRTVVZPVkY5RlVsSlBVbDlUVkVGVVZWTmZRMDlFUlZNc1hHNTlJR1p5YjIwZ1hDSXVMMk52Ym5OMFlXNTBjMXdpTzF4dVhHNWxlSEJ2Y25RZ1kyOXVjM1FnYVhOU1pYUnllV0ZpYkdWQ2VWUnlZV2wwSUQwZ0tHVnljbTl5T2lCVFpHdEZjbkp2Y2lrZ1BUNGdaWEp5YjNJdUpISmxkSEo1WVdKc1pTQWhQVDBnZFc1a1pXWnBibVZrTzF4dVhHNWxlSEJ2Y25RZ1kyOXVjM1FnYVhORGJHOWphMU5yWlhkRmNuSnZjaUE5SUNobGNuSnZjam9nVTJSclJYSnliM0lwSUQwK0lFTk1UME5MWDFOTFJWZGZSVkpTVDFKZlEwOUVSVk11YVc1amJIVmtaWE1vWlhKeWIzSXVibUZ0WlNrN1hHNWNibVY0Y0c5eWRDQmpiMjV6ZENCcGMxUm9jbTkwZEd4cGJtZEZjbkp2Y2lBOUlDaGxjbkp2Y2pvZ1UyUnJSWEp5YjNJcElEMCtYRzRnSUdWeWNtOXlMaVJ0WlhSaFpHRjBZVDh1YUhSMGNGTjBZWFIxYzBOdlpHVWdQVDA5SURReU9TQjhmRnh1SUNCVVNGSlBWRlJNU1U1SFgwVlNVazlTWDBOUFJFVlRMbWx1WTJ4MVpHVnpLR1Z5Y205eUxtNWhiV1VwSUh4OFhHNGdJR1Z5Y205eUxpUnlaWFJ5ZVdGaWJHVS9MblJvY205MGRHeHBibWNnUFQwZ2RISjFaVHRjYmx4dVpYaHdiM0owSUdOdmJuTjBJR2x6VkhKaGJuTnBaVzUwUlhKeWIzSWdQU0FvWlhKeWIzSTZJRk5rYTBWeWNtOXlLU0E5UGx4dUlDQlVVa0ZPVTBsRlRsUmZSVkpTVDFKZlEwOUVSVk11YVc1amJIVmtaWE1vWlhKeWIzSXVibUZ0WlNrZ2ZIeGNiaUFnVkZKQlRsTkpSVTVVWDBWU1VrOVNYMU5VUVZSVlUxOURUMFJGVXk1cGJtTnNkV1JsY3lobGNuSnZjaTRrYldWMFlXUmhkR0UvTG1oMGRIQlRkR0YwZFhORGIyUmxJSHg4SURBcE8xeHVJbDE5Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/service-error-classification/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/shared-ini-file-loader/dist/es/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@aws-sdk/shared-ini-file-loader/dist/es/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ENV_CONFIG_PATH: () => (/* binding */ ENV_CONFIG_PATH),\n/* harmony export */   ENV_CREDENTIALS_PATH: () => (/* binding */ ENV_CREDENTIALS_PATH),\n/* harmony export */   loadSharedConfigFiles: () => (/* binding */ loadSharedConfigFiles)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/shared-ini-file-loader/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! os */ \"os\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\nvar ENV_CREDENTIALS_PATH = \"AWS_SHARED_CREDENTIALS_FILE\";\nvar ENV_CONFIG_PATH = \"AWS_CONFIG_FILE\";\nvar swallowError = function () { return ({}); };\nvar loadSharedConfigFiles = function (init) {\n    if (init === void 0) { init = {}; }\n    var _a = init.filepath, filepath = _a === void 0 ? process.env[ENV_CREDENTIALS_PATH] || (0,path__WEBPACK_IMPORTED_MODULE_2__.join)(getHomeDir(), \".aws\", \"credentials\") : _a, _b = init.configFilepath, configFilepath = _b === void 0 ? process.env[ENV_CONFIG_PATH] || (0,path__WEBPACK_IMPORTED_MODULE_2__.join)(getHomeDir(), \".aws\", \"config\") : _b;\n    return Promise.all([\n        slurpFile(configFilepath).then(parseIni).then(normalizeConfigFile).catch(swallowError),\n        slurpFile(filepath).then(parseIni).catch(swallowError),\n    ]).then(function (parsedFiles) {\n        var _a = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__read)(parsedFiles, 2), configFile = _a[0], credentialsFile = _a[1];\n        return {\n            configFile: configFile,\n            credentialsFile: credentialsFile,\n        };\n    });\n};\nvar profileKeyRegex = /^profile\\s([\"'])?([^\\1]+)\\1$/;\nvar normalizeConfigFile = function (data) {\n    var e_1, _a;\n    var map = {};\n    try {\n        for (var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__values)(Object.keys(data)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var key = _c.value;\n            var matches = void 0;\n            if (key === \"default\") {\n                map.default = data.default;\n            }\n            else if ((matches = profileKeyRegex.exec(key))) {\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                var _d = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__read)(matches, 3), _1 = _d[0], _2 = _d[1], normalizedKey = _d[2];\n                if (normalizedKey) {\n                    map[normalizedKey] = data[key];\n                }\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return map;\n};\nvar profileNameBlockList = [\"__proto__\", \"profile __proto__\"];\nvar parseIni = function (iniData) {\n    var e_2, _a;\n    var map = {};\n    var currentSection;\n    try {\n        for (var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__values)(iniData.split(/\\r?\\n/)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var line = _c.value;\n            line = line.split(/(^|\\s)[;#]/)[0]; // remove comments\n            var section = line.match(/^\\s*\\[([^\\[\\]]+)]\\s*$/);\n            if (section) {\n                currentSection = section[1];\n                if (profileNameBlockList.includes(currentSection)) {\n                    throw new Error(\"Found invalid profile name \\\"\" + currentSection + \"\\\"\");\n                }\n            }\n            else if (currentSection) {\n                var item = line.match(/^\\s*(.+?)\\s*=\\s*(.+?)\\s*$/);\n                if (item) {\n                    map[currentSection] = map[currentSection] || {};\n                    map[currentSection][item[1]] = item[2];\n                }\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return map;\n};\nvar slurpFile = function (path) {\n    return new Promise(function (resolve, reject) {\n        (0,fs__WEBPACK_IMPORTED_MODULE_0__.readFile)(path, \"utf8\", function (err, data) {\n            if (err) {\n                reject(err);\n            }\n            else {\n                resolve(data);\n            }\n        });\n    });\n};\nvar getHomeDir = function () {\n    var _a = process.env, HOME = _a.HOME, USERPROFILE = _a.USERPROFILE, HOMEPATH = _a.HOMEPATH, _b = _a.HOMEDRIVE, HOMEDRIVE = _b === void 0 ? \"C:\" + path__WEBPACK_IMPORTED_MODULE_2__.sep : _b;\n    if (HOME)\n        return HOME;\n    if (USERPROFILE)\n        return USERPROFILE;\n    if (HOMEPATH)\n        return \"\" + HOMEDRIVE + HOMEPATH;\n    return (0,os__WEBPACK_IMPORTED_MODULE_1__.homedir)();\n};\n//# sourceMappingURL=data:application/json;base64,//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/shared-ini-file-loader/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/shared-ini-file-loader/node_modules/tslib/tslib.es6.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/shared-ini-file-loader/node_modules/tslib/tslib.es6.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/shared-ini-file-loader/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/SignatureV4.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@aws-sdk/signature-v4/dist/es/SignatureV4.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SignatureV4: () => (/* binding */ SignatureV4)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/util-hex-encoding */ \"(ssr)/./node_modules/@aws-sdk/util-hex-encoding/dist/es/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/constants.js\");\n/* harmony import */ var _credentialDerivation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./credentialDerivation */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/credentialDerivation.js\");\n/* harmony import */ var _getCanonicalHeaders__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getCanonicalHeaders */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/getCanonicalHeaders.js\");\n/* harmony import */ var _getCanonicalQuery__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getCanonicalQuery */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/getCanonicalQuery.js\");\n/* harmony import */ var _getPayloadHash__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./getPayloadHash */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/getPayloadHash.js\");\n/* harmony import */ var _hasHeader__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./hasHeader */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/hasHeader.js\");\n/* harmony import */ var _moveHeadersToQuery__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./moveHeadersToQuery */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/moveHeadersToQuery.js\");\n/* harmony import */ var _prepareRequest__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./prepareRequest */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/prepareRequest.js\");\n/* harmony import */ var _utilDate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utilDate */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/utilDate.js\");\n\n\n\n\n\n\n\n\n\n\n\nvar SignatureV4 = /** @class */ (function () {\n    function SignatureV4(_a) {\n        var applyChecksum = _a.applyChecksum, credentials = _a.credentials, region = _a.region, service = _a.service, sha256 = _a.sha256, _b = _a.uriEscapePath, uriEscapePath = _b === void 0 ? true : _b;\n        this.service = service;\n        this.sha256 = sha256;\n        this.uriEscapePath = uriEscapePath;\n        // default to true if applyChecksum isn't set\n        this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\n        this.regionProvider = normalizeRegionProvider(region);\n        this.credentialProvider = normalizeCredentialsProvider(credentials);\n    }\n    SignatureV4.prototype.presign = function (originalRequest, options) {\n        if (options === void 0) { options = {}; }\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function () {\n            var _a, signingDate, _b, expiresIn, unsignableHeaders, unhoistableHeaders, signableHeaders, signingRegion, signingService, credentials, region, _c, _d, longDate, shortDate, scope, request, canonicalHeaders, _e, _f, _g, _h, _j, _k;\n            return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__generator)(this, function (_l) {\n                switch (_l.label) {\n                    case 0:\n                        _a = options.signingDate, signingDate = _a === void 0 ? new Date() : _a, _b = options.expiresIn, expiresIn = _b === void 0 ? 3600 : _b, unsignableHeaders = options.unsignableHeaders, unhoistableHeaders = options.unhoistableHeaders, signableHeaders = options.signableHeaders, signingRegion = options.signingRegion, signingService = options.signingService;\n                        return [4 /*yield*/, this.credentialProvider()];\n                    case 1:\n                        credentials = _l.sent();\n                        if (!(signingRegion !== null && signingRegion !== void 0)) return [3 /*break*/, 2];\n                        _c = signingRegion;\n                        return [3 /*break*/, 4];\n                    case 2: return [4 /*yield*/, this.regionProvider()];\n                    case 3:\n                        _c = (_l.sent());\n                        _l.label = 4;\n                    case 4:\n                        region = _c;\n                        _d = formatDate(signingDate), longDate = _d.longDate, shortDate = _d.shortDate;\n                        if (expiresIn > _constants__WEBPACK_IMPORTED_MODULE_1__.MAX_PRESIGNED_TTL) {\n                            return [2 /*return*/, Promise.reject(\"Signature version 4 presigned URLs\" + \" must have an expiration date less than one week in\" + \" the future\")];\n                        }\n                        scope = (0,_credentialDerivation__WEBPACK_IMPORTED_MODULE_2__.createScope)(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);\n                        request = (0,_moveHeadersToQuery__WEBPACK_IMPORTED_MODULE_7__.moveHeadersToQuery)((0,_prepareRequest__WEBPACK_IMPORTED_MODULE_8__.prepareRequest)(originalRequest), { unhoistableHeaders: unhoistableHeaders });\n                        if (credentials.sessionToken) {\n                            request.query[_constants__WEBPACK_IMPORTED_MODULE_1__.TOKEN_QUERY_PARAM] = credentials.sessionToken;\n                        }\n                        request.query[_constants__WEBPACK_IMPORTED_MODULE_1__.ALGORITHM_QUERY_PARAM] = _constants__WEBPACK_IMPORTED_MODULE_1__.ALGORITHM_IDENTIFIER;\n                        request.query[_constants__WEBPACK_IMPORTED_MODULE_1__.CREDENTIAL_QUERY_PARAM] = credentials.accessKeyId + \"/\" + scope;\n                        request.query[_constants__WEBPACK_IMPORTED_MODULE_1__.AMZ_DATE_QUERY_PARAM] = longDate;\n                        request.query[_constants__WEBPACK_IMPORTED_MODULE_1__.EXPIRES_QUERY_PARAM] = expiresIn.toString(10);\n                        canonicalHeaders = (0,_getCanonicalHeaders__WEBPACK_IMPORTED_MODULE_3__.getCanonicalHeaders)(request, unsignableHeaders, signableHeaders);\n                        request.query[_constants__WEBPACK_IMPORTED_MODULE_1__.SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList(canonicalHeaders);\n                        _e = request.query;\n                        _f = _constants__WEBPACK_IMPORTED_MODULE_1__.SIGNATURE_QUERY_PARAM;\n                        _g = this.getSignature;\n                        _h = [longDate,\n                            scope,\n                            this.getSigningKey(credentials, region, shortDate, signingService)];\n                        _j = this.createCanonicalRequest;\n                        _k = [request, canonicalHeaders];\n                        return [4 /*yield*/, (0,_getPayloadHash__WEBPACK_IMPORTED_MODULE_5__.getPayloadHash)(originalRequest, this.sha256)];\n                    case 5: return [4 /*yield*/, _g.apply(this, _h.concat([_j.apply(this, _k.concat([_l.sent()]))]))];\n                    case 6:\n                        _e[_f] = _l.sent();\n                        return [2 /*return*/, request];\n                }\n            });\n        });\n    };\n    SignatureV4.prototype.sign = function (toSign, options) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function () {\n            return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__generator)(this, function (_a) {\n                if (typeof toSign === \"string\") {\n                    return [2 /*return*/, this.signString(toSign, options)];\n                }\n                else if (toSign.headers && toSign.payload) {\n                    return [2 /*return*/, this.signEvent(toSign, options)];\n                }\n                else {\n                    return [2 /*return*/, this.signRequest(toSign, options)];\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    SignatureV4.prototype.signEvent = function (_a, _b) {\n        var headers = _a.headers, payload = _a.payload;\n        var _c = _b.signingDate, signingDate = _c === void 0 ? new Date() : _c, priorSignature = _b.priorSignature, signingRegion = _b.signingRegion, signingService = _b.signingService;\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function () {\n            var region, _d, _e, shortDate, longDate, scope, hashedPayload, hash, hashedHeaders, _f, stringToSign;\n            return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__generator)(this, function (_g) {\n                switch (_g.label) {\n                    case 0:\n                        if (!(signingRegion !== null && signingRegion !== void 0)) return [3 /*break*/, 1];\n                        _d = signingRegion;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.regionProvider()];\n                    case 2:\n                        _d = (_g.sent());\n                        _g.label = 3;\n                    case 3:\n                        region = _d;\n                        _e = formatDate(signingDate), shortDate = _e.shortDate, longDate = _e.longDate;\n                        scope = (0,_credentialDerivation__WEBPACK_IMPORTED_MODULE_2__.createScope)(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);\n                        return [4 /*yield*/, (0,_getPayloadHash__WEBPACK_IMPORTED_MODULE_5__.getPayloadHash)({ headers: {}, body: payload }, this.sha256)];\n                    case 4:\n                        hashedPayload = _g.sent();\n                        hash = new this.sha256();\n                        hash.update(headers);\n                        _f = _aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_0__.toHex;\n                        return [4 /*yield*/, hash.digest()];\n                    case 5:\n                        hashedHeaders = _f.apply(void 0, [_g.sent()]);\n                        stringToSign = [\n                            _constants__WEBPACK_IMPORTED_MODULE_1__.EVENT_ALGORITHM_IDENTIFIER,\n                            longDate,\n                            scope,\n                            priorSignature,\n                            hashedHeaders,\n                            hashedPayload,\n                        ].join(\"\\n\");\n                        return [2 /*return*/, this.signString(stringToSign, { signingDate: signingDate, signingRegion: region, signingService: signingService })];\n                }\n            });\n        });\n    };\n    SignatureV4.prototype.signString = function (stringToSign, _a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.signingDate, signingDate = _c === void 0 ? new Date() : _c, signingRegion = _b.signingRegion, signingService = _b.signingService;\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function () {\n            var credentials, region, _d, shortDate, hash, _e, _f, _g;\n            return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__generator)(this, function (_h) {\n                switch (_h.label) {\n                    case 0: return [4 /*yield*/, this.credentialProvider()];\n                    case 1:\n                        credentials = _h.sent();\n                        if (!(signingRegion !== null && signingRegion !== void 0)) return [3 /*break*/, 2];\n                        _d = signingRegion;\n                        return [3 /*break*/, 4];\n                    case 2: return [4 /*yield*/, this.regionProvider()];\n                    case 3:\n                        _d = (_h.sent());\n                        _h.label = 4;\n                    case 4:\n                        region = _d;\n                        shortDate = formatDate(signingDate).shortDate;\n                        _f = (_e = this.sha256).bind;\n                        return [4 /*yield*/, this.getSigningKey(credentials, region, shortDate, signingService)];\n                    case 5:\n                        hash = new (_f.apply(_e, [void 0, _h.sent()]))();\n                        hash.update(stringToSign);\n                        _g = _aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_0__.toHex;\n                        return [4 /*yield*/, hash.digest()];\n                    case 6: return [2 /*return*/, _g.apply(void 0, [_h.sent()])];\n                }\n            });\n        });\n    };\n    SignatureV4.prototype.signRequest = function (requestToSign, _a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.signingDate, signingDate = _c === void 0 ? new Date() : _c, signableHeaders = _b.signableHeaders, unsignableHeaders = _b.unsignableHeaders, signingRegion = _b.signingRegion, signingService = _b.signingService;\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function () {\n            var credentials, region, _d, request, _e, longDate, shortDate, scope, payloadHash, canonicalHeaders, signature;\n            return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__generator)(this, function (_f) {\n                switch (_f.label) {\n                    case 0: return [4 /*yield*/, this.credentialProvider()];\n                    case 1:\n                        credentials = _f.sent();\n                        if (!(signingRegion !== null && signingRegion !== void 0)) return [3 /*break*/, 2];\n                        _d = signingRegion;\n                        return [3 /*break*/, 4];\n                    case 2: return [4 /*yield*/, this.regionProvider()];\n                    case 3:\n                        _d = (_f.sent());\n                        _f.label = 4;\n                    case 4:\n                        region = _d;\n                        request = (0,_prepareRequest__WEBPACK_IMPORTED_MODULE_8__.prepareRequest)(requestToSign);\n                        _e = formatDate(signingDate), longDate = _e.longDate, shortDate = _e.shortDate;\n                        scope = (0,_credentialDerivation__WEBPACK_IMPORTED_MODULE_2__.createScope)(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);\n                        request.headers[_constants__WEBPACK_IMPORTED_MODULE_1__.AMZ_DATE_HEADER] = longDate;\n                        if (credentials.sessionToken) {\n                            request.headers[_constants__WEBPACK_IMPORTED_MODULE_1__.TOKEN_HEADER] = credentials.sessionToken;\n                        }\n                        return [4 /*yield*/, (0,_getPayloadHash__WEBPACK_IMPORTED_MODULE_5__.getPayloadHash)(request, this.sha256)];\n                    case 5:\n                        payloadHash = _f.sent();\n                        if (!(0,_hasHeader__WEBPACK_IMPORTED_MODULE_6__.hasHeader)(_constants__WEBPACK_IMPORTED_MODULE_1__.SHA256_HEADER, request.headers) && this.applyChecksum) {\n                            request.headers[_constants__WEBPACK_IMPORTED_MODULE_1__.SHA256_HEADER] = payloadHash;\n                        }\n                        canonicalHeaders = (0,_getCanonicalHeaders__WEBPACK_IMPORTED_MODULE_3__.getCanonicalHeaders)(request, unsignableHeaders, signableHeaders);\n                        return [4 /*yield*/, this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash))];\n                    case 6:\n                        signature = _f.sent();\n                        request.headers[_constants__WEBPACK_IMPORTED_MODULE_1__.AUTH_HEADER] =\n                            _constants__WEBPACK_IMPORTED_MODULE_1__.ALGORITHM_IDENTIFIER + \" \" +\n                                (\"Credential=\" + credentials.accessKeyId + \"/\" + scope + \", \") +\n                                (\"SignedHeaders=\" + getCanonicalHeaderList(canonicalHeaders) + \", \") +\n                                (\"Signature=\" + signature);\n                        return [2 /*return*/, request];\n                }\n            });\n        });\n    };\n    SignatureV4.prototype.createCanonicalRequest = function (request, canonicalHeaders, payloadHash) {\n        var sortedHeaders = Object.keys(canonicalHeaders).sort();\n        return request.method + \"\\n\" + this.getCanonicalPath(request) + \"\\n\" + (0,_getCanonicalQuery__WEBPACK_IMPORTED_MODULE_4__.getCanonicalQuery)(request) + \"\\n\" + sortedHeaders.map(function (name) { return name + \":\" + canonicalHeaders[name]; }).join(\"\\n\") + \"\\n\\n\" + sortedHeaders.join(\";\") + \"\\n\" + payloadHash;\n    };\n    SignatureV4.prototype.createStringToSign = function (longDate, credentialScope, canonicalRequest) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function () {\n            var hash, hashedRequest;\n            return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__generator)(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        hash = new this.sha256();\n                        hash.update(canonicalRequest);\n                        return [4 /*yield*/, hash.digest()];\n                    case 1:\n                        hashedRequest = _a.sent();\n                        return [2 /*return*/, _constants__WEBPACK_IMPORTED_MODULE_1__.ALGORITHM_IDENTIFIER + \"\\n\" + longDate + \"\\n\" + credentialScope + \"\\n\" + (0,_aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_0__.toHex)(hashedRequest)];\n                }\n            });\n        });\n    };\n    SignatureV4.prototype.getCanonicalPath = function (_a) {\n        var path = _a.path;\n        if (this.uriEscapePath) {\n            var doubleEncoded = encodeURIComponent(path.replace(/^\\//, \"\"));\n            return \"/\" + doubleEncoded.replace(/%2F/g, \"/\");\n        }\n        return path;\n    };\n    SignatureV4.prototype.getSignature = function (longDate, credentialScope, keyPromise, canonicalRequest) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function () {\n            var stringToSign, hash, _a, _b, _c;\n            return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__generator)(this, function (_d) {\n                switch (_d.label) {\n                    case 0: return [4 /*yield*/, this.createStringToSign(longDate, credentialScope, canonicalRequest)];\n                    case 1:\n                        stringToSign = _d.sent();\n                        _b = (_a = this.sha256).bind;\n                        return [4 /*yield*/, keyPromise];\n                    case 2:\n                        hash = new (_b.apply(_a, [void 0, _d.sent()]))();\n                        hash.update(stringToSign);\n                        _c = _aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_0__.toHex;\n                        return [4 /*yield*/, hash.digest()];\n                    case 3: return [2 /*return*/, _c.apply(void 0, [_d.sent()])];\n                }\n            });\n        });\n    };\n    SignatureV4.prototype.getSigningKey = function (credentials, region, shortDate, service) {\n        return (0,_credentialDerivation__WEBPACK_IMPORTED_MODULE_2__.getSigningKey)(this.sha256, credentials, shortDate, region, service || this.service);\n    };\n    return SignatureV4;\n}());\n\nvar formatDate = function (now) {\n    var longDate = (0,_utilDate__WEBPACK_IMPORTED_MODULE_9__.iso8601)(now).replace(/[\\-:]/g, \"\");\n    return {\n        longDate: longDate,\n        shortDate: longDate.substr(0, 8),\n    };\n};\nvar getCanonicalHeaderList = function (headers) { return Object.keys(headers).sort().join(\";\"); };\nvar normalizeRegionProvider = function (region) {\n    if (typeof region === \"string\") {\n        var promisified_1 = Promise.resolve(region);\n        return function () { return promisified_1; };\n    }\n    else {\n        return region;\n    }\n};\nvar normalizeCredentialsProvider = function (credentials) {\n    if (typeof credentials === \"object\") {\n        var promisified_2 = Promise.resolve(credentials);\n        return function () { return promisified_2; };\n    }\n    else {\n        return credentials;\n    }\n};\n//# sourceMappingURL=data:application/json;base64,//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc2lnbmF0dXJlLXY0L2Rpc3QvZXMvU2lnbmF0dXJlVjQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQStDO0FBQ0k7QUFDMlE7QUFDMVA7QUFDUjtBQUNKO0FBQ047QUFDVjtBQUNrQjtBQUNSO0FBQ2I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDLGVBQWUsaURBQVM7QUFDeEI7QUFDQSxtQkFBbUIsbURBQVc7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MseURBQWlCO0FBQ3pEO0FBQ0E7QUFDQSxnQ0FBZ0Msa0VBQVc7QUFDM0Msa0NBQWtDLHVFQUFrQixDQUFDLCtEQUFjLHFCQUFxQix3Q0FBd0M7QUFDaEk7QUFDQSwwQ0FBMEMseURBQWlCO0FBQzNEO0FBQ0Esc0NBQXNDLDZEQUFxQixJQUFJLDREQUFvQjtBQUNuRixzQ0FBc0MsOERBQXNCO0FBQzVELHNDQUFzQyw0REFBb0I7QUFDMUQsc0NBQXNDLDJEQUFtQjtBQUN6RCwyQ0FBMkMseUVBQW1CO0FBQzlELHNDQUFzQyxrRUFBMEI7QUFDaEU7QUFDQSw2QkFBNkIsNkRBQXFCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QywrREFBYztBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0EsZUFBZSxpREFBUztBQUN4QixtQkFBbUIsbURBQVc7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxpREFBUztBQUN4QjtBQUNBLG1CQUFtQixtREFBVztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0Msa0VBQVc7QUFDM0MsNkNBQTZDLCtEQUFjLEdBQUcsV0FBVyxpQkFBaUI7QUFDMUY7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsNkRBQUs7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsa0VBQTBCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhFQUE4RSxpRkFBaUY7QUFDL0o7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEMsZUFBZSxpREFBUztBQUN4QjtBQUNBLG1CQUFtQixtREFBVztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw2REFBSztBQUNsQztBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEMsZUFBZSxpREFBUztBQUN4QjtBQUNBLG1CQUFtQixtREFBVztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQywrREFBYztBQUNoRDtBQUNBLGdDQUFnQyxrRUFBVztBQUMzQyx3Q0FBd0MsdURBQWU7QUFDdkQ7QUFDQSw0Q0FBNEMsb0RBQVk7QUFDeEQ7QUFDQSw2Q0FBNkMsK0RBQWM7QUFDM0Q7QUFDQTtBQUNBLDZCQUE2QixxREFBUyxDQUFDLHFEQUFhO0FBQ3BELDRDQUE0QyxxREFBYTtBQUN6RDtBQUNBLDJDQUEyQyx5RUFBbUI7QUFDOUQ7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLG1EQUFXO0FBQ25ELDRCQUE0Qiw0REFBb0I7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsK0VBQStFLHFFQUFpQix1REFBdUQsNkNBQTZDLDZDQUE2QztBQUNqUDtBQUNBO0FBQ0EsZUFBZSxpREFBUztBQUN4QjtBQUNBLG1CQUFtQixtREFBVztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4Qyw0REFBb0IscURBQXFELGlFQUFLO0FBQzVIO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsaURBQVM7QUFDeEI7QUFDQSxtQkFBbUIsbURBQVc7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDZEQUFLO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLGVBQWUsb0VBQWE7QUFDNUI7QUFDQTtBQUNBLENBQUM7QUFDc0I7QUFDdkI7QUFDQSxtQkFBbUIsa0RBQU87QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCwwQ0FBMEM7QUFDNUY7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc2lnbmF0dXJlLXY0L2Rpc3QvZXMvU2lnbmF0dXJlVjQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19hd2FpdGVyLCBfX2dlbmVyYXRvciB9IGZyb20gXCJ0c2xpYlwiO1xuaW1wb3J0IHsgdG9IZXggfSBmcm9tIFwiQGF3cy1zZGsvdXRpbC1oZXgtZW5jb2RpbmdcIjtcbmltcG9ydCB7IEFMR09SSVRITV9JREVOVElGSUVSLCBBTEdPUklUSE1fUVVFUllfUEFSQU0sIEFNWl9EQVRFX0hFQURFUiwgQU1aX0RBVEVfUVVFUllfUEFSQU0sIEFVVEhfSEVBREVSLCBDUkVERU5USUFMX1FVRVJZX1BBUkFNLCBFVkVOVF9BTEdPUklUSE1fSURFTlRJRklFUiwgRVhQSVJFU19RVUVSWV9QQVJBTSwgTUFYX1BSRVNJR05FRF9UVEwsIFNIQTI1Nl9IRUFERVIsIFNJR05BVFVSRV9RVUVSWV9QQVJBTSwgU0lHTkVEX0hFQURFUlNfUVVFUllfUEFSQU0sIFRPS0VOX0hFQURFUiwgVE9LRU5fUVVFUllfUEFSQU0sIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5pbXBvcnQgeyBjcmVhdGVTY29wZSwgZ2V0U2lnbmluZ0tleSB9IGZyb20gXCIuL2NyZWRlbnRpYWxEZXJpdmF0aW9uXCI7XG5pbXBvcnQgeyBnZXRDYW5vbmljYWxIZWFkZXJzIH0gZnJvbSBcIi4vZ2V0Q2Fub25pY2FsSGVhZGVyc1wiO1xuaW1wb3J0IHsgZ2V0Q2Fub25pY2FsUXVlcnkgfSBmcm9tIFwiLi9nZXRDYW5vbmljYWxRdWVyeVwiO1xuaW1wb3J0IHsgZ2V0UGF5bG9hZEhhc2ggfSBmcm9tIFwiLi9nZXRQYXlsb2FkSGFzaFwiO1xuaW1wb3J0IHsgaGFzSGVhZGVyIH0gZnJvbSBcIi4vaGFzSGVhZGVyXCI7XG5pbXBvcnQgeyBtb3ZlSGVhZGVyc1RvUXVlcnkgfSBmcm9tIFwiLi9tb3ZlSGVhZGVyc1RvUXVlcnlcIjtcbmltcG9ydCB7IHByZXBhcmVSZXF1ZXN0IH0gZnJvbSBcIi4vcHJlcGFyZVJlcXVlc3RcIjtcbmltcG9ydCB7IGlzbzg2MDEgfSBmcm9tIFwiLi91dGlsRGF0ZVwiO1xudmFyIFNpZ25hdHVyZVY0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFNpZ25hdHVyZVY0KF9hKSB7XG4gICAgICAgIHZhciBhcHBseUNoZWNrc3VtID0gX2EuYXBwbHlDaGVja3N1bSwgY3JlZGVudGlhbHMgPSBfYS5jcmVkZW50aWFscywgcmVnaW9uID0gX2EucmVnaW9uLCBzZXJ2aWNlID0gX2Euc2VydmljZSwgc2hhMjU2ID0gX2Euc2hhMjU2LCBfYiA9IF9hLnVyaUVzY2FwZVBhdGgsIHVyaUVzY2FwZVBhdGggPSBfYiA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9iO1xuICAgICAgICB0aGlzLnNlcnZpY2UgPSBzZXJ2aWNlO1xuICAgICAgICB0aGlzLnNoYTI1NiA9IHNoYTI1NjtcbiAgICAgICAgdGhpcy51cmlFc2NhcGVQYXRoID0gdXJpRXNjYXBlUGF0aDtcbiAgICAgICAgLy8gZGVmYXVsdCB0byB0cnVlIGlmIGFwcGx5Q2hlY2tzdW0gaXNuJ3Qgc2V0XG4gICAgICAgIHRoaXMuYXBwbHlDaGVja3N1bSA9IHR5cGVvZiBhcHBseUNoZWNrc3VtID09PSBcImJvb2xlYW5cIiA/IGFwcGx5Q2hlY2tzdW0gOiB0cnVlO1xuICAgICAgICB0aGlzLnJlZ2lvblByb3ZpZGVyID0gbm9ybWFsaXplUmVnaW9uUHJvdmlkZXIocmVnaW9uKTtcbiAgICAgICAgdGhpcy5jcmVkZW50aWFsUHJvdmlkZXIgPSBub3JtYWxpemVDcmVkZW50aWFsc1Byb3ZpZGVyKGNyZWRlbnRpYWxzKTtcbiAgICB9XG4gICAgU2lnbmF0dXJlVjQucHJvdG90eXBlLnByZXNpZ24gPSBmdW5jdGlvbiAob3JpZ2luYWxSZXF1ZXN0LCBvcHRpb25zKSB7XG4gICAgICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IHt9OyB9XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBfYSwgc2lnbmluZ0RhdGUsIF9iLCBleHBpcmVzSW4sIHVuc2lnbmFibGVIZWFkZXJzLCB1bmhvaXN0YWJsZUhlYWRlcnMsIHNpZ25hYmxlSGVhZGVycywgc2lnbmluZ1JlZ2lvbiwgc2lnbmluZ1NlcnZpY2UsIGNyZWRlbnRpYWxzLCByZWdpb24sIF9jLCBfZCwgbG9uZ0RhdGUsIHNob3J0RGF0ZSwgc2NvcGUsIHJlcXVlc3QsIGNhbm9uaWNhbEhlYWRlcnMsIF9lLCBfZiwgX2csIF9oLCBfaiwgX2s7XG4gICAgICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9sKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChfbC5sYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICAgICAgICBfYSA9IG9wdGlvbnMuc2lnbmluZ0RhdGUsIHNpZ25pbmdEYXRlID0gX2EgPT09IHZvaWQgMCA/IG5ldyBEYXRlKCkgOiBfYSwgX2IgPSBvcHRpb25zLmV4cGlyZXNJbiwgZXhwaXJlc0luID0gX2IgPT09IHZvaWQgMCA/IDM2MDAgOiBfYiwgdW5zaWduYWJsZUhlYWRlcnMgPSBvcHRpb25zLnVuc2lnbmFibGVIZWFkZXJzLCB1bmhvaXN0YWJsZUhlYWRlcnMgPSBvcHRpb25zLnVuaG9pc3RhYmxlSGVhZGVycywgc2lnbmFibGVIZWFkZXJzID0gb3B0aW9ucy5zaWduYWJsZUhlYWRlcnMsIHNpZ25pbmdSZWdpb24gPSBvcHRpb25zLnNpZ25pbmdSZWdpb24sIHNpZ25pbmdTZXJ2aWNlID0gb3B0aW9ucy5zaWduaW5nU2VydmljZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIHRoaXMuY3JlZGVudGlhbFByb3ZpZGVyKCldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgICAgICBjcmVkZW50aWFscyA9IF9sLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghKHNpZ25pbmdSZWdpb24gIT09IG51bGwgJiYgc2lnbmluZ1JlZ2lvbiAhPT0gdm9pZCAwKSkgcmV0dXJuIFszIC8qYnJlYWsqLywgMl07XG4gICAgICAgICAgICAgICAgICAgICAgICBfYyA9IHNpZ25pbmdSZWdpb247XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzMgLypicmVhayovLCA0XTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAyOiByZXR1cm4gWzQgLyp5aWVsZCovLCB0aGlzLnJlZ2lvblByb3ZpZGVyKCldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgICAgICAgICAgICBfYyA9IChfbC5zZW50KCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgX2wubGFiZWwgPSA0O1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDQ6XG4gICAgICAgICAgICAgICAgICAgICAgICByZWdpb24gPSBfYztcbiAgICAgICAgICAgICAgICAgICAgICAgIF9kID0gZm9ybWF0RGF0ZShzaWduaW5nRGF0ZSksIGxvbmdEYXRlID0gX2QubG9uZ0RhdGUsIHNob3J0RGF0ZSA9IF9kLnNob3J0RGF0ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChleHBpcmVzSW4gPiBNQVhfUFJFU0lHTkVEX1RUTCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBQcm9taXNlLnJlamVjdChcIlNpZ25hdHVyZSB2ZXJzaW9uIDQgcHJlc2lnbmVkIFVSTHNcIiArIFwiIG11c3QgaGF2ZSBhbiBleHBpcmF0aW9uIGRhdGUgbGVzcyB0aGFuIG9uZSB3ZWVrIGluXCIgKyBcIiB0aGUgZnV0dXJlXCIpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHNjb3BlID0gY3JlYXRlU2NvcGUoc2hvcnREYXRlLCByZWdpb24sIHNpZ25pbmdTZXJ2aWNlICE9PSBudWxsICYmIHNpZ25pbmdTZXJ2aWNlICE9PSB2b2lkIDAgPyBzaWduaW5nU2VydmljZSA6IHRoaXMuc2VydmljZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1ZXN0ID0gbW92ZUhlYWRlcnNUb1F1ZXJ5KHByZXBhcmVSZXF1ZXN0KG9yaWdpbmFsUmVxdWVzdCksIHsgdW5ob2lzdGFibGVIZWFkZXJzOiB1bmhvaXN0YWJsZUhlYWRlcnMgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY3JlZGVudGlhbHMuc2Vzc2lvblRva2VuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWVzdC5xdWVyeVtUT0tFTl9RVUVSWV9QQVJBTV0gPSBjcmVkZW50aWFscy5zZXNzaW9uVG9rZW47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1ZXN0LnF1ZXJ5W0FMR09SSVRITV9RVUVSWV9QQVJBTV0gPSBBTEdPUklUSE1fSURFTlRJRklFUjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVlc3QucXVlcnlbQ1JFREVOVElBTF9RVUVSWV9QQVJBTV0gPSBjcmVkZW50aWFscy5hY2Nlc3NLZXlJZCArIFwiL1wiICsgc2NvcGU7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1ZXN0LnF1ZXJ5W0FNWl9EQVRFX1FVRVJZX1BBUkFNXSA9IGxvbmdEYXRlO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWVzdC5xdWVyeVtFWFBJUkVTX1FVRVJZX1BBUkFNXSA9IGV4cGlyZXNJbi50b1N0cmluZygxMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYW5vbmljYWxIZWFkZXJzID0gZ2V0Q2Fub25pY2FsSGVhZGVycyhyZXF1ZXN0LCB1bnNpZ25hYmxlSGVhZGVycywgc2lnbmFibGVIZWFkZXJzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVlc3QucXVlcnlbU0lHTkVEX0hFQURFUlNfUVVFUllfUEFSQU1dID0gZ2V0Q2Fub25pY2FsSGVhZGVyTGlzdChjYW5vbmljYWxIZWFkZXJzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9lID0gcmVxdWVzdC5xdWVyeTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9mID0gU0lHTkFUVVJFX1FVRVJZX1BBUkFNO1xuICAgICAgICAgICAgICAgICAgICAgICAgX2cgPSB0aGlzLmdldFNpZ25hdHVyZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9oID0gW2xvbmdEYXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNjb3BlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0U2lnbmluZ0tleShjcmVkZW50aWFscywgcmVnaW9uLCBzaG9ydERhdGUsIHNpZ25pbmdTZXJ2aWNlKV07XG4gICAgICAgICAgICAgICAgICAgICAgICBfaiA9IHRoaXMuY3JlYXRlQ2Fub25pY2FsUmVxdWVzdDtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9rID0gW3JlcXVlc3QsIGNhbm9uaWNhbEhlYWRlcnNdO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgZ2V0UGF5bG9hZEhhc2gob3JpZ2luYWxSZXF1ZXN0LCB0aGlzLnNoYTI1NildO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDU6IHJldHVybiBbNCAvKnlpZWxkKi8sIF9nLmFwcGx5KHRoaXMsIF9oLmNvbmNhdChbX2ouYXBwbHkodGhpcywgX2suY29uY2F0KFtfbC5zZW50KCldKSldKSldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDY6XG4gICAgICAgICAgICAgICAgICAgICAgICBfZVtfZl0gPSBfbC5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgcmVxdWVzdF07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgU2lnbmF0dXJlVjQucHJvdG90eXBlLnNpZ24gPSBmdW5jdGlvbiAodG9TaWduLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRvU2lnbiA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgdGhpcy5zaWduU3RyaW5nKHRvU2lnbiwgb3B0aW9ucyldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmICh0b1NpZ24uaGVhZGVycyAmJiB0b1NpZ24ucGF5bG9hZCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgdGhpcy5zaWduRXZlbnQodG9TaWduLCBvcHRpb25zKV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgdGhpcy5zaWduUmVxdWVzdCh0b1NpZ24sIG9wdGlvbnMpXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi9dO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgU2lnbmF0dXJlVjQucHJvdG90eXBlLnNpZ25FdmVudCA9IGZ1bmN0aW9uIChfYSwgX2IpIHtcbiAgICAgICAgdmFyIGhlYWRlcnMgPSBfYS5oZWFkZXJzLCBwYXlsb2FkID0gX2EucGF5bG9hZDtcbiAgICAgICAgdmFyIF9jID0gX2Iuc2lnbmluZ0RhdGUsIHNpZ25pbmdEYXRlID0gX2MgPT09IHZvaWQgMCA/IG5ldyBEYXRlKCkgOiBfYywgcHJpb3JTaWduYXR1cmUgPSBfYi5wcmlvclNpZ25hdHVyZSwgc2lnbmluZ1JlZ2lvbiA9IF9iLnNpZ25pbmdSZWdpb24sIHNpZ25pbmdTZXJ2aWNlID0gX2Iuc2lnbmluZ1NlcnZpY2U7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciByZWdpb24sIF9kLCBfZSwgc2hvcnREYXRlLCBsb25nRGF0ZSwgc2NvcGUsIGhhc2hlZFBheWxvYWQsIGhhc2gsIGhhc2hlZEhlYWRlcnMsIF9mLCBzdHJpbmdUb1NpZ247XG4gICAgICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9nKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChfZy5sYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIShzaWduaW5nUmVnaW9uICE9PSBudWxsICYmIHNpZ25pbmdSZWdpb24gIT09IHZvaWQgMCkpIHJldHVybiBbMyAvKmJyZWFrKi8sIDFdO1xuICAgICAgICAgICAgICAgICAgICAgICAgX2QgPSBzaWduaW5nUmVnaW9uO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFszIC8qYnJlYWsqLywgM107XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTogcmV0dXJuIFs0IC8qeWllbGQqLywgdGhpcy5yZWdpb25Qcm92aWRlcigpXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgICAgICAgICAgX2QgPSAoX2cuc2VudCgpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9nLmxhYmVsID0gMztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmVnaW9uID0gX2Q7XG4gICAgICAgICAgICAgICAgICAgICAgICBfZSA9IGZvcm1hdERhdGUoc2lnbmluZ0RhdGUpLCBzaG9ydERhdGUgPSBfZS5zaG9ydERhdGUsIGxvbmdEYXRlID0gX2UubG9uZ0RhdGU7XG4gICAgICAgICAgICAgICAgICAgICAgICBzY29wZSA9IGNyZWF0ZVNjb3BlKHNob3J0RGF0ZSwgcmVnaW9uLCBzaWduaW5nU2VydmljZSAhPT0gbnVsbCAmJiBzaWduaW5nU2VydmljZSAhPT0gdm9pZCAwID8gc2lnbmluZ1NlcnZpY2UgOiB0aGlzLnNlcnZpY2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgZ2V0UGF5bG9hZEhhc2goeyBoZWFkZXJzOiB7fSwgYm9keTogcGF5bG9hZCB9LCB0aGlzLnNoYTI1NildO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDQ6XG4gICAgICAgICAgICAgICAgICAgICAgICBoYXNoZWRQYXlsb2FkID0gX2cuc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaGFzaCA9IG5ldyB0aGlzLnNoYTI1NigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaGFzaC51cGRhdGUoaGVhZGVycyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBfZiA9IHRvSGV4O1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgaGFzaC5kaWdlc3QoKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNTpcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhc2hlZEhlYWRlcnMgPSBfZi5hcHBseSh2b2lkIDAsIFtfZy5zZW50KCldKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0cmluZ1RvU2lnbiA9IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBFVkVOVF9BTEdPUklUSE1fSURFTlRJRklFUixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb25nRGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY29wZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmlvclNpZ25hdHVyZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYXNoZWRIZWFkZXJzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhc2hlZFBheWxvYWQsXG4gICAgICAgICAgICAgICAgICAgICAgICBdLmpvaW4oXCJcXG5cIik7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgdGhpcy5zaWduU3RyaW5nKHN0cmluZ1RvU2lnbiwgeyBzaWduaW5nRGF0ZTogc2lnbmluZ0RhdGUsIHNpZ25pbmdSZWdpb246IHJlZ2lvbiwgc2lnbmluZ1NlcnZpY2U6IHNpZ25pbmdTZXJ2aWNlIH0pXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBTaWduYXR1cmVWNC5wcm90b3R5cGUuc2lnblN0cmluZyA9IGZ1bmN0aW9uIChzdHJpbmdUb1NpZ24sIF9hKSB7XG4gICAgICAgIHZhciBfYiA9IF9hID09PSB2b2lkIDAgPyB7fSA6IF9hLCBfYyA9IF9iLnNpZ25pbmdEYXRlLCBzaWduaW5nRGF0ZSA9IF9jID09PSB2b2lkIDAgPyBuZXcgRGF0ZSgpIDogX2MsIHNpZ25pbmdSZWdpb24gPSBfYi5zaWduaW5nUmVnaW9uLCBzaWduaW5nU2VydmljZSA9IF9iLnNpZ25pbmdTZXJ2aWNlO1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgY3JlZGVudGlhbHMsIHJlZ2lvbiwgX2QsIHNob3J0RGF0ZSwgaGFzaCwgX2UsIF9mLCBfZztcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2gpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9oLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDogcmV0dXJuIFs0IC8qeWllbGQqLywgdGhpcy5jcmVkZW50aWFsUHJvdmlkZXIoKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgICAgIGNyZWRlbnRpYWxzID0gX2guc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEoc2lnbmluZ1JlZ2lvbiAhPT0gbnVsbCAmJiBzaWduaW5nUmVnaW9uICE9PSB2b2lkIDApKSByZXR1cm4gWzMgLypicmVhayovLCAyXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9kID0gc2lnbmluZ1JlZ2lvbjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMyAvKmJyZWFrKi8sIDRdO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDI6IHJldHVybiBbNCAvKnlpZWxkKi8sIHRoaXMucmVnaW9uUHJvdmlkZXIoKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgICAgICAgICAgICAgIF9kID0gKF9oLnNlbnQoKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBfaC5sYWJlbCA9IDQ7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNDpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZ2lvbiA9IF9kO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2hvcnREYXRlID0gZm9ybWF0RGF0ZShzaWduaW5nRGF0ZSkuc2hvcnREYXRlO1xuICAgICAgICAgICAgICAgICAgICAgICAgX2YgPSAoX2UgPSB0aGlzLnNoYTI1NikuYmluZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIHRoaXMuZ2V0U2lnbmluZ0tleShjcmVkZW50aWFscywgcmVnaW9uLCBzaG9ydERhdGUsIHNpZ25pbmdTZXJ2aWNlKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNTpcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhc2ggPSBuZXcgKF9mLmFwcGx5KF9lLCBbdm9pZCAwLCBfaC5zZW50KCldKSkoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhc2gudXBkYXRlKHN0cmluZ1RvU2lnbik7XG4gICAgICAgICAgICAgICAgICAgICAgICBfZyA9IHRvSGV4O1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgaGFzaC5kaWdlc3QoKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNjogcmV0dXJuIFsyIC8qcmV0dXJuKi8sIF9nLmFwcGx5KHZvaWQgMCwgW19oLnNlbnQoKV0pXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBTaWduYXR1cmVWNC5wcm90b3R5cGUuc2lnblJlcXVlc3QgPSBmdW5jdGlvbiAocmVxdWVzdFRvU2lnbiwgX2EpIHtcbiAgICAgICAgdmFyIF9iID0gX2EgPT09IHZvaWQgMCA/IHt9IDogX2EsIF9jID0gX2Iuc2lnbmluZ0RhdGUsIHNpZ25pbmdEYXRlID0gX2MgPT09IHZvaWQgMCA/IG5ldyBEYXRlKCkgOiBfYywgc2lnbmFibGVIZWFkZXJzID0gX2Iuc2lnbmFibGVIZWFkZXJzLCB1bnNpZ25hYmxlSGVhZGVycyA9IF9iLnVuc2lnbmFibGVIZWFkZXJzLCBzaWduaW5nUmVnaW9uID0gX2Iuc2lnbmluZ1JlZ2lvbiwgc2lnbmluZ1NlcnZpY2UgPSBfYi5zaWduaW5nU2VydmljZTtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGNyZWRlbnRpYWxzLCByZWdpb24sIF9kLCByZXF1ZXN0LCBfZSwgbG9uZ0RhdGUsIHNob3J0RGF0ZSwgc2NvcGUsIHBheWxvYWRIYXNoLCBjYW5vbmljYWxIZWFkZXJzLCBzaWduYXR1cmU7XG4gICAgICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9mKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChfZi5sYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6IHJldHVybiBbNCAvKnlpZWxkKi8sIHRoaXMuY3JlZGVudGlhbFByb3ZpZGVyKCldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgICAgICBjcmVkZW50aWFscyA9IF9mLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghKHNpZ25pbmdSZWdpb24gIT09IG51bGwgJiYgc2lnbmluZ1JlZ2lvbiAhPT0gdm9pZCAwKSkgcmV0dXJuIFszIC8qYnJlYWsqLywgMl07XG4gICAgICAgICAgICAgICAgICAgICAgICBfZCA9IHNpZ25pbmdSZWdpb247XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzMgLypicmVhayovLCA0XTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAyOiByZXR1cm4gWzQgLyp5aWVsZCovLCB0aGlzLnJlZ2lvblByb3ZpZGVyKCldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgICAgICAgICAgICBfZCA9IChfZi5zZW50KCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgX2YubGFiZWwgPSA0O1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDQ6XG4gICAgICAgICAgICAgICAgICAgICAgICByZWdpb24gPSBfZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVlc3QgPSBwcmVwYXJlUmVxdWVzdChyZXF1ZXN0VG9TaWduKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9lID0gZm9ybWF0RGF0ZShzaWduaW5nRGF0ZSksIGxvbmdEYXRlID0gX2UubG9uZ0RhdGUsIHNob3J0RGF0ZSA9IF9lLnNob3J0RGF0ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNjb3BlID0gY3JlYXRlU2NvcGUoc2hvcnREYXRlLCByZWdpb24sIHNpZ25pbmdTZXJ2aWNlICE9PSBudWxsICYmIHNpZ25pbmdTZXJ2aWNlICE9PSB2b2lkIDAgPyBzaWduaW5nU2VydmljZSA6IHRoaXMuc2VydmljZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1ZXN0LmhlYWRlcnNbQU1aX0RBVEVfSEVBREVSXSA9IGxvbmdEYXRlO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNyZWRlbnRpYWxzLnNlc3Npb25Ub2tlbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVlc3QuaGVhZGVyc1tUT0tFTl9IRUFERVJdID0gY3JlZGVudGlhbHMuc2Vzc2lvblRva2VuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgZ2V0UGF5bG9hZEhhc2gocmVxdWVzdCwgdGhpcy5zaGEyNTYpXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSA1OlxuICAgICAgICAgICAgICAgICAgICAgICAgcGF5bG9hZEhhc2ggPSBfZi5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWhhc0hlYWRlcihTSEEyNTZfSEVBREVSLCByZXF1ZXN0LmhlYWRlcnMpICYmIHRoaXMuYXBwbHlDaGVja3N1bSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVlc3QuaGVhZGVyc1tTSEEyNTZfSEVBREVSXSA9IHBheWxvYWRIYXNoO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgY2Fub25pY2FsSGVhZGVycyA9IGdldENhbm9uaWNhbEhlYWRlcnMocmVxdWVzdCwgdW5zaWduYWJsZUhlYWRlcnMsIHNpZ25hYmxlSGVhZGVycyk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQgLyp5aWVsZCovLCB0aGlzLmdldFNpZ25hdHVyZShsb25nRGF0ZSwgc2NvcGUsIHRoaXMuZ2V0U2lnbmluZ0tleShjcmVkZW50aWFscywgcmVnaW9uLCBzaG9ydERhdGUsIHNpZ25pbmdTZXJ2aWNlKSwgdGhpcy5jcmVhdGVDYW5vbmljYWxSZXF1ZXN0KHJlcXVlc3QsIGNhbm9uaWNhbEhlYWRlcnMsIHBheWxvYWRIYXNoKSldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDY6XG4gICAgICAgICAgICAgICAgICAgICAgICBzaWduYXR1cmUgPSBfZi5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1ZXN0LmhlYWRlcnNbQVVUSF9IRUFERVJdID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBBTEdPUklUSE1fSURFTlRJRklFUiArIFwiIFwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKFwiQ3JlZGVudGlhbD1cIiArIGNyZWRlbnRpYWxzLmFjY2Vzc0tleUlkICsgXCIvXCIgKyBzY29wZSArIFwiLCBcIikgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoXCJTaWduZWRIZWFkZXJzPVwiICsgZ2V0Q2Fub25pY2FsSGVhZGVyTGlzdChjYW5vbmljYWxIZWFkZXJzKSArIFwiLCBcIikgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoXCJTaWduYXR1cmU9XCIgKyBzaWduYXR1cmUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIHJlcXVlc3RdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIFNpZ25hdHVyZVY0LnByb3RvdHlwZS5jcmVhdGVDYW5vbmljYWxSZXF1ZXN0ID0gZnVuY3Rpb24gKHJlcXVlc3QsIGNhbm9uaWNhbEhlYWRlcnMsIHBheWxvYWRIYXNoKSB7XG4gICAgICAgIHZhciBzb3J0ZWRIZWFkZXJzID0gT2JqZWN0LmtleXMoY2Fub25pY2FsSGVhZGVycykuc29ydCgpO1xuICAgICAgICByZXR1cm4gcmVxdWVzdC5tZXRob2QgKyBcIlxcblwiICsgdGhpcy5nZXRDYW5vbmljYWxQYXRoKHJlcXVlc3QpICsgXCJcXG5cIiArIGdldENhbm9uaWNhbFF1ZXJ5KHJlcXVlc3QpICsgXCJcXG5cIiArIHNvcnRlZEhlYWRlcnMubWFwKGZ1bmN0aW9uIChuYW1lKSB7IHJldHVybiBuYW1lICsgXCI6XCIgKyBjYW5vbmljYWxIZWFkZXJzW25hbWVdOyB9KS5qb2luKFwiXFxuXCIpICsgXCJcXG5cXG5cIiArIHNvcnRlZEhlYWRlcnMuam9pbihcIjtcIikgKyBcIlxcblwiICsgcGF5bG9hZEhhc2g7XG4gICAgfTtcbiAgICBTaWduYXR1cmVWNC5wcm90b3R5cGUuY3JlYXRlU3RyaW5nVG9TaWduID0gZnVuY3Rpb24gKGxvbmdEYXRlLCBjcmVkZW50aWFsU2NvcGUsIGNhbm9uaWNhbFJlcXVlc3QpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGhhc2gsIGhhc2hlZFJlcXVlc3Q7XG4gICAgICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChfYS5sYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICAgICAgICBoYXNoID0gbmV3IHRoaXMuc2hhMjU2KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBoYXNoLnVwZGF0ZShjYW5vbmljYWxSZXF1ZXN0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIGhhc2guZGlnZXN0KCldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgICAgICBoYXNoZWRSZXF1ZXN0ID0gX2Euc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIEFMR09SSVRITV9JREVOVElGSUVSICsgXCJcXG5cIiArIGxvbmdEYXRlICsgXCJcXG5cIiArIGNyZWRlbnRpYWxTY29wZSArIFwiXFxuXCIgKyB0b0hleChoYXNoZWRSZXF1ZXN0KV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgU2lnbmF0dXJlVjQucHJvdG90eXBlLmdldENhbm9uaWNhbFBhdGggPSBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgdmFyIHBhdGggPSBfYS5wYXRoO1xuICAgICAgICBpZiAodGhpcy51cmlFc2NhcGVQYXRoKSB7XG4gICAgICAgICAgICB2YXIgZG91YmxlRW5jb2RlZCA9IGVuY29kZVVSSUNvbXBvbmVudChwYXRoLnJlcGxhY2UoL15cXC8vLCBcIlwiKSk7XG4gICAgICAgICAgICByZXR1cm4gXCIvXCIgKyBkb3VibGVFbmNvZGVkLnJlcGxhY2UoLyUyRi9nLCBcIi9cIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHBhdGg7XG4gICAgfTtcbiAgICBTaWduYXR1cmVWNC5wcm90b3R5cGUuZ2V0U2lnbmF0dXJlID0gZnVuY3Rpb24gKGxvbmdEYXRlLCBjcmVkZW50aWFsU2NvcGUsIGtleVByb21pc2UsIGNhbm9uaWNhbFJlcXVlc3QpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHN0cmluZ1RvU2lnbiwgaGFzaCwgX2EsIF9iLCBfYztcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2QpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9kLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDogcmV0dXJuIFs0IC8qeWllbGQqLywgdGhpcy5jcmVhdGVTdHJpbmdUb1NpZ24obG9uZ0RhdGUsIGNyZWRlbnRpYWxTY29wZSwgY2Fub25pY2FsUmVxdWVzdCldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgICAgICBzdHJpbmdUb1NpZ24gPSBfZC5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBfYiA9IChfYSA9IHRoaXMuc2hhMjU2KS5iaW5kO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywga2V5UHJvbWlzZV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhc2ggPSBuZXcgKF9iLmFwcGx5KF9hLCBbdm9pZCAwLCBfZC5zZW50KCldKSkoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhc2gudXBkYXRlKHN0cmluZ1RvU2lnbik7XG4gICAgICAgICAgICAgICAgICAgICAgICBfYyA9IHRvSGV4O1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgaGFzaC5kaWdlc3QoKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMzogcmV0dXJuIFsyIC8qcmV0dXJuKi8sIF9jLmFwcGx5KHZvaWQgMCwgW19kLnNlbnQoKV0pXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBTaWduYXR1cmVWNC5wcm90b3R5cGUuZ2V0U2lnbmluZ0tleSA9IGZ1bmN0aW9uIChjcmVkZW50aWFscywgcmVnaW9uLCBzaG9ydERhdGUsIHNlcnZpY2UpIHtcbiAgICAgICAgcmV0dXJuIGdldFNpZ25pbmdLZXkodGhpcy5zaGEyNTYsIGNyZWRlbnRpYWxzLCBzaG9ydERhdGUsIHJlZ2lvbiwgc2VydmljZSB8fCB0aGlzLnNlcnZpY2UpO1xuICAgIH07XG4gICAgcmV0dXJuIFNpZ25hdHVyZVY0O1xufSgpKTtcbmV4cG9ydCB7IFNpZ25hdHVyZVY0IH07XG52YXIgZm9ybWF0RGF0ZSA9IGZ1bmN0aW9uIChub3cpIHtcbiAgICB2YXIgbG9uZ0RhdGUgPSBpc284NjAxKG5vdykucmVwbGFjZSgvW1xcLTpdL2csIFwiXCIpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGxvbmdEYXRlOiBsb25nRGF0ZSxcbiAgICAgICAgc2hvcnREYXRlOiBsb25nRGF0ZS5zdWJzdHIoMCwgOCksXG4gICAgfTtcbn07XG52YXIgZ2V0Q2Fub25pY2FsSGVhZGVyTGlzdCA9IGZ1bmN0aW9uIChoZWFkZXJzKSB7IHJldHVybiBPYmplY3Qua2V5cyhoZWFkZXJzKS5zb3J0KCkuam9pbihcIjtcIik7IH07XG52YXIgbm9ybWFsaXplUmVnaW9uUHJvdmlkZXIgPSBmdW5jdGlvbiAocmVnaW9uKSB7XG4gICAgaWYgKHR5cGVvZiByZWdpb24gPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdmFyIHByb21pc2lmaWVkXzEgPSBQcm9taXNlLnJlc29sdmUocmVnaW9uKTtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHByb21pc2lmaWVkXzE7IH07XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gcmVnaW9uO1xuICAgIH1cbn07XG52YXIgbm9ybWFsaXplQ3JlZGVudGlhbHNQcm92aWRlciA9IGZ1bmN0aW9uIChjcmVkZW50aWFscykge1xuICAgIGlmICh0eXBlb2YgY3JlZGVudGlhbHMgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgdmFyIHByb21pc2lmaWVkXzIgPSBQcm9taXNlLnJlc29sdmUoY3JlZGVudGlhbHMpO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkgeyByZXR1cm4gcHJvbWlzaWZpZWRfMjsgfTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBjcmVkZW50aWFscztcbiAgICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pVTJsbmJtRjBkWEpsVmpRdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12VTJsbmJtRjBkWEpsVmpRdWRITWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklqdEJRV2xDUVN4UFFVRlBMRVZCUVVVc1MwRkJTeXhGUVVGRkxFMUJRVTBzTkVKQlFUUkNMRU5CUVVNN1FVRkZia1FzVDBGQlR5eEZRVU5NTEc5Q1FVRnZRaXhGUVVOd1FpeHhRa0ZCY1VJc1JVRkRja0lzWlVGQlpTeEZRVU5tTEc5Q1FVRnZRaXhGUVVOd1FpeFhRVUZYTEVWQlExZ3NjMEpCUVhOQ0xFVkJRM1JDTERCQ1FVRXdRaXhGUVVNeFFpeHRRa0ZCYlVJc1JVRkRia0lzYVVKQlFXbENMRVZCUTJwQ0xHRkJRV0VzUlVGRFlpeHhRa0ZCY1VJc1JVRkRja0lzTUVKQlFUQkNMRVZCUXpGQ0xGbEJRVmtzUlVGRFdpeHBRa0ZCYVVJc1IwRkRiRUlzVFVGQlRTeGhRVUZoTEVOQlFVTTdRVUZEY2tJc1QwRkJUeXhGUVVGRkxGZEJRVmNzUlVGQlJTeGhRVUZoTEVWQlFVVXNUVUZCVFN4M1FrRkJkMElzUTBGQlF6dEJRVU53UlN4UFFVRlBMRVZCUVVVc2JVSkJRVzFDTEVWQlFVVXNUVUZCVFN4MVFrRkJkVUlzUTBGQlF6dEJRVU0xUkN4UFFVRlBMRVZCUVVVc2FVSkJRV2xDTEVWQlFVVXNUVUZCVFN4eFFrRkJjVUlzUTBGQlF6dEJRVU40UkN4UFFVRlBMRVZCUVVVc1kwRkJZeXhGUVVGRkxFMUJRVTBzYTBKQlFXdENMRU5CUVVNN1FVRkRiRVFzVDBGQlR5eEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MR0ZCUVdFc1EwRkJRenRCUVVONFF5eFBRVUZQTEVWQlFVVXNhMEpCUVd0Q0xFVkJRVVVzVFVGQlRTeHpRa0ZCYzBJc1EwRkJRenRCUVVNeFJDeFBRVUZQTEVWQlFVVXNZMEZCWXl4RlFVRkZMRTFCUVUwc2EwSkJRV3RDTEVOQlFVTTdRVUZEYkVRc1QwRkJUeXhGUVVGRkxFOUJRVThzUlVGQlJTeE5RVUZOTEZsQlFWa3NRMEZCUXp0QlFXdEVja003U1VGUlJTeHhRa0ZCV1N4RlFVODRRanRaUVU1NFF5eGhRVUZoTEcxQ1FVRkJMRVZCUTJJc1YwRkJWeXhwUWtGQlFTeEZRVU5ZTEUxQlFVMHNXVUZCUVN4RlFVTk9MRTlCUVU4c1lVRkJRU3hGUVVOUUxFMUJRVTBzV1VGQlFTeEZRVU5PTEhGQ1FVRnZRaXhGUVVGd1FpeGhRVUZoTEcxQ1FVRkhMRWxCUVVrc1MwRkJRVHRSUVVWd1FpeEpRVUZKTEVOQlFVTXNUMEZCVHl4SFFVRkhMRTlCUVU4c1EwRkJRenRSUVVOMlFpeEpRVUZKTEVOQlFVTXNUVUZCVFN4SFFVRkhMRTFCUVUwc1EwRkJRenRSUVVOeVFpeEpRVUZKTEVOQlFVTXNZVUZCWVN4SFFVRkhMR0ZCUVdFc1EwRkJRenRSUVVOdVF5dzJRMEZCTmtNN1VVRkROME1zU1VGQlNTeERRVUZETEdGQlFXRXNSMEZCUnl4UFFVRlBMR0ZCUVdFc1MwRkJTeXhUUVVGVExFTkJRVU1zUTBGQlF5eERRVUZETEdGQlFXRXNRMEZCUXl4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRE8xRkJReTlGTEVsQlFVa3NRMEZCUXl4alFVRmpMRWRCUVVjc2RVSkJRWFZDTEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNN1VVRkRkRVFzU1VGQlNTeERRVUZETEd0Q1FVRnJRaXhIUVVGSExEUkNRVUUwUWl4RFFVRkRMRmRCUVZjc1EwRkJReXhEUVVGRE8wbEJRM1JGTEVOQlFVTTdTVUZGV1N3MlFrRkJUeXhIUVVGd1FpeFZRVUZ4UWl4bFFVRTBRaXhGUVVGRkxFOUJRWGRETzFGQlFYaERMSGRDUVVGQkxFVkJRVUVzV1VGQmQwTTdPenM3T3p0M1FrRkZka1lzUzBGUFJTeFBRVUZQTEZsQlVHVXNSVUZCZUVJc1YwRkJWeXh0UWtGQlJ5eEpRVUZKTEVsQlFVa3NSVUZCUlN4TFFVRkJMRVZCUTNoQ0xFdEJUVVVzVDBGQlR5eFZRVTVQTEVWQlFXaENMRk5CUVZNc2JVSkJRVWNzU1VGQlNTeExRVUZCTEVWQlEyaENMR2xDUVVGcFFpeEhRVXRtTEU5QlFVOHNhMEpCVEZFc1JVRkRha0lzYTBKQlFXdENMRWRCU1doQ0xFOUJRVThzYlVKQlNsTXNSVUZEYkVJc1pVRkJaU3hIUVVkaUxFOUJRVThzWjBKQlNFMHNSVUZEWml4aFFVRmhMRWRCUlZnc1QwRkJUeXhqUVVaSkxFVkJRMklzWTBGQll5eEhRVU5hTEU5QlFVOHNaVUZFU3l4RFFVTktPM2RDUVVOUkxIRkNRVUZOTEVsQlFVa3NRMEZCUXl4clFrRkJhMElzUlVGQlJTeEZRVUZCT3p0M1FrRkJOME1zVjBGQlZ5eEhRVUZITEZOQlFTdENPemhDUVVOd1F5eGhRVUZoTEdGQlFXSXNZVUZCWVR0M1FrRkJZaXhMUVVGQkxHRkJRV0VzUTBGQlFUczdORUpCUVVzc2NVSkJRVTBzU1VGQlNTeERRVUZETEdOQlFXTXNSVUZCUlN4RlFVRkJPenQzUWtGQk5VSXNTMEZCUVN4RFFVRkRMRk5CUVRKQ0xFTkJRVU1zUTBGQlFUczdPM2RDUVVGMlJDeE5RVUZOTEV0QlFXbEVPM2RDUVVWMlJDeExRVUV3UWl4VlFVRlZMRU5CUVVNc1YwRkJWeXhEUVVGRExFVkJRUzlETEZGQlFWRXNZMEZCUVN4RlFVRkZMRk5CUVZNc1pVRkJRU3hEUVVFMlFqdDNRa0ZEZUVRc1NVRkJTU3hUUVVGVExFZEJRVWNzYVVKQlFXbENMRVZCUVVVN05FSkJRMnBETEhOQ1FVRlBMRTlCUVU4c1EwRkJReXhOUVVGTkxFTkJRMjVDTEc5RFFVRnZReXhIUVVGSExIRkVRVUZ4UkN4SFFVRkhMR0ZCUVdFc1EwRkROMGNzUlVGQlF6dDVRa0ZEU0R0M1FrRkZTeXhMUVVGTExFZEJRVWNzVjBGQlZ5eERRVUZETEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1kwRkJZeXhoUVVGa0xHTkJRV01zWTBGQlpDeGpRVUZqTEVkQlFVa3NTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRE8zZENRVU4yUlN4UFFVRlBMRWRCUVVjc2EwSkJRV3RDTEVOQlFVTXNZMEZCWXl4RFFVRkRMR1ZCUVdVc1EwRkJReXhGUVVGRkxFVkJRVVVzYTBKQlFXdENMRzlDUVVGQkxFVkJRVVVzUTBGQlF5eERRVUZETzNkQ1FVVTFSaXhKUVVGSkxGZEJRVmNzUTBGQlF5eFpRVUZaTEVWQlFVVTdORUpCUXpWQ0xFOUJRVThzUTBGQlF5eExRVUZMTEVOQlFVTXNhVUpCUVdsQ0xFTkJRVU1zUjBGQlJ5eFhRVUZYTEVOQlFVTXNXVUZCV1N4RFFVRkRPM2xDUVVNM1JEdDNRa0ZEUkN4UFFVRlBMRU5CUVVNc1MwRkJTeXhEUVVGRExIRkNRVUZ4UWl4RFFVRkRMRWRCUVVjc2IwSkJRVzlDTEVOQlFVTTdkMEpCUXpWRUxFOUJRVThzUTBGQlF5eExRVUZMTEVOQlFVTXNjMEpCUVhOQ0xFTkJRVU1zUjBGQlRTeFhRVUZYTEVOQlFVTXNWMEZCVnl4VFFVRkpMRXRCUVU4c1EwRkJRenQzUWtGRE9VVXNUMEZCVHl4RFFVRkRMRXRCUVVzc1EwRkJReXh2UWtGQmIwSXNRMEZCUXl4SFFVRkhMRkZCUVZFc1EwRkJRenQzUWtGREwwTXNUMEZCVHl4RFFVRkRMRXRCUVVzc1EwRkJReXh0UWtGQmJVSXNRMEZCUXl4SFFVRkhMRk5CUVZNc1EwRkJReXhSUVVGUkxFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTTdkMEpCUlhSRUxHZENRVUZuUWl4SFFVRkhMRzFDUVVGdFFpeERRVUZETEU5QlFVOHNSVUZCUlN4cFFrRkJhVUlzUlVGQlJTeGxRVUZsTEVOQlFVTXNRMEZCUXp0M1FrRkRNVVlzVDBGQlR5eERRVUZETEV0QlFVc3NRMEZCUXl3d1FrRkJNRUlzUTBGQlF5eEhRVUZITEhOQ1FVRnpRaXhEUVVGRExHZENRVUZuUWl4RFFVRkRMRU5CUVVNN2QwSkJSWEpHTEV0QlFVRXNUMEZCVHl4RFFVRkRMRXRCUVVzc1EwRkJRVHQzUWtGQlF5eExRVUZCTEhGQ1FVRnhRaXhEUVVGQk8zZENRVUZWTEV0QlFVRXNTVUZCU1N4RFFVRkRMRmxCUVZrc1EwRkJRVHM0UWtGRE5VUXNVVUZCVVRzMFFrRkRVaXhMUVVGTE96UkNRVU5NTEVsQlFVa3NRMEZCUXl4aFFVRmhMRU5CUVVNc1YwRkJWeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNZMEZCWXl4RFFVRkRPM2RDUVVOc1JTeExRVUZCTEVsQlFVa3NRMEZCUXl4elFrRkJjMElzUTBGQlFUczRRa0ZCUXl4UFFVRlBMRVZCUVVVc1owSkJRV2RDTzNkQ1FVRkZMSEZDUVVGTkxHTkJRV01zUTBGQlF5eGxRVUZsTEVWQlFVVXNTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhGUVVGQk96UkNRVXB3UlN4eFFrRkJUU3hUUVVGQkxFbEJRVWtzWVVGSkwwTXNVMEZCUVN4SlFVRkpMR0ZCUVcxRUxGTkJRV3RFTEVkQlFVTXNSMEZETTBjc1JVRkJRVHM3ZDBKQlRFUXNUVUZCYjBNc1IwRkJSeXhUUVV0MFF5eERRVUZETzNkQ1FVVkdMSE5DUVVGUExFOUJRVThzUlVGQlF6czdPenRMUVVOb1FqdEpRVXRaTERCQ1FVRkpMRWRCUVdwQ0xGVkJRV3RDTEUxQlFWY3NSVUZCUlN4UFFVRlpPenM3WjBKQlEzcERMRWxCUVVrc1QwRkJUeXhOUVVGTkxFdEJRVXNzVVVGQlVTeEZRVUZGTzI5Q1FVTTVRaXh6UWtGQlR5eEpRVUZKTEVOQlFVTXNWVUZCVlN4RFFVRkRMRTFCUVUwc1JVRkJSU3hQUVVGUExFTkJRVU1zUlVGQlF6dHBRa0ZEZWtNN2NVSkJRVTBzU1VGQlNTeE5RVUZOTEVOQlFVTXNUMEZCVHl4SlFVRkpMRTFCUVUwc1EwRkJReXhQUVVGUExFVkJRVVU3YjBKQlF6TkRMSE5DUVVGUExFbEJRVWtzUTBGQlF5eFRRVUZUTEVOQlFVTXNUVUZCVFN4RlFVRkZMRTlCUVU4c1EwRkJReXhGUVVGRE8ybENRVU40UXp0eFFrRkJUVHR2UWtGRFRDeHpRa0ZCVHl4SlFVRkpMRU5CUVVNc1YwRkJWeXhEUVVGRExFMUJRVTBzUlVGQlJTeFBRVUZQTEVOQlFVTXNSVUZCUXp0cFFrRkRNVU03T3pzN1MwRkRSanRKUVVWaExDdENRVUZUTEVkQlFYWkNMRlZCUTBVc1JVRkJiME1zUlVGRGNFTXNSVUZCYTBjN1dVRkVhRWNzVDBGQlR5eGhRVUZCTEVWQlFVVXNUMEZCVHl4aFFVRkJPMWxCUTJoQ0xHMUNRVUYzUWl4RlFVRjRRaXhYUVVGWExHMUNRVUZITEVsQlFVa3NTVUZCU1N4RlFVRkZMRXRCUVVFc1JVRkJSU3hqUVVGakxHOUNRVUZCTEVWQlFVVXNZVUZCWVN4dFFrRkJRU3hGUVVGRkxHTkJRV01zYjBKQlFVRTdPenM3T3pzNFFrRkZNVVFzWVVGQllTeGhRVUZpTEdGQlFXRTdkMEpCUVdJc1MwRkJRU3hoUVVGaExFTkJRVUU3T3pSQ1FVRkxMSEZDUVVGTkxFbEJRVWtzUTBGQlF5eGpRVUZqTEVWQlFVVXNSVUZCUVRzN2QwSkJRVFZDTEV0QlFVRXNRMEZCUXl4VFFVRXlRaXhEUVVGRExFTkJRVUU3T3p0M1FrRkJka1FzVFVGQlRTeExRVUZwUkR0M1FrRkRka1FzUzBGQk1FSXNWVUZCVlN4RFFVRkRMRmRCUVZjc1EwRkJReXhGUVVFdlF5eFRRVUZUTEdWQlFVRXNSVUZCUlN4UlFVRlJMR05CUVVFc1EwRkJOa0k3ZDBKQlEyeEVMRXRCUVVzc1IwRkJSeXhYUVVGWExFTkJRVU1zVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4alFVRmpMR0ZCUVdRc1kwRkJZeXhqUVVGa0xHTkJRV01zUjBGQlNTeEpRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRU5CUVVNN2QwSkJRM1pFTEhGQ1FVRk5MR05CUVdNc1EwRkJReXhGUVVGRkxFOUJRVThzUlVGQlJTeEZRVUZGTEVWQlFVVXNTVUZCU1N4RlFVRkZMRTlCUVU4c1JVRkJVeXhGUVVGRkxFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNSVUZCUVRzN2QwSkJRWGhHTEdGQlFXRXNSMEZCUnl4VFFVRjNSVHQzUWtGRGVFWXNTVUZCU1N4SFFVRkhMRWxCUVVrc1NVRkJTU3hEUVVGRExFMUJRVTBzUlVGQlJTeERRVUZETzNkQ1FVTXZRaXhKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRPM2RDUVVORExFdEJRVUVzUzBGQlN5eERRVUZCTzNkQ1FVRkRMSEZDUVVGTkxFbEJRVWtzUTBGQlF5eE5RVUZOTEVWQlFVVXNSVUZCUVRzN2QwSkJRWHBETEdGQlFXRXNSMEZCUnl4clFrRkJUU3hUUVVGdFFpeEZRVUZETzNkQ1FVTXhReXhaUVVGWkxFZEJRVWM3TkVKQlEyNUNMREJDUVVFd1FqczBRa0ZETVVJc1VVRkJVVHMwUWtGRFVpeExRVUZMT3pSQ1FVTk1MR05CUVdNN05FSkJRMlFzWVVGQllUczBRa0ZEWWl4aFFVRmhPM2xDUVVOa0xFTkJRVU1zU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPM2RDUVVOaUxITkNRVUZQTEVsQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1dVRkJXU3hGUVVGRkxFVkJRVVVzVjBGQlZ5eGhRVUZCTEVWQlFVVXNZVUZCWVN4RlFVRkZMRTFCUVUwc1JVRkJSU3hqUVVGakxHZENRVUZCTEVWQlFVVXNRMEZCUXl4RlFVRkRPenM3TzB0QlF6bEdPMGxCUldFc1owTkJRVlVzUjBGQmVFSXNWVUZEUlN4WlFVRnZRaXhGUVVOd1FpeEZRVUZyUmp0WlFVRnNSaXh4UWtGQlowWXNSVUZCUlN4TFFVRkJMRVZCUVdoR0xHMUNRVUYzUWl4RlFVRjRRaXhYUVVGWExHMUNRVUZITEVsQlFVa3NTVUZCU1N4RlFVRkZMRXRCUVVFc1JVRkJSU3hoUVVGaExHMUNRVUZCTEVWQlFVVXNZMEZCWXl4dlFrRkJRVHM3T3pzN05FSkJSWEpETEhGQ1FVRk5MRWxCUVVrc1EwRkJReXhyUWtGQmEwSXNSVUZCUlN4RlFVRkJPenQzUWtGQk4wTXNWMEZCVnl4SFFVRkhMRk5CUVN0Q096aENRVU53UXl4aFFVRmhMR0ZCUVdJc1lVRkJZVHQzUWtGQllpeExRVUZCTEdGQlFXRXNRMEZCUVRzN05FSkJRVXNzY1VKQlFVMHNTVUZCU1N4RFFVRkRMR05CUVdNc1JVRkJSU3hGUVVGQk96dDNRa0ZCTlVJc1MwRkJRU3hEUVVGRExGTkJRVEpDTEVOQlFVTXNRMEZCUVRzN08zZENRVUYyUkN4TlFVRk5MRXRCUVdsRU8zZENRVU55UkN4VFFVRlRMRWRCUVVzc1ZVRkJWU3hEUVVGRExGZEJRVmNzUTBGQlF5eFZRVUUxUWl4RFFVRTJRanMyUWtGRk4wSXNRMEZCUVN4TFFVRkJMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVUU3ZDBKQlFVTXNjVUpCUVUwc1NVRkJTU3hEUVVGRExHRkJRV0VzUTBGQlF5eFhRVUZYTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hqUVVGakxFTkJRVU1zUlVGQlFUczdkMEpCUVM5R0xFbEJRVWtzUjBGQlJ5d3lRa0ZCWjBJc1UwRkJkMFVzUzBGQlF6dDNRa0ZEZEVjc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eFpRVUZaTEVOQlFVTXNRMEZCUXp0M1FrRkRia0lzUzBGQlFTeExRVUZMTEVOQlFVRTdkMEpCUVVNc2NVSkJRVTBzU1VGQlNTeERRVUZETEUxQlFVMHNSVUZCUlN4RlFVRkJPelJDUVVGb1F5eHpRa0ZCVHl4clFrRkJUU3hUUVVGdFFpeEZRVUZETEVWQlFVTTdPenM3UzBGRGJrTTdTVUZGWVN4cFEwRkJWeXhIUVVGNlFpeFZRVU5GTEdGQlFUQkNMRVZCUXpGQ0xFVkJUU3RDTzFsQlRpOUNMSEZDUVUwMlFpeEZRVUZGTEV0QlFVRXNSVUZNTjBJc2JVSkJRWGRDTEVWQlFYaENMRmRCUVZjc2JVSkJRVWNzU1VGQlNTeEpRVUZKTEVWQlFVVXNTMEZCUVN4RlFVTjRRaXhsUVVGbExIRkNRVUZCTEVWQlEyWXNhVUpCUVdsQ0xIVkNRVUZCTEVWQlEycENMR0ZCUVdFc2JVSkJRVUVzUlVGRFlpeGpRVUZqTEc5Q1FVRkJPenM3T3pzMFFrRkhTU3h4UWtGQlRTeEpRVUZKTEVOQlFVTXNhMEpCUVd0Q0xFVkJRVVVzUlVGQlFUczdkMEpCUVRkRExGZEJRVmNzUjBGQlJ5eFRRVUVyUWpzNFFrRkRjRU1zWVVGQllTeGhRVUZpTEdGQlFXRTdkMEpCUVdJc1MwRkJRU3hoUVVGaExFTkJRVUU3T3pSQ1FVRkxMSEZDUVVGTkxFbEJRVWtzUTBGQlF5eGpRVUZqTEVWQlFVVXNSVUZCUVRzN2QwSkJRVFZDTEV0QlFVRXNRMEZCUXl4VFFVRXlRaXhEUVVGRExFTkJRVUU3T3p0M1FrRkJka1FzVFVGQlRTeExRVUZwUkR0M1FrRkRka1FzVDBGQlR5eEhRVUZITEdOQlFXTXNRMEZCUXl4aFFVRmhMRU5CUVVNc1EwRkJRenQzUWtGRGVFTXNTMEZCTUVJc1ZVRkJWU3hEUVVGRExGZEJRVmNzUTBGQlF5eEZRVUV2UXl4UlFVRlJMR05CUVVFc1JVRkJSU3hUUVVGVExHVkJRVUVzUTBGQk5rSTdkMEpCUTJ4RUxFdEJRVXNzUjBGQlJ5eFhRVUZYTEVOQlFVTXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hqUVVGakxHRkJRV1FzWTBGQll5eGpRVUZrTEdOQlFXTXNSMEZCU1N4SlFVRkpMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU03ZDBKQlJUZEZMRTlCUVU4c1EwRkJReXhQUVVGUExFTkJRVU1zWlVGQlpTeERRVUZETEVkQlFVY3NVVUZCVVN4RFFVRkRPM2RDUVVNMVF5eEpRVUZKTEZkQlFWY3NRMEZCUXl4WlFVRlpMRVZCUVVVN05FSkJRelZDTEU5QlFVOHNRMEZCUXl4UFFVRlBMRU5CUVVNc1dVRkJXU3hEUVVGRExFZEJRVWNzVjBGQlZ5eERRVUZETEZsQlFWa3NRMEZCUXp0NVFrRkRNVVE3ZDBKQlJXMUNMSEZDUVVGTkxHTkJRV01zUTBGQlF5eFBRVUZQTEVWQlFVVXNTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhGUVVGQk96dDNRa0ZCZUVRc1YwRkJWeXhIUVVGSExGTkJRVEJETzNkQ1FVTTVSQ3hKUVVGSkxFTkJRVU1zVTBGQlV5eERRVUZETEdGQlFXRXNSVUZCUlN4UFFVRlBMRU5CUVVNc1QwRkJUeXhEUVVGRExFbEJRVWtzU1VGQlNTeERRVUZETEdGQlFXRXNSVUZCUlRzMFFrRkRjRVVzVDBGQlR5eERRVUZETEU5QlFVOHNRMEZCUXl4aFFVRmhMRU5CUVVNc1IwRkJSeXhYUVVGWExFTkJRVU03ZVVKQlF6bERPM2RDUVVWTExHZENRVUZuUWl4SFFVRkhMRzFDUVVGdFFpeERRVUZETEU5QlFVOHNSVUZCUlN4cFFrRkJhVUlzUlVGQlJTeGxRVUZsTEVOQlFVTXNRMEZCUXp0M1FrRkRlRVVzY1VKQlFVMHNTVUZCU1N4RFFVRkRMRmxCUVZrc1EwRkRka01zVVVGQlVTeEZRVU5TTEV0QlFVc3NSVUZEVEN4SlFVRkpMRU5CUVVNc1lVRkJZU3hEUVVGRExGZEJRVmNzUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMR05CUVdNc1EwRkJReXhGUVVOc1JTeEpRVUZKTEVOQlFVTXNjMEpCUVhOQ0xFTkJRVU1zVDBGQlR5eEZRVUZGTEdkQ1FVRm5RaXhGUVVGRkxGZEJRVmNzUTBGQlF5eERRVU53UlN4RlFVRkJPenQzUWtGTVN5eFRRVUZUTEVkQlFVY3NVMEZMYWtJN2QwSkJSVVFzVDBGQlR5eERRVUZETEU5QlFVOHNRMEZCUXl4WFFVRlhMRU5CUVVNN05FSkJRM1pDTEc5Q1FVRnZRaXhOUVVGSE8ybERRVU14UWl4blFrRkJZeXhYUVVGWExFTkJRVU1zVjBGQlZ5eFRRVUZKTEV0QlFVc3NUMEZCU1N4RFFVRkJPMmxEUVVOc1JDeHRRa0ZCYVVJc2MwSkJRWE5DTEVOQlFVTXNaMEpCUVdkQ0xFTkJRVU1zVDBGQlNTeERRVUZCTzJsRFFVTTNSQ3hsUVVGaExGTkJRVmNzUTBGQlFTeERRVUZETzNkQ1FVVXpRaXh6UWtGQlR5eFBRVUZQTEVWQlFVTTdPenM3UzBGRGFFSTdTVUZGVHl3MFEwRkJjMElzUjBGQk9VSXNWVUZCSzBJc1QwRkJiMElzUlVGQlJTeG5Ra0ZCTWtJc1JVRkJSU3hYUVVGdFFqdFJRVU51Unl4SlFVRk5MR0ZCUVdFc1IwRkJSeXhOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEdkQ1FVRm5RaXhEUVVGRExFTkJRVU1zU1VGQlNTeEZRVUZGTEVOQlFVTTdVVUZETTBRc1QwRkJWU3hQUVVGUExFTkJRVU1zVFVGQlRTeFZRVU14UWl4SlFVRkpMRU5CUVVNc1owSkJRV2RDTEVOQlFVTXNUMEZCVHl4RFFVRkRMRlZCUXpsQ0xHbENRVUZwUWl4RFFVRkRMRTlCUVU4c1EwRkJReXhWUVVNeFFpeGhRVUZoTEVOQlFVTXNSMEZCUnl4RFFVRkRMRlZCUVVNc1NVRkJTU3hKUVVGTExFOUJRVWNzU1VGQlNTeFRRVUZKTEdkQ1FVRm5RaXhEUVVGRExFbEJRVWtzUTBGQlJ5eEZRVUZ1UXl4RFFVRnRReXhEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4WlFVVXpSU3hoUVVGaExFTkJRVU1zU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4VlFVTjJRaXhYUVVGaExFTkJRVU03U1VGRFpDeERRVUZETzBsQlJXRXNkME5CUVd0Q0xFZEJRV2hETEZWQlEwVXNVVUZCWjBJc1JVRkRhRUlzWlVGQmRVSXNSVUZEZGtJc1owSkJRWGRDT3pzN096czdkMEpCUld4Q0xFbEJRVWtzUjBGQlJ5eEpRVUZKTEVsQlFVa3NRMEZCUXl4TlFVRk5MRVZCUVVVc1EwRkJRenQzUWtGREwwSXNTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhuUWtGQlowSXNRMEZCUXl4RFFVRkRPM2RDUVVOU0xIRkNRVUZOTEVsQlFVa3NRMEZCUXl4TlFVRk5MRVZCUVVVc1JVRkJRVHM3ZDBKQlFXNURMR0ZCUVdFc1IwRkJSeXhUUVVGdFFqdDNRa0ZGZWtNc2MwSkJRVlVzYjBKQlFXOUNMRlZCUTJoRExGRkJRVkVzVlVGRFVpeGxRVUZsTEZWQlEyWXNTMEZCU3l4RFFVRkRMR0ZCUVdFc1EwRkJSeXhGUVVGRE96czdPMHRCUTNSQ08wbEJSVThzYzBOQlFXZENMRWRCUVhoQ0xGVkJRWGxDTEVWQlFYRkNPMWxCUVc1Q0xFbEJRVWtzVlVGQlFUdFJRVU0zUWl4SlFVRkpMRWxCUVVrc1EwRkJReXhoUVVGaExFVkJRVVU3V1VGRGRFSXNTVUZCVFN4aFFVRmhMRWRCUVVjc2EwSkJRV3RDTEVOQlFVTXNTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhMUVVGTExFVkJRVVVzUlVGQlJTeERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTnNSU3hQUVVGUExFMUJRVWtzWVVGQllTeERRVUZETEU5QlFVOHNRMEZCUXl4TlFVRk5MRVZCUVVVc1IwRkJSeXhEUVVGSExFTkJRVU03VTBGRGFrUTdVVUZGUkN4UFFVRlBMRWxCUVVrc1EwRkJRenRKUVVOa0xFTkJRVU03U1VGRllTeHJRMEZCV1N4SFFVRXhRaXhWUVVORkxGRkJRV2RDTEVWQlEyaENMR1ZCUVhWQ0xFVkJRM1pDTEZWQlFTdENMRVZCUXk5Q0xHZENRVUYzUWpzN096czdORUpCUlVnc2NVSkJRVTBzU1VGQlNTeERRVUZETEd0Q1FVRnJRaXhEUVVGRExGRkJRVkVzUlVGQlJTeGxRVUZsTEVWQlFVVXNaMEpCUVdkQ0xFTkJRVU1zUlVGQlFUczdkMEpCUVhwR0xGbEJRVmtzUjBGQlJ5eFRRVUV3UlRzMlFrRkZPVVVzUTBGQlFTeExRVUZCTEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVFN2QwSkJRVU1zY1VKQlFVMHNWVUZCVlN4RlFVRkJPenQzUWtGQmRrTXNTVUZCU1N4SFFVRkhMREpDUVVGblFpeFRRVUZuUWl4TFFVRkRPM2RDUVVNNVF5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRmxCUVZrc1EwRkJReXhEUVVGRE8zZENRVU51UWl4TFFVRkJMRXRCUVVzc1EwRkJRVHQzUWtGQlF5eHhRa0ZCVFN4SlFVRkpMRU5CUVVNc1RVRkJUU3hGUVVGRkxFVkJRVUU3TkVKQlFXaERMSE5DUVVGUExHdENRVUZOTEZOQlFXMUNMRVZCUVVNc1JVRkJRenM3T3p0TFFVTnVRenRKUVVWUExHMURRVUZoTEVkQlFYSkNMRlZCUTBVc1YwRkJkMElzUlVGRGVFSXNUVUZCWXl4RlFVTmtMRk5CUVdsQ0xFVkJRMnBDTEU5QlFXZENPMUZCUldoQ0xFOUJRVThzWVVGQllTeERRVUZETEVsQlFVa3NRMEZCUXl4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNUMEZCVHl4SlFVRkpMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF6dEpRVU0zUml4RFFVRkRPMGxCUTBnc2EwSkJRVU03UVVGQlJDeERRVUZETEVGQmVFNUVMRWxCZDA1RE96dEJRVVZFTEVsQlFVMHNWVUZCVlN4SFFVRkhMRlZCUVVNc1IwRkJZenRKUVVOb1F5eEpRVUZOTEZGQlFWRXNSMEZCUnl4UFFVRlBMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU1zVDBGQlR5eERRVUZETEZGQlFWRXNSVUZCUlN4RlFVRkZMRU5CUVVNc1EwRkJRenRKUVVOd1JDeFBRVUZQTzFGQlEwd3NVVUZCVVN4VlFVRkJPMUZCUTFJc1UwRkJVeXhGUVVGRkxGRkJRVkVzUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXl4RlFVRkZMRU5CUVVNc1EwRkJRenRMUVVOcVF5eERRVUZETzBGQlEwb3NRMEZCUXl4RFFVRkRPMEZCUlVZc1NVRkJUU3h6UWtGQmMwSXNSMEZCUnl4VlFVRkRMRTlCUVdVc1NVRkJZU3hQUVVGQkxFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRU5CUVVNc1NVRkJTU3hGUVVGRkxFTkJRVU1zU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4RlFVRnlReXhEUVVGeFF5eERRVUZETzBGQlJXeEhMRWxCUVUwc2RVSkJRWFZDTEVkQlFVY3NWVUZCUXl4TlFVRnBRenRKUVVOb1JTeEpRVUZKTEU5QlFVOHNUVUZCVFN4TFFVRkxMRkZCUVZFc1JVRkJSVHRSUVVNNVFpeEpRVUZOTEdGQlFWY3NSMEZCUnl4UFFVRlBMRU5CUVVNc1QwRkJUeXhEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETzFGQlF6VkRMRTlCUVU4c1kwRkJUU3hQUVVGQkxHRkJRVmNzUlVGQldDeERRVUZYTEVOQlFVTTdTMEZETVVJN1UwRkJUVHRSUVVOTUxFOUJRVThzVFVGQlRTeERRVUZETzB0QlEyWTdRVUZEU0N4RFFVRkRMRU5CUVVNN1FVRkZSaXhKUVVGTkxEUkNRVUUwUWl4SFFVRkhMRlZCUVVNc1YwRkJaMFE3U1VGRGNFWXNTVUZCU1N4UFFVRlBMRmRCUVZjc1MwRkJTeXhSUVVGUkxFVkJRVVU3VVVGRGJrTXNTVUZCVFN4aFFVRlhMRWRCUVVjc1QwRkJUeXhEUVVGRExFOUJRVThzUTBGQlF5eFhRVUZYTEVOQlFVTXNRMEZCUXp0UlFVTnFSQ3hQUVVGUExHTkJRVTBzVDBGQlFTeGhRVUZYTEVWQlFWZ3NRMEZCVnl4RFFVRkRPMHRCUXpGQ08xTkJRVTA3VVVGRFRDeFBRVUZQTEZkQlFWY3NRMEZCUXp0TFFVTndRanRCUVVOSUxFTkJRVU1zUTBGQlF5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbWx0Y0c5eWRDQjdYRzRnSUVOeVpXUmxiblJwWVd4ekxGeHVJQ0JFWVhSbFNXNXdkWFFzWEc0Z0lFVjJaVzUwVTJsbmJtVnlMRnh1SUNCRmRtVnVkRk5wWjI1cGJtZEJjbWQxYldWdWRITXNYRzRnSUVadmNtMWhkSFJsWkVWMlpXNTBMRnh1SUNCSVlYTm9RMjl1YzNSeWRXTjBiM0lzWEc0Z0lFaGxZV1JsY2tKaFp5eGNiaUFnU0hSMGNGSmxjWFZsYzNRc1hHNGdJRkJ5YjNacFpHVnlMRnh1SUNCU1pYRjFaWE4wVUhKbGMybG5ibVZ5TEZ4dUlDQlNaWEYxWlhOMFVISmxjMmxuYm1sdVowRnlaM1Z0Wlc1MGN5eGNiaUFnVW1WeGRXVnpkRk5wWjI1bGNpeGNiaUFnVW1WeGRXVnpkRk5wWjI1cGJtZEJjbWQxYldWdWRITXNYRzRnSUZOcFoyNXBibWRCY21kMWJXVnVkSE1zWEc0Z0lGTjBjbWx1WjFOcFoyNWxjaXhjYm4wZ1puSnZiU0JjSWtCaGQzTXRjMlJyTDNSNWNHVnpYQ0k3WEc1cGJYQnZjblFnZXlCMGIwaGxlQ0I5SUdaeWIyMGdYQ0pBWVhkekxYTmtheTkxZEdsc0xXaGxlQzFsYm1OdlpHbHVaMXdpTzF4dVhHNXBiWEJ2Y25RZ2UxeHVJQ0JCVEVkUFVrbFVTRTFmU1VSRlRsUkpSa2xGVWl4Y2JpQWdRVXhIVDFKSlZFaE5YMUZWUlZKWlgxQkJVa0ZOTEZ4dUlDQkJUVnBmUkVGVVJWOUlSVUZFUlZJc1hHNGdJRUZOV2w5RVFWUkZYMUZWUlZKWlgxQkJVa0ZOTEZ4dUlDQkJWVlJJWDBoRlFVUkZVaXhjYmlBZ1ExSkZSRVZPVkVsQlRGOVJWVVZTV1Y5UVFWSkJUU3hjYmlBZ1JWWkZUbFJmUVV4SFQxSkpWRWhOWDBsRVJVNVVTVVpKUlZJc1hHNGdJRVZZVUVsU1JWTmZVVlZGVWxsZlVFRlNRVTBzWEc0Z0lFMUJXRjlRVWtWVFNVZE9SVVJmVkZSTUxGeHVJQ0JUU0VFeU5UWmZTRVZCUkVWU0xGeHVJQ0JUU1VkT1FWUlZVa1ZmVVZWRlVsbGZVRUZTUVUwc1hHNGdJRk5KUjA1RlJGOUlSVUZFUlZKVFgxRlZSVkpaWDFCQlVrRk5MRnh1SUNCVVQwdEZUbDlJUlVGRVJWSXNYRzRnSUZSUFMwVk9YMUZWUlZKWlgxQkJVa0ZOTEZ4dWZTQm1jbTl0SUZ3aUxpOWpiMjV6ZEdGdWRITmNJanRjYm1sdGNHOXlkQ0I3SUdOeVpXRjBaVk5qYjNCbExDQm5aWFJUYVdkdWFXNW5TMlY1SUgwZ1puSnZiU0JjSWk0dlkzSmxaR1Z1ZEdsaGJFUmxjbWwyWVhScGIyNWNJanRjYm1sdGNHOXlkQ0I3SUdkbGRFTmhibTl1YVdOaGJFaGxZV1JsY25NZ2ZTQm1jbTl0SUZ3aUxpOW5aWFJEWVc1dmJtbGpZV3hJWldGa1pYSnpYQ0k3WEc1cGJYQnZjblFnZXlCblpYUkRZVzV2Ym1sallXeFJkV1Z5ZVNCOUlHWnliMjBnWENJdUwyZGxkRU5oYm05dWFXTmhiRkYxWlhKNVhDSTdYRzVwYlhCdmNuUWdleUJuWlhSUVlYbHNiMkZrU0dGemFDQjlJR1p5YjIwZ1hDSXVMMmRsZEZCaGVXeHZZV1JJWVhOb1hDSTdYRzVwYlhCdmNuUWdleUJvWVhOSVpXRmtaWElnZlNCbWNtOXRJRndpTGk5b1lYTklaV0ZrWlhKY0lqdGNibWx0Y0c5eWRDQjdJRzF2ZG1WSVpXRmtaWEp6Vkc5UmRXVnllU0I5SUdaeWIyMGdYQ0l1TDIxdmRtVklaV0ZrWlhKelZHOVJkV1Z5ZVZ3aU8xeHVhVzF3YjNKMElIc2djSEpsY0dGeVpWSmxjWFZsYzNRZ2ZTQm1jbTl0SUZ3aUxpOXdjbVZ3WVhKbFVtVnhkV1Z6ZEZ3aU8xeHVhVzF3YjNKMElIc2dhWE52T0RZd01TQjlJR1p5YjIwZ1hDSXVMM1YwYVd4RVlYUmxYQ0k3WEc1Y2JtVjRjRzl5ZENCcGJuUmxjbVpoWTJVZ1UybG5ibUYwZFhKbFZqUkpibWwwSUh0Y2JpQWdMeW9xWEc0Z0lDQXFJRlJvWlNCelpYSjJhV05sSUhOcFoyNXBibWNnYm1GdFpTNWNiaUFnSUNvdlhHNGdJSE5sY25acFkyVTZJSE4wY21sdVp6dGNibHh1SUNBdktpcGNiaUFnSUNvZ1ZHaGxJSEpsWjJsdmJpQnVZVzFsSUc5eUlHRWdablZ1WTNScGIyNGdkR2hoZENCeVpYUjFjbTV6SUdFZ2NISnZiV2x6WlNCMGFHRjBJSGRwYkd3Z1ltVmNiaUFnSUNvZ2NtVnpiMngyWldRZ2QybDBhQ0IwYUdVZ2NtVm5hVzl1SUc1aGJXVXVYRzRnSUNBcUwxeHVJQ0J5WldkcGIyNDZJSE4wY21sdVp5QjhJRkJ5YjNacFpHVnlQSE4wY21sdVp6NDdYRzVjYmlBZ0x5b3FYRzRnSUNBcUlGUm9aU0JqY21Wa1pXNTBhV0ZzY3lCM2FYUm9JSGRvYVdOb0lIUm9aU0J5WlhGMVpYTjBJSE5vYjNWc1pDQmlaU0J6YVdkdVpXUWdiM0lnWVNCbWRXNWpkR2x2Ymx4dUlDQWdLaUIwYUdGMElISmxkSFZ5Ym5NZ1lTQndjbTl0YVhObElIUm9ZWFFnZDJsc2JDQmlaU0J5WlhOdmJIWmxaQ0IzYVhSb0lHTnlaV1JsYm5ScFlXeHpMbHh1SUNBZ0tpOWNiaUFnWTNKbFpHVnVkR2xoYkhNNklFTnlaV1JsYm5ScFlXeHpJSHdnVUhKdmRtbGtaWEk4UTNKbFpHVnVkR2xoYkhNK08xeHVYRzRnSUM4cUtseHVJQ0FnS2lCQklHTnZibk4wY25WamRHOXlJR1oxYm1OMGFXOXVJR1p2Y2lCaElHaGhjMmdnYjJKcVpXTjBJSFJvWVhRZ2QybHNiQ0JqWVd4amRXeGhkR1VnVTBoQkxUSTFOaUJJVFVGRFhHNGdJQ0FxSUdOb1pXTnJjM1Z0Y3k1Y2JpQWdJQ292WEc0Z0lITm9ZVEkxTmo4NklFaGhjMmhEYjI1emRISjFZM1J2Y2p0Y2JseHVJQ0F2S2lwY2JpQWdJQ29nVjJobGRHaGxjaUIwYnlCMWNta3RaWE5qWVhCbElIUm9aU0J5WlhGMVpYTjBJRlZTU1NCd1lYUm9JR0Z6SUhCaGNuUWdiMllnWTI5dGNIVjBhVzVuSUhSb1pWeHVJQ0FnS2lCallXNXZibWxqWVd3Z2NtVnhkV1Z6ZENCemRISnBibWN1SUZSb2FYTWdhWE1nY21WeGRXbHlaV1FnWm05eUlHVjJaWEo1SUVGWFV5QnpaWEoyYVdObExDQmxlR05sY0hSY2JpQWdJQ29nUVcxaGVtOXVJRk16TENCaGN5QnZaaUJzWVhSbElESXdNVGN1WEc0Z0lDQXFYRzRnSUNBcUlFQmtaV1poZFd4MElGdDBjblZsWFZ4dUlDQWdLaTljYmlBZ2RYSnBSWE5qWVhCbFVHRjBhRDg2SUdKdmIyeGxZVzQ3WEc1Y2JpQWdMeW9xWEc0Z0lDQXFJRmRvWlhSb1pYSWdkRzhnWTJGc1kzVnNZWFJsSUdFZ1kyaGxZMnR6ZFcwZ2IyWWdkR2hsSUhKbGNYVmxjM1FnWW05a2VTQmhibVFnYVc1amJIVmtaU0JwZENCaGMxeHVJQ0FnS2lCbGFYUm9aWElnWVNCeVpYRjFaWE4wSUdobFlXUmxjaUFvZDJobGJpQnphV2R1YVc1bktTQnZjaUJoY3lCaElIRjFaWEo1SUhOMGNtbHVaeUJ3WVhKaGJXVjBaWEpjYmlBZ0lDb2dLSGRvWlc0Z2NISmxjMmxuYm1sdVp5a3VJRlJvYVhNZ2FYTWdjbVZ4ZFdseVpXUWdabTl5SUVGWFV5QkhiR0ZqYVdWeUlHRnVaQ0JCYldGNmIyNGdVek1nWVc1a0lHOXdkR2x2Ym1Gc0lHWnZjbHh1SUNBZ0tpQmxkbVZ5ZVNCdmRHaGxjaUJCVjFNZ2MyVnlkbWxqWlNCaGN5QnZaaUJzWVhSbElESXdNVGN1WEc0Z0lDQXFYRzRnSUNBcUlFQmtaV1poZFd4MElGdDBjblZsWFZ4dUlDQWdLaTljYmlBZ1lYQndiSGxEYUdWamEzTjFiVDg2SUdKdmIyeGxZVzQ3WEc1OVhHNWNibVY0Y0c5eWRDQnBiblJsY21aaFkyVWdVMmxuYm1GMGRYSmxWalJEY25sd2RHOUpibWwwSUh0Y2JpQWdjMmhoTWpVMk9pQklZWE5vUTI5dWMzUnlkV04wYjNJN1hHNTlYRzVjYm1WNGNHOXlkQ0JqYkdGemN5QlRhV2R1WVhSMWNtVldOQ0JwYlhCc1pXMWxiblJ6SUZKbGNYVmxjM1JRY21WemFXZHVaWElzSUZKbGNYVmxjM1JUYVdkdVpYSXNJRk4wY21sdVoxTnBaMjVsY2l3Z1JYWmxiblJUYVdkdVpYSWdlMXh1SUNCd2NtbDJZWFJsSUhKbFlXUnZibXg1SUhObGNuWnBZMlU2SUhOMGNtbHVaenRjYmlBZ2NISnBkbUYwWlNCeVpXRmtiMjVzZVNCeVpXZHBiMjVRY205MmFXUmxjam9nVUhKdmRtbGtaWEk4YzNSeWFXNW5QanRjYmlBZ2NISnBkbUYwWlNCeVpXRmtiMjVzZVNCamNtVmtaVzUwYVdGc1VISnZkbWxrWlhJNklGQnliM1pwWkdWeVBFTnlaV1JsYm5ScFlXeHpQanRjYmlBZ2NISnBkbUYwWlNCeVpXRmtiMjVzZVNCemFHRXlOVFk2SUVoaGMyaERiMjV6ZEhKMVkzUnZjanRjYmlBZ2NISnBkbUYwWlNCeVpXRmtiMjVzZVNCMWNtbEZjMk5oY0dWUVlYUm9PaUJpYjI5c1pXRnVPMXh1SUNCd2NtbDJZWFJsSUhKbFlXUnZibXg1SUdGd2NHeDVRMmhsWTJ0emRXMDZJR0p2YjJ4bFlXNDdYRzVjYmlBZ1kyOXVjM1J5ZFdOMGIzSW9lMXh1SUNBZ0lHRndjR3g1UTJobFkydHpkVzBzWEc0Z0lDQWdZM0psWkdWdWRHbGhiSE1zWEc0Z0lDQWdjbVZuYVc5dUxGeHVJQ0FnSUhObGNuWnBZMlVzWEc0Z0lDQWdjMmhoTWpVMkxGeHVJQ0FnSUhWeWFVVnpZMkZ3WlZCaGRHZ2dQU0IwY25WbExGeHVJQ0I5T2lCVGFXZHVZWFIxY21WV05FbHVhWFFnSmlCVGFXZHVZWFIxY21WV05FTnllWEIwYjBsdWFYUXBJSHRjYmlBZ0lDQjBhR2x6TG5ObGNuWnBZMlVnUFNCelpYSjJhV05sTzF4dUlDQWdJSFJvYVhNdWMyaGhNalUySUQwZ2MyaGhNalUyTzF4dUlDQWdJSFJvYVhNdWRYSnBSWE5qWVhCbFVHRjBhQ0E5SUhWeWFVVnpZMkZ3WlZCaGRHZzdYRzRnSUNBZ0x5OGdaR1ZtWVhWc2RDQjBieUIwY25WbElHbG1JR0Z3Y0d4NVEyaGxZMnR6ZFcwZ2FYTnVKM1FnYzJWMFhHNGdJQ0FnZEdocGN5NWhjSEJzZVVOb1pXTnJjM1Z0SUQwZ2RIbHdaVzltSUdGd2NHeDVRMmhsWTJ0emRXMGdQVDA5SUZ3aVltOXZiR1ZoYmx3aUlEOGdZWEJ3YkhsRGFHVmphM04xYlNBNklIUnlkV1U3WEc0Z0lDQWdkR2hwY3k1eVpXZHBiMjVRY205MmFXUmxjaUE5SUc1dmNtMWhiR2w2WlZKbFoybHZibEJ5YjNacFpHVnlLSEpsWjJsdmJpazdYRzRnSUNBZ2RHaHBjeTVqY21Wa1pXNTBhV0ZzVUhKdmRtbGtaWElnUFNCdWIzSnRZV3hwZW1WRGNtVmtaVzUwYVdGc2MxQnliM1pwWkdWeUtHTnlaV1JsYm5ScFlXeHpLVHRjYmlBZ2ZWeHVYRzRnSUhCMVlteHBZeUJoYzNsdVl5QndjbVZ6YVdkdUtHOXlhV2RwYm1Gc1VtVnhkV1Z6ZERvZ1NIUjBjRkpsY1hWbGMzUXNJRzl3ZEdsdmJuTTZJRkpsY1hWbGMzUlFjbVZ6YVdkdWFXNW5RWEpuZFcxbGJuUnpJRDBnZTMwcE9pQlFjbTl0YVhObFBFaDBkSEJTWlhGMVpYTjBQaUI3WEc0Z0lDQWdZMjl1YzNRZ2UxeHVJQ0FnSUNBZ2MybG5ibWx1WjBSaGRHVWdQU0J1WlhjZ1JHRjBaU2dwTEZ4dUlDQWdJQ0FnWlhod2FYSmxjMGx1SUQwZ016WXdNQ3hjYmlBZ0lDQWdJSFZ1YzJsbmJtRmliR1ZJWldGa1pYSnpMRnh1SUNBZ0lDQWdkVzVvYjJsemRHRmliR1ZJWldGa1pYSnpMRnh1SUNBZ0lDQWdjMmxuYm1GaWJHVklaV0ZrWlhKekxGeHVJQ0FnSUNBZ2MybG5ibWx1WjFKbFoybHZiaXhjYmlBZ0lDQWdJSE5wWjI1cGJtZFRaWEoyYVdObExGeHVJQ0FnSUgwZ1BTQnZjSFJwYjI1ek8xeHVJQ0FnSUdOdmJuTjBJR055WldSbGJuUnBZV3h6SUQwZ1lYZGhhWFFnZEdocGN5NWpjbVZrWlc1MGFXRnNVSEp2ZG1sa1pYSW9LVHRjYmlBZ0lDQmpiMjV6ZENCeVpXZHBiMjRnUFNCemFXZHVhVzVuVW1WbmFXOXVJRDgvSUNoaGQyRnBkQ0IwYUdsekxuSmxaMmx2YmxCeWIzWnBaR1Z5S0NrcE8xeHVYRzRnSUNBZ1kyOXVjM1FnZXlCc2IyNW5SR0YwWlN3Z2MyaHZjblJFWVhSbElIMGdQU0JtYjNKdFlYUkVZWFJsS0hOcFoyNXBibWRFWVhSbEtUdGNiaUFnSUNCcFppQW9aWGh3YVhKbGMwbHVJRDRnVFVGWVgxQlNSVk5KUjA1RlJGOVVWRXdwSUh0Y2JpQWdJQ0FnSUhKbGRIVnliaUJRY205dGFYTmxMbkpsYW1WamRDaGNiaUFnSUNBZ0lDQWdYQ0pUYVdkdVlYUjFjbVVnZG1WeWMybHZiaUEwSUhCeVpYTnBaMjVsWkNCVlVreHpYQ0lnS3lCY0lpQnRkWE4wSUdoaGRtVWdZVzRnWlhod2FYSmhkR2x2YmlCa1lYUmxJR3hsYzNNZ2RHaGhiaUJ2Ym1VZ2QyVmxheUJwYmx3aUlDc2dYQ0lnZEdobElHWjFkSFZ5WlZ3aVhHNGdJQ0FnSUNBcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdOdmJuTjBJSE5qYjNCbElEMGdZM0psWVhSbFUyTnZjR1VvYzJodmNuUkVZWFJsTENCeVpXZHBiMjRzSUhOcFoyNXBibWRUWlhKMmFXTmxJRDgvSUhSb2FYTXVjMlZ5ZG1salpTazdYRzRnSUNBZ1kyOXVjM1FnY21WeGRXVnpkQ0E5SUcxdmRtVklaV0ZrWlhKelZHOVJkV1Z5ZVNod2NtVndZWEpsVW1WeGRXVnpkQ2h2Y21sbmFXNWhiRkpsY1hWbGMzUXBMQ0I3SUhWdWFHOXBjM1JoWW14bFNHVmhaR1Z5Y3lCOUtUdGNibHh1SUNBZ0lHbG1JQ2hqY21Wa1pXNTBhV0ZzY3k1elpYTnphVzl1Vkc5clpXNHBJSHRjYmlBZ0lDQWdJSEpsY1hWbGMzUXVjWFZsY25sYlZFOUxSVTVmVVZWRlVsbGZVRUZTUVUxZElEMGdZM0psWkdWdWRHbGhiSE11YzJWemMybHZibFJ2YTJWdU8xeHVJQ0FnSUgxY2JpQWdJQ0J5WlhGMVpYTjBMbkYxWlhKNVcwRk1SMDlTU1ZSSVRWOVJWVVZTV1Y5UVFWSkJUVjBnUFNCQlRFZFBVa2xVU0UxZlNVUkZUbFJKUmtsRlVqdGNiaUFnSUNCeVpYRjFaWE4wTG5GMVpYSjVXME5TUlVSRlRsUkpRVXhmVVZWRlVsbGZVRUZTUVUxZElEMGdZQ1I3WTNKbFpHVnVkR2xoYkhNdVlXTmpaWE56UzJWNVNXUjlMeVI3YzJOdmNHVjlZRHRjYmlBZ0lDQnlaWEYxWlhOMExuRjFaWEo1VzBGTldsOUVRVlJGWDFGVlJWSlpYMUJCVWtGTlhTQTlJR3h2Ym1kRVlYUmxPMXh1SUNBZ0lISmxjWFZsYzNRdWNYVmxjbmxiUlZoUVNWSkZVMTlSVlVWU1dWOVFRVkpCVFYwZ1BTQmxlSEJwY21WelNXNHVkRzlUZEhKcGJtY29NVEFwTzF4dVhHNGdJQ0FnWTI5dWMzUWdZMkZ1YjI1cFkyRnNTR1ZoWkdWeWN5QTlJR2RsZEVOaGJtOXVhV05oYkVobFlXUmxjbk1vY21WeGRXVnpkQ3dnZFc1emFXZHVZV0pzWlVobFlXUmxjbk1zSUhOcFoyNWhZbXhsU0dWaFpHVnljeWs3WEc0Z0lDQWdjbVZ4ZFdWemRDNXhkV1Z5ZVZ0VFNVZE9SVVJmU0VWQlJFVlNVMTlSVlVWU1dWOVFRVkpCVFYwZ1BTQm5aWFJEWVc1dmJtbGpZV3hJWldGa1pYSk1hWE4wS0dOaGJtOXVhV05oYkVobFlXUmxjbk1wTzF4dVhHNGdJQ0FnY21WeGRXVnpkQzV4ZFdWeWVWdFRTVWRPUVZSVlVrVmZVVlZGVWxsZlVFRlNRVTFkSUQwZ1lYZGhhWFFnZEdocGN5NW5aWFJUYVdkdVlYUjFjbVVvWEc0Z0lDQWdJQ0JzYjI1blJHRjBaU3hjYmlBZ0lDQWdJSE5qYjNCbExGeHVJQ0FnSUNBZ2RHaHBjeTVuWlhSVGFXZHVhVzVuUzJWNUtHTnlaV1JsYm5ScFlXeHpMQ0J5WldkcGIyNHNJSE5vYjNKMFJHRjBaU3dnYzJsbmJtbHVaMU5sY25acFkyVXBMRnh1SUNBZ0lDQWdkR2hwY3k1amNtVmhkR1ZEWVc1dmJtbGpZV3hTWlhGMVpYTjBLSEpsY1hWbGMzUXNJR05oYm05dWFXTmhiRWhsWVdSbGNuTXNJR0YzWVdsMElHZGxkRkJoZVd4dllXUklZWE5vS0c5eWFXZHBibUZzVW1WeGRXVnpkQ3dnZEdocGN5NXphR0V5TlRZcEtWeHVJQ0FnSUNrN1hHNWNiaUFnSUNCeVpYUjFjbTRnY21WeGRXVnpkRHRjYmlBZ2ZWeHVYRzRnSUhCMVlteHBZeUJoYzNsdVl5QnphV2R1S0hOMGNtbHVaMVJ2VTJsbmJqb2djM1J5YVc1bkxDQnZjSFJwYjI1elB6b2dVMmxuYm1sdVowRnlaM1Z0Wlc1MGN5azZJRkJ5YjIxcGMyVThjM1J5YVc1blBqdGNiaUFnY0hWaWJHbGpJR0Z6ZVc1aklITnBaMjRvWlhabGJuUTZJRVp2Y20xaGRIUmxaRVYyWlc1MExDQnZjSFJwYjI1ek9pQkZkbVZ1ZEZOcFoyNXBibWRCY21kMWJXVnVkSE1wT2lCUWNtOXRhWE5sUEhOMGNtbHVaejQ3WEc0Z0lIQjFZbXhwWXlCaGMzbHVZeUJ6YVdkdUtISmxjWFZsYzNSVWIxTnBaMjQ2SUVoMGRIQlNaWEYxWlhOMExDQnZjSFJwYjI1elB6b2dVbVZ4ZFdWemRGTnBaMjVwYm1kQmNtZDFiV1Z1ZEhNcE9pQlFjbTl0YVhObFBFaDBkSEJTWlhGMVpYTjBQanRjYmlBZ2NIVmliR2xqSUdGemVXNWpJSE5wWjI0b2RHOVRhV2R1T2lCaGJua3NJRzl3ZEdsdmJuTTZJR0Z1ZVNrNklGQnliMjFwYzJVOFlXNTVQaUI3WEc0Z0lDQWdhV1lnS0hSNWNHVnZaaUIwYjFOcFoyNGdQVDA5SUZ3aWMzUnlhVzVuWENJcElIdGNiaUFnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk5wWjI1VGRISnBibWNvZEc5VGFXZHVMQ0J2Y0hScGIyNXpLVHRjYmlBZ0lDQjlJR1ZzYzJVZ2FXWWdLSFJ2VTJsbmJpNW9aV0ZrWlhKeklDWW1JSFJ2VTJsbmJpNXdZWGxzYjJGa0tTQjdYRzRnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6YVdkdVJYWmxiblFvZEc5VGFXZHVMQ0J2Y0hScGIyNXpLVHRjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjMmxuYmxKbGNYVmxjM1FvZEc5VGFXZHVMQ0J2Y0hScGIyNXpLVHRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0J3Y21sMllYUmxJR0Z6ZVc1aklITnBaMjVGZG1WdWRDaGNiaUFnSUNCN0lHaGxZV1JsY25Nc0lIQmhlV3h2WVdRZ2ZUb2dSbTl5YldGMGRHVmtSWFpsYm5Rc1hHNGdJQ0FnZXlCemFXZHVhVzVuUkdGMFpTQTlJRzVsZHlCRVlYUmxLQ2tzSUhCeWFXOXlVMmxuYm1GMGRYSmxMQ0J6YVdkdWFXNW5VbVZuYVc5dUxDQnphV2R1YVc1blUyVnlkbWxqWlNCOU9pQkZkbVZ1ZEZOcFoyNXBibWRCY21kMWJXVnVkSE5jYmlBZ0tUb2dVSEp2YldselpUeHpkSEpwYm1jK0lIdGNiaUFnSUNCamIyNXpkQ0J5WldkcGIyNGdQU0J6YVdkdWFXNW5VbVZuYVc5dUlEOC9JQ2hoZDJGcGRDQjBhR2x6TG5KbFoybHZibEJ5YjNacFpHVnlLQ2twTzF4dUlDQWdJR052Ym5OMElIc2djMmh2Y25SRVlYUmxMQ0JzYjI1blJHRjBaU0I5SUQwZ1ptOXliV0YwUkdGMFpTaHphV2R1YVc1blJHRjBaU2s3WEc0Z0lDQWdZMjl1YzNRZ2MyTnZjR1VnUFNCamNtVmhkR1ZUWTI5d1pTaHphRzl5ZEVSaGRHVXNJSEpsWjJsdmJpd2djMmxuYm1sdVoxTmxjblpwWTJVZ1B6OGdkR2hwY3k1elpYSjJhV05sS1R0Y2JpQWdJQ0JqYjI1emRDQm9ZWE5vWldSUVlYbHNiMkZrSUQwZ1lYZGhhWFFnWjJWMFVHRjViRzloWkVoaGMyZ29leUJvWldGa1pYSnpPaUI3ZlN3Z1ltOWtlVG9nY0dGNWJHOWhaQ0I5SUdGeklHRnVlU3dnZEdocGN5NXphR0V5TlRZcE8xeHVJQ0FnSUdOdmJuTjBJR2hoYzJnZ1BTQnVaWGNnZEdocGN5NXphR0V5TlRZb0tUdGNiaUFnSUNCb1lYTm9MblZ3WkdGMFpTaG9aV0ZrWlhKektUdGNiaUFnSUNCamIyNXpkQ0JvWVhOb1pXUklaV0ZrWlhKeklEMGdkRzlJWlhnb1lYZGhhWFFnYUdGemFDNWthV2RsYzNRb0tTazdYRzRnSUNBZ1kyOXVjM1FnYzNSeWFXNW5WRzlUYVdkdUlEMGdXMXh1SUNBZ0lDQWdSVlpGVGxSZlFVeEhUMUpKVkVoTlgwbEVSVTVVU1VaSlJWSXNYRzRnSUNBZ0lDQnNiMjVuUkdGMFpTeGNiaUFnSUNBZ0lITmpiM0JsTEZ4dUlDQWdJQ0FnY0hKcGIzSlRhV2R1WVhSMWNtVXNYRzRnSUNBZ0lDQm9ZWE5vWldSSVpXRmtaWEp6TEZ4dUlDQWdJQ0FnYUdGemFHVmtVR0Y1Ykc5aFpDeGNiaUFnSUNCZExtcHZhVzRvWENKY1hHNWNJaWs3WEc0Z0lDQWdjbVYwZFhKdUlIUm9hWE11YzJsbmJsTjBjbWx1WnloemRISnBibWRVYjFOcFoyNHNJSHNnYzJsbmJtbHVaMFJoZEdVc0lITnBaMjVwYm1kU1pXZHBiMjQ2SUhKbFoybHZiaXdnYzJsbmJtbHVaMU5sY25acFkyVWdmU2s3WEc0Z0lIMWNibHh1SUNCd2NtbDJZWFJsSUdGemVXNWpJSE5wWjI1VGRISnBibWNvWEc0Z0lDQWdjM1J5YVc1blZHOVRhV2R1T2lCemRISnBibWNzWEc0Z0lDQWdleUJ6YVdkdWFXNW5SR0YwWlNBOUlHNWxkeUJFWVhSbEtDa3NJSE5wWjI1cGJtZFNaV2RwYjI0c0lITnBaMjVwYm1kVFpYSjJhV05sSUgwNklGTnBaMjVwYm1kQmNtZDFiV1Z1ZEhNZ1BTQjdmVnh1SUNBcE9pQlFjbTl0YVhObFBITjBjbWx1Wno0Z2UxeHVJQ0FnSUdOdmJuTjBJR055WldSbGJuUnBZV3h6SUQwZ1lYZGhhWFFnZEdocGN5NWpjbVZrWlc1MGFXRnNVSEp2ZG1sa1pYSW9LVHRjYmlBZ0lDQmpiMjV6ZENCeVpXZHBiMjRnUFNCemFXZHVhVzVuVW1WbmFXOXVJRDgvSUNoaGQyRnBkQ0IwYUdsekxuSmxaMmx2YmxCeWIzWnBaR1Z5S0NrcE8xeHVJQ0FnSUdOdmJuTjBJSHNnYzJodmNuUkVZWFJsSUgwZ1BTQm1iM0p0WVhSRVlYUmxLSE5wWjI1cGJtZEVZWFJsS1R0Y2JseHVJQ0FnSUdOdmJuTjBJR2hoYzJnZ1BTQnVaWGNnZEdocGN5NXphR0V5TlRZb1lYZGhhWFFnZEdocGN5NW5aWFJUYVdkdWFXNW5TMlY1S0dOeVpXUmxiblJwWVd4ekxDQnlaV2RwYjI0c0lITm9iM0owUkdGMFpTd2djMmxuYm1sdVoxTmxjblpwWTJVcEtUdGNiaUFnSUNCb1lYTm9MblZ3WkdGMFpTaHpkSEpwYm1kVWIxTnBaMjRwTzF4dUlDQWdJSEpsZEhWeWJpQjBiMGhsZUNoaGQyRnBkQ0JvWVhOb0xtUnBaMlZ6ZENncEtUdGNiaUFnZlZ4dVhHNGdJSEJ5YVhaaGRHVWdZWE41Ym1NZ2MybG5ibEpsY1hWbGMzUW9YRzRnSUNBZ2NtVnhkV1Z6ZEZSdlUybG5iam9nU0hSMGNGSmxjWFZsYzNRc1hHNGdJQ0FnZTF4dUlDQWdJQ0FnYzJsbmJtbHVaMFJoZEdVZ1BTQnVaWGNnUkdGMFpTZ3BMRnh1SUNBZ0lDQWdjMmxuYm1GaWJHVklaV0ZrWlhKekxGeHVJQ0FnSUNBZ2RXNXphV2R1WVdKc1pVaGxZV1JsY25Nc1hHNGdJQ0FnSUNCemFXZHVhVzVuVW1WbmFXOXVMRnh1SUNBZ0lDQWdjMmxuYm1sdVoxTmxjblpwWTJVc1hHNGdJQ0FnZlRvZ1VtVnhkV1Z6ZEZOcFoyNXBibWRCY21kMWJXVnVkSE1nUFNCN2ZWeHVJQ0FwT2lCUWNtOXRhWE5sUEVoMGRIQlNaWEYxWlhOMFBpQjdYRzRnSUNBZ1kyOXVjM1FnWTNKbFpHVnVkR2xoYkhNZ1BTQmhkMkZwZENCMGFHbHpMbU55WldSbGJuUnBZV3hRY205MmFXUmxjaWdwTzF4dUlDQWdJR052Ym5OMElISmxaMmx2YmlBOUlITnBaMjVwYm1kU1pXZHBiMjRnUHo4Z0tHRjNZV2wwSUhSb2FYTXVjbVZuYVc5dVVISnZkbWxrWlhJb0tTazdYRzRnSUNBZ1kyOXVjM1FnY21WeGRXVnpkQ0E5SUhCeVpYQmhjbVZTWlhGMVpYTjBLSEpsY1hWbGMzUlViMU5wWjI0cE8xeHVJQ0FnSUdOdmJuTjBJSHNnYkc5dVowUmhkR1VzSUhOb2IzSjBSR0YwWlNCOUlEMGdabTl5YldGMFJHRjBaU2h6YVdkdWFXNW5SR0YwWlNrN1hHNGdJQ0FnWTI5dWMzUWdjMk52Y0dVZ1BTQmpjbVZoZEdWVFkyOXdaU2h6YUc5eWRFUmhkR1VzSUhKbFoybHZiaXdnYzJsbmJtbHVaMU5sY25acFkyVWdQejhnZEdocGN5NXpaWEoyYVdObEtUdGNibHh1SUNBZ0lISmxjWFZsYzNRdWFHVmhaR1Z5YzF0QlRWcGZSRUZVUlY5SVJVRkVSVkpkSUQwZ2JHOXVaMFJoZEdVN1hHNGdJQ0FnYVdZZ0tHTnlaV1JsYm5ScFlXeHpMbk5sYzNOcGIyNVViMnRsYmlrZ2UxeHVJQ0FnSUNBZ2NtVnhkV1Z6ZEM1b1pXRmtaWEp6VzFSUFMwVk9YMGhGUVVSRlVsMGdQU0JqY21Wa1pXNTBhV0ZzY3k1elpYTnphVzl1Vkc5clpXNDdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1kyOXVjM1FnY0dGNWJHOWhaRWhoYzJnZ1BTQmhkMkZwZENCblpYUlFZWGxzYjJGa1NHRnphQ2h5WlhGMVpYTjBMQ0IwYUdsekxuTm9ZVEkxTmlrN1hHNGdJQ0FnYVdZZ0tDRm9ZWE5JWldGa1pYSW9VMGhCTWpVMlgwaEZRVVJGVWl3Z2NtVnhkV1Z6ZEM1b1pXRmtaWEp6S1NBbUppQjBhR2x6TG1Gd2NHeDVRMmhsWTJ0emRXMHBJSHRjYmlBZ0lDQWdJSEpsY1hWbGMzUXVhR1ZoWkdWeWMxdFRTRUV5TlRaZlNFVkJSRVZTWFNBOUlIQmhlV3h2WVdSSVlYTm9PMXh1SUNBZ0lIMWNibHh1SUNBZ0lHTnZibk4wSUdOaGJtOXVhV05oYkVobFlXUmxjbk1nUFNCblpYUkRZVzV2Ym1sallXeElaV0ZrWlhKektISmxjWFZsYzNRc0lIVnVjMmxuYm1GaWJHVklaV0ZrWlhKekxDQnphV2R1WVdKc1pVaGxZV1JsY25NcE8xeHVJQ0FnSUdOdmJuTjBJSE5wWjI1aGRIVnlaU0E5SUdGM1lXbDBJSFJvYVhNdVoyVjBVMmxuYm1GMGRYSmxLRnh1SUNBZ0lDQWdiRzl1WjBSaGRHVXNYRzRnSUNBZ0lDQnpZMjl3WlN4Y2JpQWdJQ0FnSUhSb2FYTXVaMlYwVTJsbmJtbHVaMHRsZVNoamNtVmtaVzUwYVdGc2N5d2djbVZuYVc5dUxDQnphRzl5ZEVSaGRHVXNJSE5wWjI1cGJtZFRaWEoyYVdObEtTeGNiaUFnSUNBZ0lIUm9hWE11WTNKbFlYUmxRMkZ1YjI1cFkyRnNVbVZ4ZFdWemRDaHlaWEYxWlhOMExDQmpZVzV2Ym1sallXeElaV0ZrWlhKekxDQndZWGxzYjJGa1NHRnphQ2xjYmlBZ0lDQXBPMXh1WEc0Z0lDQWdjbVZ4ZFdWemRDNW9aV0ZrWlhKelcwRlZWRWhmU0VWQlJFVlNYU0E5WEc0Z0lDQWdJQ0JnSkh0QlRFZFBVa2xVU0UxZlNVUkZUbFJKUmtsRlVuMGdZQ0FyWEc0Z0lDQWdJQ0JnUTNKbFpHVnVkR2xoYkQwa2UyTnlaV1JsYm5ScFlXeHpMbUZqWTJWemMwdGxlVWxrZlM4a2UzTmpiM0JsZlN3Z1lDQXJYRzRnSUNBZ0lDQmdVMmxuYm1Wa1NHVmhaR1Z5Y3owa2UyZGxkRU5oYm05dWFXTmhiRWhsWVdSbGNreHBjM1FvWTJGdWIyNXBZMkZzU0dWaFpHVnljeWw5TENCZ0lDdGNiaUFnSUNBZ0lHQlRhV2R1WVhSMWNtVTlKSHR6YVdkdVlYUjFjbVY5WUR0Y2JseHVJQ0FnSUhKbGRIVnliaUJ5WlhGMVpYTjBPMXh1SUNCOVhHNWNiaUFnY0hKcGRtRjBaU0JqY21WaGRHVkRZVzV2Ym1sallXeFNaWEYxWlhOMEtISmxjWFZsYzNRNklFaDBkSEJTWlhGMVpYTjBMQ0JqWVc1dmJtbGpZV3hJWldGa1pYSnpPaUJJWldGa1pYSkNZV2NzSUhCaGVXeHZZV1JJWVhOb09pQnpkSEpwYm1jcE9pQnpkSEpwYm1jZ2UxeHVJQ0FnSUdOdmJuTjBJSE52Y25SbFpFaGxZV1JsY25NZ1BTQlBZbXBsWTNRdWEyVjVjeWhqWVc1dmJtbGpZV3hJWldGa1pYSnpLUzV6YjNKMEtDazdYRzRnSUNBZ2NtVjBkWEp1SUdBa2UzSmxjWFZsYzNRdWJXVjBhRzlrZlZ4dUpIdDBhR2x6TG1kbGRFTmhibTl1YVdOaGJGQmhkR2dvY21WeGRXVnpkQ2w5WEc0a2UyZGxkRU5oYm05dWFXTmhiRkYxWlhKNUtISmxjWFZsYzNRcGZWeHVKSHR6YjNKMFpXUklaV0ZrWlhKekxtMWhjQ2dvYm1GdFpTa2dQVDRnWUNSN2JtRnRaWDA2Skh0allXNXZibWxqWVd4SVpXRmtaWEp6VzI1aGJXVmRmV0FwTG1wdmFXNG9YQ0pjWEc1Y0lpbDlYRzVjYmlSN2MyOXlkR1ZrU0dWaFpHVnljeTVxYjJsdUtGd2lPMXdpS1gxY2JpUjdjR0Y1Ykc5aFpFaGhjMmg5WUR0Y2JpQWdmVnh1WEc0Z0lIQnlhWFpoZEdVZ1lYTjVibU1nWTNKbFlYUmxVM1J5YVc1blZHOVRhV2R1S0Z4dUlDQWdJR3h2Ym1kRVlYUmxPaUJ6ZEhKcGJtY3NYRzRnSUNBZ1kzSmxaR1Z1ZEdsaGJGTmpiM0JsT2lCemRISnBibWNzWEc0Z0lDQWdZMkZ1YjI1cFkyRnNVbVZ4ZFdWemREb2djM1J5YVc1blhHNGdJQ2s2SUZCeWIyMXBjMlU4YzNSeWFXNW5QaUI3WEc0Z0lDQWdZMjl1YzNRZ2FHRnphQ0E5SUc1bGR5QjBhR2x6TG5Ob1lUSTFOaWdwTzF4dUlDQWdJR2hoYzJndWRYQmtZWFJsS0dOaGJtOXVhV05oYkZKbGNYVmxjM1FwTzF4dUlDQWdJR052Ym5OMElHaGhjMmhsWkZKbGNYVmxjM1FnUFNCaGQyRnBkQ0JvWVhOb0xtUnBaMlZ6ZENncE8xeHVYRzRnSUNBZ2NtVjBkWEp1SUdBa2UwRk1SMDlTU1ZSSVRWOUpSRVZPVkVsR1NVVlNmVnh1Skh0c2IyNW5SR0YwWlgxY2JpUjdZM0psWkdWdWRHbGhiRk5qYjNCbGZWeHVKSHQwYjBobGVDaG9ZWE5vWldSU1pYRjFaWE4wS1gxZ08xeHVJQ0I5WEc1Y2JpQWdjSEpwZG1GMFpTQm5aWFJEWVc1dmJtbGpZV3hRWVhSb0tIc2djR0YwYUNCOU9pQklkSFJ3VW1WeGRXVnpkQ2s2SUhOMGNtbHVaeUI3WEc0Z0lDQWdhV1lnS0hSb2FYTXVkWEpwUlhOallYQmxVR0YwYUNrZ2UxeHVJQ0FnSUNBZ1kyOXVjM1FnWkc5MVlteGxSVzVqYjJSbFpDQTlJR1Z1WTI5a1pWVlNTVU52YlhCdmJtVnVkQ2h3WVhSb0xuSmxjR3hoWTJVb0wxNWNYQzh2TENCY0lsd2lLU2s3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdZQzhrZTJSdmRXSnNaVVZ1WTI5a1pXUXVjbVZ3YkdGalpTZ3ZKVEpHTDJjc0lGd2lMMXdpS1gxZ08xeHVJQ0FnSUgxY2JseHVJQ0FnSUhKbGRIVnliaUJ3WVhSb08xeHVJQ0I5WEc1Y2JpQWdjSEpwZG1GMFpTQmhjM2x1WXlCblpYUlRhV2R1WVhSMWNtVW9YRzRnSUNBZ2JHOXVaMFJoZEdVNklITjBjbWx1Wnl4Y2JpQWdJQ0JqY21Wa1pXNTBhV0ZzVTJOdmNHVTZJSE4wY21sdVp5eGNiaUFnSUNCclpYbFFjbTl0YVhObE9pQlFjbTl0YVhObFBGVnBiblE0UVhKeVlYaytMRnh1SUNBZ0lHTmhibTl1YVdOaGJGSmxjWFZsYzNRNklITjBjbWx1WjF4dUlDQXBPaUJRY205dGFYTmxQSE4wY21sdVp6NGdlMXh1SUNBZ0lHTnZibk4wSUhOMGNtbHVaMVJ2VTJsbmJpQTlJR0YzWVdsMElIUm9hWE11WTNKbFlYUmxVM1J5YVc1blZHOVRhV2R1S0d4dmJtZEVZWFJsTENCamNtVmtaVzUwYVdGc1UyTnZjR1VzSUdOaGJtOXVhV05oYkZKbGNYVmxjM1FwTzF4dVhHNGdJQ0FnWTI5dWMzUWdhR0Z6YUNBOUlHNWxkeUIwYUdsekxuTm9ZVEkxTmloaGQyRnBkQ0JyWlhsUWNtOXRhWE5sS1R0Y2JpQWdJQ0JvWVhOb0xuVndaR0YwWlNoemRISnBibWRVYjFOcFoyNHBPMXh1SUNBZ0lISmxkSFZ5YmlCMGIwaGxlQ2hoZDJGcGRDQm9ZWE5vTG1ScFoyVnpkQ2dwS1R0Y2JpQWdmVnh1WEc0Z0lIQnlhWFpoZEdVZ1oyVjBVMmxuYm1sdVowdGxlU2hjYmlBZ0lDQmpjbVZrWlc1MGFXRnNjem9nUTNKbFpHVnVkR2xoYkhNc1hHNGdJQ0FnY21WbmFXOXVPaUJ6ZEhKcGJtY3NYRzRnSUNBZ2MyaHZjblJFWVhSbE9pQnpkSEpwYm1jc1hHNGdJQ0FnYzJWeWRtbGpaVDg2SUhOMGNtbHVaMXh1SUNBcE9pQlFjbTl0YVhObFBGVnBiblE0UVhKeVlYaytJSHRjYmlBZ0lDQnlaWFIxY200Z1oyVjBVMmxuYm1sdVowdGxlU2gwYUdsekxuTm9ZVEkxTml3Z1kzSmxaR1Z1ZEdsaGJITXNJSE5vYjNKMFJHRjBaU3dnY21WbmFXOXVMQ0J6WlhKMmFXTmxJSHg4SUhSb2FYTXVjMlZ5ZG1salpTazdYRzRnSUgxY2JuMWNibHh1WTI5dWMzUWdabTl5YldGMFJHRjBaU0E5SUNodWIzYzZJRVJoZEdWSmJuQjFkQ2s2SUhzZ2JHOXVaMFJoZEdVNklITjBjbWx1WnpzZ2MyaHZjblJFWVhSbE9pQnpkSEpwYm1jZ2ZTQTlQaUI3WEc0Z0lHTnZibk4wSUd4dmJtZEVZWFJsSUQwZ2FYTnZPRFl3TVNodWIzY3BMbkpsY0d4aFkyVW9MMXRjWEMwNlhTOW5MQ0JjSWx3aUtUdGNiaUFnY21WMGRYSnVJSHRjYmlBZ0lDQnNiMjVuUkdGMFpTeGNiaUFnSUNCemFHOXlkRVJoZEdVNklHeHZibWRFWVhSbExuTjFZbk4wY2lnd0xDQTRLU3hjYmlBZ2ZUdGNibjA3WEc1Y2JtTnZibk4wSUdkbGRFTmhibTl1YVdOaGJFaGxZV1JsY2t4cGMzUWdQU0FvYUdWaFpHVnljem9nYjJKcVpXTjBLVG9nYzNSeWFXNW5JRDArSUU5aWFtVmpkQzVyWlhsektHaGxZV1JsY25NcExuTnZjblFvS1M1cWIybHVLRndpTzF3aUtUdGNibHh1WTI5dWMzUWdibTl5YldGc2FYcGxVbVZuYVc5dVVISnZkbWxrWlhJZ1BTQW9jbVZuYVc5dU9pQnpkSEpwYm1jZ2ZDQlFjbTkyYVdSbGNqeHpkSEpwYm1jK0tUb2dVSEp2ZG1sa1pYSThjM1J5YVc1blBpQTlQaUI3WEc0Z0lHbG1JQ2gwZVhCbGIyWWdjbVZuYVc5dUlEMDlQU0JjSW5OMGNtbHVaMXdpS1NCN1hHNGdJQ0FnWTI5dWMzUWdjSEp2YldsemFXWnBaV1FnUFNCUWNtOXRhWE5sTG5KbGMyOXNkbVVvY21WbmFXOXVLVHRjYmlBZ0lDQnlaWFIxY200Z0tDa2dQVDRnY0hKdmJXbHphV1pwWldRN1hHNGdJSDBnWld4elpTQjdYRzRnSUNBZ2NtVjBkWEp1SUhKbFoybHZianRjYmlBZ2ZWeHVmVHRjYmx4dVkyOXVjM1FnYm05eWJXRnNhWHBsUTNKbFpHVnVkR2xoYkhOUWNtOTJhV1JsY2lBOUlDaGpjbVZrWlc1MGFXRnNjem9nUTNKbFpHVnVkR2xoYkhNZ2ZDQlFjbTkyYVdSbGNqeERjbVZrWlc1MGFXRnNjejRwT2lCUWNtOTJhV1JsY2p4RGNtVmtaVzUwYVdGc2N6NGdQVDRnZTF4dUlDQnBaaUFvZEhsd1pXOW1JR055WldSbGJuUnBZV3h6SUQwOVBTQmNJbTlpYW1WamRGd2lLU0I3WEc0Z0lDQWdZMjl1YzNRZ2NISnZiV2x6YVdacFpXUWdQU0JRY205dGFYTmxMbkpsYzI5c2RtVW9ZM0psWkdWdWRHbGhiSE1wTzF4dUlDQWdJSEpsZEhWeWJpQW9LU0E5UGlCd2NtOXRhWE5wWm1sbFpEdGNiaUFnZlNCbGJITmxJSHRjYmlBZ0lDQnlaWFIxY200Z1kzSmxaR1Z1ZEdsaGJITTdYRzRnSUgxY2JuMDdYRzRpWFgwPSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/SignatureV4.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/cloneRequest.js":
/*!********************************************************************!*\
  !*** ./node_modules/@aws-sdk/signature-v4/dist/es/cloneRequest.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cloneRequest: () => (/* binding */ cloneRequest)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/node_modules/tslib/tslib.es6.js\");\n\n/**\n * @internal\n */\nfunction cloneRequest(_a) {\n    var headers = _a.headers, query = _a.query, rest = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(_a, [\"headers\", \"query\"]);\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, rest), { headers: (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, headers), query: query ? cloneQuery(query) : undefined });\n}\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce(function (carry, paramName) {\n        var _a;\n        var param = query[paramName];\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, carry), (_a = {}, _a[paramName] = Array.isArray(param) ? (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__spread)(param) : param, _a));\n    }, {});\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xvbmVSZXF1ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2Nsb25lUmVxdWVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBRUE7O0dBRUc7QUFDSCxNQUFNLFVBQVUsWUFBWSxDQUFDLEVBQXdDO0lBQXRDLElBQUEsT0FBTyxhQUFBLEVBQUUsS0FBSyxXQUFBLEVBQUssSUFBSSxjQUF6QixvQkFBMkIsQ0FBRjtJQUNwRCw2QkFDSyxJQUFJLEtBQ1AsT0FBTyxlQUFPLE9BQU8sR0FDckIsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLElBQzVDO0FBQ0osQ0FBQztBQUVELFNBQVMsVUFBVSxDQUFDLEtBQXdCO0lBQzFDLE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBQyxLQUF3QixFQUFFLFNBQWlCOztRQUMzRSxJQUFNLEtBQUssR0FBRyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDL0IsNkJBQ0ssS0FBSyxnQkFDUCxTQUFTLElBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLFVBQUssS0FBSyxFQUFFLENBQUMsQ0FBQyxLQUFLLE9BQ3REO0lBQ0osQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQ1QsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBSZXF1ZXN0LCBRdWVyeVBhcmFtZXRlckJhZyB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gY2xvbmVSZXF1ZXN0KHsgaGVhZGVycywgcXVlcnksIC4uLnJlc3QgfTogSHR0cFJlcXVlc3QpOiBIdHRwUmVxdWVzdCB7XG4gIHJldHVybiB7XG4gICAgLi4ucmVzdCxcbiAgICBoZWFkZXJzOiB7IC4uLmhlYWRlcnMgfSxcbiAgICBxdWVyeTogcXVlcnkgPyBjbG9uZVF1ZXJ5KHF1ZXJ5KSA6IHVuZGVmaW5lZCxcbiAgfTtcbn1cblxuZnVuY3Rpb24gY2xvbmVRdWVyeShxdWVyeTogUXVlcnlQYXJhbWV0ZXJCYWcpOiBRdWVyeVBhcmFtZXRlckJhZyB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhxdWVyeSkucmVkdWNlKChjYXJyeTogUXVlcnlQYXJhbWV0ZXJCYWcsIHBhcmFtTmFtZTogc3RyaW5nKSA9PiB7XG4gICAgY29uc3QgcGFyYW0gPSBxdWVyeVtwYXJhbU5hbWVdO1xuICAgIHJldHVybiB7XG4gICAgICAuLi5jYXJyeSxcbiAgICAgIFtwYXJhbU5hbWVdOiBBcnJheS5pc0FycmF5KHBhcmFtKSA/IFsuLi5wYXJhbV0gOiBwYXJhbSxcbiAgICB9O1xuICB9LCB7fSk7XG59XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc2lnbmF0dXJlLXY0L2Rpc3QvZXMvY2xvbmVSZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTJEO0FBQzNEO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsdURBQXVELDZDQUFNO0FBQzdELFdBQVcsK0NBQVEsQ0FBQywrQ0FBUSxHQUFHLFdBQVcsU0FBUywrQ0FBUSxHQUFHLDBEQUEwRDtBQUN4SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSwrQ0FBUSxDQUFDLCtDQUFRLEdBQUcsa0JBQWtCLHlDQUF5QywrQ0FBUTtBQUN0RyxLQUFLLElBQUk7QUFDVDtBQUNBLDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc2lnbmF0dXJlLXY0L2Rpc3QvZXMvY2xvbmVSZXF1ZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fYXNzaWduLCBfX3JlYWQsIF9fcmVzdCwgX19zcHJlYWQgfSBmcm9tIFwidHNsaWJcIjtcbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjbG9uZVJlcXVlc3QoX2EpIHtcbiAgICB2YXIgaGVhZGVycyA9IF9hLmhlYWRlcnMsIHF1ZXJ5ID0gX2EucXVlcnksIHJlc3QgPSBfX3Jlc3QoX2EsIFtcImhlYWRlcnNcIiwgXCJxdWVyeVwiXSk7XG4gICAgcmV0dXJuIF9fYXNzaWduKF9fYXNzaWduKHt9LCByZXN0KSwgeyBoZWFkZXJzOiBfX2Fzc2lnbih7fSwgaGVhZGVycyksIHF1ZXJ5OiBxdWVyeSA/IGNsb25lUXVlcnkocXVlcnkpIDogdW5kZWZpbmVkIH0pO1xufVxuZnVuY3Rpb24gY2xvbmVRdWVyeShxdWVyeSkge1xuICAgIHJldHVybiBPYmplY3Qua2V5cyhxdWVyeSkucmVkdWNlKGZ1bmN0aW9uIChjYXJyeSwgcGFyYW1OYW1lKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgdmFyIHBhcmFtID0gcXVlcnlbcGFyYW1OYW1lXTtcbiAgICAgICAgcmV0dXJuIF9fYXNzaWduKF9fYXNzaWduKHt9LCBjYXJyeSksIChfYSA9IHt9LCBfYVtwYXJhbU5hbWVdID0gQXJyYXkuaXNBcnJheShwYXJhbSkgPyBfX3NwcmVhZChwYXJhbSkgOiBwYXJhbSwgX2EpKTtcbiAgICB9LCB7fSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lZMnh2Ym1WU1pYRjFaWE4wTG1weklpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhNaU9sc2lMaTR2TGk0dmMzSmpMMk5zYjI1bFVtVnhkV1Z6ZEM1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaU8wRkJSVUU3TzBkQlJVYzdRVUZEU0N4TlFVRk5MRlZCUVZVc1dVRkJXU3hEUVVGRExFVkJRWGRETzBsQlFYUkRMRWxCUVVFc1QwRkJUeXhoUVVGQkxFVkJRVVVzUzBGQlN5eFhRVUZCTEVWQlFVc3NTVUZCU1N4alFVRjZRaXh2UWtGQk1rSXNRMEZCUmp0SlFVTndSQ3cyUWtGRFN5eEpRVUZKTEV0QlExQXNUMEZCVHl4bFFVRlBMRTlCUVU4c1IwRkRja0lzUzBGQlN5eEZRVUZGTEV0QlFVc3NRMEZCUXl4RFFVRkRMRU5CUVVNc1ZVRkJWU3hEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4VFFVRlRMRWxCUXpWRE8wRkJRMG9zUTBGQlF6dEJRVVZFTEZOQlFWTXNWVUZCVlN4RFFVRkRMRXRCUVhkQ08wbEJRekZETEU5QlFVOHNUVUZCVFN4RFFVRkRMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eE5RVUZOTEVOQlFVTXNWVUZCUXl4TFFVRjNRaXhGUVVGRkxGTkJRV2xDT3p0UlFVTXpSU3hKUVVGTkxFdEJRVXNzUjBGQlJ5eExRVUZMTEVOQlFVTXNVMEZCVXl4RFFVRkRMRU5CUVVNN1VVRkRMMElzTmtKQlEwc3NTMEZCU3l4blFrRkRVQ3hUUVVGVExFbEJRVWNzUzBGQlN5eERRVUZETEU5QlFVOHNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRExGVkJRVXNzUzBGQlN5eEZRVUZGTEVOQlFVTXNRMEZCUXl4TFFVRkxMRTlCUTNSRU8wbEJRMG9zUTBGQlF5eEZRVUZGTEVWQlFVVXNRMEZCUXl4RFFVRkRPMEZCUTFRc1EwRkJReUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSW1sdGNHOXlkQ0I3SUVoMGRIQlNaWEYxWlhOMExDQlJkV1Z5ZVZCaGNtRnRaWFJsY2tKaFp5QjlJR1p5YjIwZ1hDSkFZWGR6TFhOa2F5OTBlWEJsYzF3aU8xeHVYRzR2S2lwY2JpQXFJRUJwYm5SbGNtNWhiRnh1SUNvdlhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1kyeHZibVZTWlhGMVpYTjBLSHNnYUdWaFpHVnljeXdnY1hWbGNua3NJQzR1TG5KbGMzUWdmVG9nU0hSMGNGSmxjWFZsYzNRcE9pQklkSFJ3VW1WeGRXVnpkQ0I3WEc0Z0lISmxkSFZ5YmlCN1hHNGdJQ0FnTGk0dWNtVnpkQ3hjYmlBZ0lDQm9aV0ZrWlhKek9pQjdJQzR1TG1obFlXUmxjbk1nZlN4Y2JpQWdJQ0J4ZFdWeWVUb2djWFZsY25rZ1B5QmpiRzl1WlZGMVpYSjVLSEYxWlhKNUtTQTZJSFZ1WkdWbWFXNWxaQ3hjYmlBZ2ZUdGNibjFjYmx4dVpuVnVZM1JwYjI0Z1kyeHZibVZSZFdWeWVTaHhkV1Z5ZVRvZ1VYVmxjbmxRWVhKaGJXVjBaWEpDWVdjcE9pQlJkV1Z5ZVZCaGNtRnRaWFJsY2tKaFp5QjdYRzRnSUhKbGRIVnliaUJQWW1wbFkzUXVhMlY1Y3loeGRXVnllU2t1Y21Wa2RXTmxLQ2hqWVhKeWVUb2dVWFZsY25sUVlYSmhiV1YwWlhKQ1lXY3NJSEJoY21GdFRtRnRaVG9nYzNSeWFXNW5LU0E5UGlCN1hHNGdJQ0FnWTI5dWMzUWdjR0Z5WVcwZ1BTQnhkV1Z5ZVZ0d1lYSmhiVTVoYldWZE8xeHVJQ0FnSUhKbGRIVnliaUI3WEc0Z0lDQWdJQ0F1TGk1allYSnllU3hjYmlBZ0lDQWdJRnR3WVhKaGJVNWhiV1ZkT2lCQmNuSmhlUzVwYzBGeWNtRjVLSEJoY21GdEtTQS9JRnN1TGk1d1lYSmhiVjBnT2lCd1lYSmhiU3hjYmlBZ0lDQjlPMXh1SUNCOUxDQjdmU2s3WEc1OVhHNGlYWDA9Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/cloneRequest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/constants.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@aws-sdk/signature-v4/dist/es/constants.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ALGORITHM_IDENTIFIER: () => (/* binding */ ALGORITHM_IDENTIFIER),\n/* harmony export */   ALGORITHM_QUERY_PARAM: () => (/* binding */ ALGORITHM_QUERY_PARAM),\n/* harmony export */   ALWAYS_UNSIGNABLE_HEADERS: () => (/* binding */ ALWAYS_UNSIGNABLE_HEADERS),\n/* harmony export */   AMZ_DATE_HEADER: () => (/* binding */ AMZ_DATE_HEADER),\n/* harmony export */   AMZ_DATE_QUERY_PARAM: () => (/* binding */ AMZ_DATE_QUERY_PARAM),\n/* harmony export */   AUTH_HEADER: () => (/* binding */ AUTH_HEADER),\n/* harmony export */   CREDENTIAL_QUERY_PARAM: () => (/* binding */ CREDENTIAL_QUERY_PARAM),\n/* harmony export */   DATE_HEADER: () => (/* binding */ DATE_HEADER),\n/* harmony export */   EVENT_ALGORITHM_IDENTIFIER: () => (/* binding */ EVENT_ALGORITHM_IDENTIFIER),\n/* harmony export */   EXPIRES_QUERY_PARAM: () => (/* binding */ EXPIRES_QUERY_PARAM),\n/* harmony export */   GENERATED_HEADERS: () => (/* binding */ GENERATED_HEADERS),\n/* harmony export */   HOST_HEADER: () => (/* binding */ HOST_HEADER),\n/* harmony export */   KEY_TYPE_IDENTIFIER: () => (/* binding */ KEY_TYPE_IDENTIFIER),\n/* harmony export */   MAX_CACHE_SIZE: () => (/* binding */ MAX_CACHE_SIZE),\n/* harmony export */   MAX_PRESIGNED_TTL: () => (/* binding */ MAX_PRESIGNED_TTL),\n/* harmony export */   PROXY_HEADER_PATTERN: () => (/* binding */ PROXY_HEADER_PATTERN),\n/* harmony export */   SEC_HEADER_PATTERN: () => (/* binding */ SEC_HEADER_PATTERN),\n/* harmony export */   SHA256_HEADER: () => (/* binding */ SHA256_HEADER),\n/* harmony export */   SIGNATURE_HEADER: () => (/* binding */ SIGNATURE_HEADER),\n/* harmony export */   SIGNATURE_QUERY_PARAM: () => (/* binding */ SIGNATURE_QUERY_PARAM),\n/* harmony export */   SIGNED_HEADERS_QUERY_PARAM: () => (/* binding */ SIGNED_HEADERS_QUERY_PARAM),\n/* harmony export */   TOKEN_HEADER: () => (/* binding */ TOKEN_HEADER),\n/* harmony export */   TOKEN_QUERY_PARAM: () => (/* binding */ TOKEN_QUERY_PARAM),\n/* harmony export */   UNSIGNABLE_PATTERNS: () => (/* binding */ UNSIGNABLE_PATTERNS),\n/* harmony export */   UNSIGNED_PAYLOAD: () => (/* binding */ UNSIGNED_PAYLOAD)\n/* harmony export */ });\nvar ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\nvar CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\nvar AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\nvar SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\nvar EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\nvar SIGNATURE_QUERY_PARAM = \"X-Amz-Signature\";\nvar TOKEN_QUERY_PARAM = \"X-Amz-Security-Token\";\nvar AUTH_HEADER = \"authorization\";\nvar AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\nvar DATE_HEADER = \"date\";\nvar GENERATED_HEADERS = [AUTH_HEADER, AMZ_DATE_HEADER, DATE_HEADER];\nvar SIGNATURE_HEADER = SIGNATURE_QUERY_PARAM.toLowerCase();\nvar SHA256_HEADER = \"x-amz-content-sha256\";\nvar TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\nvar HOST_HEADER = \"host\";\nvar ALWAYS_UNSIGNABLE_HEADERS = {\n    authorization: true,\n    \"cache-control\": true,\n    connection: true,\n    expect: true,\n    from: true,\n    \"keep-alive\": true,\n    \"max-forwards\": true,\n    pragma: true,\n    referer: true,\n    te: true,\n    trailer: true,\n    \"transfer-encoding\": true,\n    upgrade: true,\n    \"user-agent\": true,\n    \"x-amzn-trace-id\": true,\n};\nvar PROXY_HEADER_PATTERN = /^proxy-/;\nvar SEC_HEADER_PATTERN = /^sec-/;\nvar UNSIGNABLE_PATTERNS = [/^proxy-/i, /^sec-/i];\nvar ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";\nvar EVENT_ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256-PAYLOAD\";\nvar UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\nvar MAX_CACHE_SIZE = 50;\nvar KEY_TYPE_IDENTIFIER = \"aws4_request\";\nvar MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUMsSUFBTSxxQkFBcUIsR0FBRyxpQkFBaUIsQ0FBQztBQUN2RCxNQUFNLENBQUMsSUFBTSxzQkFBc0IsR0FBRyxrQkFBa0IsQ0FBQztBQUN6RCxNQUFNLENBQUMsSUFBTSxvQkFBb0IsR0FBRyxZQUFZLENBQUM7QUFDakQsTUFBTSxDQUFDLElBQU0sMEJBQTBCLEdBQUcscUJBQXFCLENBQUM7QUFDaEUsTUFBTSxDQUFDLElBQU0sbUJBQW1CLEdBQUcsZUFBZSxDQUFDO0FBQ25ELE1BQU0sQ0FBQyxJQUFNLHFCQUFxQixHQUFHLGlCQUFpQixDQUFDO0FBQ3ZELE1BQU0sQ0FBQyxJQUFNLGlCQUFpQixHQUFHLHNCQUFzQixDQUFDO0FBRXhELE1BQU0sQ0FBQyxJQUFNLFdBQVcsR0FBRyxlQUFlLENBQUM7QUFDM0MsTUFBTSxDQUFDLElBQU0sZUFBZSxHQUFHLG9CQUFvQixDQUFDLFdBQVcsRUFBRSxDQUFDO0FBQ2xFLE1BQU0sQ0FBQyxJQUFNLFdBQVcsR0FBRyxNQUFNLENBQUM7QUFDbEMsTUFBTSxDQUFDLElBQU0saUJBQWlCLEdBQUcsQ0FBQyxXQUFXLEVBQUUsZUFBZSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0FBQzdFLE1BQU0sQ0FBQyxJQUFNLGdCQUFnQixHQUFHLHFCQUFxQixDQUFDLFdBQVcsRUFBRSxDQUFDO0FBQ3BFLE1BQU0sQ0FBQyxJQUFNLGFBQWEsR0FBRyxzQkFBc0IsQ0FBQztBQUNwRCxNQUFNLENBQUMsSUFBTSxZQUFZLEdBQUcsaUJBQWlCLENBQUMsV0FBVyxFQUFFLENBQUM7QUFDNUQsTUFBTSxDQUFDLElBQU0sV0FBVyxHQUFHLE1BQU0sQ0FBQztBQUVsQyxNQUFNLENBQUMsSUFBTSx5QkFBeUIsR0FBRztJQUN2QyxhQUFhLEVBQUUsSUFBSTtJQUNuQixlQUFlLEVBQUUsSUFBSTtJQUNyQixVQUFVLEVBQUUsSUFBSTtJQUNoQixNQUFNLEVBQUUsSUFBSTtJQUNaLElBQUksRUFBRSxJQUFJO0lBQ1YsWUFBWSxFQUFFLElBQUk7SUFDbEIsY0FBYyxFQUFFLElBQUk7SUFDcEIsTUFBTSxFQUFFLElBQUk7SUFDWixPQUFPLEVBQUUsSUFBSTtJQUNiLEVBQUUsRUFBRSxJQUFJO0lBQ1IsT0FBTyxFQUFFLElBQUk7SUFDYixtQkFBbUIsRUFBRSxJQUFJO0lBQ3pCLE9BQU8sRUFBRSxJQUFJO0lBQ2IsWUFBWSxFQUFFLElBQUk7SUFDbEIsaUJBQWlCLEVBQUUsSUFBSTtDQUN4QixDQUFDO0FBRUYsTUFBTSxDQUFDLElBQU0sb0JBQW9CLEdBQUcsU0FBUyxDQUFDO0FBRTlDLE1BQU0sQ0FBQyxJQUFNLGtCQUFrQixHQUFHLE9BQU8sQ0FBQztBQUUxQyxNQUFNLENBQUMsSUFBTSxtQkFBbUIsR0FBRyxDQUFDLFVBQVUsRUFBRSxRQUFRLENBQUMsQ0FBQztBQUUxRCxNQUFNLENBQUMsSUFBTSxvQkFBb0IsR0FBRyxrQkFBa0IsQ0FBQztBQUV2RCxNQUFNLENBQUMsSUFBTSwwQkFBMEIsR0FBRywwQkFBMEIsQ0FBQztBQUVyRSxNQUFNLENBQUMsSUFBTSxnQkFBZ0IsR0FBRyxrQkFBa0IsQ0FBQztBQUVuRCxNQUFNLENBQUMsSUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDO0FBQ2pDLE1BQU0sQ0FBQyxJQUFNLG1CQUFtQixHQUFHLGNBQWMsQ0FBQztBQUVsRCxNQUFNLENBQUMsSUFBTSxpQkFBaUIsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgQUxHT1JJVEhNX1FVRVJZX1BBUkFNID0gXCJYLUFtei1BbGdvcml0aG1cIjtcbmV4cG9ydCBjb25zdCBDUkVERU5USUFMX1FVRVJZX1BBUkFNID0gXCJYLUFtei1DcmVkZW50aWFsXCI7XG5leHBvcnQgY29uc3QgQU1aX0RBVEVfUVVFUllfUEFSQU0gPSBcIlgtQW16LURhdGVcIjtcbmV4cG9ydCBjb25zdCBTSUdORURfSEVBREVSU19RVUVSWV9QQVJBTSA9IFwiWC1BbXotU2lnbmVkSGVhZGVyc1wiO1xuZXhwb3J0IGNvbnN0IEVYUElSRVNfUVVFUllfUEFSQU0gPSBcIlgtQW16LUV4cGlyZXNcIjtcbmV4cG9ydCBjb25zdCBTSUdOQVRVUkVfUVVFUllfUEFSQU0gPSBcIlgtQW16LVNpZ25hdHVyZVwiO1xuZXhwb3J0IGNvbnN0IFRPS0VOX1FVRVJZX1BBUkFNID0gXCJYLUFtei1TZWN1cml0eS1Ub2tlblwiO1xuXG5leHBvcnQgY29uc3QgQVVUSF9IRUFERVIgPSBcImF1dGhvcml6YXRpb25cIjtcbmV4cG9ydCBjb25zdCBBTVpfREFURV9IRUFERVIgPSBBTVpfREFURV9RVUVSWV9QQVJBTS50b0xvd2VyQ2FzZSgpO1xuZXhwb3J0IGNvbnN0IERBVEVfSEVBREVSID0gXCJkYXRlXCI7XG5leHBvcnQgY29uc3QgR0VORVJBVEVEX0hFQURFUlMgPSBbQVVUSF9IRUFERVIsIEFNWl9EQVRFX0hFQURFUiwgREFURV9IRUFERVJdO1xuZXhwb3J0IGNvbnN0IFNJR05BVFVSRV9IRUFERVIgPSBTSUdOQVRVUkVfUVVFUllfUEFSQU0udG9Mb3dlckNhc2UoKTtcbmV4cG9ydCBjb25zdCBTSEEyNTZfSEVBREVSID0gXCJ4LWFtei1jb250ZW50LXNoYTI1NlwiO1xuZXhwb3J0IGNvbnN0IFRPS0VOX0hFQURFUiA9IFRPS0VOX1FVRVJZX1BBUkFNLnRvTG93ZXJDYXNlKCk7XG5leHBvcnQgY29uc3QgSE9TVF9IRUFERVIgPSBcImhvc3RcIjtcblxuZXhwb3J0IGNvbnN0IEFMV0FZU19VTlNJR05BQkxFX0hFQURFUlMgPSB7XG4gIGF1dGhvcml6YXRpb246IHRydWUsXG4gIFwiY2FjaGUtY29udHJvbFwiOiB0cnVlLFxuICBjb25uZWN0aW9uOiB0cnVlLFxuICBleHBlY3Q6IHRydWUsXG4gIGZyb206IHRydWUsXG4gIFwia2VlcC1hbGl2ZVwiOiB0cnVlLFxuICBcIm1heC1mb3J3YXJkc1wiOiB0cnVlLFxuICBwcmFnbWE6IHRydWUsXG4gIHJlZmVyZXI6IHRydWUsXG4gIHRlOiB0cnVlLFxuICB0cmFpbGVyOiB0cnVlLFxuICBcInRyYW5zZmVyLWVuY29kaW5nXCI6IHRydWUsXG4gIHVwZ3JhZGU6IHRydWUsXG4gIFwidXNlci1hZ2VudFwiOiB0cnVlLFxuICBcIngtYW16bi10cmFjZS1pZFwiOiB0cnVlLFxufTtcblxuZXhwb3J0IGNvbnN0IFBST1hZX0hFQURFUl9QQVRURVJOID0gL15wcm94eS0vO1xuXG5leHBvcnQgY29uc3QgU0VDX0hFQURFUl9QQVRURVJOID0gL15zZWMtLztcblxuZXhwb3J0IGNvbnN0IFVOU0lHTkFCTEVfUEFUVEVSTlMgPSBbL15wcm94eS0vaSwgL15zZWMtL2ldO1xuXG5leHBvcnQgY29uc3QgQUxHT1JJVEhNX0lERU5USUZJRVIgPSBcIkFXUzQtSE1BQy1TSEEyNTZcIjtcblxuZXhwb3J0IGNvbnN0IEVWRU5UX0FMR09SSVRITV9JREVOVElGSUVSID0gXCJBV1M0LUhNQUMtU0hBMjU2LVBBWUxPQURcIjtcblxuZXhwb3J0IGNvbnN0IFVOU0lHTkVEX1BBWUxPQUQgPSBcIlVOU0lHTkVELVBBWUxPQURcIjtcblxuZXhwb3J0IGNvbnN0IE1BWF9DQUNIRV9TSVpFID0gNTA7XG5leHBvcnQgY29uc3QgS0VZX1RZUEVfSURFTlRJRklFUiA9IFwiYXdzNF9yZXF1ZXN0XCI7XG5cbmV4cG9ydCBjb25zdCBNQVhfUFJFU0lHTkVEX1RUTCA9IDYwICogNjAgKiAyNCAqIDc7XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/credentialDerivation.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@aws-sdk/signature-v4/dist/es/credentialDerivation.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearCredentialCache: () => (/* binding */ clearCredentialCache),\n/* harmony export */   createScope: () => (/* binding */ createScope),\n/* harmony export */   getSigningKey: () => (/* binding */ getSigningKey)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/util-hex-encoding */ \"(ssr)/./node_modules/@aws-sdk/util-hex-encoding/dist/es/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/constants.js\");\n\n\n\nvar signingKeyCache = {};\nvar cacheQueue = [];\n/**\n * Create a string describing the scope of credentials used to sign a request.\n *\n * @param shortDate The current calendar date in the form YYYYMMDD.\n * @param region    The AWS region in which the service resides.\n * @param service   The service to which the signed request is being sent.\n */\nfunction createScope(shortDate, region, service) {\n    return shortDate + \"/\" + region + \"/\" + service + \"/\" + _constants__WEBPACK_IMPORTED_MODULE_1__.KEY_TYPE_IDENTIFIER;\n}\n/**\n * Derive a signing key from its composite parts\n *\n * @param sha256Constructor A constructor function that can instantiate SHA-256\n *                          hash objects.\n * @param credentials       The credentials with which the request will be\n *                          signed.\n * @param shortDate         The current calendar date in the form YYYYMMDD.\n * @param region            The AWS region in which the service resides.\n * @param service           The service to which the signed request is being\n *                          sent.\n */\nvar getSigningKey = function (sha256Constructor, credentials, shortDate, region, service) { return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(void 0, void 0, void 0, function () {\n    var credsHash, cacheKey, key, _a, _b, signable, e_1_1;\n    var e_1, _c;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__generator)(this, function (_d) {\n        switch (_d.label) {\n            case 0: return [4 /*yield*/, hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId)];\n            case 1:\n                credsHash = _d.sent();\n                cacheKey = shortDate + \":\" + region + \":\" + service + \":\" + (0,_aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_0__.toHex)(credsHash) + \":\" + credentials.sessionToken;\n                if (cacheKey in signingKeyCache) {\n                    return [2 /*return*/, signingKeyCache[cacheKey]];\n                }\n                cacheQueue.push(cacheKey);\n                while (cacheQueue.length > _constants__WEBPACK_IMPORTED_MODULE_1__.MAX_CACHE_SIZE) {\n                    delete signingKeyCache[cacheQueue.shift()];\n                }\n                key = \"AWS4\" + credentials.secretAccessKey;\n                _d.label = 2;\n            case 2:\n                _d.trys.push([2, 7, 8, 9]);\n                _a = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__values)([shortDate, region, service, _constants__WEBPACK_IMPORTED_MODULE_1__.KEY_TYPE_IDENTIFIER]), _b = _a.next();\n                _d.label = 3;\n            case 3:\n                if (!!_b.done) return [3 /*break*/, 6];\n                signable = _b.value;\n                return [4 /*yield*/, hmac(sha256Constructor, key, signable)];\n            case 4:\n                key = _d.sent();\n                _d.label = 5;\n            case 5:\n                _b = _a.next();\n                return [3 /*break*/, 3];\n            case 6: return [3 /*break*/, 9];\n            case 7:\n                e_1_1 = _d.sent();\n                e_1 = { error: e_1_1 };\n                return [3 /*break*/, 9];\n            case 8:\n                try {\n                    if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                }\n                finally { if (e_1) throw e_1.error; }\n                return [7 /*endfinally*/];\n            case 9: return [2 /*return*/, (signingKeyCache[cacheKey] = key)];\n        }\n    });\n}); };\n/**\n * @internal\n */\nfunction clearCredentialCache() {\n    cacheQueue.length = 0;\n    Object.keys(signingKeyCache).forEach(function (cacheKey) {\n        delete signingKeyCache[cacheKey];\n    });\n}\nfunction hmac(ctor, secret, data) {\n    var hash = new ctor(secret);\n    hash.update(data);\n    return hash.digest();\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlZGVudGlhbERlcml2YXRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY3JlZGVudGlhbERlcml2YXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUVuRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsY0FBYyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRWxFLElBQU0sZUFBZSxHQUFrQyxFQUFFLENBQUM7QUFDMUQsSUFBTSxVQUFVLEdBQWtCLEVBQUUsQ0FBQztBQUVyQzs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsV0FBVyxDQUFDLFNBQWlCLEVBQUUsTUFBYyxFQUFFLE9BQWU7SUFDNUUsT0FBVSxTQUFTLFNBQUksTUFBTSxTQUFJLE9BQU8sU0FBSSxtQkFBcUIsQ0FBQztBQUNwRSxDQUFDO0FBRUQ7Ozs7Ozs7Ozs7O0dBV0c7QUFDSCxNQUFNLENBQUMsSUFBTSxhQUFhLEdBQUcsVUFDM0IsaUJBQWtDLEVBQ2xDLFdBQXdCLEVBQ3hCLFNBQWlCLEVBQ2pCLE1BQWMsRUFDZCxPQUFlOzs7OztvQkFFRyxxQkFBTSxJQUFJLENBQUMsaUJBQWlCLEVBQUUsV0FBVyxDQUFDLGVBQWUsRUFBRSxXQUFXLENBQUMsV0FBVyxDQUFDLEVBQUE7O2dCQUEvRixTQUFTLEdBQUcsU0FBbUY7Z0JBQy9GLFFBQVEsR0FBTSxTQUFTLFNBQUksTUFBTSxTQUFJLE9BQU8sU0FBSSxLQUFLLENBQUMsU0FBUyxDQUFDLFNBQUksV0FBVyxDQUFDLFlBQWMsQ0FBQztnQkFDckcsSUFBSSxRQUFRLElBQUksZUFBZSxFQUFFO29CQUMvQixzQkFBTyxlQUFlLENBQUMsUUFBUSxDQUFDLEVBQUM7aUJBQ2xDO2dCQUVELFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQzFCLE9BQU8sVUFBVSxDQUFDLE1BQU0sR0FBRyxjQUFjLEVBQUU7b0JBQ3pDLE9BQU8sZUFBZSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQVksQ0FBQyxDQUFDO2lCQUN0RDtnQkFFRyxHQUFHLEdBQWUsU0FBTyxXQUFXLENBQUMsZUFBaUIsQ0FBQzs7OztnQkFDcEMsS0FBQSxTQUFBLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsbUJBQW1CLENBQUMsQ0FBQTs7OztnQkFBN0QsUUFBUTtnQkFDWCxxQkFBTSxJQUFJLENBQUMsaUJBQWlCLEVBQUUsR0FBRyxFQUFFLFFBQVEsQ0FBQyxFQUFBOztnQkFBbEQsR0FBRyxHQUFHLFNBQTRDLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBRXJELHNCQUFPLENBQUMsZUFBZSxDQUFDLFFBQVEsQ0FBQyxHQUFHLEdBQWlCLENBQUMsRUFBQzs7O0tBQ3hELENBQUM7QUFFRjs7R0FFRztBQUNILE1BQU0sVUFBVSxvQkFBb0I7SUFDbEMsVUFBVSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDdEIsTUFBTSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQyxRQUFRO1FBQzVDLE9BQU8sZUFBZSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ25DLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQUVELFNBQVMsSUFBSSxDQUFDLElBQXFCLEVBQUUsTUFBa0IsRUFBRSxJQUFnQjtJQUN2RSxJQUFNLElBQUksR0FBRyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM5QixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2xCLE9BQU8sSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQ3ZCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDcmVkZW50aWFscywgSGFzaENvbnN0cnVjdG9yLCBTb3VyY2VEYXRhIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5pbXBvcnQgeyB0b0hleCB9IGZyb20gXCJAYXdzLXNkay91dGlsLWhleC1lbmNvZGluZ1wiO1xuXG5pbXBvcnQgeyBLRVlfVFlQRV9JREVOVElGSUVSLCBNQVhfQ0FDSEVfU0laRSB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuXG5jb25zdCBzaWduaW5nS2V5Q2FjaGU6IHsgW2tleTogc3RyaW5nXTogVWludDhBcnJheSB9ID0ge307XG5jb25zdCBjYWNoZVF1ZXVlOiBBcnJheTxzdHJpbmc+ID0gW107XG5cbi8qKlxuICogQ3JlYXRlIGEgc3RyaW5nIGRlc2NyaWJpbmcgdGhlIHNjb3BlIG9mIGNyZWRlbnRpYWxzIHVzZWQgdG8gc2lnbiBhIHJlcXVlc3QuXG4gKlxuICogQHBhcmFtIHNob3J0RGF0ZSBUaGUgY3VycmVudCBjYWxlbmRhciBkYXRlIGluIHRoZSBmb3JtIFlZWVlNTURELlxuICogQHBhcmFtIHJlZ2lvbiAgICBUaGUgQVdTIHJlZ2lvbiBpbiB3aGljaCB0aGUgc2VydmljZSByZXNpZGVzLlxuICogQHBhcmFtIHNlcnZpY2UgICBUaGUgc2VydmljZSB0byB3aGljaCB0aGUgc2lnbmVkIHJlcXVlc3QgaXMgYmVpbmcgc2VudC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNjb3BlKHNob3J0RGF0ZTogc3RyaW5nLCByZWdpb246IHN0cmluZywgc2VydmljZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgcmV0dXJuIGAke3Nob3J0RGF0ZX0vJHtyZWdpb259LyR7c2VydmljZX0vJHtLRVlfVFlQRV9JREVOVElGSUVSfWA7XG59XG5cbi8qKlxuICogRGVyaXZlIGEgc2lnbmluZyBrZXkgZnJvbSBpdHMgY29tcG9zaXRlIHBhcnRzXG4gKlxuICogQHBhcmFtIHNoYTI1NkNvbnN0cnVjdG9yIEEgY29uc3RydWN0b3IgZnVuY3Rpb24gdGhhdCBjYW4gaW5zdGFudGlhdGUgU0hBLTI1NlxuICogICAgICAgICAgICAgICAgICAgICAgICAgIGhhc2ggb2JqZWN0cy5cbiAqIEBwYXJhbSBjcmVkZW50aWFscyAgICAgICBUaGUgY3JlZGVudGlhbHMgd2l0aCB3aGljaCB0aGUgcmVxdWVzdCB3aWxsIGJlXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgc2lnbmVkLlxuICogQHBhcmFtIHNob3J0RGF0ZSAgICAgICAgIFRoZSBjdXJyZW50IGNhbGVuZGFyIGRhdGUgaW4gdGhlIGZvcm0gWVlZWU1NREQuXG4gKiBAcGFyYW0gcmVnaW9uICAgICAgICAgICAgVGhlIEFXUyByZWdpb24gaW4gd2hpY2ggdGhlIHNlcnZpY2UgcmVzaWRlcy5cbiAqIEBwYXJhbSBzZXJ2aWNlICAgICAgICAgICBUaGUgc2VydmljZSB0byB3aGljaCB0aGUgc2lnbmVkIHJlcXVlc3QgaXMgYmVpbmdcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICBzZW50LlxuICovXG5leHBvcnQgY29uc3QgZ2V0U2lnbmluZ0tleSA9IGFzeW5jIChcbiAgc2hhMjU2Q29uc3RydWN0b3I6IEhhc2hDb25zdHJ1Y3RvcixcbiAgY3JlZGVudGlhbHM6IENyZWRlbnRpYWxzLFxuICBzaG9ydERhdGU6IHN0cmluZyxcbiAgcmVnaW9uOiBzdHJpbmcsXG4gIHNlcnZpY2U6IHN0cmluZ1xuKTogUHJvbWlzZTxVaW50OEFycmF5PiA9PiB7XG4gIGNvbnN0IGNyZWRzSGFzaCA9IGF3YWl0IGhtYWMoc2hhMjU2Q29uc3RydWN0b3IsIGNyZWRlbnRpYWxzLnNlY3JldEFjY2Vzc0tleSwgY3JlZGVudGlhbHMuYWNjZXNzS2V5SWQpO1xuICBjb25zdCBjYWNoZUtleSA9IGAke3Nob3J0RGF0ZX06JHtyZWdpb259OiR7c2VydmljZX06JHt0b0hleChjcmVkc0hhc2gpfToke2NyZWRlbnRpYWxzLnNlc3Npb25Ub2tlbn1gO1xuICBpZiAoY2FjaGVLZXkgaW4gc2lnbmluZ0tleUNhY2hlKSB7XG4gICAgcmV0dXJuIHNpZ25pbmdLZXlDYWNoZVtjYWNoZUtleV07XG4gIH1cblxuICBjYWNoZVF1ZXVlLnB1c2goY2FjaGVLZXkpO1xuICB3aGlsZSAoY2FjaGVRdWV1ZS5sZW5ndGggPiBNQVhfQ0FDSEVfU0laRSkge1xuICAgIGRlbGV0ZSBzaWduaW5nS2V5Q2FjaGVbY2FjaGVRdWV1ZS5zaGlmdCgpIGFzIHN0cmluZ107XG4gIH1cblxuICBsZXQga2V5OiBTb3VyY2VEYXRhID0gYEFXUzQke2NyZWRlbnRpYWxzLnNlY3JldEFjY2Vzc0tleX1gO1xuICBmb3IgKGNvbnN0IHNpZ25hYmxlIG9mIFtzaG9ydERhdGUsIHJlZ2lvbiwgc2VydmljZSwgS0VZX1RZUEVfSURFTlRJRklFUl0pIHtcbiAgICBrZXkgPSBhd2FpdCBobWFjKHNoYTI1NkNvbnN0cnVjdG9yLCBrZXksIHNpZ25hYmxlKTtcbiAgfVxuICByZXR1cm4gKHNpZ25pbmdLZXlDYWNoZVtjYWNoZUtleV0gPSBrZXkgYXMgVWludDhBcnJheSk7XG59O1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gY2xlYXJDcmVkZW50aWFsQ2FjaGUoKTogdm9pZCB7XG4gIGNhY2hlUXVldWUubGVuZ3RoID0gMDtcbiAgT2JqZWN0LmtleXMoc2lnbmluZ0tleUNhY2hlKS5mb3JFYWNoKChjYWNoZUtleSkgPT4ge1xuICAgIGRlbGV0ZSBzaWduaW5nS2V5Q2FjaGVbY2FjaGVLZXldO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gaG1hYyhjdG9yOiBIYXNoQ29uc3RydWN0b3IsIHNlY3JldDogU291cmNlRGF0YSwgZGF0YTogU291cmNlRGF0YSk6IFByb21pc2U8VWludDhBcnJheT4ge1xuICBjb25zdCBoYXNoID0gbmV3IGN0b3Ioc2VjcmV0KTtcbiAgaGFzaC51cGRhdGUoZGF0YSk7XG4gIHJldHVybiBoYXNoLmRpZ2VzdCgpO1xufVxuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/credentialDerivation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/getCanonicalHeaders.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@aws-sdk/signature-v4/dist/es/getCanonicalHeaders.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCanonicalHeaders: () => (/* binding */ getCanonicalHeaders)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/constants.js\");\n\n\n/**\n * @internal\n */\nfunction getCanonicalHeaders(_a, unsignableHeaders, signableHeaders) {\n    var e_1, _b;\n    var headers = _a.headers;\n    var canonical = {};\n    try {\n        for (var _c = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__values)(Object.keys(headers).sort()), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var headerName = _d.value;\n            var canonicalHeaderName = headerName.toLowerCase();\n            if (canonicalHeaderName in _constants__WEBPACK_IMPORTED_MODULE_0__.ALWAYS_UNSIGNABLE_HEADERS || (unsignableHeaders === null || unsignableHeaders === void 0 ? void 0 : unsignableHeaders.has(canonicalHeaderName)) ||\n                _constants__WEBPACK_IMPORTED_MODULE_0__.PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\n                _constants__WEBPACK_IMPORTED_MODULE_0__.SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n                if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\n                    continue;\n                }\n            }\n            canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return canonical;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0Q2Fub25pY2FsSGVhZGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9nZXRDYW5vbmljYWxIZWFkZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFFQSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsb0JBQW9CLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFFbEc7O0dBRUc7QUFDSCxNQUFNLFVBQVUsbUJBQW1CLENBQ2pDLEVBQXdCLEVBQ3hCLGlCQUErQixFQUMvQixlQUE2Qjs7UUFGM0IsT0FBTyxhQUFBO0lBSVQsSUFBTSxTQUFTLEdBQWMsRUFBRSxDQUFDOztRQUNoQyxLQUF5QixJQUFBLEtBQUEsU0FBQSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFBLGdCQUFBLDRCQUFFO1lBQWpELElBQU0sVUFBVSxXQUFBO1lBQ25CLElBQU0sbUJBQW1CLEdBQUcsVUFBVSxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBQ3JELElBQ0UsbUJBQW1CLElBQUkseUJBQXlCLEtBQ2hELGlCQUFpQixhQUFqQixpQkFBaUIsdUJBQWpCLGlCQUFpQixDQUFFLEdBQUcsQ0FBQyxtQkFBbUIsRUFBQztnQkFDM0Msb0JBQW9CLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDO2dCQUM5QyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsRUFDNUM7Z0JBQ0EsSUFBSSxDQUFDLGVBQWUsSUFBSSxDQUFDLGVBQWUsSUFBSSxDQUFDLGVBQWUsQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxFQUFFO29CQUN0RixTQUFTO2lCQUNWO2FBQ0Y7WUFFRCxTQUFTLENBQUMsbUJBQW1CLENBQUMsR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQztTQUNsRjs7Ozs7Ozs7O0lBRUQsT0FBTyxTQUFTLENBQUM7QUFDbkIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEhlYWRlckJhZywgSHR0cFJlcXVlc3QgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuaW1wb3J0IHsgQUxXQVlTX1VOU0lHTkFCTEVfSEVBREVSUywgUFJPWFlfSEVBREVSX1BBVFRFUk4sIFNFQ19IRUFERVJfUEFUVEVSTiB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2Fub25pY2FsSGVhZGVycyhcbiAgeyBoZWFkZXJzIH06IEh0dHBSZXF1ZXN0LFxuICB1bnNpZ25hYmxlSGVhZGVycz86IFNldDxzdHJpbmc+LFxuICBzaWduYWJsZUhlYWRlcnM/OiBTZXQ8c3RyaW5nPlxuKTogSGVhZGVyQmFnIHtcbiAgY29uc3QgY2Fub25pY2FsOiBIZWFkZXJCYWcgPSB7fTtcbiAgZm9yIChjb25zdCBoZWFkZXJOYW1lIG9mIE9iamVjdC5rZXlzKGhlYWRlcnMpLnNvcnQoKSkge1xuICAgIGNvbnN0IGNhbm9uaWNhbEhlYWRlck5hbWUgPSBoZWFkZXJOYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgaWYgKFxuICAgICAgY2Fub25pY2FsSGVhZGVyTmFtZSBpbiBBTFdBWVNfVU5TSUdOQUJMRV9IRUFERVJTIHx8XG4gICAgICB1bnNpZ25hYmxlSGVhZGVycz8uaGFzKGNhbm9uaWNhbEhlYWRlck5hbWUpIHx8XG4gICAgICBQUk9YWV9IRUFERVJfUEFUVEVSTi50ZXN0KGNhbm9uaWNhbEhlYWRlck5hbWUpIHx8XG4gICAgICBTRUNfSEVBREVSX1BBVFRFUk4udGVzdChjYW5vbmljYWxIZWFkZXJOYW1lKVxuICAgICkge1xuICAgICAgaWYgKCFzaWduYWJsZUhlYWRlcnMgfHwgKHNpZ25hYmxlSGVhZGVycyAmJiAhc2lnbmFibGVIZWFkZXJzLmhhcyhjYW5vbmljYWxIZWFkZXJOYW1lKSkpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgY2Fub25pY2FsW2Nhbm9uaWNhbEhlYWRlck5hbWVdID0gaGVhZGVyc1toZWFkZXJOYW1lXS50cmltKCkucmVwbGFjZSgvXFxzKy9nLCBcIiBcIik7XG4gIH1cblxuICByZXR1cm4gY2Fub25pY2FsO1xufVxuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc2lnbmF0dXJlLXY0L2Rpc3QvZXMvZ2V0Q2Fub25pY2FsSGVhZGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBaUM7QUFDaUU7QUFDbEc7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwrQ0FBUSwrQ0FBK0MsVUFBVTtBQUN2RjtBQUNBO0FBQ0EsdUNBQXVDLGlFQUF5QjtBQUNoRSxnQkFBZ0IsNERBQW9CO0FBQ3BDLGdCQUFnQiwwREFBa0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsUUFBUTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL3NpZ25hdHVyZS12NC9kaXN0L2VzL2dldENhbm9uaWNhbEhlYWRlcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX192YWx1ZXMgfSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IEFMV0FZU19VTlNJR05BQkxFX0hFQURFUlMsIFBST1hZX0hFQURFUl9QQVRURVJOLCBTRUNfSEVBREVSX1BBVFRFUk4gfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRDYW5vbmljYWxIZWFkZXJzKF9hLCB1bnNpZ25hYmxlSGVhZGVycywgc2lnbmFibGVIZWFkZXJzKSB7XG4gICAgdmFyIGVfMSwgX2I7XG4gICAgdmFyIGhlYWRlcnMgPSBfYS5oZWFkZXJzO1xuICAgIHZhciBjYW5vbmljYWwgPSB7fTtcbiAgICB0cnkge1xuICAgICAgICBmb3IgKHZhciBfYyA9IF9fdmFsdWVzKE9iamVjdC5rZXlzKGhlYWRlcnMpLnNvcnQoKSksIF9kID0gX2MubmV4dCgpOyAhX2QuZG9uZTsgX2QgPSBfYy5uZXh0KCkpIHtcbiAgICAgICAgICAgIHZhciBoZWFkZXJOYW1lID0gX2QudmFsdWU7XG4gICAgICAgICAgICB2YXIgY2Fub25pY2FsSGVhZGVyTmFtZSA9IGhlYWRlck5hbWUudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgIGlmIChjYW5vbmljYWxIZWFkZXJOYW1lIGluIEFMV0FZU19VTlNJR05BQkxFX0hFQURFUlMgfHwgKHVuc2lnbmFibGVIZWFkZXJzID09PSBudWxsIHx8IHVuc2lnbmFibGVIZWFkZXJzID09PSB2b2lkIDAgPyB2b2lkIDAgOiB1bnNpZ25hYmxlSGVhZGVycy5oYXMoY2Fub25pY2FsSGVhZGVyTmFtZSkpIHx8XG4gICAgICAgICAgICAgICAgUFJPWFlfSEVBREVSX1BBVFRFUk4udGVzdChjYW5vbmljYWxIZWFkZXJOYW1lKSB8fFxuICAgICAgICAgICAgICAgIFNFQ19IRUFERVJfUEFUVEVSTi50ZXN0KGNhbm9uaWNhbEhlYWRlck5hbWUpKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFzaWduYWJsZUhlYWRlcnMgfHwgKHNpZ25hYmxlSGVhZGVycyAmJiAhc2lnbmFibGVIZWFkZXJzLmhhcyhjYW5vbmljYWxIZWFkZXJOYW1lKSkpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2Fub25pY2FsW2Nhbm9uaWNhbEhlYWRlck5hbWVdID0gaGVhZGVyc1toZWFkZXJOYW1lXS50cmltKCkucmVwbGFjZSgvXFxzKy9nLCBcIiBcIik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2F0Y2ggKGVfMV8xKSB7IGVfMSA9IHsgZXJyb3I6IGVfMV8xIH07IH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChfZCAmJiAhX2QuZG9uZSAmJiAoX2IgPSBfYy5yZXR1cm4pKSBfYi5jYWxsKF9jKTtcbiAgICAgICAgfVxuICAgICAgICBmaW5hbGx5IHsgaWYgKGVfMSkgdGhyb3cgZV8xLmVycm9yOyB9XG4gICAgfVxuICAgIHJldHVybiBjYW5vbmljYWw7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2laMlYwUTJGdWIyNXBZMkZzU0dWaFpHVnljeTVxY3lJc0luTnZkWEpqWlZKdmIzUWlPaUlpTENKemIzVnlZMlZ6SWpwYklpNHVMeTR1TDNOeVl5OW5aWFJEWVc1dmJtbGpZV3hJWldGa1pYSnpMblJ6SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUk3UVVGRlFTeFBRVUZQTEVWQlFVVXNlVUpCUVhsQ0xFVkJRVVVzYjBKQlFXOUNMRVZCUVVVc2EwSkJRV3RDTEVWQlFVVXNUVUZCVFN4aFFVRmhMRU5CUVVNN1FVRkZiRWM3TzBkQlJVYzdRVUZEU0N4TlFVRk5MRlZCUVZVc2JVSkJRVzFDTEVOQlEycERMRVZCUVhkQ0xFVkJRM2hDTEdsQ1FVRXJRaXhGUVVNdlFpeGxRVUUyUWpzN1VVRkdNMElzVDBGQlR5eGhRVUZCTzBsQlNWUXNTVUZCVFN4VFFVRlRMRWRCUVdNc1JVRkJSU3hEUVVGRE96dFJRVU5vUXl4TFFVRjVRaXhKUVVGQkxFdEJRVUVzVTBGQlFTeE5RVUZOTEVOQlFVTXNTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRExFbEJRVWtzUlVGQlJTeERRVUZCTEdkQ1FVRkJMRFJDUVVGRk8xbEJRV3BFTEVsQlFVMHNWVUZCVlN4WFFVRkJPMWxCUTI1Q0xFbEJRVTBzYlVKQlFXMUNMRWRCUVVjc1ZVRkJWU3hEUVVGRExGZEJRVmNzUlVGQlJTeERRVUZETzFsQlEzSkVMRWxCUTBVc2JVSkJRVzFDTEVsQlFVa3NlVUpCUVhsQ0xFdEJRMmhFTEdsQ1FVRnBRaXhoUVVGcVFpeHBRa0ZCYVVJc2RVSkJRV3BDTEdsQ1FVRnBRaXhEUVVGRkxFZEJRVWNzUTBGQlF5eHRRa0ZCYlVJc1JVRkJRenRuUWtGRE0wTXNiMEpCUVc5Q0xFTkJRVU1zU1VGQlNTeERRVUZETEcxQ1FVRnRRaXhEUVVGRE8yZENRVU01UXl4clFrRkJhMElzUTBGQlF5eEpRVUZKTEVOQlFVTXNiVUpCUVcxQ0xFTkJRVU1zUlVGRE5VTTdaMEpCUTBFc1NVRkJTU3hEUVVGRExHVkJRV1VzU1VGQlNTeERRVUZETEdWQlFXVXNTVUZCU1N4RFFVRkRMR1ZCUVdVc1EwRkJReXhIUVVGSExFTkJRVU1zYlVKQlFXMUNMRU5CUVVNc1EwRkJReXhGUVVGRk8yOUNRVU4wUml4VFFVRlRPMmxDUVVOV08yRkJRMFk3V1VGRlJDeFRRVUZUTEVOQlFVTXNiVUpCUVcxQ0xFTkJRVU1zUjBGQlJ5eFBRVUZQTEVOQlFVTXNWVUZCVlN4RFFVRkRMRU5CUVVNc1NVRkJTU3hGUVVGRkxFTkJRVU1zVDBGQlR5eERRVUZETEUxQlFVMHNSVUZCUlN4SFFVRkhMRU5CUVVNc1EwRkJRenRUUVVOc1JqczdPenM3T3pzN08wbEJSVVFzVDBGQlR5eFRRVUZUTEVOQlFVTTdRVUZEYmtJc1EwRkJReUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSW1sdGNHOXlkQ0I3SUVobFlXUmxja0poWnl3Z1NIUjBjRkpsY1hWbGMzUWdmU0JtY205dElGd2lRR0YzY3kxelpHc3ZkSGx3WlhOY0lqdGNibHh1YVcxd2IzSjBJSHNnUVV4WFFWbFRYMVZPVTBsSFRrRkNURVZmU0VWQlJFVlNVeXdnVUZKUFdGbGZTRVZCUkVWU1gxQkJWRlJGVWs0c0lGTkZRMTlJUlVGRVJWSmZVRUZVVkVWU1RpQjlJR1p5YjIwZ1hDSXVMMk52Ym5OMFlXNTBjMXdpTzF4dVhHNHZLaXBjYmlBcUlFQnBiblJsY201aGJGeHVJQ292WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnWjJWMFEyRnViMjVwWTJGc1NHVmhaR1Z5Y3loY2JpQWdleUJvWldGa1pYSnpJSDA2SUVoMGRIQlNaWEYxWlhOMExGeHVJQ0IxYm5OcFoyNWhZbXhsU0dWaFpHVnljejg2SUZObGREeHpkSEpwYm1jK0xGeHVJQ0J6YVdkdVlXSnNaVWhsWVdSbGNuTS9PaUJUWlhROGMzUnlhVzVuUGx4dUtUb2dTR1ZoWkdWeVFtRm5JSHRjYmlBZ1kyOXVjM1FnWTJGdWIyNXBZMkZzT2lCSVpXRmtaWEpDWVdjZ1BTQjdmVHRjYmlBZ1ptOXlJQ2hqYjI1emRDQm9aV0ZrWlhKT1lXMWxJRzltSUU5aWFtVmpkQzVyWlhsektHaGxZV1JsY25NcExuTnZjblFvS1NrZ2UxeHVJQ0FnSUdOdmJuTjBJR05oYm05dWFXTmhiRWhsWVdSbGNrNWhiV1VnUFNCb1pXRmtaWEpPWVcxbExuUnZURzkzWlhKRFlYTmxLQ2s3WEc0Z0lDQWdhV1lnS0Z4dUlDQWdJQ0FnWTJGdWIyNXBZMkZzU0dWaFpHVnlUbUZ0WlNCcGJpQkJURmRCV1ZOZlZVNVRTVWRPUVVKTVJWOUlSVUZFUlZKVElIeDhYRzRnSUNBZ0lDQjFibk5wWjI1aFlteGxTR1ZoWkdWeWN6OHVhR0Z6S0dOaGJtOXVhV05oYkVobFlXUmxjazVoYldVcElIeDhYRzRnSUNBZ0lDQlFVazlZV1Y5SVJVRkVSVkpmVUVGVVZFVlNUaTUwWlhOMEtHTmhibTl1YVdOaGJFaGxZV1JsY2s1aGJXVXBJSHg4WEc0Z0lDQWdJQ0JUUlVOZlNFVkJSRVZTWDFCQlZGUkZVazR1ZEdWemRDaGpZVzV2Ym1sallXeElaV0ZrWlhKT1lXMWxLVnh1SUNBZ0lDa2dlMXh1SUNBZ0lDQWdhV1lnS0NGemFXZHVZV0pzWlVobFlXUmxjbk1nZkh3Z0tITnBaMjVoWW14bFNHVmhaR1Z5Y3lBbUppQWhjMmxuYm1GaWJHVklaV0ZrWlhKekxtaGhjeWhqWVc1dmJtbGpZV3hJWldGa1pYSk9ZVzFsS1NrcElIdGNiaUFnSUNBZ0lDQWdZMjl1ZEdsdWRXVTdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1kyRnViMjVwWTJGc1cyTmhibTl1YVdOaGJFaGxZV1JsY2s1aGJXVmRJRDBnYUdWaFpHVnljMXRvWldGa1pYSk9ZVzFsWFM1MGNtbHRLQ2t1Y21Wd2JHRmpaU2d2WEZ4ekt5OW5MQ0JjSWlCY0lpazdYRzRnSUgxY2JseHVJQ0J5WlhSMWNtNGdZMkZ1YjI1cFkyRnNPMXh1ZlZ4dUlsMTkiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/getCanonicalHeaders.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/getCanonicalQuery.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@aws-sdk/signature-v4/dist/es/getCanonicalQuery.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCanonicalQuery: () => (/* binding */ getCanonicalQuery)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_util_uri_escape__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/util-uri-escape */ \"(ssr)/./node_modules/@aws-sdk/util-uri-escape/dist/es/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/constants.js\");\n\n\n\n/**\n * @internal\n */\nfunction getCanonicalQuery(_a) {\n    var e_1, _b;\n    var _c = _a.query, query = _c === void 0 ? {} : _c;\n    var keys = [];\n    var serialized = {};\n    var _loop_1 = function (key) {\n        if (key.toLowerCase() === _constants__WEBPACK_IMPORTED_MODULE_1__.SIGNATURE_HEADER) {\n            return \"continue\";\n        }\n        keys.push(key);\n        var value = query[key];\n        if (typeof value === \"string\") {\n            serialized[key] = (0,_aws_sdk_util_uri_escape__WEBPACK_IMPORTED_MODULE_0__.escapeUri)(key) + \"=\" + (0,_aws_sdk_util_uri_escape__WEBPACK_IMPORTED_MODULE_0__.escapeUri)(value);\n        }\n        else if (Array.isArray(value)) {\n            serialized[key] = value\n                .slice(0)\n                .sort()\n                .reduce(function (encoded, value) { return encoded.concat([(0,_aws_sdk_util_uri_escape__WEBPACK_IMPORTED_MODULE_0__.escapeUri)(key) + \"=\" + (0,_aws_sdk_util_uri_escape__WEBPACK_IMPORTED_MODULE_0__.escapeUri)(value)]); }, [])\n                .join(\"&\");\n        }\n    };\n    try {\n        for (var _d = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__values)(Object.keys(query).sort()), _e = _d.next(); !_e.done; _e = _d.next()) {\n            var key = _e.value;\n            _loop_1(key);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_e && !_e.done && (_b = _d.return)) _b.call(_d);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return keys\n        .map(function (key) { return serialized[key]; })\n        .filter(function (serialized) { return serialized; }) // omit any falsy values\n        .join(\"&\");\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0Q2Fub25pY2FsUXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZ2V0Q2Fub25pY2FsUXVlcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUVyRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFFL0M7O0dBRUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQUMsRUFBMkI7O1FBQXpCLGFBQVUsRUFBVixLQUFLLG1CQUFHLEVBQUUsS0FBQTtJQUM1QyxJQUFNLElBQUksR0FBa0IsRUFBRSxDQUFDO0lBQy9CLElBQU0sVUFBVSxHQUE4QixFQUFFLENBQUM7NEJBQ3RDLEdBQUc7UUFDWixJQUFJLEdBQUcsQ0FBQyxXQUFXLEVBQUUsS0FBSyxnQkFBZ0IsRUFBRTs7U0FFM0M7UUFFRCxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2YsSUFBTSxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3pCLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxFQUFFO1lBQzdCLFVBQVUsQ0FBQyxHQUFHLENBQUMsR0FBTSxTQUFTLENBQUMsR0FBRyxDQUFDLFNBQUksU0FBUyxDQUFDLEtBQUssQ0FBRyxDQUFDO1NBQzNEO2FBQU0sSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQy9CLFVBQVUsQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLO2lCQUNwQixLQUFLLENBQUMsQ0FBQyxDQUFDO2lCQUNSLElBQUksRUFBRTtpQkFDTixNQUFNLENBQ0wsVUFBQyxPQUFzQixFQUFFLEtBQWEsSUFBSyxPQUFBLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBSSxTQUFTLENBQUMsR0FBRyxDQUFDLFNBQUksU0FBUyxDQUFDLEtBQUssQ0FBRyxDQUFDLENBQUMsRUFBekQsQ0FBeUQsRUFDcEcsRUFBRSxDQUNIO2lCQUNBLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUNkOzs7UUFsQkgsS0FBa0IsSUFBQSxLQUFBLFNBQUEsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQSxnQkFBQTtZQUF0QyxJQUFNLEdBQUcsV0FBQTtvQkFBSCxHQUFHO1NBbUJiOzs7Ozs7Ozs7SUFFRCxPQUFPLElBQUk7U0FDUixHQUFHLENBQUMsVUFBQyxHQUFHLElBQUssT0FBQSxVQUFVLENBQUMsR0FBRyxDQUFDLEVBQWYsQ0FBZSxDQUFDO1NBQzdCLE1BQU0sQ0FBQyxVQUFDLFVBQVUsSUFBSyxPQUFBLFVBQVUsRUFBVixDQUFVLENBQUMsQ0FBQyx3QkFBd0I7U0FDM0QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ2YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBSZXF1ZXN0IH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5pbXBvcnQgeyBlc2NhcGVVcmkgfSBmcm9tIFwiQGF3cy1zZGsvdXRpbC11cmktZXNjYXBlXCI7XG5cbmltcG9ydCB7IFNJR05BVFVSRV9IRUFERVIgfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldENhbm9uaWNhbFF1ZXJ5KHsgcXVlcnkgPSB7fSB9OiBIdHRwUmVxdWVzdCk6IHN0cmluZyB7XG4gIGNvbnN0IGtleXM6IEFycmF5PHN0cmluZz4gPSBbXTtcbiAgY29uc3Qgc2VyaWFsaXplZDogeyBba2V5OiBzdHJpbmddOiBzdHJpbmcgfSA9IHt9O1xuICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyhxdWVyeSkuc29ydCgpKSB7XG4gICAgaWYgKGtleS50b0xvd2VyQ2FzZSgpID09PSBTSUdOQVRVUkVfSEVBREVSKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBrZXlzLnB1c2goa2V5KTtcbiAgICBjb25zdCB2YWx1ZSA9IHF1ZXJ5W2tleV07XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgc2VyaWFsaXplZFtrZXldID0gYCR7ZXNjYXBlVXJpKGtleSl9PSR7ZXNjYXBlVXJpKHZhbHVlKX1gO1xuICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgIHNlcmlhbGl6ZWRba2V5XSA9IHZhbHVlXG4gICAgICAgIC5zbGljZSgwKVxuICAgICAgICAuc29ydCgpXG4gICAgICAgIC5yZWR1Y2UoXG4gICAgICAgICAgKGVuY29kZWQ6IEFycmF5PHN0cmluZz4sIHZhbHVlOiBzdHJpbmcpID0+IGVuY29kZWQuY29uY2F0KFtgJHtlc2NhcGVVcmkoa2V5KX09JHtlc2NhcGVVcmkodmFsdWUpfWBdKSxcbiAgICAgICAgICBbXVxuICAgICAgICApXG4gICAgICAgIC5qb2luKFwiJlwiKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4ga2V5c1xuICAgIC5tYXAoKGtleSkgPT4gc2VyaWFsaXplZFtrZXldKVxuICAgIC5maWx0ZXIoKHNlcmlhbGl6ZWQpID0+IHNlcmlhbGl6ZWQpIC8vIG9taXQgYW55IGZhbHN5IHZhbHVlc1xuICAgIC5qb2luKFwiJlwiKTtcbn1cbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc2lnbmF0dXJlLXY0L2Rpc3QvZXMvZ2V0Q2Fub25pY2FsUXVlcnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFpQztBQUNvQjtBQUNOO0FBQy9DO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxrREFBa0Q7QUFDbEQ7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLHdEQUFnQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLG1FQUFTLGNBQWMsbUVBQVM7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCx1QkFBdUIsbUVBQVMsY0FBYyxtRUFBUyxZQUFZO0FBQ3ZIO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLCtDQUFRLDZDQUE2QyxVQUFVO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFFBQVE7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBLDhCQUE4Qix5QkFBeUI7QUFDdkQsd0NBQXdDLG9CQUFvQjtBQUM1RDtBQUNBO0FBQ0EsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9zaWduYXR1cmUtdjQvZGlzdC9lcy9nZXRDYW5vbmljYWxRdWVyeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX3ZhbHVlcyB9IGZyb20gXCJ0c2xpYlwiO1xuaW1wb3J0IHsgZXNjYXBlVXJpIH0gZnJvbSBcIkBhd3Mtc2RrL3V0aWwtdXJpLWVzY2FwZVwiO1xuaW1wb3J0IHsgU0lHTkFUVVJFX0hFQURFUiB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldENhbm9uaWNhbFF1ZXJ5KF9hKSB7XG4gICAgdmFyIGVfMSwgX2I7XG4gICAgdmFyIF9jID0gX2EucXVlcnksIHF1ZXJ5ID0gX2MgPT09IHZvaWQgMCA/IHt9IDogX2M7XG4gICAgdmFyIGtleXMgPSBbXTtcbiAgICB2YXIgc2VyaWFsaXplZCA9IHt9O1xuICAgIHZhciBfbG9vcF8xID0gZnVuY3Rpb24gKGtleSkge1xuICAgICAgICBpZiAoa2V5LnRvTG93ZXJDYXNlKCkgPT09IFNJR05BVFVSRV9IRUFERVIpIHtcbiAgICAgICAgICAgIHJldHVybiBcImNvbnRpbnVlXCI7XG4gICAgICAgIH1cbiAgICAgICAga2V5cy5wdXNoKGtleSk7XG4gICAgICAgIHZhciB2YWx1ZSA9IHF1ZXJ5W2tleV07XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIHNlcmlhbGl6ZWRba2V5XSA9IGVzY2FwZVVyaShrZXkpICsgXCI9XCIgKyBlc2NhcGVVcmkodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICBzZXJpYWxpemVkW2tleV0gPSB2YWx1ZVxuICAgICAgICAgICAgICAgIC5zbGljZSgwKVxuICAgICAgICAgICAgICAgIC5zb3J0KClcbiAgICAgICAgICAgICAgICAucmVkdWNlKGZ1bmN0aW9uIChlbmNvZGVkLCB2YWx1ZSkgeyByZXR1cm4gZW5jb2RlZC5jb25jYXQoW2VzY2FwZVVyaShrZXkpICsgXCI9XCIgKyBlc2NhcGVVcmkodmFsdWUpXSk7IH0sIFtdKVxuICAgICAgICAgICAgICAgIC5qb2luKFwiJlwiKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdHJ5IHtcbiAgICAgICAgZm9yICh2YXIgX2QgPSBfX3ZhbHVlcyhPYmplY3Qua2V5cyhxdWVyeSkuc29ydCgpKSwgX2UgPSBfZC5uZXh0KCk7ICFfZS5kb25lOyBfZSA9IF9kLm5leHQoKSkge1xuICAgICAgICAgICAgdmFyIGtleSA9IF9lLnZhbHVlO1xuICAgICAgICAgICAgX2xvb3BfMShrZXkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNhdGNoIChlXzFfMSkgeyBlXzEgPSB7IGVycm9yOiBlXzFfMSB9OyB9XG4gICAgZmluYWxseSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAoX2UgJiYgIV9lLmRvbmUgJiYgKF9iID0gX2QucmV0dXJuKSkgX2IuY2FsbChfZCk7XG4gICAgICAgIH1cbiAgICAgICAgZmluYWxseSB7IGlmIChlXzEpIHRocm93IGVfMS5lcnJvcjsgfVxuICAgIH1cbiAgICByZXR1cm4ga2V5c1xuICAgICAgICAubWFwKGZ1bmN0aW9uIChrZXkpIHsgcmV0dXJuIHNlcmlhbGl6ZWRba2V5XTsgfSlcbiAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoc2VyaWFsaXplZCkgeyByZXR1cm4gc2VyaWFsaXplZDsgfSkgLy8gb21pdCBhbnkgZmFsc3kgdmFsdWVzXG4gICAgICAgIC5qb2luKFwiJlwiKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVoyVjBRMkZ1YjI1cFkyRnNVWFZsY25rdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12WjJWMFEyRnViMjVwWTJGc1VYVmxjbmt1ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWp0QlFVTkJMRTlCUVU4c1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTd3dRa0ZCTUVJc1EwRkJRenRCUVVWeVJDeFBRVUZQTEVWQlFVVXNaMEpCUVdkQ0xFVkJRVVVzVFVGQlRTeGhRVUZoTEVOQlFVTTdRVUZGTDBNN08wZEJSVWM3UVVGRFNDeE5RVUZOTEZWQlFWVXNhVUpCUVdsQ0xFTkJRVU1zUlVGQk1rSTdPMUZCUVhwQ0xHRkJRVlVzUlVGQlZpeExRVUZMTEcxQ1FVRkhMRVZCUVVVc1MwRkJRVHRKUVVNMVF5eEpRVUZOTEVsQlFVa3NSMEZCYTBJc1JVRkJSU3hEUVVGRE8wbEJReTlDTEVsQlFVMHNWVUZCVlN4SFFVRTRRaXhGUVVGRkxFTkJRVU03TkVKQlEzUkRMRWRCUVVjN1VVRkRXaXhKUVVGSkxFZEJRVWNzUTBGQlF5eFhRVUZYTEVWQlFVVXNTMEZCU3l4blFrRkJaMElzUlVGQlJUczdVMEZGTTBNN1VVRkZSQ3hKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRPMUZCUTJZc1NVRkJUU3hMUVVGTExFZEJRVWNzUzBGQlN5eERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRPMUZCUTNwQ0xFbEJRVWtzVDBGQlR5eExRVUZMTEV0QlFVc3NVVUZCVVN4RlFVRkZPMWxCUXpkQ0xGVkJRVlVzUTBGQlF5eEhRVUZITEVOQlFVTXNSMEZCVFN4VFFVRlRMRU5CUVVNc1IwRkJSeXhEUVVGRExGTkJRVWtzVTBGQlV5eERRVUZETEV0QlFVc3NRMEZCUnl4RFFVRkRPMU5CUXpORU8yRkJRVTBzU1VGQlNTeExRVUZMTEVOQlFVTXNUMEZCVHl4RFFVRkRMRXRCUVVzc1EwRkJReXhGUVVGRk8xbEJReTlDTEZWQlFWVXNRMEZCUXl4SFFVRkhMRU5CUVVNc1IwRkJSeXhMUVVGTE8ybENRVU53UWl4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRE8ybENRVU5TTEVsQlFVa3NSVUZCUlR0cFFrRkRUaXhOUVVGTkxFTkJRMHdzVlVGQlF5eFBRVUZ6UWl4RlFVRkZMRXRCUVdFc1NVRkJTeXhQUVVGQkxFOUJRVThzUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCU1N4VFFVRlRMRU5CUVVNc1IwRkJSeXhEUVVGRExGTkJRVWtzVTBGQlV5eERRVUZETEV0QlFVc3NRMEZCUnl4RFFVRkRMRU5CUVVNc1JVRkJla1FzUTBGQmVVUXNSVUZEY0Vjc1JVRkJSU3hEUVVOSU8ybENRVU5CTEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJRenRUUVVOa096czdVVUZzUWtnc1MwRkJhMElzU1VGQlFTeExRVUZCTEZOQlFVRXNUVUZCVFN4RFFVRkRMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eEpRVUZKTEVWQlFVVXNRMEZCUVN4blFrRkJRVHRaUVVGMFF5eEpRVUZOTEVkQlFVY3NWMEZCUVR0dlFrRkJTQ3hIUVVGSE8xTkJiVUppT3pzN096czdPenM3U1VGRlJDeFBRVUZQTEVsQlFVazdVMEZEVWl4SFFVRkhMRU5CUVVNc1ZVRkJReXhIUVVGSExFbEJRVXNzVDBGQlFTeFZRVUZWTEVOQlFVTXNSMEZCUnl4RFFVRkRMRVZCUVdZc1EwRkJaU3hEUVVGRE8xTkJRemRDTEUxQlFVMHNRMEZCUXl4VlFVRkRMRlZCUVZVc1NVRkJTeXhQUVVGQkxGVkJRVlVzUlVGQlZpeERRVUZWTEVOQlFVTXNRMEZCUXl4M1FrRkJkMEk3VTBGRE0wUXNTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRE8wRkJRMllzUTBGQlF5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbWx0Y0c5eWRDQjdJRWgwZEhCU1pYRjFaWE4wSUgwZ1puSnZiU0JjSWtCaGQzTXRjMlJyTDNSNWNHVnpYQ0k3WEc1cGJYQnZjblFnZXlCbGMyTmhjR1ZWY21rZ2ZTQm1jbTl0SUZ3aVFHRjNjeTF6WkdzdmRYUnBiQzExY21rdFpYTmpZWEJsWENJN1hHNWNibWx0Y0c5eWRDQjdJRk5KUjA1QlZGVlNSVjlJUlVGRVJWSWdmU0JtY205dElGd2lMaTlqYjI1emRHRnVkSE5jSWp0Y2JseHVMeW9xWEc0Z0tpQkFhVzUwWlhKdVlXeGNiaUFxTDF4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUdkbGRFTmhibTl1YVdOaGJGRjFaWEo1S0hzZ2NYVmxjbmtnUFNCN2ZTQjlPaUJJZEhSd1VtVnhkV1Z6ZENrNklITjBjbWx1WnlCN1hHNGdJR052Ym5OMElHdGxlWE02SUVGeWNtRjVQSE4wY21sdVp6NGdQU0JiWFR0Y2JpQWdZMjl1YzNRZ2MyVnlhV0ZzYVhwbFpEb2dleUJiYTJWNU9pQnpkSEpwYm1kZE9pQnpkSEpwYm1jZ2ZTQTlJSHQ5TzF4dUlDQm1iM0lnS0dOdmJuTjBJR3RsZVNCdlppQlBZbXBsWTNRdWEyVjVjeWh4ZFdWeWVTa3VjMjl5ZENncEtTQjdYRzRnSUNBZ2FXWWdLR3RsZVM1MGIweHZkMlZ5UTJGelpTZ3BJRDA5UFNCVFNVZE9RVlJWVWtWZlNFVkJSRVZTS1NCN1hHNGdJQ0FnSUNCamIyNTBhVzUxWlR0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JyWlhsekxuQjFjMmdvYTJWNUtUdGNiaUFnSUNCamIyNXpkQ0IyWVd4MVpTQTlJSEYxWlhKNVcydGxlVjA3WEc0Z0lDQWdhV1lnS0hSNWNHVnZaaUIyWVd4MVpTQTlQVDBnWENKemRISnBibWRjSWlrZ2UxeHVJQ0FnSUNBZ2MyVnlhV0ZzYVhwbFpGdHJaWGxkSUQwZ1lDUjdaWE5qWVhCbFZYSnBLR3RsZVNsOVBTUjdaWE5qWVhCbFZYSnBLSFpoYkhWbEtYMWdPMXh1SUNBZ0lIMGdaV3h6WlNCcFppQW9RWEp5WVhrdWFYTkJjbkpoZVNoMllXeDFaU2twSUh0Y2JpQWdJQ0FnSUhObGNtbGhiR2w2WldSYmEyVjVYU0E5SUhaaGJIVmxYRzRnSUNBZ0lDQWdJQzV6YkdsalpTZ3dLVnh1SUNBZ0lDQWdJQ0F1YzI5eWRDZ3BYRzRnSUNBZ0lDQWdJQzV5WldSMVkyVW9YRzRnSUNBZ0lDQWdJQ0FnS0dWdVkyOWtaV1E2SUVGeWNtRjVQSE4wY21sdVp6NHNJSFpoYkhWbE9pQnpkSEpwYm1jcElEMCtJR1Z1WTI5a1pXUXVZMjl1WTJGMEtGdGdKSHRsYzJOaGNHVlZjbWtvYTJWNUtYMDlKSHRsYzJOaGNHVlZjbWtvZG1Gc2RXVXBmV0JkS1N4Y2JpQWdJQ0FnSUNBZ0lDQmJYVnh1SUNBZ0lDQWdJQ0FwWEc0Z0lDQWdJQ0FnSUM1cWIybHVLRndpSmx3aUtUdGNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQnlaWFIxY200Z2EyVjVjMXh1SUNBZ0lDNXRZWEFvS0d0bGVTa2dQVDRnYzJWeWFXRnNhWHBsWkZ0clpYbGRLVnh1SUNBZ0lDNW1hV3gwWlhJb0tITmxjbWxoYkdsNlpXUXBJRDArSUhObGNtbGhiR2w2WldRcElDOHZJRzl0YVhRZ1lXNTVJR1poYkhONUlIWmhiSFZsYzF4dUlDQWdJQzVxYjJsdUtGd2lKbHdpS1R0Y2JuMWNiaUpkZlE9PSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/getCanonicalQuery.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/getPayloadHash.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@aws-sdk/signature-v4/dist/es/getPayloadHash.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPayloadHash: () => (/* binding */ getPayloadHash)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_is_array_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/is-array-buffer */ \"(ssr)/./node_modules/@aws-sdk/is-array-buffer/dist/es/index.js\");\n/* harmony import */ var _aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/util-hex-encoding */ \"(ssr)/./node_modules/@aws-sdk/util-hex-encoding/dist/es/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/constants.js\");\n\n\n\n\n/**\n * @internal\n */\nfunction getPayloadHash(_a, hashConstructor) {\n    var headers = _a.headers, body = _a.body;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {\n        var _b, _c, headerName, hashCtor, _d;\n        var e_1, _e;\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_f) {\n            switch (_f.label) {\n                case 0:\n                    try {\n                        for (_b = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__values)(Object.keys(headers)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                            headerName = _c.value;\n                            if (headerName.toLowerCase() === _constants__WEBPACK_IMPORTED_MODULE_2__.SHA256_HEADER) {\n                                return [2 /*return*/, headers[headerName]];\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (_c && !_c.done && (_e = _b.return)) _e.call(_b);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                    if (!(body == undefined)) return [3 /*break*/, 1];\n                    return [2 /*return*/, \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"];\n                case 1:\n                    if (!(typeof body === \"string\" || ArrayBuffer.isView(body) || (0,_aws_sdk_is_array_buffer__WEBPACK_IMPORTED_MODULE_0__.isArrayBuffer)(body))) return [3 /*break*/, 3];\n                    hashCtor = new hashConstructor();\n                    hashCtor.update(body);\n                    _d = _aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_1__.toHex;\n                    return [4 /*yield*/, hashCtor.digest()];\n                case 2: return [2 /*return*/, _d.apply(void 0, [_f.sent()])];\n                case 3: \n                // As any defined body that is not a string or binary data is a stream, this\n                // body is unsignable. Attempt to send the request with an unsigned payload,\n                // which may or may not be accepted by the service.\n                return [2 /*return*/, _constants__WEBPACK_IMPORTED_MODULE_2__.UNSIGNED_PAYLOAD];\n            }\n        });\n    });\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0UGF5bG9hZEhhc2guanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZ2V0UGF5bG9hZEhhc2gudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUV6RCxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFFbkQsT0FBTyxFQUFFLGFBQWEsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUU5RDs7R0FFRztBQUNILE1BQU0sVUFBZ0IsY0FBYyxDQUNsQyxFQUE4QixFQUM5QixlQUFnQztRQUQ5QixPQUFPLGFBQUEsRUFBRSxJQUFJLFVBQUE7Ozs7Ozs7O3dCQUdmLEtBQXlCLEtBQUEsU0FBQSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFBLDRDQUFFOzRCQUFwQyxVQUFVOzRCQUNuQixJQUFJLFVBQVUsQ0FBQyxXQUFXLEVBQUUsS0FBSyxhQUFhLEVBQUU7Z0NBQzlDLHNCQUFPLE9BQU8sQ0FBQyxVQUFVLENBQUMsRUFBQzs2QkFDNUI7eUJBQ0Y7Ozs7Ozs7Ozt5QkFFRyxDQUFBLElBQUksSUFBSSxTQUFTLENBQUEsRUFBakIsd0JBQWlCO29CQUNuQixzQkFBTyxrRUFBa0UsRUFBQzs7eUJBQ2pFLENBQUEsT0FBTyxJQUFJLEtBQUssUUFBUSxJQUFJLFdBQVcsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFBLEVBQTNFLHdCQUEyRTtvQkFDOUUsUUFBUSxHQUFHLElBQUksZUFBZSxFQUFFLENBQUM7b0JBQ3ZDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7b0JBQ2YsS0FBQSxLQUFLLENBQUE7b0JBQUMscUJBQU0sUUFBUSxDQUFDLE1BQU0sRUFBRSxFQUFBO3dCQUFwQyxzQkFBTyxrQkFBTSxTQUF1QixFQUFDLEVBQUM7O2dCQUd4Qyw0RUFBNEU7Z0JBQzVFLDRFQUE0RTtnQkFDNUUsbURBQW1EO2dCQUNuRCxzQkFBTyxnQkFBZ0IsRUFBQzs7OztDQUN6QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzQXJyYXlCdWZmZXIgfSBmcm9tIFwiQGF3cy1zZGsvaXMtYXJyYXktYnVmZmVyXCI7XG5pbXBvcnQgeyBIYXNoQ29uc3RydWN0b3IsIEh0dHBSZXF1ZXN0IH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5pbXBvcnQgeyB0b0hleCB9IGZyb20gXCJAYXdzLXNkay91dGlsLWhleC1lbmNvZGluZ1wiO1xuXG5pbXBvcnQgeyBTSEEyNTZfSEVBREVSLCBVTlNJR05FRF9QQVlMT0FEIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5cbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRQYXlsb2FkSGFzaChcbiAgeyBoZWFkZXJzLCBib2R5IH06IEh0dHBSZXF1ZXN0LFxuICBoYXNoQ29uc3RydWN0b3I6IEhhc2hDb25zdHJ1Y3RvclxuKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgZm9yIChjb25zdCBoZWFkZXJOYW1lIG9mIE9iamVjdC5rZXlzKGhlYWRlcnMpKSB7XG4gICAgaWYgKGhlYWRlck5hbWUudG9Mb3dlckNhc2UoKSA9PT0gU0hBMjU2X0hFQURFUikge1xuICAgICAgcmV0dXJuIGhlYWRlcnNbaGVhZGVyTmFtZV07XG4gICAgfVxuICB9XG5cbiAgaWYgKGJvZHkgPT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIFwiZTNiMGM0NDI5OGZjMWMxNDlhZmJmNGM4OTk2ZmI5MjQyN2FlNDFlNDY0OWI5MzRjYTQ5NTk5MWI3ODUyYjg1NVwiO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBib2R5ID09PSBcInN0cmluZ1wiIHx8IEFycmF5QnVmZmVyLmlzVmlldyhib2R5KSB8fCBpc0FycmF5QnVmZmVyKGJvZHkpKSB7XG4gICAgY29uc3QgaGFzaEN0b3IgPSBuZXcgaGFzaENvbnN0cnVjdG9yKCk7XG4gICAgaGFzaEN0b3IudXBkYXRlKGJvZHkpO1xuICAgIHJldHVybiB0b0hleChhd2FpdCBoYXNoQ3Rvci5kaWdlc3QoKSk7XG4gIH1cblxuICAvLyBBcyBhbnkgZGVmaW5lZCBib2R5IHRoYXQgaXMgbm90IGEgc3RyaW5nIG9yIGJpbmFyeSBkYXRhIGlzIGEgc3RyZWFtLCB0aGlzXG4gIC8vIGJvZHkgaXMgdW5zaWduYWJsZS4gQXR0ZW1wdCB0byBzZW5kIHRoZSByZXF1ZXN0IHdpdGggYW4gdW5zaWduZWQgcGF5bG9hZCxcbiAgLy8gd2hpY2ggbWF5IG9yIG1heSBub3QgYmUgYWNjZXB0ZWQgYnkgdGhlIHNlcnZpY2UuXG4gIHJldHVybiBVTlNJR05FRF9QQVlMT0FEO1xufVxuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc2lnbmF0dXJlLXY0L2Rpc3QvZXMvZ2V0UGF5bG9hZEhhc2guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBeUQ7QUFDQTtBQUNOO0FBQ1c7QUFDOUQ7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLFdBQVcsZ0RBQVM7QUFDcEI7QUFDQTtBQUNBLGVBQWUsa0RBQVc7QUFDMUI7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLCtDQUFRLHdDQUF3QyxVQUFVO0FBQzVGO0FBQ0EsNkRBQTZELHFEQUFhO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLFFBQVE7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRkFBa0YsdUVBQWE7QUFDL0Y7QUFDQTtBQUNBLHlCQUF5Qiw2REFBSztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0Msd0RBQWdCO0FBQ3REO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBLDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc2lnbmF0dXJlLXY0L2Rpc3QvZXMvZ2V0UGF5bG9hZEhhc2guanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19hd2FpdGVyLCBfX2dlbmVyYXRvciwgX192YWx1ZXMgfSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IGlzQXJyYXlCdWZmZXIgfSBmcm9tIFwiQGF3cy1zZGsvaXMtYXJyYXktYnVmZmVyXCI7XG5pbXBvcnQgeyB0b0hleCB9IGZyb20gXCJAYXdzLXNkay91dGlsLWhleC1lbmNvZGluZ1wiO1xuaW1wb3J0IHsgU0hBMjU2X0hFQURFUiwgVU5TSUdORURfUEFZTE9BRCB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFBheWxvYWRIYXNoKF9hLCBoYXNoQ29uc3RydWN0b3IpIHtcbiAgICB2YXIgaGVhZGVycyA9IF9hLmhlYWRlcnMsIGJvZHkgPSBfYS5ib2R5O1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF9iLCBfYywgaGVhZGVyTmFtZSwgaGFzaEN0b3IsIF9kO1xuICAgICAgICB2YXIgZV8xLCBfZTtcbiAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfZikge1xuICAgICAgICAgICAgc3dpdGNoIChfZi5sYWJlbCkge1xuICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoX2IgPSBfX3ZhbHVlcyhPYmplY3Qua2V5cyhoZWFkZXJzKSksIF9jID0gX2IubmV4dCgpOyAhX2MuZG9uZTsgX2MgPSBfYi5uZXh0KCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJOYW1lID0gX2MudmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGhlYWRlck5hbWUudG9Mb3dlckNhc2UoKSA9PT0gU0hBMjU2X0hFQURFUikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgaGVhZGVyc1toZWFkZXJOYW1lXV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNhdGNoIChlXzFfMSkgeyBlXzEgPSB7IGVycm9yOiBlXzFfMSB9OyB9XG4gICAgICAgICAgICAgICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoX2MgJiYgIV9jLmRvbmUgJiYgKF9lID0gX2IucmV0dXJuKSkgX2UuY2FsbChfYik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBmaW5hbGx5IHsgaWYgKGVfMSkgdGhyb3cgZV8xLmVycm9yOyB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKCEoYm9keSA9PSB1bmRlZmluZWQpKSByZXR1cm4gWzMgLypicmVhayovLCAxXTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIFwiZTNiMGM0NDI5OGZjMWMxNDlhZmJmNGM4OTk2ZmI5MjQyN2FlNDFlNDY0OWI5MzRjYTQ5NTk5MWI3ODUyYjg1NVwiXTtcbiAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgIGlmICghKHR5cGVvZiBib2R5ID09PSBcInN0cmluZ1wiIHx8IEFycmF5QnVmZmVyLmlzVmlldyhib2R5KSB8fCBpc0FycmF5QnVmZmVyKGJvZHkpKSkgcmV0dXJuIFszIC8qYnJlYWsqLywgM107XG4gICAgICAgICAgICAgICAgICAgIGhhc2hDdG9yID0gbmV3IGhhc2hDb25zdHJ1Y3RvcigpO1xuICAgICAgICAgICAgICAgICAgICBoYXNoQ3Rvci51cGRhdGUoYm9keSk7XG4gICAgICAgICAgICAgICAgICAgIF9kID0gdG9IZXg7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIGhhc2hDdG9yLmRpZ2VzdCgpXTtcbiAgICAgICAgICAgICAgICBjYXNlIDI6IHJldHVybiBbMiAvKnJldHVybiovLCBfZC5hcHBseSh2b2lkIDAsIFtfZi5zZW50KCldKV07XG4gICAgICAgICAgICAgICAgY2FzZSAzOiBcbiAgICAgICAgICAgICAgICAvLyBBcyBhbnkgZGVmaW5lZCBib2R5IHRoYXQgaXMgbm90IGEgc3RyaW5nIG9yIGJpbmFyeSBkYXRhIGlzIGEgc3RyZWFtLCB0aGlzXG4gICAgICAgICAgICAgICAgLy8gYm9keSBpcyB1bnNpZ25hYmxlLiBBdHRlbXB0IHRvIHNlbmQgdGhlIHJlcXVlc3Qgd2l0aCBhbiB1bnNpZ25lZCBwYXlsb2FkLFxuICAgICAgICAgICAgICAgIC8vIHdoaWNoIG1heSBvciBtYXkgbm90IGJlIGFjY2VwdGVkIGJ5IHRoZSBzZXJ2aWNlLlxuICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBVTlNJR05FRF9QQVlMT0FEXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2laMlYwVUdGNWJHOWhaRWhoYzJndWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12WjJWMFVHRjViRzloWkVoaGMyZ3VkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanRCUVVGQkxFOUJRVThzUlVGQlJTeGhRVUZoTEVWQlFVVXNUVUZCVFN3d1FrRkJNRUlzUTBGQlF6dEJRVVY2UkN4UFFVRlBMRVZCUVVVc1MwRkJTeXhGUVVGRkxFMUJRVTBzTkVKQlFUUkNMRU5CUVVNN1FVRkZia1FzVDBGQlR5eEZRVUZGTEdGQlFXRXNSVUZCUlN4blFrRkJaMElzUlVGQlJTeE5RVUZOTEdGQlFXRXNRMEZCUXp0QlFVVTVSRHM3UjBGRlJ6dEJRVU5JTEUxQlFVMHNWVUZCWjBJc1kwRkJZeXhEUVVOc1F5eEZRVUU0UWl4RlFVTTVRaXhsUVVGblF6dFJRVVE1UWl4UFFVRlBMR0ZCUVVFc1JVRkJSU3hKUVVGSkxGVkJRVUU3T3pzN096czdPM2RDUVVkbUxFdEJRWGxDTEV0QlFVRXNVMEZCUVN4TlFVRk5MRU5CUVVNc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eERRVUZCTERSRFFVRkZPelJDUVVGd1F5eFZRVUZWT3pSQ1FVTnVRaXhKUVVGSkxGVkJRVlVzUTBGQlF5eFhRVUZYTEVWQlFVVXNTMEZCU3l4aFFVRmhMRVZCUVVVN1owTkJRemxETEhOQ1FVRlBMRTlCUVU4c1EwRkJReXhWUVVGVkxFTkJRVU1zUlVGQlF6czJRa0ZETlVJN2VVSkJRMFk3T3pzN096czdPenQ1UWtGRlJ5eERRVUZCTEVsQlFVa3NTVUZCU1N4VFFVRlRMRU5CUVVFc1JVRkJha0lzZDBKQlFXbENPMjlDUVVOdVFpeHpRa0ZCVHl4clJVRkJhMFVzUlVGQlF6czdlVUpCUTJwRkxFTkJRVUVzVDBGQlR5eEpRVUZKTEV0QlFVc3NVVUZCVVN4SlFVRkpMRmRCUVZjc1EwRkJReXhOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEVsQlFVa3NZVUZCWVN4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGQkxFVkJRVE5GTEhkQ1FVRXlSVHR2UWtGRE9VVXNVVUZCVVN4SFFVRkhMRWxCUVVrc1pVRkJaU3hGUVVGRkxFTkJRVU03YjBKQlEzWkRMRkZCUVZFc1EwRkJReXhOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdiMEpCUTJZc1MwRkJRU3hMUVVGTExFTkJRVUU3YjBKQlFVTXNjVUpCUVUwc1VVRkJVU3hEUVVGRExFMUJRVTBzUlVGQlJTeEZRVUZCTzNkQ1FVRndReXh6UWtGQlR5eHJRa0ZCVFN4VFFVRjFRaXhGUVVGRExFVkJRVU03TzJkQ1FVZDRReXcwUlVGQk5FVTdaMEpCUXpWRkxEUkZRVUUwUlR0blFrRkROVVVzYlVSQlFXMUVPMmRDUVVOdVJDeHpRa0ZCVHl4blFrRkJaMElzUlVGQlF6czdPenREUVVONlFpSXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbWx0Y0c5eWRDQjdJR2x6UVhKeVlYbENkV1ptWlhJZ2ZTQm1jbTl0SUZ3aVFHRjNjeTF6WkdzdmFYTXRZWEp5WVhrdFluVm1abVZ5WENJN1hHNXBiWEJ2Y25RZ2V5QklZWE5vUTI5dWMzUnlkV04wYjNJc0lFaDBkSEJTWlhGMVpYTjBJSDBnWm5KdmJTQmNJa0JoZDNNdGMyUnJMM1I1Y0dWelhDSTdYRzVwYlhCdmNuUWdleUIwYjBobGVDQjlJR1p5YjIwZ1hDSkFZWGR6TFhOa2F5OTFkR2xzTFdobGVDMWxibU52WkdsdVoxd2lPMXh1WEc1cGJYQnZjblFnZXlCVFNFRXlOVFpmU0VWQlJFVlNMQ0JWVGxOSlIwNUZSRjlRUVZsTVQwRkVJSDBnWm5KdmJTQmNJaTR2WTI5dWMzUmhiblJ6WENJN1hHNWNiaThxS2x4dUlDb2dRR2x1ZEdWeWJtRnNYRzRnS2k5Y2JtVjRjRzl5ZENCaGMzbHVZeUJtZFc1amRHbHZiaUJuWlhSUVlYbHNiMkZrU0dGemFDaGNiaUFnZXlCb1pXRmtaWEp6TENCaWIyUjVJSDA2SUVoMGRIQlNaWEYxWlhOMExGeHVJQ0JvWVhOb1EyOXVjM1J5ZFdOMGIzSTZJRWhoYzJoRGIyNXpkSEoxWTNSdmNseHVLVG9nVUhKdmJXbHpaVHh6ZEhKcGJtYytJSHRjYmlBZ1ptOXlJQ2hqYjI1emRDQm9aV0ZrWlhKT1lXMWxJRzltSUU5aWFtVmpkQzVyWlhsektHaGxZV1JsY25NcEtTQjdYRzRnSUNBZ2FXWWdLR2hsWVdSbGNrNWhiV1V1ZEc5TWIzZGxja05oYzJVb0tTQTlQVDBnVTBoQk1qVTJYMGhGUVVSRlVpa2dlMXh1SUNBZ0lDQWdjbVYwZFhKdUlHaGxZV1JsY25OYmFHVmhaR1Z5VG1GdFpWMDdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdhV1lnS0dKdlpIa2dQVDBnZFc1a1pXWnBibVZrS1NCN1hHNGdJQ0FnY21WMGRYSnVJRndpWlROaU1HTTBOREk1T0daak1XTXhORGxoWm1KbU5HTTRPVGsyWm1JNU1qUXlOMkZsTkRGbE5EWTBPV0k1TXpSallUUTVOVGs1TVdJM09EVXlZamcxTlZ3aU8xeHVJQ0I5SUdWc2MyVWdhV1lnS0hSNWNHVnZaaUJpYjJSNUlEMDlQU0JjSW5OMGNtbHVaMXdpSUh4OElFRnljbUY1UW5WbVptVnlMbWx6Vm1sbGR5aGliMlI1S1NCOGZDQnBjMEZ5Y21GNVFuVm1abVZ5S0dKdlpIa3BLU0I3WEc0Z0lDQWdZMjl1YzNRZ2FHRnphRU4wYjNJZ1BTQnVaWGNnYUdGemFFTnZibk4wY25WamRHOXlLQ2s3WEc0Z0lDQWdhR0Z6YUVOMGIzSXVkWEJrWVhSbEtHSnZaSGtwTzF4dUlDQWdJSEpsZEhWeWJpQjBiMGhsZUNoaGQyRnBkQ0JvWVhOb1EzUnZjaTVrYVdkbGMzUW9LU2s3WEc0Z0lIMWNibHh1SUNBdkx5QkJjeUJoYm5rZ1pHVm1hVzVsWkNCaWIyUjVJSFJvWVhRZ2FYTWdibTkwSUdFZ2MzUnlhVzVuSUc5eUlHSnBibUZ5ZVNCa1lYUmhJR2x6SUdFZ2MzUnlaV0Z0TENCMGFHbHpYRzRnSUM4dklHSnZaSGtnYVhNZ2RXNXphV2R1WVdKc1pTNGdRWFIwWlcxd2RDQjBieUJ6Wlc1a0lIUm9aU0J5WlhGMVpYTjBJSGRwZEdnZ1lXNGdkVzV6YVdkdVpXUWdjR0Y1Ykc5aFpDeGNiaUFnTHk4Z2QyaHBZMmdnYldGNUlHOXlJRzFoZVNCdWIzUWdZbVVnWVdOalpYQjBaV1FnWW5rZ2RHaGxJSE5sY25acFkyVXVYRzRnSUhKbGRIVnliaUJWVGxOSlIwNUZSRjlRUVZsTVQwRkVPMXh1ZlZ4dUlsMTkiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/getPayloadHash.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/hasHeader.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@aws-sdk/signature-v4/dist/es/hasHeader.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasHeader: () => (/* binding */ hasHeader)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/node_modules/tslib/tslib.es6.js\");\n\nfunction hasHeader(soughtHeader, headers) {\n    var e_1, _a;\n    soughtHeader = soughtHeader.toLowerCase();\n    try {\n        for (var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__values)(Object.keys(headers)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var headerName = _c.value;\n            if (soughtHeader === headerName.toLowerCase()) {\n                return true;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return false;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFzSGVhZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2hhc0hlYWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBRUEsTUFBTSxVQUFVLFNBQVMsQ0FBQyxZQUFvQixFQUFFLE9BQWtCOztJQUNoRSxZQUFZLEdBQUcsWUFBWSxDQUFDLFdBQVcsRUFBRSxDQUFDOztRQUMxQyxLQUF5QixJQUFBLEtBQUEsU0FBQSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFBLGdCQUFBLDRCQUFFO1lBQTFDLElBQU0sVUFBVSxXQUFBO1lBQ25CLElBQUksWUFBWSxLQUFLLFVBQVUsQ0FBQyxXQUFXLEVBQUUsRUFBRTtnQkFDN0MsT0FBTyxJQUFJLENBQUM7YUFDYjtTQUNGOzs7Ozs7Ozs7SUFFRCxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIZWFkZXJCYWcgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGhhc0hlYWRlcihzb3VnaHRIZWFkZXI6IHN0cmluZywgaGVhZGVyczogSGVhZGVyQmFnKTogYm9vbGVhbiB7XG4gIHNvdWdodEhlYWRlciA9IHNvdWdodEhlYWRlci50b0xvd2VyQ2FzZSgpO1xuICBmb3IgKGNvbnN0IGhlYWRlck5hbWUgb2YgT2JqZWN0LmtleXMoaGVhZGVycykpIHtcbiAgICBpZiAoc291Z2h0SGVhZGVyID09PSBoZWFkZXJOYW1lLnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc2lnbmF0dXJlLXY0L2Rpc3QvZXMvaGFzSGVhZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWlDO0FBQzFCO0FBQ1A7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLCtDQUFRLHdDQUF3QyxVQUFVO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixRQUFRO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc2lnbmF0dXJlLXY0L2Rpc3QvZXMvaGFzSGVhZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fdmFsdWVzIH0gZnJvbSBcInRzbGliXCI7XG5leHBvcnQgZnVuY3Rpb24gaGFzSGVhZGVyKHNvdWdodEhlYWRlciwgaGVhZGVycykge1xuICAgIHZhciBlXzEsIF9hO1xuICAgIHNvdWdodEhlYWRlciA9IHNvdWdodEhlYWRlci50b0xvd2VyQ2FzZSgpO1xuICAgIHRyeSB7XG4gICAgICAgIGZvciAodmFyIF9iID0gX192YWx1ZXMoT2JqZWN0LmtleXMoaGVhZGVycykpLCBfYyA9IF9iLm5leHQoKTsgIV9jLmRvbmU7IF9jID0gX2IubmV4dCgpKSB7XG4gICAgICAgICAgICB2YXIgaGVhZGVyTmFtZSA9IF9jLnZhbHVlO1xuICAgICAgICAgICAgaWYgKHNvdWdodEhlYWRlciA9PT0gaGVhZGVyTmFtZS50b0xvd2VyQ2FzZSgpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2F0Y2ggKGVfMV8xKSB7IGVfMSA9IHsgZXJyb3I6IGVfMV8xIH07IH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChfYyAmJiAhX2MuZG9uZSAmJiAoX2EgPSBfYi5yZXR1cm4pKSBfYS5jYWxsKF9iKTtcbiAgICAgICAgfVxuICAgICAgICBmaW5hbGx5IHsgaWYgKGVfMSkgdGhyb3cgZV8xLmVycm9yOyB9XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWFHRnpTR1ZoWkdWeUxtcHpJaXdpYzI5MWNtTmxVbTl2ZENJNklpSXNJbk52ZFhKalpYTWlPbHNpTGk0dkxpNHZjM0pqTDJoaGMwaGxZV1JsY2k1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaU8wRkJSVUVzVFVGQlRTeFZRVUZWTEZOQlFWTXNRMEZCUXl4WlFVRnZRaXhGUVVGRkxFOUJRV3RDT3p0SlFVTm9SU3haUVVGWkxFZEJRVWNzV1VGQldTeERRVUZETEZkQlFWY3NSVUZCUlN4RFFVRkRPenRSUVVNeFF5eExRVUY1UWl4SlFVRkJMRXRCUVVFc1UwRkJRU3hOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkJMR2RDUVVGQkxEUkNRVUZGTzFsQlFURkRMRWxCUVUwc1ZVRkJWU3hYUVVGQk8xbEJRMjVDTEVsQlFVa3NXVUZCV1N4TFFVRkxMRlZCUVZVc1EwRkJReXhYUVVGWExFVkJRVVVzUlVGQlJUdG5Ra0ZETjBNc1QwRkJUeXhKUVVGSkxFTkJRVU03WVVGRFlqdFRRVU5HT3pzN096czdPenM3U1VGRlJDeFBRVUZQTEV0QlFVc3NRMEZCUXp0QlFVTm1MRU5CUVVNaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SnBiWEJ2Y25RZ2V5QklaV0ZrWlhKQ1lXY2dmU0JtY205dElGd2lRR0YzY3kxelpHc3ZkSGx3WlhOY0lqdGNibHh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJR2hoYzBobFlXUmxjaWh6YjNWbmFIUklaV0ZrWlhJNklITjBjbWx1Wnl3Z2FHVmhaR1Z5Y3pvZ1NHVmhaR1Z5UW1GbktUb2dZbTl2YkdWaGJpQjdYRzRnSUhOdmRXZG9kRWhsWVdSbGNpQTlJSE52ZFdkb2RFaGxZV1JsY2k1MGIweHZkMlZ5UTJGelpTZ3BPMXh1SUNCbWIzSWdLR052Ym5OMElHaGxZV1JsY2s1aGJXVWdiMllnVDJKcVpXTjBMbXRsZVhNb2FHVmhaR1Z5Y3lrcElIdGNiaUFnSUNCcFppQW9jMjkxWjJoMFNHVmhaR1Z5SUQwOVBTQm9aV0ZrWlhKT1lXMWxMblJ2VEc5M1pYSkRZWE5sS0NrcElIdGNiaUFnSUNBZ0lISmxkSFZ5YmlCMGNuVmxPMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJSEpsZEhWeWJpQm1ZV3h6WlR0Y2JuMWNiaUpkZlE9PSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/hasHeader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@aws-sdk/signature-v4/dist/es/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SignatureV4: () => (/* reexport safe */ _SignatureV4__WEBPACK_IMPORTED_MODULE_1__.SignatureV4),\n/* harmony export */   clearCredentialCache: () => (/* reexport safe */ _credentialDerivation__WEBPACK_IMPORTED_MODULE_0__.clearCredentialCache),\n/* harmony export */   createScope: () => (/* reexport safe */ _credentialDerivation__WEBPACK_IMPORTED_MODULE_0__.createScope),\n/* harmony export */   getSigningKey: () => (/* reexport safe */ _credentialDerivation__WEBPACK_IMPORTED_MODULE_0__.getSigningKey)\n/* harmony export */ });\n/* harmony import */ var _credentialDerivation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./credentialDerivation */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/credentialDerivation.js\");\n/* harmony import */ var _SignatureV4__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SignatureV4 */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/SignatureV4.js\");\n\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyx3QkFBd0IsQ0FBQztBQUN2QyxjQUFjLGVBQWUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2NyZWRlbnRpYWxEZXJpdmF0aW9uXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9TaWduYXR1cmVWNFwiO1xuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc2lnbmF0dXJlLXY0L2Rpc3QvZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXVDO0FBQ1Q7QUFDOUIsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9zaWduYXR1cmUtdjQvZGlzdC9lcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9jcmVkZW50aWFsRGVyaXZhdGlvblwiO1xuZXhwb3J0ICogZnJvbSBcIi4vU2lnbmF0dXJlVjRcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWFXNWtaWGd1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTh1TGk5emNtTXZhVzVrWlhndWRITWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzWTBGQll5eDNRa0ZCZDBJc1EwRkJRenRCUVVOMlF5eGpRVUZqTEdWQlFXVXNRMEZCUXlJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYkltVjRjRzl5ZENBcUlHWnliMjBnWENJdUwyTnlaV1JsYm5ScFlXeEVaWEpwZG1GMGFXOXVYQ0k3WEc1bGVIQnZjblFnS2lCbWNtOXRJRndpTGk5VGFXZHVZWFIxY21WV05Gd2lPMXh1SWwxOSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/moveHeadersToQuery.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@aws-sdk/signature-v4/dist/es/moveHeadersToQuery.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   moveHeadersToQuery: () => (/* binding */ moveHeadersToQuery)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _cloneRequest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cloneRequest */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/cloneRequest.js\");\n\n\n/**\n * @internal\n */\nfunction moveHeadersToQuery(request, options) {\n    var e_1, _a;\n    var _b;\n    if (options === void 0) { options = {}; }\n    var _c = typeof request.clone === \"function\" ? request.clone() : (0,_cloneRequest__WEBPACK_IMPORTED_MODULE_0__.cloneRequest)(request), headers = _c.headers, _d = _c.query, query = _d === void 0 ? {} : _d;\n    try {\n        for (var _e = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__values)(Object.keys(headers)), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var name = _f.value;\n            var lname = name.toLowerCase();\n            if (lname.substr(0, 6) === \"x-amz-\" && !((_b = options.unhoistableHeaders) === null || _b === void 0 ? void 0 : _b.has(lname))) {\n                query[name] = headers[name];\n                delete headers[name];\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, request), { headers: headers,\n        query: query });\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW92ZUhlYWRlcnNUb1F1ZXJ5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL21vdmVIZWFkZXJzVG9RdWVyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBRUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTlDOztHQUVHO0FBQ0gsTUFBTSxVQUFVLGtCQUFrQixDQUNoQyxPQUFvQixFQUNwQixPQUFrRDs7O0lBQWxELHdCQUFBLEVBQUEsWUFBa0Q7SUFFNUMsSUFBQSxLQUNKLE9BQVEsT0FBZSxDQUFDLEtBQUssS0FBSyxVQUFVLENBQUMsQ0FBQyxDQUFFLE9BQWUsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxFQUR6RixPQUFPLGFBQUEsRUFBRSxhQUErQixFQUEvQixLQUFLLG1CQUFHLEVBQXVCLEtBQ2lELENBQUM7O1FBQ2xHLEtBQW1CLElBQUEsS0FBQSxTQUFBLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUEsZ0JBQUEsNEJBQUU7WUFBcEMsSUFBTSxJQUFJLFdBQUE7WUFDYixJQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7WUFDakMsSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxRQUFRLElBQUksUUFBQyxPQUFPLENBQUMsa0JBQWtCLDBDQUFFLEdBQUcsQ0FBQyxLQUFLLEVBQUMsRUFBRTtnQkFDOUUsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDNUIsT0FBTyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDdEI7U0FDRjs7Ozs7Ozs7O0lBRUQsNkJBQ0ssT0FBTyxLQUNWLE9BQU8sU0FBQTtRQUNQLEtBQUssT0FBQSxJQUNMO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBSZXF1ZXN0LCBRdWVyeVBhcmFtZXRlckJhZyB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5pbXBvcnQgeyBjbG9uZVJlcXVlc3QgfSBmcm9tIFwiLi9jbG9uZVJlcXVlc3RcIjtcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1vdmVIZWFkZXJzVG9RdWVyeShcbiAgcmVxdWVzdDogSHR0cFJlcXVlc3QsXG4gIG9wdGlvbnM6IHsgdW5ob2lzdGFibGVIZWFkZXJzPzogU2V0PHN0cmluZz4gfSA9IHt9XG4pOiBIdHRwUmVxdWVzdCAmIHsgcXVlcnk6IFF1ZXJ5UGFyYW1ldGVyQmFnIH0ge1xuICBjb25zdCB7IGhlYWRlcnMsIHF1ZXJ5ID0ge30gYXMgUXVlcnlQYXJhbWV0ZXJCYWcgfSA9XG4gICAgdHlwZW9mIChyZXF1ZXN0IGFzIGFueSkuY2xvbmUgPT09IFwiZnVuY3Rpb25cIiA/IChyZXF1ZXN0IGFzIGFueSkuY2xvbmUoKSA6IGNsb25lUmVxdWVzdChyZXF1ZXN0KTtcbiAgZm9yIChjb25zdCBuYW1lIG9mIE9iamVjdC5rZXlzKGhlYWRlcnMpKSB7XG4gICAgY29uc3QgbG5hbWUgPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgaWYgKGxuYW1lLnN1YnN0cigwLCA2KSA9PT0gXCJ4LWFtei1cIiAmJiAhb3B0aW9ucy51bmhvaXN0YWJsZUhlYWRlcnM/LmhhcyhsbmFtZSkpIHtcbiAgICAgIHF1ZXJ5W25hbWVdID0gaGVhZGVyc1tuYW1lXTtcbiAgICAgIGRlbGV0ZSBoZWFkZXJzW25hbWVdO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgLi4ucmVxdWVzdCxcbiAgICBoZWFkZXJzLFxuICAgIHF1ZXJ5LFxuICB9O1xufVxuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc2lnbmF0dXJlLXY0L2Rpc3QvZXMvbW92ZUhlYWRlcnNUb1F1ZXJ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQztBQUNHO0FBQzlDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QixxRUFBcUUsMkRBQVksMkVBQTJFO0FBQzVKO0FBQ0Esc0JBQXNCLCtDQUFRLHdDQUF3QyxVQUFVO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsUUFBUTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBLFdBQVcsK0NBQVEsQ0FBQywrQ0FBUSxHQUFHLGNBQWM7QUFDN0Msc0JBQXNCO0FBQ3RCO0FBQ0EsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9zaWduYXR1cmUtdjQvZGlzdC9lcy9tb3ZlSGVhZGVyc1RvUXVlcnkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19hc3NpZ24sIF9fdmFsdWVzIH0gZnJvbSBcInRzbGliXCI7XG5pbXBvcnQgeyBjbG9uZVJlcXVlc3QgfSBmcm9tIFwiLi9jbG9uZVJlcXVlc3RcIjtcbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtb3ZlSGVhZGVyc1RvUXVlcnkocmVxdWVzdCwgb3B0aW9ucykge1xuICAgIHZhciBlXzEsIF9hO1xuICAgIHZhciBfYjtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgIHZhciBfYyA9IHR5cGVvZiByZXF1ZXN0LmNsb25lID09PSBcImZ1bmN0aW9uXCIgPyByZXF1ZXN0LmNsb25lKCkgOiBjbG9uZVJlcXVlc3QocmVxdWVzdCksIGhlYWRlcnMgPSBfYy5oZWFkZXJzLCBfZCA9IF9jLnF1ZXJ5LCBxdWVyeSA9IF9kID09PSB2b2lkIDAgPyB7fSA6IF9kO1xuICAgIHRyeSB7XG4gICAgICAgIGZvciAodmFyIF9lID0gX192YWx1ZXMoT2JqZWN0LmtleXMoaGVhZGVycykpLCBfZiA9IF9lLm5leHQoKTsgIV9mLmRvbmU7IF9mID0gX2UubmV4dCgpKSB7XG4gICAgICAgICAgICB2YXIgbmFtZSA9IF9mLnZhbHVlO1xuICAgICAgICAgICAgdmFyIGxuYW1lID0gbmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgaWYgKGxuYW1lLnN1YnN0cigwLCA2KSA9PT0gXCJ4LWFtei1cIiAmJiAhKChfYiA9IG9wdGlvbnMudW5ob2lzdGFibGVIZWFkZXJzKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuaGFzKGxuYW1lKSkpIHtcbiAgICAgICAgICAgICAgICBxdWVyeVtuYW1lXSA9IGhlYWRlcnNbbmFtZV07XG4gICAgICAgICAgICAgICAgZGVsZXRlIGhlYWRlcnNbbmFtZV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2F0Y2ggKGVfMV8xKSB7IGVfMSA9IHsgZXJyb3I6IGVfMV8xIH07IH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChfZiAmJiAhX2YuZG9uZSAmJiAoX2EgPSBfZS5yZXR1cm4pKSBfYS5jYWxsKF9lKTtcbiAgICAgICAgfVxuICAgICAgICBmaW5hbGx5IHsgaWYgKGVfMSkgdGhyb3cgZV8xLmVycm9yOyB9XG4gICAgfVxuICAgIHJldHVybiBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgcmVxdWVzdCksIHsgaGVhZGVyczogaGVhZGVycyxcbiAgICAgICAgcXVlcnk6IHF1ZXJ5IH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYlc5MlpVaGxZV1JsY25OVWIxRjFaWEo1TG1weklpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhNaU9sc2lMaTR2TGk0dmMzSmpMMjF2ZG1WSVpXRmtaWEp6Vkc5UmRXVnllUzUwY3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pTzBGQlJVRXNUMEZCVHl4RlFVRkZMRmxCUVZrc1JVRkJSU3hOUVVGTkxHZENRVUZuUWl4RFFVRkRPMEZCUlRsRE96dEhRVVZITzBGQlEwZ3NUVUZCVFN4VlFVRlZMR3RDUVVGclFpeERRVU5vUXl4UFFVRnZRaXhGUVVOd1FpeFBRVUZyUkRzN08wbEJRV3hFTEhkQ1FVRkJMRVZCUVVFc1dVRkJhMFE3U1VGRk5VTXNTVUZCUVN4TFFVTktMRTlCUVZFc1QwRkJaU3hEUVVGRExFdEJRVXNzUzBGQlN5eFZRVUZWTEVOQlFVTXNRMEZCUXl4RFFVRkZMRTlCUVdVc1EwRkJReXhMUVVGTExFVkJRVVVzUTBGQlF5eERRVUZETEVOQlFVTXNXVUZCV1N4RFFVRkRMRTlCUVU4c1EwRkJReXhGUVVSNlJpeFBRVUZQTEdGQlFVRXNSVUZCUlN4aFFVRXJRaXhGUVVFdlFpeExRVUZMTEcxQ1FVRkhMRVZCUVhWQ0xFdEJRMmxFTEVOQlFVTTdPMUZCUTJ4SExFdEJRVzFDTEVsQlFVRXNTMEZCUVN4VFFVRkJMRTFCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEVOQlFVRXNaMEpCUVVFc05FSkJRVVU3V1VGQmNFTXNTVUZCVFN4SlFVRkpMRmRCUVVFN1dVRkRZaXhKUVVGTkxFdEJRVXNzUjBGQlJ5eEpRVUZKTEVOQlFVTXNWMEZCVnl4RlFVRkZMRU5CUVVNN1dVRkRha01zU1VGQlNTeExRVUZMTEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU1zUzBGQlN5eFJRVUZSTEVsQlFVa3NVVUZCUXl4UFFVRlBMRU5CUVVNc2EwSkJRV3RDTERCRFFVRkZMRWRCUVVjc1EwRkJReXhMUVVGTExFVkJRVU1zUlVGQlJUdG5Ra0ZET1VVc1MwRkJTeXhEUVVGRExFbEJRVWtzUTBGQlF5eEhRVUZITEU5QlFVOHNRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJRenRuUWtGRE5VSXNUMEZCVHl4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03WVVGRGRFSTdVMEZEUmpzN096czdPenM3TzBsQlJVUXNOa0pCUTBzc1QwRkJUeXhMUVVOV0xFOUJRVThzVTBGQlFUdFJRVU5RTEV0QlFVc3NUMEZCUVN4SlFVTk1PMEZCUTBvc1EwRkJReUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSW1sdGNHOXlkQ0I3SUVoMGRIQlNaWEYxWlhOMExDQlJkV1Z5ZVZCaGNtRnRaWFJsY2tKaFp5QjlJR1p5YjIwZ1hDSkFZWGR6TFhOa2F5OTBlWEJsYzF3aU8xeHVYRzVwYlhCdmNuUWdleUJqYkc5dVpWSmxjWFZsYzNRZ2ZTQm1jbTl0SUZ3aUxpOWpiRzl1WlZKbGNYVmxjM1JjSWp0Y2JseHVMeW9xWEc0Z0tpQkFhVzUwWlhKdVlXeGNiaUFxTDF4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUcxdmRtVklaV0ZrWlhKelZHOVJkV1Z5ZVNoY2JpQWdjbVZ4ZFdWemREb2dTSFIwY0ZKbGNYVmxjM1FzWEc0Z0lHOXdkR2x2Ym5NNklIc2dkVzVvYjJsemRHRmliR1ZJWldGa1pYSnpQem9nVTJWMFBITjBjbWx1Wno0Z2ZTQTlJSHQ5WEc0cE9pQklkSFJ3VW1WeGRXVnpkQ0FtSUhzZ2NYVmxjbms2SUZGMVpYSjVVR0Z5WVcxbGRHVnlRbUZuSUgwZ2UxeHVJQ0JqYjI1emRDQjdJR2hsWVdSbGNuTXNJSEYxWlhKNUlEMGdlMzBnWVhNZ1VYVmxjbmxRWVhKaGJXVjBaWEpDWVdjZ2ZTQTlYRzRnSUNBZ2RIbHdaVzltSUNoeVpYRjFaWE4wSUdGeklHRnVlU2t1WTJ4dmJtVWdQVDA5SUZ3aVpuVnVZM1JwYjI1Y0lpQS9JQ2h5WlhGMVpYTjBJR0Z6SUdGdWVTa3VZMnh2Ym1Vb0tTQTZJR05zYjI1bFVtVnhkV1Z6ZENoeVpYRjFaWE4wS1R0Y2JpQWdabTl5SUNoamIyNXpkQ0J1WVcxbElHOW1JRTlpYW1WamRDNXJaWGx6S0dobFlXUmxjbk1wS1NCN1hHNGdJQ0FnWTI5dWMzUWdiRzVoYldVZ1BTQnVZVzFsTG5SdlRHOTNaWEpEWVhObEtDazdYRzRnSUNBZ2FXWWdLR3h1WVcxbExuTjFZbk4wY2lnd0xDQTJLU0E5UFQwZ1hDSjRMV0Z0ZWkxY0lpQW1KaUFoYjNCMGFXOXVjeTUxYm1odmFYTjBZV0pzWlVobFlXUmxjbk0vTG1oaGN5aHNibUZ0WlNrcElIdGNiaUFnSUNBZ0lIRjFaWEo1VzI1aGJXVmRJRDBnYUdWaFpHVnljMXR1WVcxbFhUdGNiaUFnSUNBZ0lHUmxiR1YwWlNCb1pXRmtaWEp6VzI1aGJXVmRPMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJSEpsZEhWeWJpQjdYRzRnSUNBZ0xpNHVjbVZ4ZFdWemRDeGNiaUFnSUNCb1pXRmtaWEp6TEZ4dUlDQWdJSEYxWlhKNUxGeHVJQ0I5TzF4dWZWeHVJbDE5Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/moveHeadersToQuery.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/prepareRequest.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@aws-sdk/signature-v4/dist/es/prepareRequest.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prepareRequest: () => (/* binding */ prepareRequest)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _cloneRequest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cloneRequest */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/cloneRequest.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/constants.js\");\n\n\n\n/**\n * @internal\n */\nfunction prepareRequest(request) {\n    var e_1, _a;\n    // Create a clone of the request object that does not clone the body\n    request = typeof request.clone === \"function\" ? request.clone() : (0,_cloneRequest__WEBPACK_IMPORTED_MODULE_0__.cloneRequest)(request);\n    try {\n        for (var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__values)(Object.keys(request.headers)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var headerName = _c.value;\n            if (_constants__WEBPACK_IMPORTED_MODULE_1__.GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n                delete request.headers[headerName];\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return request;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlcGFyZVJlcXVlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvcHJlcGFyZVJlcXVlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUVBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM5QyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFFaEQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsY0FBYyxDQUFDLE9BQW9COztJQUNqRCxvRUFBb0U7SUFDcEUsT0FBTyxHQUFHLE9BQVEsT0FBZSxDQUFDLEtBQUssS0FBSyxVQUFVLENBQUMsQ0FBQyxDQUFFLE9BQWUsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxDQUFDOztRQUUxRyxLQUF5QixJQUFBLEtBQUEsU0FBQSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQSxnQkFBQSw0QkFBRTtZQUFsRCxJQUFNLFVBQVUsV0FBQTtZQUNuQixJQUFJLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsV0FBVyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRTtnQkFDNUQsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO2FBQ3BDO1NBQ0Y7Ozs7Ozs7OztJQUVELE9BQU8sT0FBTyxDQUFDO0FBQ2pCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwUmVxdWVzdCB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5pbXBvcnQgeyBjbG9uZVJlcXVlc3QgfSBmcm9tIFwiLi9jbG9uZVJlcXVlc3RcIjtcbmltcG9ydCB7IEdFTkVSQVRFRF9IRUFERVJTIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5cbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwcmVwYXJlUmVxdWVzdChyZXF1ZXN0OiBIdHRwUmVxdWVzdCk6IEh0dHBSZXF1ZXN0IHtcbiAgLy8gQ3JlYXRlIGEgY2xvbmUgb2YgdGhlIHJlcXVlc3Qgb2JqZWN0IHRoYXQgZG9lcyBub3QgY2xvbmUgdGhlIGJvZHlcbiAgcmVxdWVzdCA9IHR5cGVvZiAocmVxdWVzdCBhcyBhbnkpLmNsb25lID09PSBcImZ1bmN0aW9uXCIgPyAocmVxdWVzdCBhcyBhbnkpLmNsb25lKCkgOiBjbG9uZVJlcXVlc3QocmVxdWVzdCk7XG5cbiAgZm9yIChjb25zdCBoZWFkZXJOYW1lIG9mIE9iamVjdC5rZXlzKHJlcXVlc3QuaGVhZGVycykpIHtcbiAgICBpZiAoR0VORVJBVEVEX0hFQURFUlMuaW5kZXhPZihoZWFkZXJOYW1lLnRvTG93ZXJDYXNlKCkpID4gLTEpIHtcbiAgICAgIGRlbGV0ZSByZXF1ZXN0LmhlYWRlcnNbaGVhZGVyTmFtZV07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlcXVlc3Q7XG59XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc2lnbmF0dXJlLXY0L2Rpc3QvZXMvcHJlcGFyZVJlcXVlc3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFpQztBQUNhO0FBQ0U7QUFDaEQ7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0Esc0VBQXNFLDJEQUFZO0FBQ2xGO0FBQ0Esc0JBQXNCLCtDQUFRLGdEQUFnRCxVQUFVO0FBQ3hGO0FBQ0EsZ0JBQWdCLHlEQUFpQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixRQUFRO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc2lnbmF0dXJlLXY0L2Rpc3QvZXMvcHJlcGFyZVJlcXVlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX192YWx1ZXMgfSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IGNsb25lUmVxdWVzdCB9IGZyb20gXCIuL2Nsb25lUmVxdWVzdFwiO1xuaW1wb3J0IHsgR0VORVJBVEVEX0hFQURFUlMgfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwcmVwYXJlUmVxdWVzdChyZXF1ZXN0KSB7XG4gICAgdmFyIGVfMSwgX2E7XG4gICAgLy8gQ3JlYXRlIGEgY2xvbmUgb2YgdGhlIHJlcXVlc3Qgb2JqZWN0IHRoYXQgZG9lcyBub3QgY2xvbmUgdGhlIGJvZHlcbiAgICByZXF1ZXN0ID0gdHlwZW9mIHJlcXVlc3QuY2xvbmUgPT09IFwiZnVuY3Rpb25cIiA/IHJlcXVlc3QuY2xvbmUoKSA6IGNsb25lUmVxdWVzdChyZXF1ZXN0KTtcbiAgICB0cnkge1xuICAgICAgICBmb3IgKHZhciBfYiA9IF9fdmFsdWVzKE9iamVjdC5rZXlzKHJlcXVlc3QuaGVhZGVycykpLCBfYyA9IF9iLm5leHQoKTsgIV9jLmRvbmU7IF9jID0gX2IubmV4dCgpKSB7XG4gICAgICAgICAgICB2YXIgaGVhZGVyTmFtZSA9IF9jLnZhbHVlO1xuICAgICAgICAgICAgaWYgKEdFTkVSQVRFRF9IRUFERVJTLmluZGV4T2YoaGVhZGVyTmFtZS50b0xvd2VyQ2FzZSgpKSA+IC0xKSB7XG4gICAgICAgICAgICAgICAgZGVsZXRlIHJlcXVlc3QuaGVhZGVyc1toZWFkZXJOYW1lXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBjYXRjaCAoZV8xXzEpIHsgZV8xID0geyBlcnJvcjogZV8xXzEgfTsgfVxuICAgIGZpbmFsbHkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKF9jICYmICFfYy5kb25lICYmIChfYSA9IF9iLnJldHVybikpIF9hLmNhbGwoX2IpO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkgeyBpZiAoZV8xKSB0aHJvdyBlXzEuZXJyb3I7IH1cbiAgICB9XG4gICAgcmV0dXJuIHJlcXVlc3Q7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2ljSEpsY0dGeVpWSmxjWFZsYzNRdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12Y0hKbGNHRnlaVkpsY1hWbGMzUXVkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanRCUVVWQkxFOUJRVThzUlVGQlJTeFpRVUZaTEVWQlFVVXNUVUZCVFN4blFrRkJaMElzUTBGQlF6dEJRVU01UXl4UFFVRlBMRVZCUVVVc2FVSkJRV2xDTEVWQlFVVXNUVUZCVFN4aFFVRmhMRU5CUVVNN1FVRkZhRVE3TzBkQlJVYzdRVUZEU0N4TlFVRk5MRlZCUVZVc1kwRkJZeXhEUVVGRExFOUJRVzlDT3p0SlFVTnFSQ3h2UlVGQmIwVTdTVUZEY0VVc1QwRkJUeXhIUVVGSExFOUJRVkVzVDBGQlpTeERRVUZETEV0QlFVc3NTMEZCU3l4VlFVRlZMRU5CUVVNc1EwRkJReXhEUVVGRkxFOUJRV1VzUTBGQlF5eExRVUZMTEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVNc1dVRkJXU3hEUVVGRExFOUJRVThzUTBGQlF5eERRVUZET3p0UlFVVXhSeXhMUVVGNVFpeEpRVUZCTEV0QlFVRXNVMEZCUVN4TlFVRk5MRU5CUVVNc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUVN4blFrRkJRU3cwUWtGQlJUdFpRVUZzUkN4SlFVRk5MRlZCUVZVc1YwRkJRVHRaUVVOdVFpeEpRVUZKTEdsQ1FVRnBRaXhEUVVGRExFOUJRVThzUTBGQlF5eFZRVUZWTEVOQlFVTXNWMEZCVnl4RlFVRkZMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU1zUlVGQlJUdG5Ra0ZETlVRc1QwRkJUeXhQUVVGUExFTkJRVU1zVDBGQlR5eERRVUZETEZWQlFWVXNRMEZCUXl4RFFVRkRPMkZCUTNCRE8xTkJRMFk3T3pzN096czdPenRKUVVWRUxFOUJRVThzVDBGQlR5eERRVUZETzBGQlEycENMRU5CUVVNaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SnBiWEJ2Y25RZ2V5QklkSFJ3VW1WeGRXVnpkQ0I5SUdaeWIyMGdYQ0pBWVhkekxYTmtheTkwZVhCbGMxd2lPMXh1WEc1cGJYQnZjblFnZXlCamJHOXVaVkpsY1hWbGMzUWdmU0JtY205dElGd2lMaTlqYkc5dVpWSmxjWFZsYzNSY0lqdGNibWx0Y0c5eWRDQjdJRWRGVGtWU1FWUkZSRjlJUlVGRVJWSlRJSDBnWm5KdmJTQmNJaTR2WTI5dWMzUmhiblJ6WENJN1hHNWNiaThxS2x4dUlDb2dRR2x1ZEdWeWJtRnNYRzRnS2k5Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCd2NtVndZWEpsVW1WeGRXVnpkQ2h5WlhGMVpYTjBPaUJJZEhSd1VtVnhkV1Z6ZENrNklFaDBkSEJTWlhGMVpYTjBJSHRjYmlBZ0x5OGdRM0psWVhSbElHRWdZMnh2Ym1VZ2IyWWdkR2hsSUhKbGNYVmxjM1FnYjJKcVpXTjBJSFJvWVhRZ1pHOWxjeUJ1YjNRZ1kyeHZibVVnZEdobElHSnZaSGxjYmlBZ2NtVnhkV1Z6ZENBOUlIUjVjR1Z2WmlBb2NtVnhkV1Z6ZENCaGN5QmhibmtwTG1Oc2IyNWxJRDA5UFNCY0ltWjFibU4wYVc5dVhDSWdQeUFvY21WeGRXVnpkQ0JoY3lCaGJua3BMbU5zYjI1bEtDa2dPaUJqYkc5dVpWSmxjWFZsYzNRb2NtVnhkV1Z6ZENrN1hHNWNiaUFnWm05eUlDaGpiMjV6ZENCb1pXRmtaWEpPWVcxbElHOW1JRTlpYW1WamRDNXJaWGx6S0hKbGNYVmxjM1F1YUdWaFpHVnljeWtwSUh0Y2JpQWdJQ0JwWmlBb1IwVk9SVkpCVkVWRVgwaEZRVVJGVWxNdWFXNWtaWGhQWmlob1pXRmtaWEpPWVcxbExuUnZURzkzWlhKRFlYTmxLQ2twSUQ0Z0xURXBJSHRjYmlBZ0lDQWdJR1JsYkdWMFpTQnlaWEYxWlhOMExtaGxZV1JsY25OYmFHVmhaR1Z5VG1GdFpWMDdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdjbVYwZFhKdUlISmxjWFZsYzNRN1hHNTlYRzRpWFgwPSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/prepareRequest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/utilDate.js":
/*!****************************************************************!*\
  !*** ./node_modules/@aws-sdk/signature-v4/dist/es/utilDate.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   iso8601: () => (/* binding */ iso8601),\n/* harmony export */   toDate: () => (/* binding */ toDate)\n/* harmony export */ });\nfunction iso8601(time) {\n    return toDate(time)\n        .toISOString()\n        .replace(/\\.\\d{3}Z$/, \"Z\");\n}\nfunction toDate(time) {\n    if (typeof time === \"number\") {\n        return new Date(time * 1000);\n    }\n    if (typeof time === \"string\") {\n        if (Number(time)) {\n            return new Date(Number(time) * 1000);\n        }\n        return new Date(time);\n    }\n    return time;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbERhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbERhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxVQUFVLE9BQU8sQ0FBQyxJQUE0QjtJQUNsRCxPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUM7U0FDaEIsV0FBVyxFQUFFO1NBQ2IsT0FBTyxDQUFDLFdBQVcsRUFBRSxHQUFHLENBQUMsQ0FBQztBQUMvQixDQUFDO0FBRUQsTUFBTSxVQUFVLE1BQU0sQ0FBQyxJQUE0QjtJQUNqRCxJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsRUFBRTtRQUM1QixPQUFPLElBQUksSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsQ0FBQztLQUM5QjtJQUVELElBQUksT0FBTyxJQUFJLEtBQUssUUFBUSxFQUFFO1FBQzVCLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ2hCLE9BQU8sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO1NBQ3RDO1FBQ0QsT0FBTyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUN2QjtJQUVELE9BQU8sSUFBSSxDQUFDO0FBQ2QsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc284NjAxKHRpbWU6IG51bWJlciB8IHN0cmluZyB8IERhdGUpOiBzdHJpbmcge1xuICByZXR1cm4gdG9EYXRlKHRpbWUpXG4gICAgLnRvSVNPU3RyaW5nKClcbiAgICAucmVwbGFjZSgvXFwuXFxkezN9WiQvLCBcIlpcIik7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0b0RhdGUodGltZTogbnVtYmVyIHwgc3RyaW5nIHwgRGF0ZSk6IERhdGUge1xuICBpZiAodHlwZW9mIHRpbWUgPT09IFwibnVtYmVyXCIpIHtcbiAgICByZXR1cm4gbmV3IERhdGUodGltZSAqIDEwMDApO1xuICB9XG5cbiAgaWYgKHR5cGVvZiB0aW1lID09PSBcInN0cmluZ1wiKSB7XG4gICAgaWYgKE51bWJlcih0aW1lKSkge1xuICAgICAgcmV0dXJuIG5ldyBEYXRlKE51bWJlcih0aW1lKSAqIDEwMDApO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IERhdGUodGltZSk7XG4gIH1cblxuICByZXR1cm4gdGltZTtcbn1cbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc2lnbmF0dXJlLXY0L2Rpc3QvZXMvdXRpbERhdGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQSx1QkFBdUIsRUFBRTtBQUN6QjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc2lnbmF0dXJlLXY0L2Rpc3QvZXMvdXRpbERhdGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGlzbzg2MDEodGltZSkge1xuICAgIHJldHVybiB0b0RhdGUodGltZSlcbiAgICAgICAgLnRvSVNPU3RyaW5nKClcbiAgICAgICAgLnJlcGxhY2UoL1xcLlxcZHszfVokLywgXCJaXCIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHRvRGF0ZSh0aW1lKSB7XG4gICAgaWYgKHR5cGVvZiB0aW1lID09PSBcIm51bWJlclwiKSB7XG4gICAgICAgIHJldHVybiBuZXcgRGF0ZSh0aW1lICogMTAwMCk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdGltZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBpZiAoTnVtYmVyKHRpbWUpKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IERhdGUoTnVtYmVyKHRpbWUpICogMTAwMCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBEYXRlKHRpbWUpO1xuICAgIH1cbiAgICByZXR1cm4gdGltZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWRYUnBiRVJoZEdVdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12ZFhScGJFUmhkR1V1ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRXNUVUZCVFN4VlFVRlZMRTlCUVU4c1EwRkJReXhKUVVFMFFqdEpRVU5zUkN4UFFVRlBMRTFCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU03VTBGRGFFSXNWMEZCVnl4RlFVRkZPMU5CUTJJc1QwRkJUeXhEUVVGRExGZEJRVmNzUlVGQlJTeEhRVUZITEVOQlFVTXNRMEZCUXp0QlFVTXZRaXhEUVVGRE8wRkJSVVFzVFVGQlRTeFZRVUZWTEUxQlFVMHNRMEZCUXl4SlFVRTBRanRKUVVOcVJDeEpRVUZKTEU5QlFVOHNTVUZCU1N4TFFVRkxMRkZCUVZFc1JVRkJSVHRSUVVNMVFpeFBRVUZQTEVsQlFVa3NTVUZCU1N4RFFVRkRMRWxCUVVrc1IwRkJSeXhKUVVGSkxFTkJRVU1zUTBGQlF6dExRVU01UWp0SlFVVkVMRWxCUVVrc1QwRkJUeXhKUVVGSkxFdEJRVXNzVVVGQlVTeEZRVUZGTzFGQlF6VkNMRWxCUVVrc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF5eEZRVUZGTzFsQlEyaENMRTlCUVU4c1NVRkJTU3hKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEVsQlFVa3NRMEZCUXl4SFFVRkhMRWxCUVVrc1EwRkJReXhEUVVGRE8xTkJRM1JETzFGQlEwUXNUMEZCVHl4SlFVRkpMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF6dExRVU4yUWp0SlFVVkVMRTlCUVU4c1NVRkJTU3hEUVVGRE8wRkJRMlFzUTBGQlF5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbVY0Y0c5eWRDQm1kVzVqZEdsdmJpQnBjMjg0TmpBeEtIUnBiV1U2SUc1MWJXSmxjaUI4SUhOMGNtbHVaeUI4SUVSaGRHVXBPaUJ6ZEhKcGJtY2dlMXh1SUNCeVpYUjFjbTRnZEc5RVlYUmxLSFJwYldVcFhHNGdJQ0FnTG5SdlNWTlBVM1J5YVc1bktDbGNiaUFnSUNBdWNtVndiR0ZqWlNndlhGd3VYRnhrZXpOOVdpUXZMQ0JjSWxwY0lpazdYRzU5WEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCMGIwUmhkR1VvZEdsdFpUb2diblZ0WW1WeUlId2djM1J5YVc1bklId2dSR0YwWlNrNklFUmhkR1VnZTF4dUlDQnBaaUFvZEhsd1pXOW1JSFJwYldVZ1BUMDlJRndpYm5WdFltVnlYQ0lwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdibVYzSUVSaGRHVW9kR2x0WlNBcUlERXdNREFwTzF4dUlDQjlYRzVjYmlBZ2FXWWdLSFI1Y0dWdlppQjBhVzFsSUQwOVBTQmNJbk4wY21sdVoxd2lLU0I3WEc0Z0lDQWdhV1lnS0U1MWJXSmxjaWgwYVcxbEtTa2dlMXh1SUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJFWVhSbEtFNTFiV0psY2loMGFXMWxLU0FxSURFd01EQXBPMXh1SUNBZ0lIMWNiaUFnSUNCeVpYUjFjbTRnYm1WM0lFUmhkR1VvZEdsdFpTazdYRzRnSUgxY2JseHVJQ0J5WlhSMWNtNGdkR2x0WlR0Y2JuMWNiaUpkZlE9PSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/signature-v4/dist/es/utilDate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/signature-v4/node_modules/tslib/tslib.es6.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@aws-sdk/signature-v4/node_modules/tslib/tslib.es6.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/signature-v4/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/client.js":
/*!***************************************************************!*\
  !*** ./node_modules/@aws-sdk/smithy-client/dist/es/client.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Client: () => (/* binding */ Client)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_middleware_stack__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-stack */ \"(ssr)/./node_modules/@aws-sdk/middleware-stack/dist/es/index.js\");\n\nvar Client = /** @class */ (function () {\n    function Client(config) {\n        this.middlewareStack = (0,_aws_sdk_middleware_stack__WEBPACK_IMPORTED_MODULE_0__.constructStack)();\n        this.config = config;\n    }\n    Client.prototype.send = function (command, optionsOrCb, cb) {\n        var options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n        var callback = typeof optionsOrCb === \"function\" ? optionsOrCb : cb;\n        var handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n        if (callback) {\n            handler(command)\n                .then(function (result) { return callback(null, result.output); }, function (err) { return callback(err); })\n                .catch(\n            // prevent any errors thrown in the callback from triggering an\n            // unhandled promise rejection\n            function () { });\n        }\n        else {\n            return handler(command).then(function (result) { return result.output; });\n        }\n    };\n    Client.prototype.destroy = function () {\n        if (this.config.requestHandler.destroy)\n            this.config.requestHandler.destroy();\n    };\n    return Client;\n}());\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NsaWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFlM0Q7SUFRRSxnQkFBWSxNQUFtQztRQUZ4QyxvQkFBZSxHQUFHLGNBQWMsRUFBNkIsQ0FBQztRQUduRSxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztJQUN2QixDQUFDO0lBY0QscUJBQUksR0FBSixVQUNFLE9BQStHLEVBQy9HLFdBQXNFLEVBQ3RFLEVBQTBDO1FBRTFDLElBQU0sT0FBTyxHQUFHLE9BQU8sV0FBVyxLQUFLLFVBQVUsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7UUFDNUUsSUFBTSxRQUFRLEdBQUcsT0FBTyxXQUFXLEtBQUssVUFBVSxDQUFDLENBQUMsQ0FBRSxXQUFxRCxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDakgsSUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxlQUFzQixFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDN0YsSUFBSSxRQUFRLEVBQUU7WUFDWixPQUFPLENBQUMsT0FBTyxDQUFDO2lCQUNiLElBQUksQ0FDSCxVQUFDLE1BQU0sSUFBSyxPQUFBLFFBQVEsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUE3QixDQUE2QixFQUN6QyxVQUFDLEdBQVEsSUFBSyxPQUFBLFFBQVEsQ0FBQyxHQUFHLENBQUMsRUFBYixDQUFhLENBQzVCO2lCQUNBLEtBQUs7WUFDSiwrREFBK0Q7WUFDL0QsOEJBQThCO1lBQzlCLGNBQU8sQ0FBQyxDQUNULENBQUM7U0FDTDthQUFNO1lBQ0wsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUMsTUFBTSxJQUFLLE9BQUEsTUFBTSxDQUFDLE1BQU0sRUFBYixDQUFhLENBQUMsQ0FBQztTQUN6RDtJQUNILENBQUM7SUFFRCx3QkFBTyxHQUFQO1FBQ0UsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxPQUFPO1lBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDL0UsQ0FBQztJQUNILGFBQUM7QUFBRCxDQUFDLEFBbkRELElBbURDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29uc3RydWN0U3RhY2sgfSBmcm9tIFwiQGF3cy1zZGsvbWlkZGxld2FyZS1zdGFja1wiO1xuaW1wb3J0IHsgQ2xpZW50IGFzIElDbGllbnQsIENvbW1hbmQsIE1ldGFkYXRhQmVhcmVyLCBSZXF1ZXN0SGFuZGxlciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNtaXRoeUNvbmZpZ3VyYXRpb248SGFuZGxlck9wdGlvbnM+IHtcbiAgcmVxdWVzdEhhbmRsZXI6IFJlcXVlc3RIYW5kbGVyPGFueSwgYW55LCBIYW5kbGVyT3B0aW9ucz47XG4gIC8qKlxuICAgKiBUaGUgQVBJIHZlcnNpb24gc2V0IGludGVybmFsbHkgYnkgdGhlIFNESywgYW5kIGlzXG4gICAqIG5vdCBwbGFubmVkIHRvIGJlIHVzZWQgYnkgY3VzdG9tZXIgY29kZS5cbiAgICogQGludGVybmFsXG4gICAqL1xuICByZWFkb25seSBhcGlWZXJzaW9uOiBzdHJpbmc7XG59XG5cbmV4cG9ydCB0eXBlIFNtaXRoeVJlc29sdmVkQ29uZmlndXJhdGlvbjxIYW5kbGVyT3B0aW9ucz4gPSBTbWl0aHlDb25maWd1cmF0aW9uPEhhbmRsZXJPcHRpb25zPjtcblxuZXhwb3J0IGNsYXNzIENsaWVudDxcbiAgSGFuZGxlck9wdGlvbnMsXG4gIENsaWVudElucHV0IGV4dGVuZHMgb2JqZWN0LFxuICBDbGllbnRPdXRwdXQgZXh0ZW5kcyBNZXRhZGF0YUJlYXJlcixcbiAgUmVzb2x2ZWRDbGllbnRDb25maWd1cmF0aW9uIGV4dGVuZHMgU21pdGh5UmVzb2x2ZWRDb25maWd1cmF0aW9uPEhhbmRsZXJPcHRpb25zPlxuPiBpbXBsZW1lbnRzIElDbGllbnQ8Q2xpZW50SW5wdXQsIENsaWVudE91dHB1dCwgUmVzb2x2ZWRDbGllbnRDb25maWd1cmF0aW9uPiB7XG4gIHB1YmxpYyBtaWRkbGV3YXJlU3RhY2sgPSBjb25zdHJ1Y3RTdGFjazxDbGllbnRJbnB1dCwgQ2xpZW50T3V0cHV0PigpO1xuICByZWFkb25seSBjb25maWc6IFJlc29sdmVkQ2xpZW50Q29uZmlndXJhdGlvbjtcbiAgY29uc3RydWN0b3IoY29uZmlnOiBSZXNvbHZlZENsaWVudENvbmZpZ3VyYXRpb24pIHtcbiAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcbiAgfVxuICBzZW5kPElucHV0VHlwZSBleHRlbmRzIENsaWVudElucHV0LCBPdXRwdXRUeXBlIGV4dGVuZHMgQ2xpZW50T3V0cHV0PihcbiAgICBjb21tYW5kOiBDb21tYW5kPENsaWVudElucHV0LCBJbnB1dFR5cGUsIENsaWVudE91dHB1dCwgT3V0cHV0VHlwZSwgU21pdGh5UmVzb2x2ZWRDb25maWd1cmF0aW9uPEhhbmRsZXJPcHRpb25zPj4sXG4gICAgb3B0aW9ucz86IEhhbmRsZXJPcHRpb25zXG4gICk6IFByb21pc2U8T3V0cHV0VHlwZT47XG4gIHNlbmQ8SW5wdXRUeXBlIGV4dGVuZHMgQ2xpZW50SW5wdXQsIE91dHB1dFR5cGUgZXh0ZW5kcyBDbGllbnRPdXRwdXQ+KFxuICAgIGNvbW1hbmQ6IENvbW1hbmQ8Q2xpZW50SW5wdXQsIElucHV0VHlwZSwgQ2xpZW50T3V0cHV0LCBPdXRwdXRUeXBlLCBTbWl0aHlSZXNvbHZlZENvbmZpZ3VyYXRpb248SGFuZGxlck9wdGlvbnM+PixcbiAgICBjYjogKGVycjogYW55LCBkYXRhPzogT3V0cHV0VHlwZSkgPT4gdm9pZFxuICApOiB2b2lkO1xuICBzZW5kPElucHV0VHlwZSBleHRlbmRzIENsaWVudElucHV0LCBPdXRwdXRUeXBlIGV4dGVuZHMgQ2xpZW50T3V0cHV0PihcbiAgICBjb21tYW5kOiBDb21tYW5kPENsaWVudElucHV0LCBJbnB1dFR5cGUsIENsaWVudE91dHB1dCwgT3V0cHV0VHlwZSwgU21pdGh5UmVzb2x2ZWRDb25maWd1cmF0aW9uPEhhbmRsZXJPcHRpb25zPj4sXG4gICAgb3B0aW9uczogSGFuZGxlck9wdGlvbnMsXG4gICAgY2I6IChlcnI6IGFueSwgZGF0YT86IE91dHB1dFR5cGUpID0+IHZvaWRcbiAgKTogdm9pZDtcbiAgc2VuZDxJbnB1dFR5cGUgZXh0ZW5kcyBDbGllbnRJbnB1dCwgT3V0cHV0VHlwZSBleHRlbmRzIENsaWVudE91dHB1dD4oXG4gICAgY29tbWFuZDogQ29tbWFuZDxDbGllbnRJbnB1dCwgSW5wdXRUeXBlLCBDbGllbnRPdXRwdXQsIE91dHB1dFR5cGUsIFNtaXRoeVJlc29sdmVkQ29uZmlndXJhdGlvbjxIYW5kbGVyT3B0aW9ucz4+LFxuICAgIG9wdGlvbnNPckNiPzogSGFuZGxlck9wdGlvbnMgfCAoKGVycjogYW55LCBkYXRhPzogT3V0cHV0VHlwZSkgPT4gdm9pZCksXG4gICAgY2I/OiAoZXJyOiBhbnksIGRhdGE/OiBPdXRwdXRUeXBlKSA9PiB2b2lkXG4gICk6IFByb21pc2U8T3V0cHV0VHlwZT4gfCB2b2lkIHtcbiAgICBjb25zdCBvcHRpb25zID0gdHlwZW9mIG9wdGlvbnNPckNiICE9PSBcImZ1bmN0aW9uXCIgPyBvcHRpb25zT3JDYiA6IHVuZGVmaW5lZDtcbiAgICBjb25zdCBjYWxsYmFjayA9IHR5cGVvZiBvcHRpb25zT3JDYiA9PT0gXCJmdW5jdGlvblwiID8gKG9wdGlvbnNPckNiIGFzIChlcnI6IGFueSwgZGF0YT86IE91dHB1dFR5cGUpID0+IHZvaWQpIDogY2I7XG4gICAgY29uc3QgaGFuZGxlciA9IGNvbW1hbmQucmVzb2x2ZU1pZGRsZXdhcmUodGhpcy5taWRkbGV3YXJlU3RhY2sgYXMgYW55LCB0aGlzLmNvbmZpZywgb3B0aW9ucyk7XG4gICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICBoYW5kbGVyKGNvbW1hbmQpXG4gICAgICAgIC50aGVuKFxuICAgICAgICAgIChyZXN1bHQpID0+IGNhbGxiYWNrKG51bGwsIHJlc3VsdC5vdXRwdXQpLFxuICAgICAgICAgIChlcnI6IGFueSkgPT4gY2FsbGJhY2soZXJyKVxuICAgICAgICApXG4gICAgICAgIC5jYXRjaChcbiAgICAgICAgICAvLyBwcmV2ZW50IGFueSBlcnJvcnMgdGhyb3duIGluIHRoZSBjYWxsYmFjayBmcm9tIHRyaWdnZXJpbmcgYW5cbiAgICAgICAgICAvLyB1bmhhbmRsZWQgcHJvbWlzZSByZWplY3Rpb25cbiAgICAgICAgICAoKSA9PiB7fVxuICAgICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gaGFuZGxlcihjb21tYW5kKS50aGVuKChyZXN1bHQpID0+IHJlc3VsdC5vdXRwdXQpO1xuICAgIH1cbiAgfVxuXG4gIGRlc3Ryb3koKSB7XG4gICAgaWYgKHRoaXMuY29uZmlnLnJlcXVlc3RIYW5kbGVyLmRlc3Ryb3kpIHRoaXMuY29uZmlnLnJlcXVlc3RIYW5kbGVyLmRlc3Ryb3koKTtcbiAgfVxufVxuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/command.js":
/*!****************************************************************!*\
  !*** ./node_modules/@aws-sdk/smithy-client/dist/es/command.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Command: () => (/* binding */ Command)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_middleware_stack__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-stack */ \"(ssr)/./node_modules/@aws-sdk/middleware-stack/dist/es/index.js\");\n\nvar Command = /** @class */ (function () {\n    function Command() {\n        this.middlewareStack = (0,_aws_sdk_middleware_stack__WEBPACK_IMPORTED_MODULE_0__.constructStack)();\n    }\n    return Command;\n}());\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWFuZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tYW5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUczRDtJQUFBO1FBUVcsb0JBQWUsR0FBb0MsY0FBYyxFQUFpQixDQUFDO0lBTTlGLENBQUM7SUFBRCxjQUFDO0FBQUQsQ0FBQyxBQWRELElBY0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb25zdHJ1Y3RTdGFjayB9IGZyb20gXCJAYXdzLXNkay9taWRkbGV3YXJlLXN0YWNrXCI7XG5pbXBvcnQgeyBDb21tYW5kIGFzIElDb21tYW5kLCBIYW5kbGVyLCBNZXRhZGF0YUJlYXJlciwgTWlkZGxld2FyZVN0YWNrIGFzIElNaWRkbGV3YXJlU3RhY2sgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIENvbW1hbmQ8XG4gIElucHV0IGV4dGVuZHMgQ2xpZW50SW5wdXQsXG4gIE91dHB1dCBleHRlbmRzIENsaWVudE91dHB1dCxcbiAgUmVzb2x2ZWRDbGllbnRDb25maWd1cmF0aW9uLFxuICBDbGllbnRJbnB1dCBleHRlbmRzIG9iamVjdCA9IGFueSxcbiAgQ2xpZW50T3V0cHV0IGV4dGVuZHMgTWV0YWRhdGFCZWFyZXIgPSBhbnlcbj4gaW1wbGVtZW50cyBJQ29tbWFuZDxDbGllbnRJbnB1dCwgSW5wdXQsIENsaWVudE91dHB1dCwgT3V0cHV0LCBSZXNvbHZlZENsaWVudENvbmZpZ3VyYXRpb24+IHtcbiAgYWJzdHJhY3QgaW5wdXQ6IElucHV0O1xuICByZWFkb25seSBtaWRkbGV3YXJlU3RhY2s6IElNaWRkbGV3YXJlU3RhY2s8SW5wdXQsIE91dHB1dD4gPSBjb25zdHJ1Y3RTdGFjazxJbnB1dCwgT3V0cHV0PigpO1xuICBhYnN0cmFjdCByZXNvbHZlTWlkZGxld2FyZShcbiAgICBzdGFjazogSU1pZGRsZXdhcmVTdGFjazxDbGllbnRJbnB1dCwgQ2xpZW50T3V0cHV0PixcbiAgICBjb25maWd1cmF0aW9uOiBSZXNvbHZlZENsaWVudENvbmZpZ3VyYXRpb24sXG4gICAgb3B0aW9uczogYW55XG4gICk6IEhhbmRsZXI8SW5wdXQsIE91dHB1dD47XG59XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc21pdGh5LWNsaWVudC9kaXN0L2VzL2NvbW1hbmQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMkQ7QUFDM0Q7QUFDQTtBQUNBLCtCQUErQix5RUFBYztBQUM3QztBQUNBO0FBQ0EsQ0FBQztBQUNrQjtBQUNuQiwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL3NtaXRoeS1jbGllbnQvZGlzdC9lcy9jb21tYW5kLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbnN0cnVjdFN0YWNrIH0gZnJvbSBcIkBhd3Mtc2RrL21pZGRsZXdhcmUtc3RhY2tcIjtcbnZhciBDb21tYW5kID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENvbW1hbmQoKSB7XG4gICAgICAgIHRoaXMubWlkZGxld2FyZVN0YWNrID0gY29uc3RydWN0U3RhY2soKTtcbiAgICB9XG4gICAgcmV0dXJuIENvbW1hbmQ7XG59KCkpO1xuZXhwb3J0IHsgQ29tbWFuZCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pWTI5dGJXRnVaQzVxY3lJc0luTnZkWEpqWlZKdmIzUWlPaUlpTENKemIzVnlZMlZ6SWpwYklpNHVMeTR1TDNOeVl5OWpiMjF0WVc1a0xuUnpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCTEU5QlFVOHNSVUZCUlN4alFVRmpMRVZCUVVVc1RVRkJUU3d5UWtGQk1rSXNRMEZCUXp0QlFVY3pSRHRKUVVGQk8xRkJVVmNzYjBKQlFXVXNSMEZCYjBNc1kwRkJZeXhGUVVGcFFpeERRVUZETzBsQlRUbEdMRU5CUVVNN1NVRkJSQ3hqUVVGRE8wRkJRVVFzUTBGQlF5eEJRV1JFTEVsQlkwTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpwYlhCdmNuUWdleUJqYjI1emRISjFZM1JUZEdGamF5QjlJR1p5YjIwZ1hDSkFZWGR6TFhOa2F5OXRhV1JrYkdWM1lYSmxMWE4wWVdOclhDSTdYRzVwYlhCdmNuUWdleUJEYjIxdFlXNWtJR0Z6SUVsRGIyMXRZVzVrTENCSVlXNWtiR1Z5TENCTlpYUmhaR0YwWVVKbFlYSmxjaXdnVFdsa1pHeGxkMkZ5WlZOMFlXTnJJR0Z6SUVsTmFXUmtiR1YzWVhKbFUzUmhZMnNnZlNCbWNtOXRJRndpUUdGM2N5MXpaR3N2ZEhsd1pYTmNJanRjYmx4dVpYaHdiM0owSUdGaWMzUnlZV04wSUdOc1lYTnpJRU52YlcxaGJtUThYRzRnSUVsdWNIVjBJR1Y0ZEdWdVpITWdRMnhwWlc1MFNXNXdkWFFzWEc0Z0lFOTFkSEIxZENCbGVIUmxibVJ6SUVOc2FXVnVkRTkxZEhCMWRDeGNiaUFnVW1WemIyeDJaV1JEYkdsbGJuUkRiMjVtYVdkMWNtRjBhVzl1TEZ4dUlDQkRiR2xsYm5SSmJuQjFkQ0JsZUhSbGJtUnpJRzlpYW1WamRDQTlJR0Z1ZVN4Y2JpQWdRMnhwWlc1MFQzVjBjSFYwSUdWNGRHVnVaSE1nVFdWMFlXUmhkR0ZDWldGeVpYSWdQU0JoYm5sY2JqNGdhVzF3YkdWdFpXNTBjeUJKUTI5dGJXRnVaRHhEYkdsbGJuUkpibkIxZEN3Z1NXNXdkWFFzSUVOc2FXVnVkRTkxZEhCMWRDd2dUM1YwY0hWMExDQlNaWE52YkhabFpFTnNhV1Z1ZEVOdmJtWnBaM1Z5WVhScGIyNCtJSHRjYmlBZ1lXSnpkSEpoWTNRZ2FXNXdkWFE2SUVsdWNIVjBPMXh1SUNCeVpXRmtiMjVzZVNCdGFXUmtiR1YzWVhKbFUzUmhZMnM2SUVsTmFXUmtiR1YzWVhKbFUzUmhZMnM4U1c1d2RYUXNJRTkxZEhCMWRENGdQU0JqYjI1emRISjFZM1JUZEdGamF6eEpibkIxZEN3Z1QzVjBjSFYwUGlncE8xeHVJQ0JoWW5OMGNtRmpkQ0J5WlhOdmJIWmxUV2xrWkd4bGQyRnlaU2hjYmlBZ0lDQnpkR0ZqYXpvZ1NVMXBaR1JzWlhkaGNtVlRkR0ZqYXp4RGJHbGxiblJKYm5CMWRDd2dRMnhwWlc1MFQzVjBjSFYwUGl4Y2JpQWdJQ0JqYjI1bWFXZDFjbUYwYVc5dU9pQlNaWE52YkhabFpFTnNhV1Z1ZEVOdmJtWnBaM1Z5WVhScGIyNHNYRzRnSUNBZ2IzQjBhVzl1Y3pvZ1lXNTVYRzRnSUNrNklFaGhibVJzWlhJOFNXNXdkWFFzSUU5MWRIQjFkRDQ3WEc1OVhHNGlYWDA9Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/command.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/constants.js":
/*!******************************************************************!*\
  !*** ./node_modules/@aws-sdk/smithy-client/dist/es/constants.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SENSITIVE_STRING: () => (/* binding */ SENSITIVE_STRING)\n/* harmony export */ });\nvar SENSITIVE_STRING = \"***SensitiveInformation***\";\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUMsSUFBTSxnQkFBZ0IsR0FBRyw0QkFBNEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBTRU5TSVRJVkVfU1RSSU5HID0gXCIqKipTZW5zaXRpdmVJbmZvcm1hdGlvbioqKlwiO1xuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc21pdGh5LWNsaWVudC9kaXN0L2VzL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUCwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL3NtaXRoeS1jbGllbnQvZGlzdC9lcy9jb25zdGFudHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBTRU5TSVRJVkVfU1RSSU5HID0gXCIqKipTZW5zaXRpdmVJbmZvcm1hdGlvbioqKlwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pWTI5dWMzUmhiblJ6TG1weklpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhNaU9sc2lMaTR2TGk0dmMzSmpMMk52Ym5OMFlXNTBjeTUwY3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFTeE5RVUZOTEVOQlFVTXNTVUZCVFN4blFrRkJaMElzUjBGQlJ5dzBRa0ZCTkVJc1EwRkJReUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSW1WNGNHOXlkQ0JqYjI1emRDQlRSVTVUU1ZSSlZrVmZVMVJTU1U1SElEMGdYQ0lxS2lwVFpXNXphWFJwZG1WSmJtWnZjbTFoZEdsdmJpb3FLbHdpTzF4dUlsMTkiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/date-utils.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@aws-sdk/smithy-client/dist/es/date-utils.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dateToUtcString: () => (/* binding */ dateToUtcString)\n/* harmony export */ });\n/**\n * Builds a proper UTC HttpDate timestamp from a Date object\n * since not all environments will have this as the expected\n * format.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toUTCString\n * > Prior to ECMAScript 2018, the format of the return value\n * > varied according to the platform. The most common return\n * > value was an RFC-1123 formatted date stamp, which is a\n * > slightly updated version of RFC-822 date stamps.\n */\n// Build indexes outside so we allocate them once.\nvar days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n// prettier-ignore\nvar months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nfunction dateToUtcString(date) {\n    var year = date.getUTCFullYear();\n    var month = date.getUTCMonth();\n    var dayOfWeek = date.getUTCDay();\n    var dayOfMonthInt = date.getUTCDate();\n    var hoursInt = date.getUTCHours();\n    var minutesInt = date.getUTCMinutes();\n    var secondsInt = date.getUTCSeconds();\n    // Build 0 prefixed strings for contents that need to be\n    // two digits and where we get an integer back.\n    var dayOfMonthString = dayOfMonthInt < 10 ? \"0\" + dayOfMonthInt : \"\" + dayOfMonthInt;\n    var hoursString = hoursInt < 10 ? \"0\" + hoursInt : \"\" + hoursInt;\n    var minutesString = minutesInt < 10 ? \"0\" + minutesInt : \"\" + minutesInt;\n    var secondsString = secondsInt < 10 ? \"0\" + secondsInt : \"\" + secondsInt;\n    return days[dayOfWeek] + \", \" + dayOfMonthString + \" \" + months[month] + \" \" + year + \" \" + hoursString + \":\" + minutesString + \":\" + secondsString + \" GMT\";\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kYXRlLXV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7O0dBVUc7QUFFSCxrREFBa0Q7QUFDbEQsSUFBTSxJQUFJLEdBQWtCLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDOUUsa0JBQWtCO0FBQ2xCLElBQU0sTUFBTSxHQUFrQixDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFFbkgsTUFBTSxVQUFVLGVBQWUsQ0FBQyxJQUFVO0lBQ3hDLElBQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUNuQyxJQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDakMsSUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ25DLElBQU0sYUFBYSxHQUFHLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUN4QyxJQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDcEMsSUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQ3hDLElBQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUV4Qyx3REFBd0Q7SUFDeEQsK0NBQStDO0lBQy9DLElBQU0sZ0JBQWdCLEdBQUcsYUFBYSxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsTUFBSSxhQUFlLENBQUMsQ0FBQyxDQUFDLEtBQUcsYUFBZSxDQUFDO0lBQ3ZGLElBQU0sV0FBVyxHQUFHLFFBQVEsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLE1BQUksUUFBVSxDQUFDLENBQUMsQ0FBQyxLQUFHLFFBQVUsQ0FBQztJQUNuRSxJQUFNLGFBQWEsR0FBRyxVQUFVLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFJLFVBQVksQ0FBQyxDQUFDLENBQUMsS0FBRyxVQUFZLENBQUM7SUFDM0UsSUFBTSxhQUFhLEdBQUcsVUFBVSxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsTUFBSSxVQUFZLENBQUMsQ0FBQyxDQUFDLEtBQUcsVUFBWSxDQUFDO0lBRTNFLE9BQVUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFLLGdCQUFnQixTQUFJLE1BQU0sQ0FBQyxLQUFLLENBQUMsU0FBSSxJQUFJLFNBQUksV0FBVyxTQUFJLGFBQWEsU0FBSSxhQUFhLFNBQU0sQ0FBQztBQUNqSSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBCdWlsZHMgYSBwcm9wZXIgVVRDIEh0dHBEYXRlIHRpbWVzdGFtcCBmcm9tIGEgRGF0ZSBvYmplY3RcbiAqIHNpbmNlIG5vdCBhbGwgZW52aXJvbm1lbnRzIHdpbGwgaGF2ZSB0aGlzIGFzIHRoZSBleHBlY3RlZFxuICogZm9ybWF0LlxuICpcbiAqIFNlZTogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvRGF0ZS90b1VUQ1N0cmluZ1xuICogPiBQcmlvciB0byBFQ01BU2NyaXB0IDIwMTgsIHRoZSBmb3JtYXQgb2YgdGhlIHJldHVybiB2YWx1ZVxuICogPiB2YXJpZWQgYWNjb3JkaW5nIHRvIHRoZSBwbGF0Zm9ybS4gVGhlIG1vc3QgY29tbW9uIHJldHVyblxuICogPiB2YWx1ZSB3YXMgYW4gUkZDLTExMjMgZm9ybWF0dGVkIGRhdGUgc3RhbXAsIHdoaWNoIGlzIGFcbiAqID4gc2xpZ2h0bHkgdXBkYXRlZCB2ZXJzaW9uIG9mIFJGQy04MjIgZGF0ZSBzdGFtcHMuXG4gKi9cblxuLy8gQnVpbGQgaW5kZXhlcyBvdXRzaWRlIHNvIHdlIGFsbG9jYXRlIHRoZW0gb25jZS5cbmNvbnN0IGRheXM6IEFycmF5PFN0cmluZz4gPSBbXCJTdW5cIiwgXCJNb25cIiwgXCJUdWVcIiwgXCJXZWRcIiwgXCJUaHVcIiwgXCJGcmlcIiwgXCJTYXRcIl07XG4vLyBwcmV0dGllci1pZ25vcmVcbmNvbnN0IG1vbnRoczogQXJyYXk8U3RyaW5nPiA9IFtcIkphblwiLCBcIkZlYlwiLCBcIk1hclwiLCBcIkFwclwiLCBcIk1heVwiLCBcIkp1blwiLCBcIkp1bFwiLCBcIkF1Z1wiLCBcIlNlcFwiLCBcIk9jdFwiLCBcIk5vdlwiLCBcIkRlY1wiXTtcblxuZXhwb3J0IGZ1bmN0aW9uIGRhdGVUb1V0Y1N0cmluZyhkYXRlOiBEYXRlKTogc3RyaW5nIHtcbiAgY29uc3QgeWVhciA9IGRhdGUuZ2V0VVRDRnVsbFllYXIoKTtcbiAgY29uc3QgbW9udGggPSBkYXRlLmdldFVUQ01vbnRoKCk7XG4gIGNvbnN0IGRheU9mV2VlayA9IGRhdGUuZ2V0VVRDRGF5KCk7XG4gIGNvbnN0IGRheU9mTW9udGhJbnQgPSBkYXRlLmdldFVUQ0RhdGUoKTtcbiAgY29uc3QgaG91cnNJbnQgPSBkYXRlLmdldFVUQ0hvdXJzKCk7XG4gIGNvbnN0IG1pbnV0ZXNJbnQgPSBkYXRlLmdldFVUQ01pbnV0ZXMoKTtcbiAgY29uc3Qgc2Vjb25kc0ludCA9IGRhdGUuZ2V0VVRDU2Vjb25kcygpO1xuXG4gIC8vIEJ1aWxkIDAgcHJlZml4ZWQgc3RyaW5ncyBmb3IgY29udGVudHMgdGhhdCBuZWVkIHRvIGJlXG4gIC8vIHR3byBkaWdpdHMgYW5kIHdoZXJlIHdlIGdldCBhbiBpbnRlZ2VyIGJhY2suXG4gIGNvbnN0IGRheU9mTW9udGhTdHJpbmcgPSBkYXlPZk1vbnRoSW50IDwgMTAgPyBgMCR7ZGF5T2ZNb250aEludH1gIDogYCR7ZGF5T2ZNb250aEludH1gO1xuICBjb25zdCBob3Vyc1N0cmluZyA9IGhvdXJzSW50IDwgMTAgPyBgMCR7aG91cnNJbnR9YCA6IGAke2hvdXJzSW50fWA7XG4gIGNvbnN0IG1pbnV0ZXNTdHJpbmcgPSBtaW51dGVzSW50IDwgMTAgPyBgMCR7bWludXRlc0ludH1gIDogYCR7bWludXRlc0ludH1gO1xuICBjb25zdCBzZWNvbmRzU3RyaW5nID0gc2Vjb25kc0ludCA8IDEwID8gYDAke3NlY29uZHNJbnR9YCA6IGAke3NlY29uZHNJbnR9YDtcblxuICByZXR1cm4gYCR7ZGF5c1tkYXlPZldlZWtdfSwgJHtkYXlPZk1vbnRoU3RyaW5nfSAke21vbnRoc1ttb250aF19ICR7eWVhcn0gJHtob3Vyc1N0cmluZ306JHttaW51dGVzU3RyaW5nfToke3NlY29uZHNTdHJpbmd9IEdNVGA7XG59XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/date-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/document-type.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@aws-sdk/smithy-client/dist/es/document-type.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9jdW1lbnQtdHlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kb2N1bWVudC10eXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNtaXRoeSBkb2N1bWVudCB0eXBlIHZhbHVlcy5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1uYW1lc3BhY2VcbmV4cG9ydCBuYW1lc3BhY2UgRG9jdW1lbnRUeXBlIHtcbiAgZXhwb3J0IHR5cGUgVmFsdWUgPSBTY2FsYXIgfCBTdHJ1Y3R1cmUgfCBMaXN0O1xuICBleHBvcnQgdHlwZSBTY2FsYXIgPSBzdHJpbmcgfCBudW1iZXIgfCBib29sZWFuIHwgbnVsbDtcbiAgZXhwb3J0IHR5cGUgU3RydWN0dXJlID0geyBbbWVtYmVyOiBzdHJpbmddOiBWYWx1ZSB9O1xuICBleHBvcnQgaW50ZXJmYWNlIExpc3QgZXh0ZW5kcyBBcnJheTxWYWx1ZT4ge31cbn1cbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc21pdGh5LWNsaWVudC9kaXN0L2VzL2RvY3VtZW50LXR5cGUuanMiLCJtYXBwaW5ncyI6IjtBQUFVO0FBQ1YsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9zbWl0aHktY2xpZW50L2Rpc3QvZXMvZG9jdW1lbnQtdHlwZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2laRzlqZFcxbGJuUXRkSGx3WlM1cWN5SXNJbk52ZFhKalpWSnZiM1FpT2lJaUxDSnpiM1Z5WTJWeklqcGJJaTR1THk0dUwzTnlZeTlrYjJOMWJXVnVkQzEwZVhCbExuUnpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUl2S2lwY2JpQXFJRk50YVhSb2VTQmtiMk4xYldWdWRDQjBlWEJsSUhaaGJIVmxjeTVjYmlBcUwxeHVMeThnWlhOc2FXNTBMV1JwYzJGaWJHVXRibVY0ZEMxc2FXNWxJRUIwZVhCbGMyTnlhWEIwTFdWemJHbHVkQzl1YnkxdVlXMWxjM0JoWTJWY2JtVjRjRzl5ZENCdVlXMWxjM0JoWTJVZ1JHOWpkVzFsYm5SVWVYQmxJSHRjYmlBZ1pYaHdiM0owSUhSNWNHVWdWbUZzZFdVZ1BTQlRZMkZzWVhJZ2ZDQlRkSEoxWTNSMWNtVWdmQ0JNYVhOME8xeHVJQ0JsZUhCdmNuUWdkSGx3WlNCVFkyRnNZWElnUFNCemRISnBibWNnZkNCdWRXMWlaWElnZkNCaWIyOXNaV0Z1SUh3Z2JuVnNiRHRjYmlBZ1pYaHdiM0owSUhSNWNHVWdVM1J5ZFdOMGRYSmxJRDBnZXlCYmJXVnRZbVZ5T2lCemRISnBibWRkT2lCV1lXeDFaU0I5TzF4dUlDQmxlSEJ2Y25RZ2FXNTBaWEptWVdObElFeHBjM1FnWlhoMFpXNWtjeUJCY25KaGVUeFdZV3gxWlQ0Z2UzMWNibjFjYmlKZGZRPT0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/document-type.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/exception.js":
/*!******************************************************************!*\
  !*** ./node_modules/@aws-sdk/smithy-client/dist/es/exception.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhjZXB0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2V4Y2VwdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmV0cnlhYmxlVHJhaXQgfSBmcm9tIFwiLi9yZXRyeWFibGUtdHJhaXRcIjtcblxuLyoqXG4gKiBUeXBlIHRoYXQgaXMgaW1wbGVtZW50ZWQgYnkgYWxsIFNtaXRoeSBzaGFwZXMgbWFya2VkIHdpdGggdGhlXG4gKiBlcnJvciB0cmFpdC5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBTbWl0aHlFeGNlcHRpb24ge1xuICAvKipcbiAgICogVGhlIHNoYXBlIElEIG5hbWUgb2YgdGhlIGV4Y2VwdGlvbi5cbiAgICovXG4gIHJlYWRvbmx5IG5hbWU6IHN0cmluZztcblxuICAvKipcbiAgICogV2hldGhlciB0aGUgY2xpZW50IG9yIHNlcnZlciBhcmUgYXQgZmF1bHQuXG4gICAqL1xuICByZWFkb25seSAkZmF1bHQ6IFwiY2xpZW50XCIgfCBcInNlcnZlclwiO1xuXG4gIC8qKlxuICAgKiBUaGUgc2VydmljZSB0aGF0IGVuY291bnRlcmVkIHRoZSBleGNlcHRpb24uXG4gICAqL1xuICByZWFkb25seSAkc2VydmljZT86IHN0cmluZztcblxuICAvKipcbiAgICogSW5kaWNhdGVzIHRoYXQgYW4gZXJyb3IgTUFZIGJlIHJldHJpZWQgYnkgdGhlIGNsaWVudC5cbiAgICovXG4gIHJlYWRvbmx5ICRyZXRyeWFibGU/OiBSZXRyeWFibGVUcmFpdDtcbn1cbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc21pdGh5LWNsaWVudC9kaXN0L2VzL2V4Y2VwdGlvbi5qcyIsIm1hcHBpbmdzIjoiO0FBQVU7QUFDViwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL3NtaXRoeS1jbGllbnQvZGlzdC9lcy9leGNlcHRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pWlhoalpYQjBhVzl1TG1weklpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhNaU9sc2lMaTR2TGk0dmMzSmpMMlY0WTJWd2RHbHZiaTUwY3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pSWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaWFXMXdiM0owSUhzZ1VtVjBjbmxoWW14bFZISmhhWFFnZlNCbWNtOXRJRndpTGk5eVpYUnllV0ZpYkdVdGRISmhhWFJjSWp0Y2JseHVMeW9xWEc0Z0tpQlVlWEJsSUhSb1lYUWdhWE1nYVcxd2JHVnRaVzUwWldRZ1lua2dZV3hzSUZOdGFYUm9lU0J6YUdGd1pYTWdiV0Z5YTJWa0lIZHBkR2dnZEdobFhHNGdLaUJsY25KdmNpQjBjbUZwZEM1Y2JpQXFMMXh1Wlhod2IzSjBJR2x1ZEdWeVptRmpaU0JUYldsMGFIbEZlR05sY0hScGIyNGdlMXh1SUNBdktpcGNiaUFnSUNvZ1ZHaGxJSE5vWVhCbElFbEVJRzVoYldVZ2IyWWdkR2hsSUdWNFkyVndkR2x2Ymk1Y2JpQWdJQ292WEc0Z0lISmxZV1J2Ym14NUlHNWhiV1U2SUhOMGNtbHVaenRjYmx4dUlDQXZLaXBjYmlBZ0lDb2dWMmhsZEdobGNpQjBhR1VnWTJ4cFpXNTBJRzl5SUhObGNuWmxjaUJoY21VZ1lYUWdabUYxYkhRdVhHNGdJQ0FxTDF4dUlDQnlaV0ZrYjI1c2VTQWtabUYxYkhRNklGd2lZMnhwWlc1MFhDSWdmQ0JjSW5ObGNuWmxjbHdpTzF4dVhHNGdJQzhxS2x4dUlDQWdLaUJVYUdVZ2MyVnlkbWxqWlNCMGFHRjBJR1Z1WTI5MWJuUmxjbVZrSUhSb1pTQmxlR05sY0hScGIyNHVYRzRnSUNBcUwxeHVJQ0J5WldGa2IyNXNlU0FrYzJWeWRtbGpaVDg2SUhOMGNtbHVaenRjYmx4dUlDQXZLaXBjYmlBZ0lDb2dTVzVrYVdOaGRHVnpJSFJvWVhRZ1lXNGdaWEp5YjNJZ1RVRlpJR0psSUhKbGRISnBaV1FnWW5rZ2RHaGxJR05zYVdWdWRDNWNiaUFnSUNvdlhHNGdJSEpsWVdSdmJteDVJQ1J5WlhSeWVXRmliR1UvT2lCU1pYUnllV0ZpYkdWVWNtRnBkRHRjYm4xY2JpSmRmUT09Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/exception.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/extended-encode-uri-component.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/smithy-client/dist/es/extended-encode-uri-component.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extendedEncodeURIComponent: () => (/* binding */ extendedEncodeURIComponent)\n/* harmony export */ });\n/**\n * Function that wraps encodeURIComponent to encode additional characters\n * to fully adhere to RFC 3986.\n */\nfunction extendedEncodeURIComponent(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n        return \"%\" + c.charCodeAt(0).toString(16);\n    });\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXh0ZW5kZWQtZW5jb2RlLXVyaS1jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZXh0ZW5kZWQtZW5jb2RlLXVyaS1jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHO0FBQ0gsTUFBTSxVQUFVLDBCQUEwQixDQUFDLEdBQVc7SUFDcEQsT0FBTyxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFLFVBQVUsQ0FBQztRQUM1RCxPQUFPLEdBQUcsR0FBRyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUM1QyxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEZ1bmN0aW9uIHRoYXQgd3JhcHMgZW5jb2RlVVJJQ29tcG9uZW50IHRvIGVuY29kZSBhZGRpdGlvbmFsIGNoYXJhY3RlcnNcbiAqIHRvIGZ1bGx5IGFkaGVyZSB0byBSRkMgMzk4Ni5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGV4dGVuZGVkRW5jb2RlVVJJQ29tcG9uZW50KHN0cjogc3RyaW5nKTogc3RyaW5nIHtcbiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChzdHIpLnJlcGxhY2UoL1shJygpKl0vZywgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gXCIlXCIgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpO1xuICB9KTtcbn1cbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc21pdGh5LWNsaWVudC9kaXN0L2VzL2V4dGVuZGVkLWVuY29kZS11cmktY29tcG9uZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc21pdGh5LWNsaWVudC9kaXN0L2VzL2V4dGVuZGVkLWVuY29kZS11cmktY29tcG9uZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRnVuY3Rpb24gdGhhdCB3cmFwcyBlbmNvZGVVUklDb21wb25lbnQgdG8gZW5jb2RlIGFkZGl0aW9uYWwgY2hhcmFjdGVyc1xuICogdG8gZnVsbHkgYWRoZXJlIHRvIFJGQyAzOTg2LlxuICovXG5leHBvcnQgZnVuY3Rpb24gZXh0ZW5kZWRFbmNvZGVVUklDb21wb25lbnQoc3RyKSB7XG4gICAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChzdHIpLnJlcGxhY2UoL1shJygpKl0vZywgZnVuY3Rpb24gKGMpIHtcbiAgICAgICAgcmV0dXJuIFwiJVwiICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KTtcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVpYaDBaVzVrWldRdFpXNWpiMlJsTFhWeWFTMWpiMjF3YjI1bGJuUXVhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOHVMaTl6Y21NdlpYaDBaVzVrWldRdFpXNWpiMlJsTFhWeWFTMWpiMjF3YjI1bGJuUXVkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFN096dEhRVWRITzBGQlEwZ3NUVUZCVFN4VlFVRlZMREJDUVVFd1FpeERRVUZETEVkQlFWYzdTVUZEY0VRc1QwRkJUeXhyUWtGQmEwSXNRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJReXhQUVVGUExFTkJRVU1zVlVGQlZTeEZRVUZGTEZWQlFWVXNRMEZCUXp0UlFVTTFSQ3hQUVVGUExFZEJRVWNzUjBGQlJ5eERRVUZETEVOQlFVTXNWVUZCVlN4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExGRkJRVkVzUTBGQlF5eEZRVUZGTEVOQlFVTXNRMEZCUXp0SlFVTTFReXhEUVVGRExFTkJRVU1zUTBGQlF6dEJRVU5NTEVOQlFVTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUl2S2lwY2JpQXFJRVoxYm1OMGFXOXVJSFJvWVhRZ2QzSmhjSE1nWlc1amIyUmxWVkpKUTI5dGNHOXVaVzUwSUhSdklHVnVZMjlrWlNCaFpHUnBkR2x2Ym1Gc0lHTm9ZWEpoWTNSbGNuTmNiaUFxSUhSdklHWjFiR3g1SUdGa2FHVnlaU0IwYnlCU1JrTWdNems0Tmk1Y2JpQXFMMXh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJR1Y0ZEdWdVpHVmtSVzVqYjJSbFZWSkpRMjl0Y0c5dVpXNTBLSE4wY2pvZ2MzUnlhVzVuS1RvZ2MzUnlhVzVuSUh0Y2JpQWdjbVYwZFhKdUlHVnVZMjlrWlZWU1NVTnZiWEJ2Ym1WdWRDaHpkSElwTG5KbGNHeGhZMlVvTDFzaEp5Z3BLbDB2Wnl3Z1puVnVZM1JwYjI0Z0tHTXBJSHRjYmlBZ0lDQnlaWFIxY200Z1hDSWxYQ0lnS3lCakxtTm9ZWEpEYjJSbFFYUW9NQ2t1ZEc5VGRISnBibWNvTVRZcE8xeHVJQ0I5S1R0Y2JuMWNiaUpkZlE9PSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/extended-encode-uri-component.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/get-array-if-single-item.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/smithy-client/dist/es/get-array-if-single-item.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getArrayIfSingleItem: () => (/* binding */ getArrayIfSingleItem)\n/* harmony export */ });\n/**\n * The XML parser will set one K:V for a member that could\n * return multiple entries but only has one.\n */\nvar getArrayIfSingleItem = function (mayBeArray) {\n    return Array.isArray(mayBeArray) ? mayBeArray : [mayBeArray];\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LWFycmF5LWlmLXNpbmdsZS1pdGVtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2dldC1hcnJheS1pZi1zaW5nbGUtaXRlbS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7QUFDSCxNQUFNLENBQUMsSUFBTSxvQkFBb0IsR0FBRyxVQUFJLFVBQWE7SUFDbkQsT0FBQSxLQUFLLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDO0FBQXJELENBQXFELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoZSBYTUwgcGFyc2VyIHdpbGwgc2V0IG9uZSBLOlYgZm9yIGEgbWVtYmVyIHRoYXQgY291bGRcbiAqIHJldHVybiBtdWx0aXBsZSBlbnRyaWVzIGJ1dCBvbmx5IGhhcyBvbmUuXG4gKi9cbmV4cG9ydCBjb25zdCBnZXRBcnJheUlmU2luZ2xlSXRlbSA9IDxUPihtYXlCZUFycmF5OiBUKTogVCB8IFRbXSA9PlxuICBBcnJheS5pc0FycmF5KG1heUJlQXJyYXkpID8gbWF5QmVBcnJheSA6IFttYXlCZUFycmF5XTtcbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc21pdGh5LWNsaWVudC9kaXN0L2VzL2dldC1hcnJheS1pZi1zaW5nbGUtaXRlbS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL3NtaXRoeS1jbGllbnQvZGlzdC9lcy9nZXQtYXJyYXktaWYtc2luZ2xlLWl0ZW0uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGUgWE1MIHBhcnNlciB3aWxsIHNldCBvbmUgSzpWIGZvciBhIG1lbWJlciB0aGF0IGNvdWxkXG4gKiByZXR1cm4gbXVsdGlwbGUgZW50cmllcyBidXQgb25seSBoYXMgb25lLlxuICovXG5leHBvcnQgdmFyIGdldEFycmF5SWZTaW5nbGVJdGVtID0gZnVuY3Rpb24gKG1heUJlQXJyYXkpIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShtYXlCZUFycmF5KSA/IG1heUJlQXJyYXkgOiBbbWF5QmVBcnJheV07XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pWjJWMExXRnljbUY1TFdsbUxYTnBibWRzWlMxcGRHVnRMbXB6SWl3aWMyOTFjbU5sVW05dmRDSTZJaUlzSW5OdmRYSmpaWE1pT2xzaUxpNHZMaTR2YzNKakwyZGxkQzFoY25KaGVTMXBaaTF6YVc1bmJHVXRhWFJsYlM1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRVHM3TzBkQlIwYzdRVUZEU0N4TlFVRk5MRU5CUVVNc1NVRkJUU3h2UWtGQmIwSXNSMEZCUnl4VlFVRkpMRlZCUVdFN1NVRkRia1FzVDBGQlFTeExRVUZMTEVOQlFVTXNUMEZCVHl4RFFVRkRMRlZCUVZVc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eFZRVUZWTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1ZVRkJWU3hEUVVGRE8wRkJRWEpFTEVOQlFYRkVMRU5CUVVNaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SXZLaXBjYmlBcUlGUm9aU0JZVFV3Z2NHRnljMlZ5SUhkcGJHd2djMlYwSUc5dVpTQkxPbFlnWm05eUlHRWdiV1Z0WW1WeUlIUm9ZWFFnWTI5MWJHUmNiaUFxSUhKbGRIVnliaUJ0ZFd4MGFYQnNaU0JsYm5SeWFXVnpJR0oxZENCdmJteDVJR2hoY3lCdmJtVXVYRzRnS2k5Y2JtVjRjRzl5ZENCamIyNXpkQ0JuWlhSQmNuSmhlVWxtVTJsdVoyeGxTWFJsYlNBOUlEeFVQaWh0WVhsQ1pVRnljbUY1T2lCVUtUb2dWQ0I4SUZSYlhTQTlQbHh1SUNCQmNuSmhlUzVwYzBGeWNtRjVLRzFoZVVKbFFYSnlZWGtwSUQ4Z2JXRjVRbVZCY25KaGVTQTZJRnR0WVhsQ1pVRnljbUY1WFR0Y2JpSmRmUT09Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/get-array-if-single-item.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/get-value-from-text-node.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/smithy-client/dist/es/get-value-from-text-node.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getValueFromTextNode: () => (/* binding */ getValueFromTextNode)\n/* harmony export */ });\n/**\n * Recursively parses object and populates value is node from\n * \"#text\" key if it's available\n */\nvar getValueFromTextNode = function (obj) {\n    var textNodeName = \"#text\";\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key) && obj[key][textNodeName] !== undefined) {\n            obj[key] = obj[key][textNodeName];\n        }\n        else if (typeof obj[key] === \"object\" && obj[key] !== null) {\n            obj[key] = getValueFromTextNode(obj[key]);\n        }\n    }\n    return obj;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LXZhbHVlLWZyb20tdGV4dC1ub2RlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2dldC12YWx1ZS1mcm9tLXRleHQtbm9kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7QUFDSCxNQUFNLENBQUMsSUFBTSxvQkFBb0IsR0FBRyxVQUFDLEdBQVE7SUFDM0MsSUFBTSxZQUFZLEdBQUcsT0FBTyxDQUFDO0lBQzdCLEtBQUssSUFBTSxHQUFHLElBQUksR0FBRyxFQUFFO1FBQ3JCLElBQUksR0FBRyxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsSUFBSSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsWUFBWSxDQUFDLEtBQUssU0FBUyxFQUFFO1lBQ25FLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7U0FDbkM7YUFBTSxJQUFJLE9BQU8sR0FBRyxDQUFDLEdBQUcsQ0FBQyxLQUFLLFFBQVEsSUFBSSxHQUFHLENBQUMsR0FBRyxDQUFDLEtBQUssSUFBSSxFQUFFO1lBQzVELEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxvQkFBb0IsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztTQUMzQztLQUNGO0lBQ0QsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJlY3Vyc2l2ZWx5IHBhcnNlcyBvYmplY3QgYW5kIHBvcHVsYXRlcyB2YWx1ZSBpcyBub2RlIGZyb21cbiAqIFwiI3RleHRcIiBrZXkgaWYgaXQncyBhdmFpbGFibGVcbiAqL1xuZXhwb3J0IGNvbnN0IGdldFZhbHVlRnJvbVRleHROb2RlID0gKG9iajogYW55KSA9PiB7XG4gIGNvbnN0IHRleHROb2RlTmFtZSA9IFwiI3RleHRcIjtcbiAgZm9yIChjb25zdCBrZXkgaW4gb2JqKSB7XG4gICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShrZXkpICYmIG9ialtrZXldW3RleHROb2RlTmFtZV0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgb2JqW2tleV0gPSBvYmpba2V5XVt0ZXh0Tm9kZU5hbWVdO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIG9ialtrZXldID09PSBcIm9iamVjdFwiICYmIG9ialtrZXldICE9PSBudWxsKSB7XG4gICAgICBvYmpba2V5XSA9IGdldFZhbHVlRnJvbVRleHROb2RlKG9ialtrZXldKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG9iajtcbn07XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc21pdGh5LWNsaWVudC9kaXN0L2VzL2dldC12YWx1ZS1mcm9tLXRleHQtbm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL3NtaXRoeS1jbGllbnQvZGlzdC9lcy9nZXQtdmFsdWUtZnJvbS10ZXh0LW5vZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZWN1cnNpdmVseSBwYXJzZXMgb2JqZWN0IGFuZCBwb3B1bGF0ZXMgdmFsdWUgaXMgbm9kZSBmcm9tXG4gKiBcIiN0ZXh0XCIga2V5IGlmIGl0J3MgYXZhaWxhYmxlXG4gKi9cbmV4cG9ydCB2YXIgZ2V0VmFsdWVGcm9tVGV4dE5vZGUgPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgdmFyIHRleHROb2RlTmFtZSA9IFwiI3RleHRcIjtcbiAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgICAgIGlmIChvYmouaGFzT3duUHJvcGVydHkoa2V5KSAmJiBvYmpba2V5XVt0ZXh0Tm9kZU5hbWVdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIG9ialtrZXldID0gb2JqW2tleV1bdGV4dE5vZGVOYW1lXTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2Ygb2JqW2tleV0gPT09IFwib2JqZWN0XCIgJiYgb2JqW2tleV0gIT09IG51bGwpIHtcbiAgICAgICAgICAgIG9ialtrZXldID0gZ2V0VmFsdWVGcm9tVGV4dE5vZGUob2JqW2tleV0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBvYmo7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pWjJWMExYWmhiSFZsTFdaeWIyMHRkR1Y0ZEMxdWIyUmxMbXB6SWl3aWMyOTFjbU5sVW05dmRDSTZJaUlzSW5OdmRYSmpaWE1pT2xzaUxpNHZMaTR2YzNKakwyZGxkQzEyWVd4MVpTMW1jbTl0TFhSbGVIUXRibTlrWlM1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRVHM3TzBkQlIwYzdRVUZEU0N4TlFVRk5MRU5CUVVNc1NVRkJUU3h2UWtGQmIwSXNSMEZCUnl4VlFVRkRMRWRCUVZFN1NVRkRNME1zU1VGQlRTeFpRVUZaTEVkQlFVY3NUMEZCVHl4RFFVRkRPMGxCUXpkQ0xFdEJRVXNzU1VGQlRTeEhRVUZITEVsQlFVa3NSMEZCUnl4RlFVRkZPMUZCUTNKQ0xFbEJRVWtzUjBGQlJ5eERRVUZETEdOQlFXTXNRMEZCUXl4SFFVRkhMRU5CUVVNc1NVRkJTU3hIUVVGSExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNXVUZCV1N4RFFVRkRMRXRCUVVzc1UwRkJVeXhGUVVGRk8xbEJRMjVGTEVkQlFVY3NRMEZCUXl4SFFVRkhMRU5CUVVNc1IwRkJSeXhIUVVGSExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNXVUZCV1N4RFFVRkRMRU5CUVVNN1UwRkRia003WVVGQlRTeEpRVUZKTEU5QlFVOHNSMEZCUnl4RFFVRkRMRWRCUVVjc1EwRkJReXhMUVVGTExGRkJRVkVzU1VGQlNTeEhRVUZITEVOQlFVTXNSMEZCUnl4RFFVRkRMRXRCUVVzc1NVRkJTU3hGUVVGRk8xbEJRelZFTEVkQlFVY3NRMEZCUXl4SFFVRkhMRU5CUVVNc1IwRkJSeXh2UWtGQmIwSXNRMEZCUXl4SFFVRkhMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU1zUTBGQlF6dFRRVU16UXp0TFFVTkdPMGxCUTBRc1QwRkJUeXhIUVVGSExFTkJRVU03UVVGRFlpeERRVUZETEVOQlFVTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUl2S2lwY2JpQXFJRkpsWTNWeWMybDJaV3g1SUhCaGNuTmxjeUJ2WW1wbFkzUWdZVzVrSUhCdmNIVnNZWFJsY3lCMllXeDFaU0JwY3lCdWIyUmxJR1p5YjIxY2JpQXFJRndpSTNSbGVIUmNJaUJyWlhrZ2FXWWdhWFFuY3lCaGRtRnBiR0ZpYkdWY2JpQXFMMXh1Wlhod2IzSjBJR052Ym5OMElHZGxkRlpoYkhWbFJuSnZiVlJsZUhST2IyUmxJRDBnS0c5aWFqb2dZVzU1S1NBOVBpQjdYRzRnSUdOdmJuTjBJSFJsZUhST2IyUmxUbUZ0WlNBOUlGd2lJM1JsZUhSY0lqdGNiaUFnWm05eUlDaGpiMjV6ZENCclpYa2dhVzRnYjJKcUtTQjdYRzRnSUNBZ2FXWWdLRzlpYWk1b1lYTlBkMjVRY205d1pYSjBlU2hyWlhrcElDWW1JRzlpYWx0clpYbGRXM1JsZUhST2IyUmxUbUZ0WlYwZ0lUMDlJSFZ1WkdWbWFXNWxaQ2tnZTF4dUlDQWdJQ0FnYjJKcVcydGxlVjBnUFNCdlltcGJhMlY1WFZ0MFpYaDBUbTlrWlU1aGJXVmRPMXh1SUNBZ0lIMGdaV3h6WlNCcFppQW9kSGx3Wlc5bUlHOWlhbHRyWlhsZElEMDlQU0JjSW05aWFtVmpkRndpSUNZbUlHOWlhbHRyWlhsZElDRTlQU0J1ZFd4c0tTQjdYRzRnSUNBZ0lDQnZZbXBiYTJWNVhTQTlJR2RsZEZaaGJIVmxSbkp2YlZSbGVIUk9iMlJsS0c5aWFsdHJaWGxkS1R0Y2JpQWdJQ0I5WEc0Z0lIMWNiaUFnY21WMGRYSnVJRzlpYWp0Y2JuMDdYRzRpWFgwPSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/get-value-from-text-node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@aws-sdk/smithy-client/dist/es/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Client: () => (/* reexport safe */ _client__WEBPACK_IMPORTED_MODULE_0__.Client),\n/* harmony export */   Command: () => (/* reexport safe */ _command__WEBPACK_IMPORTED_MODULE_1__.Command),\n/* harmony export */   LazyJsonString: () => (/* reexport safe */ _lazy_json__WEBPACK_IMPORTED_MODULE_7__.LazyJsonString),\n/* harmony export */   SENSITIVE_STRING: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_10__.SENSITIVE_STRING),\n/* harmony export */   StringWrapper: () => (/* reexport safe */ _lazy_json__WEBPACK_IMPORTED_MODULE_7__.StringWrapper),\n/* harmony export */   dateToUtcString: () => (/* reexport safe */ _date_utils__WEBPACK_IMPORTED_MODULE_8__.dateToUtcString),\n/* harmony export */   extendedEncodeURIComponent: () => (/* reexport safe */ _extended_encode_uri_component__WEBPACK_IMPORTED_MODULE_4__.extendedEncodeURIComponent),\n/* harmony export */   getArrayIfSingleItem: () => (/* reexport safe */ _get_array_if_single_item__WEBPACK_IMPORTED_MODULE_5__.getArrayIfSingleItem),\n/* harmony export */   getValueFromTextNode: () => (/* reexport safe */ _get_value_from_text_node__WEBPACK_IMPORTED_MODULE_6__.getValueFromTextNode),\n/* harmony export */   splitEvery: () => (/* reexport safe */ _split_every__WEBPACK_IMPORTED_MODULE_9__.splitEvery)\n/* harmony export */ });\n/* harmony import */ var _client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client */ \"(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/client.js\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./command */ \"(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/command.js\");\n/* harmony import */ var _document_type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./document-type */ \"(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/document-type.js\");\n/* harmony import */ var _exception__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./exception */ \"(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/exception.js\");\n/* harmony import */ var _extended_encode_uri_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./extended-encode-uri-component */ \"(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/extended-encode-uri-component.js\");\n/* harmony import */ var _get_array_if_single_item__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./get-array-if-single-item */ \"(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/get-array-if-single-item.js\");\n/* harmony import */ var _get_value_from_text_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./get-value-from-text-node */ \"(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/get-value-from-text-node.js\");\n/* harmony import */ var _lazy_json__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lazy-json */ \"(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/lazy-json.js\");\n/* harmony import */ var _date_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./date-utils */ \"(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/date-utils.js\");\n/* harmony import */ var _split_every__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./split-every */ \"(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/split-every.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/constants.js\");\n/* harmony import */ var _retryable_trait__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./retryable-trait */ \"(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/retryable-trait.js\");\n/* harmony import */ var _sdk_error__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./sdk-error */ \"(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/sdk-error.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxVQUFVLENBQUM7QUFDekIsY0FBYyxXQUFXLENBQUM7QUFDMUIsY0FBYyxpQkFBaUIsQ0FBQztBQUNoQyxjQUFjLGFBQWEsQ0FBQztBQUM1QixjQUFjLGlDQUFpQyxDQUFDO0FBQ2hELGNBQWMsNEJBQTRCLENBQUM7QUFDM0MsY0FBYyw0QkFBNEIsQ0FBQztBQUMzQyxjQUFjLGFBQWEsQ0FBQztBQUM1QixjQUFjLGNBQWMsQ0FBQztBQUM3QixjQUFjLGVBQWUsQ0FBQztBQUM5QixjQUFjLGFBQWEsQ0FBQztBQUM1QixjQUFjLG1CQUFtQixDQUFDO0FBQ2xDLGNBQWMsYUFBYSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vY2xpZW50XCI7XG5leHBvcnQgKiBmcm9tIFwiLi9jb21tYW5kXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9kb2N1bWVudC10eXBlXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9leGNlcHRpb25cIjtcbmV4cG9ydCAqIGZyb20gXCIuL2V4dGVuZGVkLWVuY29kZS11cmktY29tcG9uZW50XCI7XG5leHBvcnQgKiBmcm9tIFwiLi9nZXQtYXJyYXktaWYtc2luZ2xlLWl0ZW1cIjtcbmV4cG9ydCAqIGZyb20gXCIuL2dldC12YWx1ZS1mcm9tLXRleHQtbm9kZVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vbGF6eS1qc29uXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9kYXRlLXV0aWxzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zcGxpdC1ldmVyeVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9yZXRyeWFibGUtdHJhaXRcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3Nkay1lcnJvclwiO1xuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc21pdGh5LWNsaWVudC9kaXN0L2VzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXlCO0FBQ0M7QUFDTTtBQUNKO0FBQ29CO0FBQ0w7QUFDQTtBQUNmO0FBQ0M7QUFDQztBQUNGO0FBQ007QUFDTjtBQUM1QiwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL3NtaXRoeS1jbGllbnQvZGlzdC9lcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9jbGllbnRcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2NvbW1hbmRcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2RvY3VtZW50LXR5cGVcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2V4Y2VwdGlvblwiO1xuZXhwb3J0ICogZnJvbSBcIi4vZXh0ZW5kZWQtZW5jb2RlLXVyaS1jb21wb25lbnRcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2dldC1hcnJheS1pZi1zaW5nbGUtaXRlbVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vZ2V0LXZhbHVlLWZyb20tdGV4dC1ub2RlXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9sYXp5LWpzb25cIjtcbmV4cG9ydCAqIGZyb20gXCIuL2RhdGUtdXRpbHNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3NwbGl0LWV2ZXJ5XCI7XG5leHBvcnQgKiBmcm9tIFwiLi9jb25zdGFudHNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3JldHJ5YWJsZS10cmFpdFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vc2RrLWVycm9yXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lhVzVrWlhndWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12YVc1a1pYZ3VkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1kwRkJZeXhWUVVGVkxFTkJRVU03UVVGRGVrSXNZMEZCWXl4WFFVRlhMRU5CUVVNN1FVRkRNVUlzWTBGQll5eHBRa0ZCYVVJc1EwRkJRenRCUVVOb1F5eGpRVUZqTEdGQlFXRXNRMEZCUXp0QlFVTTFRaXhqUVVGakxHbERRVUZwUXl4RFFVRkRPMEZCUTJoRUxHTkJRV01zTkVKQlFUUkNMRU5CUVVNN1FVRkRNME1zWTBGQll5dzBRa0ZCTkVJc1EwRkJRenRCUVVNelF5eGpRVUZqTEdGQlFXRXNRMEZCUXp0QlFVTTFRaXhqUVVGakxHTkJRV01zUTBGQlF6dEJRVU0zUWl4alFVRmpMR1ZCUVdVc1EwRkJRenRCUVVNNVFpeGpRVUZqTEdGQlFXRXNRMEZCUXp0QlFVTTFRaXhqUVVGakxHMUNRVUZ0UWl4RFFVRkRPMEZCUTJ4RExHTkJRV01zWVVGQllTeERRVUZESWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaVpYaHdiM0owSUNvZ1puSnZiU0JjSWk0dlkyeHBaVzUwWENJN1hHNWxlSEJ2Y25RZ0tpQm1jbTl0SUZ3aUxpOWpiMjF0WVc1a1hDSTdYRzVsZUhCdmNuUWdLaUJtY205dElGd2lMaTlrYjJOMWJXVnVkQzEwZVhCbFhDSTdYRzVsZUhCdmNuUWdLaUJtY205dElGd2lMaTlsZUdObGNIUnBiMjVjSWp0Y2JtVjRjRzl5ZENBcUlHWnliMjBnWENJdUwyVjRkR1Z1WkdWa0xXVnVZMjlrWlMxMWNta3RZMjl0Y0c5dVpXNTBYQ0k3WEc1bGVIQnZjblFnS2lCbWNtOXRJRndpTGk5blpYUXRZWEp5WVhrdGFXWXRjMmx1WjJ4bExXbDBaVzFjSWp0Y2JtVjRjRzl5ZENBcUlHWnliMjBnWENJdUwyZGxkQzEyWVd4MVpTMW1jbTl0TFhSbGVIUXRibTlrWlZ3aU8xeHVaWGh3YjNKMElDb2dabkp2YlNCY0lpNHZiR0Y2ZVMxcWMyOXVYQ0k3WEc1bGVIQnZjblFnS2lCbWNtOXRJRndpTGk5a1lYUmxMWFYwYVd4elhDSTdYRzVsZUhCdmNuUWdLaUJtY205dElGd2lMaTl6Y0d4cGRDMWxkbVZ5ZVZ3aU8xeHVaWGh3YjNKMElDb2dabkp2YlNCY0lpNHZZMjl1YzNSaGJuUnpYQ0k3WEc1bGVIQnZjblFnS2lCbWNtOXRJRndpTGk5eVpYUnllV0ZpYkdVdGRISmhhWFJjSWp0Y2JtVjRjRzl5ZENBcUlHWnliMjBnWENJdUwzTmtheTFsY25KdmNsd2lPMXh1SWwxOSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/lazy-json.js":
/*!******************************************************************!*\
  !*** ./node_modules/@aws-sdk/smithy-client/dist/es/lazy-json.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LazyJsonString: () => (/* binding */ LazyJsonString),\n/* harmony export */   StringWrapper: () => (/* binding */ StringWrapper)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/smithy-client/node_modules/tslib/tslib.es6.js\");\n/**\n * Lazy String holder for JSON typed contents.\n */\n\n/**\n * Because of https://github.com/microsoft/tslib/issues/95,\n * TS 'extends' shim doesn't support extending native types like String.\n * So here we create StringWrapper that duplicate everything from String\n * class including its prototype chain. So we can extend from here.\n */\n// @ts-ignore StringWrapper implementation is not a simple constructor\nvar StringWrapper = function () {\n    //@ts-ignore 'this' cannot be assigned to any, but Object.getPrototypeOf accepts any\n    var Class = Object.getPrototypeOf(this).constructor;\n    var Constructor = Function.bind.apply(String, (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__spread)([null], arguments));\n    //@ts-ignore Call wrapped String constructor directly, don't bother typing it.\n    var instance = new Constructor();\n    Object.setPrototypeOf(instance, Class.prototype);\n    return instance;\n};\nStringWrapper.prototype = Object.create(String.prototype, {\n    constructor: {\n        value: StringWrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true,\n    },\n});\nObject.setPrototypeOf(StringWrapper, String);\nvar LazyJsonString = /** @class */ (function (_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(LazyJsonString, _super);\n    function LazyJsonString() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LazyJsonString.prototype.deserializeJSON = function () {\n        return JSON.parse(_super.prototype.toString.call(this));\n    };\n    LazyJsonString.prototype.toJSON = function () {\n        return _super.prototype.toString.call(this);\n    };\n    LazyJsonString.fromObject = function (object) {\n        if (object instanceof LazyJsonString) {\n            return object;\n        }\n        else if (object instanceof String || typeof object === \"string\") {\n            return new LazyJsonString(object);\n        }\n        return new LazyJsonString(JSON.stringify(object));\n    };\n    return LazyJsonString;\n}(StringWrapper));\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF6eS1qc29uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2xhenktanNvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRzs7QUFNSDs7Ozs7R0FLRztBQUNILHNFQUFzRTtBQUN0RSxNQUFNLENBQUMsSUFBTSxhQUFhLEdBQWtCO0lBQzFDLG9GQUFvRjtJQUNwRixJQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxDQUFDLFdBQVcsQ0FBQztJQUN0RCxJQUFNLFdBQVcsR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLFlBQUcsSUFBVyxHQUFLLFNBQVMsRUFBRSxDQUFDO0lBQzdFLDhFQUE4RTtJQUM5RSxJQUFNLFFBQVEsR0FBRyxJQUFJLFdBQVcsRUFBRSxDQUFDO0lBQ25DLE1BQU0sQ0FBQyxjQUFjLENBQUMsUUFBUSxFQUFFLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNqRCxPQUFPLFFBQWtCLENBQUM7QUFDNUIsQ0FBQyxDQUFDO0FBQ0YsYUFBYSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFTLEVBQUU7SUFDeEQsV0FBVyxFQUFFO1FBQ1gsS0FBSyxFQUFFLGFBQWE7UUFDcEIsVUFBVSxFQUFFLEtBQUs7UUFDakIsUUFBUSxFQUFFLElBQUk7UUFDZCxZQUFZLEVBQUUsSUFBSTtLQUNuQjtDQUNGLENBQUMsQ0FBQztBQUNILE1BQU0sQ0FBQyxjQUFjLENBQUMsYUFBYSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0FBRTdDO0lBQW9DLGtDQUFhO0lBQWpEOztJQWlCQSxDQUFDO0lBaEJDLHdDQUFlLEdBQWY7UUFDRSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsaUJBQU0sUUFBUSxXQUFFLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBRUQsK0JBQU0sR0FBTjtRQUNFLE9BQU8saUJBQU0sUUFBUSxXQUFFLENBQUM7SUFDMUIsQ0FBQztJQUVNLHlCQUFVLEdBQWpCLFVBQWtCLE1BQVc7UUFDM0IsSUFBSSxNQUFNLFlBQVksY0FBYyxFQUFFO1lBQ3BDLE9BQU8sTUFBTSxDQUFDO1NBQ2Y7YUFBTSxJQUFJLE1BQU0sWUFBWSxNQUFNLElBQUksT0FBTyxNQUFNLEtBQUssUUFBUSxFQUFFO1lBQ2pFLE9BQU8sSUFBSSxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDbkM7UUFDRCxPQUFPLElBQUksY0FBYyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUNwRCxDQUFDO0lBQ0gscUJBQUM7QUFBRCxDQUFDLEFBakJELENBQW9DLGFBQWEsR0FpQmhEIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMYXp5IFN0cmluZyBob2xkZXIgZm9yIEpTT04gdHlwZWQgY29udGVudHMuXG4gKi9cblxuaW50ZXJmYWNlIFN0cmluZ1dyYXBwZXIge1xuICBuZXcgKGFyZzogYW55KTogU3RyaW5nO1xufVxuXG4vKipcbiAqIEJlY2F1c2Ugb2YgaHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC90c2xpYi9pc3N1ZXMvOTUsXG4gKiBUUyAnZXh0ZW5kcycgc2hpbSBkb2Vzbid0IHN1cHBvcnQgZXh0ZW5kaW5nIG5hdGl2ZSB0eXBlcyBsaWtlIFN0cmluZy5cbiAqIFNvIGhlcmUgd2UgY3JlYXRlIFN0cmluZ1dyYXBwZXIgdGhhdCBkdXBsaWNhdGUgZXZlcnl0aGluZyBmcm9tIFN0cmluZ1xuICogY2xhc3MgaW5jbHVkaW5nIGl0cyBwcm90b3R5cGUgY2hhaW4uIFNvIHdlIGNhbiBleHRlbmQgZnJvbSBoZXJlLlxuICovXG4vLyBAdHMtaWdub3JlIFN0cmluZ1dyYXBwZXIgaW1wbGVtZW50YXRpb24gaXMgbm90IGEgc2ltcGxlIGNvbnN0cnVjdG9yXG5leHBvcnQgY29uc3QgU3RyaW5nV3JhcHBlcjogU3RyaW5nV3JhcHBlciA9IGZ1bmN0aW9uICgpIHtcbiAgLy9AdHMtaWdub3JlICd0aGlzJyBjYW5ub3QgYmUgYXNzaWduZWQgdG8gYW55LCBidXQgT2JqZWN0LmdldFByb3RvdHlwZU9mIGFjY2VwdHMgYW55XG4gIGNvbnN0IENsYXNzID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yO1xuICBjb25zdCBDb25zdHJ1Y3RvciA9IEZ1bmN0aW9uLmJpbmQuYXBwbHkoU3RyaW5nLCBbbnVsbCBhcyBhbnksIC4uLmFyZ3VtZW50c10pO1xuICAvL0B0cy1pZ25vcmUgQ2FsbCB3cmFwcGVkIFN0cmluZyBjb25zdHJ1Y3RvciBkaXJlY3RseSwgZG9uJ3QgYm90aGVyIHR5cGluZyBpdC5cbiAgY29uc3QgaW5zdGFuY2UgPSBuZXcgQ29uc3RydWN0b3IoKTtcbiAgT2JqZWN0LnNldFByb3RvdHlwZU9mKGluc3RhbmNlLCBDbGFzcy5wcm90b3R5cGUpO1xuICByZXR1cm4gaW5zdGFuY2UgYXMgU3RyaW5nO1xufTtcblN0cmluZ1dyYXBwZXIucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShTdHJpbmcucHJvdG90eXBlLCB7XG4gIGNvbnN0cnVjdG9yOiB7XG4gICAgdmFsdWU6IFN0cmluZ1dyYXBwZXIsXG4gICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgd3JpdGFibGU6IHRydWUsXG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICB9LFxufSk7XG5PYmplY3Quc2V0UHJvdG90eXBlT2YoU3RyaW5nV3JhcHBlciwgU3RyaW5nKTtcblxuZXhwb3J0IGNsYXNzIExhenlKc29uU3RyaW5nIGV4dGVuZHMgU3RyaW5nV3JhcHBlciB7XG4gIGRlc2VyaWFsaXplSlNPTigpOiBhbnkge1xuICAgIHJldHVybiBKU09OLnBhcnNlKHN1cGVyLnRvU3RyaW5nKCkpO1xuICB9XG5cbiAgdG9KU09OKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHN1cGVyLnRvU3RyaW5nKCk7XG4gIH1cblxuICBzdGF0aWMgZnJvbU9iamVjdChvYmplY3Q6IGFueSk6IExhenlKc29uU3RyaW5nIHtcbiAgICBpZiAob2JqZWN0IGluc3RhbmNlb2YgTGF6eUpzb25TdHJpbmcpIHtcbiAgICAgIHJldHVybiBvYmplY3Q7XG4gICAgfSBlbHNlIGlmIChvYmplY3QgaW5zdGFuY2VvZiBTdHJpbmcgfHwgdHlwZW9mIG9iamVjdCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgcmV0dXJuIG5ldyBMYXp5SnNvblN0cmluZyhvYmplY3QpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IExhenlKc29uU3RyaW5nKEpTT04uc3RyaW5naWZ5KG9iamVjdCkpO1xuICB9XG59XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/lazy-json.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/retryable-trait.js":
/*!************************************************************************!*\
  !*** ./node_modules/@aws-sdk/smithy-client/dist/es/retryable-trait.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmV0cnlhYmxlLXRyYWl0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3JldHJ5YWJsZS10cmFpdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIHN0cnVjdHVyZSBzaGFwZSB3aXRoIHRoZSBlcnJvciB0cmFpdC5cbiAqIGh0dHBzOi8vYXdzbGFicy5naXRodWIuaW8vc21pdGh5L3NwZWMvY29yZS5odG1sI3JldHJ5YWJsZS10cmFpdFxuICovXG5leHBvcnQgaW50ZXJmYWNlIFJldHJ5YWJsZVRyYWl0IHtcbiAgLyoqXG4gICAqIEluZGljYXRlcyB0aGF0IHRoZSBlcnJvciBpcyBhIHJldHJ5YWJsZSB0aHJvdHRsaW5nIGVycm9yLlxuICAgKi9cbiAgcmVhZG9ubHkgdGhyb3R0bGluZz86IGJvb2xlYW47XG59XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc21pdGh5LWNsaWVudC9kaXN0L2VzL3JldHJ5YWJsZS10cmFpdC5qcyIsIm1hcHBpbmdzIjoiO0FBQVU7QUFDViwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL3NtaXRoeS1jbGllbnQvZGlzdC9lcy9yZXRyeWFibGUtdHJhaXQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pY21WMGNubGhZbXhsTFhSeVlXbDBMbXB6SWl3aWMyOTFjbU5sVW05dmRDSTZJaUlzSW5OdmRYSmpaWE1pT2xzaUxpNHZMaTR2YzNKakwzSmxkSEo1WVdKc1pTMTBjbUZwZEM1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaUlpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lMeW9xWEc0Z0tpQkJJSE4wY25WamRIVnlaU0J6YUdGd1pTQjNhWFJvSUhSb1pTQmxjbkp2Y2lCMGNtRnBkQzVjYmlBcUlHaDBkSEJ6T2k4dllYZHpiR0ZpY3k1bmFYUm9kV0l1YVc4dmMyMXBkR2g1TDNOd1pXTXZZMjl5WlM1b2RHMXNJM0psZEhKNVlXSnNaUzEwY21GcGRGeHVJQ292WEc1bGVIQnZjblFnYVc1MFpYSm1ZV05sSUZKbGRISjVZV0pzWlZSeVlXbDBJSHRjYmlBZ0x5b3FYRzRnSUNBcUlFbHVaR2xqWVhSbGN5QjBhR0YwSUhSb1pTQmxjbkp2Y2lCcGN5QmhJSEpsZEhKNVlXSnNaU0IwYUhKdmRIUnNhVzVuSUdWeWNtOXlMbHh1SUNBZ0tpOWNiaUFnY21WaFpHOXViSGtnZEdoeWIzUjBiR2x1Wno4NklHSnZiMnhsWVc0N1hHNTlYRzRpWFgwPSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/retryable-trait.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/sdk-error.js":
/*!******************************************************************!*\
  !*** ./node_modules/@aws-sdk/smithy-client/dist/es/sdk-error.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2RrLWVycm9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3Nkay1lcnJvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWV0YWRhdGFCZWFyZXIgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuaW1wb3J0IHsgU21pdGh5RXhjZXB0aW9uIH0gZnJvbSBcIi4vZXhjZXB0aW9uXCI7XG5cbmV4cG9ydCB0eXBlIFNka0Vycm9yID0gRXJyb3IgJiBTbWl0aHlFeGNlcHRpb24gJiBNZXRhZGF0YUJlYXJlcjtcbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc21pdGh5LWNsaWVudC9kaXN0L2VzL3Nkay1lcnJvci5qcyIsIm1hcHBpbmdzIjoiO0FBQVU7QUFDViwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL3NtaXRoeS1jbGllbnQvZGlzdC9lcy9zZGstZXJyb3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYzJSckxXVnljbTl5TG1weklpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhNaU9sc2lMaTR2TGk0dmMzSmpMM05rYXkxbGNuSnZjaTUwY3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pSWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaWFXMXdiM0owSUhzZ1RXVjBZV1JoZEdGQ1pXRnlaWElnZlNCbWNtOXRJRndpUUdGM2N5MXpaR3N2ZEhsd1pYTmNJanRjYmx4dWFXMXdiM0owSUhzZ1UyMXBkR2g1UlhoalpYQjBhVzl1SUgwZ1puSnZiU0JjSWk0dlpYaGpaWEIwYVc5dVhDSTdYRzVjYm1WNGNHOXlkQ0IwZVhCbElGTmthMFZ5Y205eUlEMGdSWEp5YjNJZ0ppQlRiV2wwYUhsRmVHTmxjSFJwYjI0Z0ppQk5aWFJoWkdGMFlVSmxZWEpsY2p0Y2JpSmRmUT09Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/sdk-error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/split-every.js":
/*!********************************************************************!*\
  !*** ./node_modules/@aws-sdk/smithy-client/dist/es/split-every.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   splitEvery: () => (/* binding */ splitEvery)\n/* harmony export */ });\n/**\n * Given an input string, splits based on the delimiter after a given\n * number of delimiters has been encountered.\n *\n * @param value The input string to split.\n * @param delimiter The delimiter to split on.\n * @param numDelimiters The number of delimiters to have encountered to split.\n */\nfunction splitEvery(value, delimiter, numDelimiters) {\n    // Fail if we don't have a clear number to split on.\n    if (numDelimiters <= 0 || !Number.isInteger(numDelimiters)) {\n        throw new Error(\"Invalid number of delimiters (\" + numDelimiters + \") for splitEvery.\");\n    }\n    var segments = value.split(delimiter);\n    // Short circuit extra logic for the simple case.\n    if (numDelimiters === 1) {\n        return segments;\n    }\n    var compoundSegments = [];\n    var currentSegment = \"\";\n    for (var i = 0; i < segments.length; i++) {\n        if (currentSegment === \"\") {\n            // Start a new segment.\n            currentSegment = segments[i];\n        }\n        else {\n            // Compound the current segment with the delimiter.\n            currentSegment += delimiter + segments[i];\n        }\n        if ((i + 1) % numDelimiters === 0) {\n            // We encountered the right number of delimiters, so add the entry.\n            compoundSegments.push(currentSegment);\n            // And reset the current segment.\n            currentSegment = \"\";\n        }\n    }\n    // Handle any leftover segment portion.\n    if (currentSegment !== \"\") {\n        compoundSegments.push(currentSegment);\n    }\n    return compoundSegments;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BsaXQtZXZlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc3BsaXQtZXZlcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7R0FPRztBQUNILE1BQU0sVUFBVSxVQUFVLENBQUMsS0FBYSxFQUFFLFNBQWlCLEVBQUUsYUFBcUI7SUFDaEYsb0RBQW9EO0lBQ3BELElBQUksYUFBYSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLEVBQUU7UUFDMUQsTUFBTSxJQUFJLEtBQUssQ0FBQyxnQ0FBZ0MsR0FBRyxhQUFhLEdBQUcsbUJBQW1CLENBQUMsQ0FBQztLQUN6RjtJQUVELElBQU0sUUFBUSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDeEMsaURBQWlEO0lBQ2pELElBQUksYUFBYSxLQUFLLENBQUMsRUFBRTtRQUN2QixPQUFPLFFBQVEsQ0FBQztLQUNqQjtJQUVELElBQU0sZ0JBQWdCLEdBQWtCLEVBQUUsQ0FBQztJQUMzQyxJQUFJLGNBQWMsR0FBRyxFQUFFLENBQUM7SUFDeEIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDeEMsSUFBSSxjQUFjLEtBQUssRUFBRSxFQUFFO1lBQ3pCLHVCQUF1QjtZQUN2QixjQUFjLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQzlCO2FBQU07WUFDTCxtREFBbUQ7WUFDbkQsY0FBYyxJQUFJLFNBQVMsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDM0M7UUFFRCxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLGFBQWEsS0FBSyxDQUFDLEVBQUU7WUFDakMsbUVBQW1FO1lBQ25FLGdCQUFnQixDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztZQUN0QyxpQ0FBaUM7WUFDakMsY0FBYyxHQUFHLEVBQUUsQ0FBQztTQUNyQjtLQUNGO0lBRUQsdUNBQXVDO0lBQ3ZDLElBQUksY0FBYyxLQUFLLEVBQUUsRUFBRTtRQUN6QixnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7S0FDdkM7SUFFRCxPQUFPLGdCQUFnQixDQUFDO0FBQzFCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdpdmVuIGFuIGlucHV0IHN0cmluZywgc3BsaXRzIGJhc2VkIG9uIHRoZSBkZWxpbWl0ZXIgYWZ0ZXIgYSBnaXZlblxuICogbnVtYmVyIG9mIGRlbGltaXRlcnMgaGFzIGJlZW4gZW5jb3VudGVyZWQuXG4gKlxuICogQHBhcmFtIHZhbHVlIFRoZSBpbnB1dCBzdHJpbmcgdG8gc3BsaXQuXG4gKiBAcGFyYW0gZGVsaW1pdGVyIFRoZSBkZWxpbWl0ZXIgdG8gc3BsaXQgb24uXG4gKiBAcGFyYW0gbnVtRGVsaW1pdGVycyBUaGUgbnVtYmVyIG9mIGRlbGltaXRlcnMgdG8gaGF2ZSBlbmNvdW50ZXJlZCB0byBzcGxpdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNwbGl0RXZlcnkodmFsdWU6IHN0cmluZywgZGVsaW1pdGVyOiBzdHJpbmcsIG51bURlbGltaXRlcnM6IG51bWJlcik6IEFycmF5PHN0cmluZz4ge1xuICAvLyBGYWlsIGlmIHdlIGRvbid0IGhhdmUgYSBjbGVhciBudW1iZXIgdG8gc3BsaXQgb24uXG4gIGlmIChudW1EZWxpbWl0ZXJzIDw9IDAgfHwgIU51bWJlci5pc0ludGVnZXIobnVtRGVsaW1pdGVycykpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIG51bWJlciBvZiBkZWxpbWl0ZXJzIChcIiArIG51bURlbGltaXRlcnMgKyBcIikgZm9yIHNwbGl0RXZlcnkuXCIpO1xuICB9XG5cbiAgY29uc3Qgc2VnbWVudHMgPSB2YWx1ZS5zcGxpdChkZWxpbWl0ZXIpO1xuICAvLyBTaG9ydCBjaXJjdWl0IGV4dHJhIGxvZ2ljIGZvciB0aGUgc2ltcGxlIGNhc2UuXG4gIGlmIChudW1EZWxpbWl0ZXJzID09PSAxKSB7XG4gICAgcmV0dXJuIHNlZ21lbnRzO1xuICB9XG5cbiAgY29uc3QgY29tcG91bmRTZWdtZW50czogQXJyYXk8c3RyaW5nPiA9IFtdO1xuICBsZXQgY3VycmVudFNlZ21lbnQgPSBcIlwiO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHNlZ21lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGN1cnJlbnRTZWdtZW50ID09PSBcIlwiKSB7XG4gICAgICAvLyBTdGFydCBhIG5ldyBzZWdtZW50LlxuICAgICAgY3VycmVudFNlZ21lbnQgPSBzZWdtZW50c1tpXTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gQ29tcG91bmQgdGhlIGN1cnJlbnQgc2VnbWVudCB3aXRoIHRoZSBkZWxpbWl0ZXIuXG4gICAgICBjdXJyZW50U2VnbWVudCArPSBkZWxpbWl0ZXIgKyBzZWdtZW50c1tpXTtcbiAgICB9XG5cbiAgICBpZiAoKGkgKyAxKSAlIG51bURlbGltaXRlcnMgPT09IDApIHtcbiAgICAgIC8vIFdlIGVuY291bnRlcmVkIHRoZSByaWdodCBudW1iZXIgb2YgZGVsaW1pdGVycywgc28gYWRkIHRoZSBlbnRyeS5cbiAgICAgIGNvbXBvdW5kU2VnbWVudHMucHVzaChjdXJyZW50U2VnbWVudCk7XG4gICAgICAvLyBBbmQgcmVzZXQgdGhlIGN1cnJlbnQgc2VnbWVudC5cbiAgICAgIGN1cnJlbnRTZWdtZW50ID0gXCJcIjtcbiAgICB9XG4gIH1cblxuICAvLyBIYW5kbGUgYW55IGxlZnRvdmVyIHNlZ21lbnQgcG9ydGlvbi5cbiAgaWYgKGN1cnJlbnRTZWdtZW50ICE9PSBcIlwiKSB7XG4gICAgY29tcG91bmRTZWdtZW50cy5wdXNoKGN1cnJlbnRTZWdtZW50KTtcbiAgfVxuXG4gIHJldHVybiBjb21wb3VuZFNlZ21lbnRzO1xufVxuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc21pdGh5LWNsaWVudC9kaXN0L2VzL3NwbGl0LWV2ZXJ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHFCQUFxQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL3NtaXRoeS1jbGllbnQvZGlzdC9lcy9zcGxpdC1ldmVyeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdpdmVuIGFuIGlucHV0IHN0cmluZywgc3BsaXRzIGJhc2VkIG9uIHRoZSBkZWxpbWl0ZXIgYWZ0ZXIgYSBnaXZlblxuICogbnVtYmVyIG9mIGRlbGltaXRlcnMgaGFzIGJlZW4gZW5jb3VudGVyZWQuXG4gKlxuICogQHBhcmFtIHZhbHVlIFRoZSBpbnB1dCBzdHJpbmcgdG8gc3BsaXQuXG4gKiBAcGFyYW0gZGVsaW1pdGVyIFRoZSBkZWxpbWl0ZXIgdG8gc3BsaXQgb24uXG4gKiBAcGFyYW0gbnVtRGVsaW1pdGVycyBUaGUgbnVtYmVyIG9mIGRlbGltaXRlcnMgdG8gaGF2ZSBlbmNvdW50ZXJlZCB0byBzcGxpdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNwbGl0RXZlcnkodmFsdWUsIGRlbGltaXRlciwgbnVtRGVsaW1pdGVycykge1xuICAgIC8vIEZhaWwgaWYgd2UgZG9uJ3QgaGF2ZSBhIGNsZWFyIG51bWJlciB0byBzcGxpdCBvbi5cbiAgICBpZiAobnVtRGVsaW1pdGVycyA8PSAwIHx8ICFOdW1iZXIuaXNJbnRlZ2VyKG51bURlbGltaXRlcnMpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgbnVtYmVyIG9mIGRlbGltaXRlcnMgKFwiICsgbnVtRGVsaW1pdGVycyArIFwiKSBmb3Igc3BsaXRFdmVyeS5cIik7XG4gICAgfVxuICAgIHZhciBzZWdtZW50cyA9IHZhbHVlLnNwbGl0KGRlbGltaXRlcik7XG4gICAgLy8gU2hvcnQgY2lyY3VpdCBleHRyYSBsb2dpYyBmb3IgdGhlIHNpbXBsZSBjYXNlLlxuICAgIGlmIChudW1EZWxpbWl0ZXJzID09PSAxKSB7XG4gICAgICAgIHJldHVybiBzZWdtZW50cztcbiAgICB9XG4gICAgdmFyIGNvbXBvdW5kU2VnbWVudHMgPSBbXTtcbiAgICB2YXIgY3VycmVudFNlZ21lbnQgPSBcIlwiO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2VnbWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGN1cnJlbnRTZWdtZW50ID09PSBcIlwiKSB7XG4gICAgICAgICAgICAvLyBTdGFydCBhIG5ldyBzZWdtZW50LlxuICAgICAgICAgICAgY3VycmVudFNlZ21lbnQgPSBzZWdtZW50c1tpXTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIENvbXBvdW5kIHRoZSBjdXJyZW50IHNlZ21lbnQgd2l0aCB0aGUgZGVsaW1pdGVyLlxuICAgICAgICAgICAgY3VycmVudFNlZ21lbnQgKz0gZGVsaW1pdGVyICsgc2VnbWVudHNbaV07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKChpICsgMSkgJSBudW1EZWxpbWl0ZXJzID09PSAwKSB7XG4gICAgICAgICAgICAvLyBXZSBlbmNvdW50ZXJlZCB0aGUgcmlnaHQgbnVtYmVyIG9mIGRlbGltaXRlcnMsIHNvIGFkZCB0aGUgZW50cnkuXG4gICAgICAgICAgICBjb21wb3VuZFNlZ21lbnRzLnB1c2goY3VycmVudFNlZ21lbnQpO1xuICAgICAgICAgICAgLy8gQW5kIHJlc2V0IHRoZSBjdXJyZW50IHNlZ21lbnQuXG4gICAgICAgICAgICBjdXJyZW50U2VnbWVudCA9IFwiXCI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gSGFuZGxlIGFueSBsZWZ0b3ZlciBzZWdtZW50IHBvcnRpb24uXG4gICAgaWYgKGN1cnJlbnRTZWdtZW50ICE9PSBcIlwiKSB7XG4gICAgICAgIGNvbXBvdW5kU2VnbWVudHMucHVzaChjdXJyZW50U2VnbWVudCk7XG4gICAgfVxuICAgIHJldHVybiBjb21wb3VuZFNlZ21lbnRzO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYzNCc2FYUXRaWFpsY25rdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12YzNCc2FYUXRaWFpsY25rdWRITWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRVUU3T3pzN096czdSMEZQUnp0QlFVTklMRTFCUVUwc1ZVRkJWU3hWUVVGVkxFTkJRVU1zUzBGQllTeEZRVUZGTEZOQlFXbENMRVZCUVVVc1lVRkJjVUk3U1VGRGFFWXNiMFJCUVc5RU8wbEJRM0JFTEVsQlFVa3NZVUZCWVN4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eFRRVUZUTEVOQlFVTXNZVUZCWVN4RFFVRkRMRVZCUVVVN1VVRkRNVVFzVFVGQlRTeEpRVUZKTEV0QlFVc3NRMEZCUXl4blEwRkJaME1zUjBGQlJ5eGhRVUZoTEVkQlFVY3NiVUpCUVcxQ0xFTkJRVU1zUTBGQlF6dExRVU42Ump0SlFVVkVMRWxCUVUwc1VVRkJVU3hIUVVGSExFdEJRVXNzUTBGQlF5eExRVUZMTEVOQlFVTXNVMEZCVXl4RFFVRkRMRU5CUVVNN1NVRkRlRU1zYVVSQlFXbEVPMGxCUTJwRUxFbEJRVWtzWVVGQllTeExRVUZMTEVOQlFVTXNSVUZCUlR0UlFVTjJRaXhQUVVGUExGRkJRVkVzUTBGQlF6dExRVU5xUWp0SlFVVkVMRWxCUVUwc1owSkJRV2RDTEVkQlFXdENMRVZCUVVVc1EwRkJRenRKUVVNelF5eEpRVUZKTEdOQlFXTXNSMEZCUnl4RlFVRkZMRU5CUVVNN1NVRkRlRUlzUzBGQlN5eEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMRVZCUVVVc1EwRkJReXhIUVVGSExGRkJRVkVzUTBGQlF5eE5RVUZOTEVWQlFVVXNRMEZCUXl4RlFVRkZMRVZCUVVVN1VVRkRlRU1zU1VGQlNTeGpRVUZqTEV0QlFVc3NSVUZCUlN4RlFVRkZPMWxCUTNwQ0xIVkNRVUYxUWp0WlFVTjJRaXhqUVVGakxFZEJRVWNzVVVGQlVTeERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMU5CUXpsQ08yRkJRVTA3V1VGRFRDeHRSRUZCYlVRN1dVRkRia1FzWTBGQll5eEpRVUZKTEZOQlFWTXNSMEZCUnl4UlFVRlJMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU03VTBGRE0wTTdVVUZGUkN4SlFVRkpMRU5CUVVNc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF5eEhRVUZITEdGQlFXRXNTMEZCU3l4RFFVRkRMRVZCUVVVN1dVRkRha01zYlVWQlFXMUZPMWxCUTI1RkxHZENRVUZuUWl4RFFVRkRMRWxCUVVrc1EwRkJReXhqUVVGakxFTkJRVU1zUTBGQlF6dFpRVU4wUXl4cFEwRkJhVU03V1VGRGFrTXNZMEZCWXl4SFFVRkhMRVZCUVVVc1EwRkJRenRUUVVOeVFqdExRVU5HTzBsQlJVUXNkVU5CUVhWRE8wbEJRM1pETEVsQlFVa3NZMEZCWXl4TFFVRkxMRVZCUVVVc1JVRkJSVHRSUVVONlFpeG5Ra0ZCWjBJc1EwRkJReXhKUVVGSkxFTkJRVU1zWTBGQll5eERRVUZETEVOQlFVTTdTMEZEZGtNN1NVRkZSQ3hQUVVGUExHZENRVUZuUWl4RFFVRkRPMEZCUXpGQ0xFTkJRVU1pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lJdktpcGNiaUFxSUVkcGRtVnVJR0Z1SUdsdWNIVjBJSE4wY21sdVp5d2djM0JzYVhSeklHSmhjMlZrSUc5dUlIUm9aU0JrWld4cGJXbDBaWElnWVdaMFpYSWdZU0JuYVhabGJseHVJQ29nYm5WdFltVnlJRzltSUdSbGJHbHRhWFJsY25NZ2FHRnpJR0psWlc0Z1pXNWpiM1Z1ZEdWeVpXUXVYRzRnS2x4dUlDb2dRSEJoY21GdElIWmhiSFZsSUZSb1pTQnBibkIxZENCemRISnBibWNnZEc4Z2MzQnNhWFF1WEc0Z0tpQkFjR0Z5WVcwZ1pHVnNhVzFwZEdWeUlGUm9aU0JrWld4cGJXbDBaWElnZEc4Z2MzQnNhWFFnYjI0dVhHNGdLaUJBY0dGeVlXMGdiblZ0UkdWc2FXMXBkR1Z5Y3lCVWFHVWdiblZ0WW1WeUlHOW1JR1JsYkdsdGFYUmxjbk1nZEc4Z2FHRjJaU0JsYm1OdmRXNTBaWEpsWkNCMGJ5QnpjR3hwZEM1Y2JpQXFMMXh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJSE53YkdsMFJYWmxjbmtvZG1Gc2RXVTZJSE4wY21sdVp5d2daR1ZzYVcxcGRHVnlPaUJ6ZEhKcGJtY3NJRzUxYlVSbGJHbHRhWFJsY25NNklHNTFiV0psY2lrNklFRnljbUY1UEhOMGNtbHVaejRnZTF4dUlDQXZMeUJHWVdsc0lHbG1JSGRsSUdSdmJpZDBJR2hoZG1VZ1lTQmpiR1ZoY2lCdWRXMWlaWElnZEc4Z2MzQnNhWFFnYjI0dVhHNGdJR2xtSUNodWRXMUVaV3hwYldsMFpYSnpJRHc5SURBZ2ZId2dJVTUxYldKbGNpNXBjMGx1ZEdWblpYSW9iblZ0UkdWc2FXMXBkR1Z5Y3lrcElIdGNiaUFnSUNCMGFISnZkeUJ1WlhjZ1JYSnliM0lvWENKSmJuWmhiR2xrSUc1MWJXSmxjaUJ2WmlCa1pXeHBiV2wwWlhKeklDaGNJaUFySUc1MWJVUmxiR2x0YVhSbGNuTWdLeUJjSWlrZ1ptOXlJSE53YkdsMFJYWmxjbmt1WENJcE8xeHVJQ0I5WEc1Y2JpQWdZMjl1YzNRZ2MyVm5iV1Z1ZEhNZ1BTQjJZV3gxWlM1emNHeHBkQ2hrWld4cGJXbDBaWElwTzF4dUlDQXZMeUJUYUc5eWRDQmphWEpqZFdsMElHVjRkSEpoSUd4dloybGpJR1p2Y2lCMGFHVWdjMmx0Y0d4bElHTmhjMlV1WEc0Z0lHbG1JQ2h1ZFcxRVpXeHBiV2wwWlhKeklEMDlQU0F4S1NCN1hHNGdJQ0FnY21WMGRYSnVJSE5sWjIxbGJuUnpPMXh1SUNCOVhHNWNiaUFnWTI5dWMzUWdZMjl0Y0c5MWJtUlRaV2R0Wlc1MGN6b2dRWEp5WVhrOGMzUnlhVzVuUGlBOUlGdGRPMXh1SUNCc1pYUWdZM1Z5Y21WdWRGTmxaMjFsYm5RZ1BTQmNJbHdpTzF4dUlDQm1iM0lnS0d4bGRDQnBJRDBnTURzZ2FTQThJSE5sWjIxbGJuUnpMbXhsYm1kMGFEc2dhU3NyS1NCN1hHNGdJQ0FnYVdZZ0tHTjFjbkpsYm5SVFpXZHRaVzUwSUQwOVBTQmNJbHdpS1NCN1hHNGdJQ0FnSUNBdkx5QlRkR0Z5ZENCaElHNWxkeUJ6WldkdFpXNTBMbHh1SUNBZ0lDQWdZM1Z5Y21WdWRGTmxaMjFsYm5RZ1BTQnpaV2R0Wlc1MGMxdHBYVHRjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0x5OGdRMjl0Y0c5MWJtUWdkR2hsSUdOMWNuSmxiblFnYzJWbmJXVnVkQ0IzYVhSb0lIUm9aU0JrWld4cGJXbDBaWEl1WEc0Z0lDQWdJQ0JqZFhKeVpXNTBVMlZuYldWdWRDQXJQU0JrWld4cGJXbDBaWElnS3lCelpXZHRaVzUwYzF0cFhUdGNiaUFnSUNCOVhHNWNiaUFnSUNCcFppQW9LR2tnS3lBeEtTQWxJRzUxYlVSbGJHbHRhWFJsY25NZ1BUMDlJREFwSUh0Y2JpQWdJQ0FnSUM4dklGZGxJR1Z1WTI5MWJuUmxjbVZrSUhSb1pTQnlhV2RvZENCdWRXMWlaWElnYjJZZ1pHVnNhVzFwZEdWeWN5d2djMjhnWVdSa0lIUm9aU0JsYm5SeWVTNWNiaUFnSUNBZ0lHTnZiWEJ2ZFc1a1UyVm5iV1Z1ZEhNdWNIVnphQ2hqZFhKeVpXNTBVMlZuYldWdWRDazdYRzRnSUNBZ0lDQXZMeUJCYm1RZ2NtVnpaWFFnZEdobElHTjFjbkpsYm5RZ2MyVm5iV1Z1ZEM1Y2JpQWdJQ0FnSUdOMWNuSmxiblJUWldkdFpXNTBJRDBnWENKY0lqdGNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQXZMeUJJWVc1a2JHVWdZVzU1SUd4bFpuUnZkbVZ5SUhObFoyMWxiblFnY0c5eWRHbHZiaTVjYmlBZ2FXWWdLR04xY25KbGJuUlRaV2R0Wlc1MElDRTlQU0JjSWx3aUtTQjdYRzRnSUNBZ1kyOXRjRzkxYm1SVFpXZHRaVzUwY3k1d2RYTm9LR04xY25KbGJuUlRaV2R0Wlc1MEtUdGNiaUFnZlZ4dVhHNGdJSEpsZEhWeWJpQmpiMjF3YjNWdVpGTmxaMjFsYm5Sek8xeHVmVnh1SWwxOSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/smithy-client/dist/es/split-every.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/smithy-client/node_modules/tslib/tslib.es6.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@aws-sdk/smithy-client/node_modules/tslib/tslib.es6.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/smithy-client/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/url-parser/dist/es/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@aws-sdk/url-parser/dist/es/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseUrl: () => (/* binding */ parseUrl)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_querystring_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/querystring-parser */ \"(ssr)/./node_modules/@aws-sdk/querystring-parser/dist/es/index.js\");\n\nvar parseUrl = function (url) {\n    var _a = new URL(url), hostname = _a.hostname, pathname = _a.pathname, port = _a.port, protocol = _a.protocol, search = _a.search;\n    var query;\n    if (search) {\n        query = (0,_aws_sdk_querystring_parser__WEBPACK_IMPORTED_MODULE_0__.parseQueryString)(search);\n    }\n    return {\n        hostname: hostname,\n        port: port ? parseInt(port) : undefined,\n        protocol: protocol,\n        path: pathname,\n        query: query,\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFHL0QsTUFBTSxDQUFDLElBQU0sUUFBUSxHQUFjLFVBQUMsR0FBVztJQUN2QyxJQUFBLEtBQWlELElBQUksR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUEzRCxRQUFRLGNBQUEsRUFBRSxRQUFRLGNBQUEsRUFBRSxJQUFJLFVBQUEsRUFBRSxRQUFRLGNBQUEsRUFBRSxNQUFNLFlBQWlCLENBQUM7SUFFcEUsSUFBSSxLQUFvQyxDQUFDO0lBQ3pDLElBQUksTUFBTSxFQUFFO1FBQ1YsS0FBSyxHQUFHLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBQ2xDO0lBRUQsT0FBTztRQUNMLFFBQVEsVUFBQTtRQUNSLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN2QyxRQUFRLFVBQUE7UUFDUixJQUFJLEVBQUUsUUFBUTtRQUNkLEtBQUssT0FBQTtLQUNOLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJzZVF1ZXJ5U3RyaW5nIH0gZnJvbSBcIkBhd3Mtc2RrL3F1ZXJ5c3RyaW5nLXBhcnNlclwiO1xuaW1wb3J0IHsgRW5kcG9pbnQsIFF1ZXJ5UGFyYW1ldGVyQmFnLCBVcmxQYXJzZXIgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuZXhwb3J0IGNvbnN0IHBhcnNlVXJsOiBVcmxQYXJzZXIgPSAodXJsOiBzdHJpbmcpOiBFbmRwb2ludCA9PiB7XG4gIGNvbnN0IHsgaG9zdG5hbWUsIHBhdGhuYW1lLCBwb3J0LCBwcm90b2NvbCwgc2VhcmNoIH0gPSBuZXcgVVJMKHVybCk7XG5cbiAgbGV0IHF1ZXJ5OiBRdWVyeVBhcmFtZXRlckJhZyB8IHVuZGVmaW5lZDtcbiAgaWYgKHNlYXJjaCkge1xuICAgIHF1ZXJ5ID0gcGFyc2VRdWVyeVN0cmluZyhzZWFyY2gpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBob3N0bmFtZSxcbiAgICBwb3J0OiBwb3J0ID8gcGFyc2VJbnQocG9ydCkgOiB1bmRlZmluZWQsXG4gICAgcHJvdG9jb2wsXG4gICAgcGF0aDogcGF0aG5hbWUsXG4gICAgcXVlcnksXG4gIH07XG59O1xuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvdXJsLXBhcnNlci9kaXN0L2VzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQStEO0FBQ3hEO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDZFQUFnQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL3VybC1wYXJzZXIvZGlzdC9lcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJzZVF1ZXJ5U3RyaW5nIH0gZnJvbSBcIkBhd3Mtc2RrL3F1ZXJ5c3RyaW5nLXBhcnNlclwiO1xuZXhwb3J0IHZhciBwYXJzZVVybCA9IGZ1bmN0aW9uICh1cmwpIHtcbiAgICB2YXIgX2EgPSBuZXcgVVJMKHVybCksIGhvc3RuYW1lID0gX2EuaG9zdG5hbWUsIHBhdGhuYW1lID0gX2EucGF0aG5hbWUsIHBvcnQgPSBfYS5wb3J0LCBwcm90b2NvbCA9IF9hLnByb3RvY29sLCBzZWFyY2ggPSBfYS5zZWFyY2g7XG4gICAgdmFyIHF1ZXJ5O1xuICAgIGlmIChzZWFyY2gpIHtcbiAgICAgICAgcXVlcnkgPSBwYXJzZVF1ZXJ5U3RyaW5nKHNlYXJjaCk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIGhvc3RuYW1lOiBob3N0bmFtZSxcbiAgICAgICAgcG9ydDogcG9ydCA/IHBhcnNlSW50KHBvcnQpIDogdW5kZWZpbmVkLFxuICAgICAgICBwcm90b2NvbDogcHJvdG9jb2wsXG4gICAgICAgIHBhdGg6IHBhdGhuYW1lLFxuICAgICAgICBxdWVyeTogcXVlcnksXG4gICAgfTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lhVzVrWlhndWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12YVc1a1pYZ3VkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1QwRkJUeXhGUVVGRkxHZENRVUZuUWl4RlFVRkZMRTFCUVUwc05rSkJRVFpDTEVOQlFVTTdRVUZITDBRc1RVRkJUU3hEUVVGRExFbEJRVTBzVVVGQlVTeEhRVUZqTEZWQlFVTXNSMEZCVnp0SlFVTjJReXhKUVVGQkxFdEJRV2xFTEVsQlFVa3NSMEZCUnl4RFFVRkRMRWRCUVVjc1EwRkJReXhGUVVFelJDeFJRVUZSTEdOQlFVRXNSVUZCUlN4UlFVRlJMR05CUVVFc1JVRkJSU3hKUVVGSkxGVkJRVUVzUlVGQlJTeFJRVUZSTEdOQlFVRXNSVUZCUlN4TlFVRk5MRmxCUVdsQ0xFTkJRVU03U1VGRmNFVXNTVUZCU1N4TFFVRnZReXhEUVVGRE8wbEJRM3BETEVsQlFVa3NUVUZCVFN4RlFVRkZPMUZCUTFZc1MwRkJTeXhIUVVGSExHZENRVUZuUWl4RFFVRkRMRTFCUVUwc1EwRkJReXhEUVVGRE8wdEJRMnhETzBsQlJVUXNUMEZCVHp0UlFVTk1MRkZCUVZFc1ZVRkJRVHRSUVVOU0xFbEJRVWtzUlVGQlJTeEpRVUZKTEVOQlFVTXNRMEZCUXl4RFFVRkRMRkZCUVZFc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNVMEZCVXp0UlFVTjJReXhSUVVGUkxGVkJRVUU3VVVGRFVpeEpRVUZKTEVWQlFVVXNVVUZCVVR0UlFVTmtMRXRCUVVzc1QwRkJRVHRMUVVOT0xFTkJRVU03UVVGRFNpeERRVUZETEVOQlFVTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpwYlhCdmNuUWdleUJ3WVhKelpWRjFaWEo1VTNSeWFXNW5JSDBnWm5KdmJTQmNJa0JoZDNNdGMyUnJMM0YxWlhKNWMzUnlhVzVuTFhCaGNuTmxjbHdpTzF4dWFXMXdiM0owSUhzZ1JXNWtjRzlwYm5Rc0lGRjFaWEo1VUdGeVlXMWxkR1Z5UW1GbkxDQlZjbXhRWVhKelpYSWdmU0JtY205dElGd2lRR0YzY3kxelpHc3ZkSGx3WlhOY0lqdGNibHh1Wlhod2IzSjBJR052Ym5OMElIQmhjbk5sVlhKc09pQlZjbXhRWVhKelpYSWdQU0FvZFhKc09pQnpkSEpwYm1jcE9pQkZibVJ3YjJsdWRDQTlQaUI3WEc0Z0lHTnZibk4wSUhzZ2FHOXpkRzVoYldVc0lIQmhkR2h1WVcxbExDQndiM0owTENCd2NtOTBiMk52YkN3Z2MyVmhjbU5vSUgwZ1BTQnVaWGNnVlZKTUtIVnliQ2s3WEc1Y2JpQWdiR1YwSUhGMVpYSjVPaUJSZFdWeWVWQmhjbUZ0WlhSbGNrSmhaeUI4SUhWdVpHVm1hVzVsWkR0Y2JpQWdhV1lnS0hObFlYSmphQ2tnZTF4dUlDQWdJSEYxWlhKNUlEMGdjR0Z5YzJWUmRXVnllVk4wY21sdVp5aHpaV0Z5WTJncE8xeHVJQ0I5WEc1Y2JpQWdjbVYwZFhKdUlIdGNiaUFnSUNCb2IzTjBibUZ0WlN4Y2JpQWdJQ0J3YjNKME9pQndiM0owSUQ4Z2NHRnljMlZKYm5Rb2NHOXlkQ2tnT2lCMWJtUmxabWx1WldRc1hHNGdJQ0FnY0hKdmRHOWpiMndzWEc0Z0lDQWdjR0YwYURvZ2NHRjBhRzVoYldVc1hHNGdJQ0FnY1hWbGNua3NYRzRnSUgwN1hHNTlPMXh1SWwxOSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/url-parser/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/util-base64-node/dist/es/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@aws-sdk/util-base64-node/dist/es/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromBase64: () => (/* binding */ fromBase64),\n/* harmony export */   toBase64: () => (/* binding */ toBase64)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_util_buffer_from__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/util-buffer-from */ \"(ssr)/./node_modules/@aws-sdk/util-buffer-from/dist/es/index.js\");\n\n/**\n * Converts a base-64 encoded string to a Uint8Array of bytes using Node.JS's\n * `buffer` module.\n *\n * @param input The base-64 encoded string\n */\nfunction fromBase64(input) {\n    var buffer = (0,_aws_sdk_util_buffer_from__WEBPACK_IMPORTED_MODULE_0__.fromString)(input, \"base64\");\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n}\n/**\n * Converts a Uint8Array of binary data to a base-64 encoded string using\n * Node.JS's `buffer` module.\n *\n * @param input The binary data to encode\n */\nfunction toBase64(input) {\n    return (0,_aws_sdk_util_buffer_from__WEBPACK_IMPORTED_MODULE_0__.fromArrayBuffer)(input.buffer, input.byteOffset, input.byteLength).toString(\"base64\");\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGVBQWUsRUFBRSxVQUFVLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUV4RTs7Ozs7R0FLRztBQUNILE1BQU0sVUFBVSxVQUFVLENBQUMsS0FBYTtJQUN0QyxJQUFNLE1BQU0sR0FBRyxVQUFVLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBRTNDLE9BQU8sSUFBSSxVQUFVLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsVUFBVSxFQUFFLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUM3RSxDQUFDO0FBRUQ7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsUUFBUSxDQUFDLEtBQWlCO0lBQ3hDLE9BQU8sZUFBZSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLFVBQVUsRUFBRSxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQzlGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmcm9tQXJyYXlCdWZmZXIsIGZyb21TdHJpbmcgfSBmcm9tIFwiQGF3cy1zZGsvdXRpbC1idWZmZXItZnJvbVwiO1xuXG4vKipcbiAqIENvbnZlcnRzIGEgYmFzZS02NCBlbmNvZGVkIHN0cmluZyB0byBhIFVpbnQ4QXJyYXkgb2YgYnl0ZXMgdXNpbmcgTm9kZS5KUydzXG4gKiBgYnVmZmVyYCBtb2R1bGUuXG4gKlxuICogQHBhcmFtIGlucHV0IFRoZSBiYXNlLTY0IGVuY29kZWQgc3RyaW5nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmcm9tQmFzZTY0KGlucHV0OiBzdHJpbmcpOiBVaW50OEFycmF5IHtcbiAgY29uc3QgYnVmZmVyID0gZnJvbVN0cmluZyhpbnB1dCwgXCJiYXNlNjRcIik7XG5cbiAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGJ1ZmZlci5idWZmZXIsIGJ1ZmZlci5ieXRlT2Zmc2V0LCBidWZmZXIuYnl0ZUxlbmd0aCk7XG59XG5cbi8qKlxuICogQ29udmVydHMgYSBVaW50OEFycmF5IG9mIGJpbmFyeSBkYXRhIHRvIGEgYmFzZS02NCBlbmNvZGVkIHN0cmluZyB1c2luZ1xuICogTm9kZS5KUydzIGBidWZmZXJgIG1vZHVsZS5cbiAqXG4gKiBAcGFyYW0gaW5wdXQgVGhlIGJpbmFyeSBkYXRhIHRvIGVuY29kZVxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9CYXNlNjQoaW5wdXQ6IFVpbnQ4QXJyYXkpOiBzdHJpbmcge1xuICByZXR1cm4gZnJvbUFycmF5QnVmZmVyKGlucHV0LmJ1ZmZlciwgaW5wdXQuYnl0ZU9mZnNldCwgaW5wdXQuYnl0ZUxlbmd0aCkudG9TdHJpbmcoXCJiYXNlNjRcIik7XG59XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvdXRpbC1iYXNlNjQtbm9kZS9kaXN0L2VzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF3RTtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGlCQUFpQixxRUFBVTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLDBFQUFlO0FBQzFCO0FBQ0EsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay91dGlsLWJhc2U2NC1ub2RlL2Rpc3QvZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZnJvbUFycmF5QnVmZmVyLCBmcm9tU3RyaW5nIH0gZnJvbSBcIkBhd3Mtc2RrL3V0aWwtYnVmZmVyLWZyb21cIjtcbi8qKlxuICogQ29udmVydHMgYSBiYXNlLTY0IGVuY29kZWQgc3RyaW5nIHRvIGEgVWludDhBcnJheSBvZiBieXRlcyB1c2luZyBOb2RlLkpTJ3NcbiAqIGBidWZmZXJgIG1vZHVsZS5cbiAqXG4gKiBAcGFyYW0gaW5wdXQgVGhlIGJhc2UtNjQgZW5jb2RlZCBzdHJpbmdcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZyb21CYXNlNjQoaW5wdXQpIHtcbiAgICB2YXIgYnVmZmVyID0gZnJvbVN0cmluZyhpbnB1dCwgXCJiYXNlNjRcIik7XG4gICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGJ1ZmZlci5idWZmZXIsIGJ1ZmZlci5ieXRlT2Zmc2V0LCBidWZmZXIuYnl0ZUxlbmd0aCk7XG59XG4vKipcbiAqIENvbnZlcnRzIGEgVWludDhBcnJheSBvZiBiaW5hcnkgZGF0YSB0byBhIGJhc2UtNjQgZW5jb2RlZCBzdHJpbmcgdXNpbmdcbiAqIE5vZGUuSlMncyBgYnVmZmVyYCBtb2R1bGUuXG4gKlxuICogQHBhcmFtIGlucHV0IFRoZSBiaW5hcnkgZGF0YSB0byBlbmNvZGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvQmFzZTY0KGlucHV0KSB7XG4gICAgcmV0dXJuIGZyb21BcnJheUJ1ZmZlcihpbnB1dC5idWZmZXIsIGlucHV0LmJ5dGVPZmZzZXQsIGlucHV0LmJ5dGVMZW5ndGgpLnRvU3RyaW5nKFwiYmFzZTY0XCIpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYVc1a1pYZ3Vhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOHVMaTl6Y21NdmFXNWtaWGd1ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRXNUMEZCVHl4RlFVRkZMR1ZCUVdVc1JVRkJSU3hWUVVGVkxFVkJRVVVzVFVGQlRTd3lRa0ZCTWtJc1EwRkJRenRCUVVWNFJUczdPenM3UjBGTFJ6dEJRVU5JTEUxQlFVMHNWVUZCVlN4VlFVRlZMRU5CUVVNc1MwRkJZVHRKUVVOMFF5eEpRVUZOTEUxQlFVMHNSMEZCUnl4VlFVRlZMRU5CUVVNc1MwRkJTeXhGUVVGRkxGRkJRVkVzUTBGQlF5eERRVUZETzBsQlJUTkRMRTlCUVU4c1NVRkJTU3hWUVVGVkxFTkJRVU1zVFVGQlRTeERRVUZETEUxQlFVMHNSVUZCUlN4TlFVRk5MRU5CUVVNc1ZVRkJWU3hGUVVGRkxFMUJRVTBzUTBGQlF5eFZRVUZWTEVOQlFVTXNRMEZCUXp0QlFVTTNSU3hEUVVGRE8wRkJSVVE3T3pzN08wZEJTMGM3UVVGRFNDeE5RVUZOTEZWQlFWVXNVVUZCVVN4RFFVRkRMRXRCUVdsQ08wbEJRM2hETEU5QlFVOHNaVUZCWlN4RFFVRkRMRXRCUVVzc1EwRkJReXhOUVVGTkxFVkJRVVVzUzBGQlN5eERRVUZETEZWQlFWVXNSVUZCUlN4TFFVRkxMRU5CUVVNc1ZVRkJWU3hEUVVGRExFTkJRVU1zVVVGQlVTeERRVUZETEZGQlFWRXNRMEZCUXl4RFFVRkRPMEZCUXpsR0xFTkJRVU1pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKcGJYQnZjblFnZXlCbWNtOXRRWEp5WVhsQ2RXWm1aWElzSUdaeWIyMVRkSEpwYm1jZ2ZTQm1jbTl0SUZ3aVFHRjNjeTF6WkdzdmRYUnBiQzFpZFdabVpYSXRabkp2YlZ3aU8xeHVYRzR2S2lwY2JpQXFJRU52Ym5abGNuUnpJR0VnWW1GelpTMDJOQ0JsYm1OdlpHVmtJSE4wY21sdVp5QjBieUJoSUZWcGJuUTRRWEp5WVhrZ2IyWWdZbmwwWlhNZ2RYTnBibWNnVG05a1pTNUtVeWR6WEc0Z0tpQmdZblZtWm1WeVlDQnRiMlIxYkdVdVhHNGdLbHh1SUNvZ1FIQmhjbUZ0SUdsdWNIVjBJRlJvWlNCaVlYTmxMVFkwSUdWdVkyOWtaV1FnYzNSeWFXNW5YRzRnS2k5Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCbWNtOXRRbUZ6WlRZMEtHbHVjSFYwT2lCemRISnBibWNwT2lCVmFXNTBPRUZ5Y21GNUlIdGNiaUFnWTI5dWMzUWdZblZtWm1WeUlEMGdabkp2YlZOMGNtbHVaeWhwYm5CMWRDd2dYQ0ppWVhObE5qUmNJaWs3WEc1Y2JpQWdjbVYwZFhKdUlHNWxkeUJWYVc1ME9FRnljbUY1S0dKMVptWmxjaTVpZFdabVpYSXNJR0oxWm1abGNpNWllWFJsVDJabWMyVjBMQ0JpZFdabVpYSXVZbmwwWlV4bGJtZDBhQ2s3WEc1OVhHNWNiaThxS2x4dUlDb2dRMjl1ZG1WeWRITWdZU0JWYVc1ME9FRnljbUY1SUc5bUlHSnBibUZ5ZVNCa1lYUmhJSFJ2SUdFZ1ltRnpaUzAyTkNCbGJtTnZaR1ZrSUhOMGNtbHVaeUIxYzJsdVoxeHVJQ29nVG05a1pTNUtVeWR6SUdCaWRXWm1aWEpnSUcxdlpIVnNaUzVjYmlBcVhHNGdLaUJBY0dGeVlXMGdhVzV3ZFhRZ1ZHaGxJR0pwYm1GeWVTQmtZWFJoSUhSdklHVnVZMjlrWlZ4dUlDb3ZYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdkRzlDWVhObE5qUW9hVzV3ZFhRNklGVnBiblE0UVhKeVlYa3BPaUJ6ZEhKcGJtY2dlMXh1SUNCeVpYUjFjbTRnWm5KdmJVRnljbUY1UW5WbVptVnlLR2x1Y0hWMExtSjFabVpsY2l3Z2FXNXdkWFF1WW5sMFpVOW1abk5sZEN3Z2FXNXdkWFF1WW5sMFpVeGxibWQwYUNrdWRHOVRkSEpwYm1jb1hDSmlZWE5sTmpSY0lpazdYRzU5WEc0aVhYMD0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/util-base64-node/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/util-body-length-node/dist/es/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@aws-sdk/util-body-length-node/dist/es/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateBodyLength: () => (/* binding */ calculateBodyLength)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction calculateBodyLength(body) {\n    if (!body) {\n        return 0;\n    }\n    if (typeof body === \"string\") {\n        return Buffer.from(body).length;\n    }\n    else if (typeof body.byteLength === \"number\") {\n        // handles Uint8Array, ArrayBuffer, Buffer, and ArrayBufferView\n        return body.byteLength;\n    }\n    else if (typeof body.size === \"number\") {\n        return body.size;\n    }\n    else if (typeof body.path === \"string\") {\n        // handles fs readable streams\n        return (0,fs__WEBPACK_IMPORTED_MODULE_0__.lstatSync)(body.path).size;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLElBQUksQ0FBQztBQUUvQixNQUFNLFVBQVUsbUJBQW1CLENBQUMsSUFBUztJQUMzQyxJQUFJLENBQUMsSUFBSSxFQUFFO1FBQ1QsT0FBTyxDQUFDLENBQUM7S0FDVjtJQUNELElBQUksT0FBTyxJQUFJLEtBQUssUUFBUSxFQUFFO1FBQzVCLE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUM7S0FDakM7U0FBTSxJQUFJLE9BQU8sSUFBSSxDQUFDLFVBQVUsS0FBSyxRQUFRLEVBQUU7UUFDOUMsK0RBQStEO1FBQy9ELE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztLQUN4QjtTQUFNLElBQUksT0FBTyxJQUFJLENBQUMsSUFBSSxLQUFLLFFBQVEsRUFBRTtRQUN4QyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7S0FDbEI7U0FBTSxJQUFJLE9BQU8sSUFBSSxDQUFDLElBQUksS0FBSyxRQUFRLEVBQUU7UUFDeEMsOEJBQThCO1FBQzlCLE9BQU8sU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUM7S0FDbEM7QUFDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbHN0YXRTeW5jIH0gZnJvbSBcImZzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBjYWxjdWxhdGVCb2R5TGVuZ3RoKGJvZHk6IGFueSk6IG51bWJlciB8IHVuZGVmaW5lZCB7XG4gIGlmICghYm9keSkge1xuICAgIHJldHVybiAwO1xuICB9XG4gIGlmICh0eXBlb2YgYm9keSA9PT0gXCJzdHJpbmdcIikge1xuICAgIHJldHVybiBCdWZmZXIuZnJvbShib2R5KS5sZW5ndGg7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGJvZHkuYnl0ZUxlbmd0aCA9PT0gXCJudW1iZXJcIikge1xuICAgIC8vIGhhbmRsZXMgVWludDhBcnJheSwgQXJyYXlCdWZmZXIsIEJ1ZmZlciwgYW5kIEFycmF5QnVmZmVyVmlld1xuICAgIHJldHVybiBib2R5LmJ5dGVMZW5ndGg7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGJvZHkuc2l6ZSA9PT0gXCJudW1iZXJcIikge1xuICAgIHJldHVybiBib2R5LnNpemU7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGJvZHkucGF0aCA9PT0gXCJzdHJpbmdcIikge1xuICAgIC8vIGhhbmRsZXMgZnMgcmVhZGFibGUgc3RyZWFtc1xuICAgIHJldHVybiBsc3RhdFN5bmMoYm9keS5wYXRoKS5zaXplO1xuICB9XG59XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvdXRpbC1ib2R5LWxlbmd0aC1ub2RlL2Rpc3QvZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQStCO0FBQ3hCO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSw2Q0FBUztBQUN4QjtBQUNBO0FBQ0EsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay91dGlsLWJvZHktbGVuZ3RoLW5vZGUvZGlzdC9lcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsc3RhdFN5bmMgfSBmcm9tIFwiZnNcIjtcbmV4cG9ydCBmdW5jdGlvbiBjYWxjdWxhdGVCb2R5TGVuZ3RoKGJvZHkpIHtcbiAgICBpZiAoIWJvZHkpIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgYm9keSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4gQnVmZmVyLmZyb20oYm9keSkubGVuZ3RoO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2YgYm9keS5ieXRlTGVuZ3RoID09PSBcIm51bWJlclwiKSB7XG4gICAgICAgIC8vIGhhbmRsZXMgVWludDhBcnJheSwgQXJyYXlCdWZmZXIsIEJ1ZmZlciwgYW5kIEFycmF5QnVmZmVyVmlld1xuICAgICAgICByZXR1cm4gYm9keS5ieXRlTGVuZ3RoO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2YgYm9keS5zaXplID09PSBcIm51bWJlclwiKSB7XG4gICAgICAgIHJldHVybiBib2R5LnNpemU7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiBib2R5LnBhdGggPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgLy8gaGFuZGxlcyBmcyByZWFkYWJsZSBzdHJlYW1zXG4gICAgICAgIHJldHVybiBsc3RhdFN5bmMoYm9keS5wYXRoKS5zaXplO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWFXNWtaWGd1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTh1TGk5emNtTXZhVzVrWlhndWRITWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzVDBGQlR5eEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRWxCUVVrc1EwRkJRenRCUVVVdlFpeE5RVUZOTEZWQlFWVXNiVUpCUVcxQ0xFTkJRVU1zU1VGQlV6dEpRVU16UXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hGUVVGRk8xRkJRMVFzVDBGQlR5eERRVUZETEVOQlFVTTdTMEZEVmp0SlFVTkVMRWxCUVVrc1QwRkJUeXhKUVVGSkxFdEJRVXNzVVVGQlVTeEZRVUZGTzFGQlF6VkNMRTlCUVU4c1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXl4TlFVRk5MRU5CUVVNN1MwRkRha003VTBGQlRTeEpRVUZKTEU5QlFVOHNTVUZCU1N4RFFVRkRMRlZCUVZVc1MwRkJTeXhSUVVGUkxFVkJRVVU3VVVGRE9VTXNLMFJCUVN0RU8xRkJReTlFTEU5QlFVOHNTVUZCU1N4RFFVRkRMRlZCUVZVc1EwRkJRenRMUVVONFFqdFRRVUZOTEVsQlFVa3NUMEZCVHl4SlFVRkpMRU5CUVVNc1NVRkJTU3hMUVVGTExGRkJRVkVzUlVGQlJUdFJRVU40UXl4UFFVRlBMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU03UzBGRGJFSTdVMEZCVFN4SlFVRkpMRTlCUVU4c1NVRkJTU3hEUVVGRExFbEJRVWtzUzBGQlN5eFJRVUZSTEVWQlFVVTdVVUZEZUVNc09FSkJRVGhDTzFGQlF6bENMRTlCUVU4c1UwRkJVeXhEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNN1MwRkRiRU03UVVGRFNDeERRVUZESWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaWFXMXdiM0owSUhzZ2JITjBZWFJUZVc1aklIMGdabkp2YlNCY0ltWnpYQ0k3WEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCallXeGpkV3hoZEdWQ2IyUjVUR1Z1WjNSb0tHSnZaSGs2SUdGdWVTazZJRzUxYldKbGNpQjhJSFZ1WkdWbWFXNWxaQ0I3WEc0Z0lHbG1JQ2doWW05a2VTa2dlMXh1SUNBZ0lISmxkSFZ5YmlBd08xeHVJQ0I5WEc0Z0lHbG1JQ2gwZVhCbGIyWWdZbTlrZVNBOVBUMGdYQ0p6ZEhKcGJtZGNJaWtnZTF4dUlDQWdJSEpsZEhWeWJpQkNkV1ptWlhJdVpuSnZiU2hpYjJSNUtTNXNaVzVuZEdnN1hHNGdJSDBnWld4elpTQnBaaUFvZEhsd1pXOW1JR0p2WkhrdVlubDBaVXhsYm1kMGFDQTlQVDBnWENKdWRXMWlaWEpjSWlrZ2UxeHVJQ0FnSUM4dklHaGhibVJzWlhNZ1ZXbHVkRGhCY25KaGVTd2dRWEp5WVhsQ2RXWm1aWElzSUVKMVptWmxjaXdnWVc1a0lFRnljbUY1UW5WbVptVnlWbWxsZDF4dUlDQWdJSEpsZEhWeWJpQmliMlI1TG1KNWRHVk1aVzVuZEdnN1hHNGdJSDBnWld4elpTQnBaaUFvZEhsd1pXOW1JR0p2WkhrdWMybDZaU0E5UFQwZ1hDSnVkVzFpWlhKY0lpa2dlMXh1SUNBZ0lISmxkSFZ5YmlCaWIyUjVMbk5wZW1VN1hHNGdJSDBnWld4elpTQnBaaUFvZEhsd1pXOW1JR0p2WkhrdWNHRjBhQ0E5UFQwZ1hDSnpkSEpwYm1kY0lpa2dlMXh1SUNBZ0lDOHZJR2hoYm1Sc1pYTWdabk1nY21WaFpHRmliR1VnYzNSeVpXRnRjMXh1SUNBZ0lISmxkSFZ5YmlCc2MzUmhkRk41Ym1Nb1ltOWtlUzV3WVhSb0tTNXphWHBsTzF4dUlDQjlYRzU5WEc0aVhYMD0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/util-body-length-node/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/util-buffer-from/dist/es/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@aws-sdk/util-buffer-from/dist/es/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromArrayBuffer: () => (/* binding */ fromArrayBuffer),\n/* harmony export */   fromString: () => (/* binding */ fromString)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_is_array_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/is-array-buffer */ \"(ssr)/./node_modules/@aws-sdk/is-array-buffer/dist/es/index.js\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_1__);\n\n\nvar fromArrayBuffer = function (input, offset, length) {\n    if (offset === void 0) { offset = 0; }\n    if (length === void 0) { length = input.byteLength - offset; }\n    if (!(0,_aws_sdk_is_array_buffer__WEBPACK_IMPORTED_MODULE_0__.isArrayBuffer)(input)) {\n        throw new TypeError(\"The \\\"input\\\" argument must be ArrayBuffer. Received type \" + typeof input + \" (\" + input + \")\");\n    }\n    return buffer__WEBPACK_IMPORTED_MODULE_1__.Buffer.from(input, offset, length);\n};\nvar fromString = function (input, encoding) {\n    if (typeof input !== \"string\") {\n        throw new TypeError(\"The \\\"input\\\" argument must be of type string. Received type \" + typeof input + \" (\" + input + \")\");\n    }\n    return encoding ? buffer__WEBPACK_IMPORTED_MODULE_1__.Buffer.from(input, encoding) : buffer__WEBPACK_IMPORTED_MODULE_1__.Buffer.from(input);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ3pELE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFFaEMsTUFBTSxDQUFDLElBQU0sZUFBZSxHQUFHLFVBQUMsS0FBa0IsRUFBRSxNQUFVLEVBQUUsTUFBMEM7SUFBdEQsdUJBQUEsRUFBQSxVQUFVO0lBQUUsdUJBQUEsRUFBQSxTQUFpQixLQUFLLENBQUMsVUFBVSxHQUFHLE1BQU07SUFDeEcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUN6QixNQUFNLElBQUksU0FBUyxDQUFDLCtEQUEyRCxPQUFPLEtBQUssVUFBSyxLQUFLLE1BQUcsQ0FBQyxDQUFDO0tBQzNHO0lBRUQsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDNUMsQ0FBQyxDQUFDO0FBSUYsTUFBTSxDQUFDLElBQU0sVUFBVSxHQUFHLFVBQUMsS0FBYSxFQUFFLFFBQXlCO0lBQ2pFLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxFQUFFO1FBQzdCLE1BQU0sSUFBSSxTQUFTLENBQUMsa0VBQThELE9BQU8sS0FBSyxVQUFLLEtBQUssTUFBRyxDQUFDLENBQUM7S0FDOUc7SUFFRCxPQUFPLFFBQVEsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDdEUsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNBcnJheUJ1ZmZlciB9IGZyb20gXCJAYXdzLXNkay9pcy1hcnJheS1idWZmZXJcIjtcbmltcG9ydCB7IEJ1ZmZlciB9IGZyb20gXCJidWZmZXJcIjtcblxuZXhwb3J0IGNvbnN0IGZyb21BcnJheUJ1ZmZlciA9IChpbnB1dDogQXJyYXlCdWZmZXIsIG9mZnNldCA9IDAsIGxlbmd0aDogbnVtYmVyID0gaW5wdXQuYnl0ZUxlbmd0aCAtIG9mZnNldCk6IEJ1ZmZlciA9PiB7XG4gIGlmICghaXNBcnJheUJ1ZmZlcihpbnB1dCkpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBUaGUgXCJpbnB1dFwiIGFyZ3VtZW50IG11c3QgYmUgQXJyYXlCdWZmZXIuIFJlY2VpdmVkIHR5cGUgJHt0eXBlb2YgaW5wdXR9ICgke2lucHV0fSlgKTtcbiAgfVxuXG4gIHJldHVybiBCdWZmZXIuZnJvbShpbnB1dCwgb2Zmc2V0LCBsZW5ndGgpO1xufTtcblxuZXhwb3J0IHR5cGUgU3RyaW5nRW5jb2RpbmcgPSBcImFzY2lpXCIgfCBcInV0ZjhcIiB8IFwidXRmMTZsZVwiIHwgXCJ1Y3MyXCIgfCBcImJhc2U2NFwiIHwgXCJsYXRpbjFcIiB8IFwiYmluYXJ5XCIgfCBcImhleFwiO1xuXG5leHBvcnQgY29uc3QgZnJvbVN0cmluZyA9IChpbnB1dDogc3RyaW5nLCBlbmNvZGluZz86IFN0cmluZ0VuY29kaW5nKTogQnVmZmVyID0+IHtcbiAgaWYgKHR5cGVvZiBpbnB1dCAhPT0gXCJzdHJpbmdcIikge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYFRoZSBcImlucHV0XCIgYXJndW1lbnQgbXVzdCBiZSBvZiB0eXBlIHN0cmluZy4gUmVjZWl2ZWQgdHlwZSAke3R5cGVvZiBpbnB1dH0gKCR7aW5wdXR9KWApO1xuICB9XG5cbiAgcmV0dXJuIGVuY29kaW5nID8gQnVmZmVyLmZyb20oaW5wdXQsIGVuY29kaW5nKSA6IEJ1ZmZlci5mcm9tKGlucHV0KTtcbn07XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvdXRpbC1idWZmZXItZnJvbS9kaXN0L2VzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXlEO0FBQ3pCO0FBQ3pCO0FBQ1AsNkJBQTZCO0FBQzdCLDZCQUE2QjtBQUM3QixTQUFTLHVFQUFhO0FBQ3RCO0FBQ0E7QUFDQSxXQUFXLDBDQUFNO0FBQ2pCO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsMENBQU0seUJBQXlCLDBDQUFNO0FBQzNEO0FBQ0EsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay91dGlsLWJ1ZmZlci1mcm9tL2Rpc3QvZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNBcnJheUJ1ZmZlciB9IGZyb20gXCJAYXdzLXNkay9pcy1hcnJheS1idWZmZXJcIjtcbmltcG9ydCB7IEJ1ZmZlciB9IGZyb20gXCJidWZmZXJcIjtcbmV4cG9ydCB2YXIgZnJvbUFycmF5QnVmZmVyID0gZnVuY3Rpb24gKGlucHV0LCBvZmZzZXQsIGxlbmd0aCkge1xuICAgIGlmIChvZmZzZXQgPT09IHZvaWQgMCkgeyBvZmZzZXQgPSAwOyB9XG4gICAgaWYgKGxlbmd0aCA9PT0gdm9pZCAwKSB7IGxlbmd0aCA9IGlucHV0LmJ5dGVMZW5ndGggLSBvZmZzZXQ7IH1cbiAgICBpZiAoIWlzQXJyYXlCdWZmZXIoaW5wdXQpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJUaGUgXFxcImlucHV0XFxcIiBhcmd1bWVudCBtdXN0IGJlIEFycmF5QnVmZmVyLiBSZWNlaXZlZCB0eXBlIFwiICsgdHlwZW9mIGlucHV0ICsgXCIgKFwiICsgaW5wdXQgKyBcIilcIik7XG4gICAgfVxuICAgIHJldHVybiBCdWZmZXIuZnJvbShpbnB1dCwgb2Zmc2V0LCBsZW5ndGgpO1xufTtcbmV4cG9ydCB2YXIgZnJvbVN0cmluZyA9IGZ1bmN0aW9uIChpbnB1dCwgZW5jb2RpbmcpIHtcbiAgICBpZiAodHlwZW9mIGlucHV0ICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJUaGUgXFxcImlucHV0XFxcIiBhcmd1bWVudCBtdXN0IGJlIG9mIHR5cGUgc3RyaW5nLiBSZWNlaXZlZCB0eXBlIFwiICsgdHlwZW9mIGlucHV0ICsgXCIgKFwiICsgaW5wdXQgKyBcIilcIik7XG4gICAgfVxuICAgIHJldHVybiBlbmNvZGluZyA/IEJ1ZmZlci5mcm9tKGlucHV0LCBlbmNvZGluZykgOiBCdWZmZXIuZnJvbShpbnB1dCk7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYVc1a1pYZ3Vhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOHVMaTl6Y21NdmFXNWtaWGd1ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRXNUMEZCVHl4RlFVRkZMR0ZCUVdFc1JVRkJSU3hOUVVGTkxEQkNRVUV3UWl4RFFVRkRPMEZCUTNwRUxFOUJRVThzUlVGQlJTeE5RVUZOTEVWQlFVVXNUVUZCVFN4UlFVRlJMRU5CUVVNN1FVRkZhRU1zVFVGQlRTeERRVUZETEVsQlFVMHNaVUZCWlN4SFFVRkhMRlZCUVVNc1MwRkJhMElzUlVGQlJTeE5RVUZWTEVWQlFVVXNUVUZCTUVNN1NVRkJkRVFzZFVKQlFVRXNSVUZCUVN4VlFVRlZPMGxCUVVVc2RVSkJRVUVzUlVGQlFTeFRRVUZwUWl4TFFVRkxMRU5CUVVNc1ZVRkJWU3hIUVVGSExFMUJRVTA3U1VGRGVFY3NTVUZCU1N4RFFVRkRMR0ZCUVdFc1EwRkJReXhMUVVGTExFTkJRVU1zUlVGQlJUdFJRVU42UWl4TlFVRk5MRWxCUVVrc1UwRkJVeXhEUVVGRExDdEVRVUV5UkN4UFFVRlBMRXRCUVVzc1ZVRkJTeXhMUVVGTExFMUJRVWNzUTBGQlF5eERRVUZETzB0QlF6TkhPMGxCUlVRc1QwRkJUeXhOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEV0QlFVc3NSVUZCUlN4TlFVRk5MRVZCUVVVc1RVRkJUU3hEUVVGRExFTkJRVU03UVVGRE5VTXNRMEZCUXl4RFFVRkRPMEZCU1VZc1RVRkJUU3hEUVVGRExFbEJRVTBzVlVGQlZTeEhRVUZITEZWQlFVTXNTMEZCWVN4RlFVRkZMRkZCUVhsQ08wbEJRMnBGTEVsQlFVa3NUMEZCVHl4TFFVRkxMRXRCUVVzc1VVRkJVU3hGUVVGRk8xRkJRemRDTEUxQlFVMHNTVUZCU1N4VFFVRlRMRU5CUVVNc2EwVkJRVGhFTEU5QlFVOHNTMEZCU3l4VlFVRkxMRXRCUVVzc1RVRkJSeXhEUVVGRExFTkJRVU03UzBGRE9VYzdTVUZGUkN4UFFVRlBMRkZCUVZFc1EwRkJReXhEUVVGRExFTkJRVU1zVFVGQlRTeERRVUZETEVsQlFVa3NRMEZCUXl4TFFVRkxMRVZCUVVVc1VVRkJVU3hEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEUxQlFVMHNRMEZCUXl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU03UVVGRGRFVXNRMEZCUXl4RFFVRkRJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpYVcxd2IzSjBJSHNnYVhOQmNuSmhlVUoxWm1abGNpQjlJR1p5YjIwZ1hDSkFZWGR6TFhOa2F5OXBjeTFoY25KaGVTMWlkV1ptWlhKY0lqdGNibWx0Y0c5eWRDQjdJRUoxWm1abGNpQjlJR1p5YjIwZ1hDSmlkV1ptWlhKY0lqdGNibHh1Wlhod2IzSjBJR052Ym5OMElHWnliMjFCY25KaGVVSjFabVpsY2lBOUlDaHBibkIxZERvZ1FYSnlZWGxDZFdabVpYSXNJRzltWm5ObGRDQTlJREFzSUd4bGJtZDBhRG9nYm5WdFltVnlJRDBnYVc1d2RYUXVZbmwwWlV4bGJtZDBhQ0F0SUc5bVpuTmxkQ2s2SUVKMVptWmxjaUE5UGlCN1hHNGdJR2xtSUNnaGFYTkJjbkpoZVVKMVptWmxjaWhwYm5CMWRDa3BJSHRjYmlBZ0lDQjBhSEp2ZHlCdVpYY2dWSGx3WlVWeWNtOXlLR0JVYUdVZ1hDSnBibkIxZEZ3aUlHRnlaM1Z0Wlc1MElHMTFjM1FnWW1VZ1FYSnlZWGxDZFdabVpYSXVJRkpsWTJWcGRtVmtJSFI1Y0dVZ0pIdDBlWEJsYjJZZ2FXNXdkWFI5SUNna2UybHVjSFYwZlNsZ0tUdGNiaUFnZlZ4dVhHNGdJSEpsZEhWeWJpQkNkV1ptWlhJdVpuSnZiU2hwYm5CMWRDd2diMlptYzJWMExDQnNaVzVuZEdncE8xeHVmVHRjYmx4dVpYaHdiM0owSUhSNWNHVWdVM1J5YVc1blJXNWpiMlJwYm1jZ1BTQmNJbUZ6WTJscFhDSWdmQ0JjSW5WMFpqaGNJaUI4SUZ3aWRYUm1NVFpzWlZ3aUlId2dYQ0oxWTNNeVhDSWdmQ0JjSW1KaGMyVTJORndpSUh3Z1hDSnNZWFJwYmpGY0lpQjhJRndpWW1sdVlYSjVYQ0lnZkNCY0ltaGxlRndpTzF4dVhHNWxlSEJ2Y25RZ1kyOXVjM1FnWm5KdmJWTjBjbWx1WnlBOUlDaHBibkIxZERvZ2MzUnlhVzVuTENCbGJtTnZaR2x1Wno4NklGTjBjbWx1WjBWdVkyOWthVzVuS1RvZ1FuVm1abVZ5SUQwK0lIdGNiaUFnYVdZZ0tIUjVjR1Z2WmlCcGJuQjFkQ0FoUFQwZ1hDSnpkSEpwYm1kY0lpa2dlMXh1SUNBZ0lIUm9jbTkzSUc1bGR5QlVlWEJsUlhKeWIzSW9ZRlJvWlNCY0ltbHVjSFYwWENJZ1lYSm5kVzFsYm5RZ2JYVnpkQ0JpWlNCdlppQjBlWEJsSUhOMGNtbHVaeTRnVW1WalpXbDJaV1FnZEhsd1pTQWtlM1I1Y0dWdlppQnBibkIxZEgwZ0tDUjdhVzV3ZFhSOUtXQXBPMXh1SUNCOVhHNWNiaUFnY21WMGRYSnVJR1Z1WTI5a2FXNW5JRDhnUW5WbVptVnlMbVp5YjIwb2FXNXdkWFFzSUdWdVkyOWthVzVuS1NBNklFSjFabVpsY2k1bWNtOXRLR2x1Y0hWMEtUdGNibjA3WEc0aVhYMD0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/util-buffer-from/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/util-hex-encoding/dist/es/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@aws-sdk/util-hex-encoding/dist/es/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   toHex: () => (/* binding */ toHex)\n/* harmony export */ });\nvar SHORT_TO_HEX = {};\nvar HEX_TO_SHORT = {};\nfor (var i = 0; i < 256; i++) {\n    var encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = \"0\" + encodedByte;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\n/**\n * Converts a hexadecimal encoded string to a Uint8Array of bytes.\n *\n * @param encoded The hexadecimal encoded string\n */\nfunction fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    var out = new Uint8Array(encoded.length / 2);\n    for (var i = 0; i < encoded.length; i += 2) {\n        var encodedByte = encoded.substr(i, 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(\"Cannot decode unrecognized sequence \" + encodedByte + \" as hexadecimal\");\n        }\n    }\n    return out;\n}\n/**\n * Converts a Uint8Array of binary data to a hexadecimal encoded string.\n *\n * @param bytes The binary data to encode\n */\nfunction toHex(bytes) {\n    var out = \"\";\n    for (var i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBTSxZQUFZLEdBQThCLEVBQUUsQ0FBQztBQUNuRCxJQUFNLFlBQVksR0FBOEIsRUFBRSxDQUFDO0FBRW5ELEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUU7SUFDNUIsSUFBSSxXQUFXLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUMvQyxJQUFJLFdBQVcsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1FBQzVCLFdBQVcsR0FBRyxNQUFJLFdBQWEsQ0FBQztLQUNqQztJQUVELFlBQVksQ0FBQyxDQUFDLENBQUMsR0FBRyxXQUFXLENBQUM7SUFDOUIsWUFBWSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztDQUMvQjtBQUVEOzs7O0dBSUc7QUFDSCxNQUFNLFVBQVUsT0FBTyxDQUFDLE9BQWU7SUFDckMsSUFBSSxPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUU7UUFDNUIsTUFBTSxJQUFJLEtBQUssQ0FBQyxxREFBcUQsQ0FBQyxDQUFDO0tBQ3hFO0lBRUQsSUFBTSxHQUFHLEdBQUcsSUFBSSxVQUFVLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUMvQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQzFDLElBQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3ZELElBQUksV0FBVyxJQUFJLFlBQVksRUFBRTtZQUMvQixHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLFlBQVksQ0FBQyxXQUFXLENBQUMsQ0FBQztTQUN4QzthQUFNO1lBQ0wsTUFBTSxJQUFJLEtBQUssQ0FBQyx5Q0FBdUMsV0FBVyxvQkFBaUIsQ0FBQyxDQUFDO1NBQ3RGO0tBQ0Y7SUFFRCxPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUM7QUFFRDs7OztHQUlHO0FBQ0gsTUFBTSxVQUFVLEtBQUssQ0FBQyxLQUFpQjtJQUNyQyxJQUFJLEdBQUcsR0FBRyxFQUFFLENBQUM7SUFDYixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLFVBQVUsRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUN6QyxHQUFHLElBQUksWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQy9CO0lBRUQsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU0hPUlRfVE9fSEVYOiB7IFtrZXk6IG51bWJlcl06IHN0cmluZyB9ID0ge307XG5jb25zdCBIRVhfVE9fU0hPUlQ6IHsgW2tleTogc3RyaW5nXTogbnVtYmVyIH0gPSB7fTtcblxuZm9yIChsZXQgaSA9IDA7IGkgPCAyNTY7IGkrKykge1xuICBsZXQgZW5jb2RlZEJ5dGUgPSBpLnRvU3RyaW5nKDE2KS50b0xvd2VyQ2FzZSgpO1xuICBpZiAoZW5jb2RlZEJ5dGUubGVuZ3RoID09PSAxKSB7XG4gICAgZW5jb2RlZEJ5dGUgPSBgMCR7ZW5jb2RlZEJ5dGV9YDtcbiAgfVxuXG4gIFNIT1JUX1RPX0hFWFtpXSA9IGVuY29kZWRCeXRlO1xuICBIRVhfVE9fU0hPUlRbZW5jb2RlZEJ5dGVdID0gaTtcbn1cblxuLyoqXG4gKiBDb252ZXJ0cyBhIGhleGFkZWNpbWFsIGVuY29kZWQgc3RyaW5nIHRvIGEgVWludDhBcnJheSBvZiBieXRlcy5cbiAqXG4gKiBAcGFyYW0gZW5jb2RlZCBUaGUgaGV4YWRlY2ltYWwgZW5jb2RlZCBzdHJpbmdcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZyb21IZXgoZW5jb2RlZDogc3RyaW5nKTogVWludDhBcnJheSB7XG4gIGlmIChlbmNvZGVkLmxlbmd0aCAlIDIgIT09IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJIZXggZW5jb2RlZCBzdHJpbmdzIG11c3QgaGF2ZSBhbiBldmVuIG51bWJlciBsZW5ndGhcIik7XG4gIH1cblxuICBjb25zdCBvdXQgPSBuZXcgVWludDhBcnJheShlbmNvZGVkLmxlbmd0aCAvIDIpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGVuY29kZWQubGVuZ3RoOyBpICs9IDIpIHtcbiAgICBjb25zdCBlbmNvZGVkQnl0ZSA9IGVuY29kZWQuc3Vic3RyKGksIDIpLnRvTG93ZXJDYXNlKCk7XG4gICAgaWYgKGVuY29kZWRCeXRlIGluIEhFWF9UT19TSE9SVCkge1xuICAgICAgb3V0W2kgLyAyXSA9IEhFWF9UT19TSE9SVFtlbmNvZGVkQnl0ZV07XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgQ2Fubm90IGRlY29kZSB1bnJlY29nbml6ZWQgc2VxdWVuY2UgJHtlbmNvZGVkQnl0ZX0gYXMgaGV4YWRlY2ltYWxgKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gb3V0O1xufVxuXG4vKipcbiAqIENvbnZlcnRzIGEgVWludDhBcnJheSBvZiBiaW5hcnkgZGF0YSB0byBhIGhleGFkZWNpbWFsIGVuY29kZWQgc3RyaW5nLlxuICpcbiAqIEBwYXJhbSBieXRlcyBUaGUgYmluYXJ5IGRhdGEgdG8gZW5jb2RlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b0hleChieXRlczogVWludDhBcnJheSk6IHN0cmluZyB7XG4gIGxldCBvdXQgPSBcIlwiO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGJ5dGVzLmJ5dGVMZW5ndGg7IGkrKykge1xuICAgIG91dCArPSBTSE9SVF9UT19IRVhbYnl0ZXNbaV1dO1xuICB9XG5cbiAgcmV0dXJuIG91dDtcbn1cbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvdXRpbC1oZXgtZW5jb2RpbmcvZGlzdC9lcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQSxnQkFBZ0IsU0FBUztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG9CQUFvQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esb0JBQW9CLHNCQUFzQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvdXRpbC1oZXgtZW5jb2RpbmcvZGlzdC9lcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgU0hPUlRfVE9fSEVYID0ge307XG52YXIgSEVYX1RPX1NIT1JUID0ge307XG5mb3IgKHZhciBpID0gMDsgaSA8IDI1NjsgaSsrKSB7XG4gICAgdmFyIGVuY29kZWRCeXRlID0gaS50b1N0cmluZygxNikudG9Mb3dlckNhc2UoKTtcbiAgICBpZiAoZW5jb2RlZEJ5dGUubGVuZ3RoID09PSAxKSB7XG4gICAgICAgIGVuY29kZWRCeXRlID0gXCIwXCIgKyBlbmNvZGVkQnl0ZTtcbiAgICB9XG4gICAgU0hPUlRfVE9fSEVYW2ldID0gZW5jb2RlZEJ5dGU7XG4gICAgSEVYX1RPX1NIT1JUW2VuY29kZWRCeXRlXSA9IGk7XG59XG4vKipcbiAqIENvbnZlcnRzIGEgaGV4YWRlY2ltYWwgZW5jb2RlZCBzdHJpbmcgdG8gYSBVaW50OEFycmF5IG9mIGJ5dGVzLlxuICpcbiAqIEBwYXJhbSBlbmNvZGVkIFRoZSBoZXhhZGVjaW1hbCBlbmNvZGVkIHN0cmluZ1xuICovXG5leHBvcnQgZnVuY3Rpb24gZnJvbUhleChlbmNvZGVkKSB7XG4gICAgaWYgKGVuY29kZWQubGVuZ3RoICUgMiAhPT0gMCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJIZXggZW5jb2RlZCBzdHJpbmdzIG11c3QgaGF2ZSBhbiBldmVuIG51bWJlciBsZW5ndGhcIik7XG4gICAgfVxuICAgIHZhciBvdXQgPSBuZXcgVWludDhBcnJheShlbmNvZGVkLmxlbmd0aCAvIDIpO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZW5jb2RlZC5sZW5ndGg7IGkgKz0gMikge1xuICAgICAgICB2YXIgZW5jb2RlZEJ5dGUgPSBlbmNvZGVkLnN1YnN0cihpLCAyKS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICBpZiAoZW5jb2RlZEJ5dGUgaW4gSEVYX1RPX1NIT1JUKSB7XG4gICAgICAgICAgICBvdXRbaSAvIDJdID0gSEVYX1RPX1NIT1JUW2VuY29kZWRCeXRlXTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBkZWNvZGUgdW5yZWNvZ25pemVkIHNlcXVlbmNlIFwiICsgZW5jb2RlZEJ5dGUgKyBcIiBhcyBoZXhhZGVjaW1hbFwiKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gb3V0O1xufVxuLyoqXG4gKiBDb252ZXJ0cyBhIFVpbnQ4QXJyYXkgb2YgYmluYXJ5IGRhdGEgdG8gYSBoZXhhZGVjaW1hbCBlbmNvZGVkIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0gYnl0ZXMgVGhlIGJpbmFyeSBkYXRhIHRvIGVuY29kZVxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9IZXgoYnl0ZXMpIHtcbiAgICB2YXIgb3V0ID0gXCJcIjtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJ5dGVzLmJ5dGVMZW5ndGg7IGkrKykge1xuICAgICAgICBvdXQgKz0gU0hPUlRfVE9fSEVYW2J5dGVzW2ldXTtcbiAgICB9XG4gICAgcmV0dXJuIG91dDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWFXNWtaWGd1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTh1TGk5emNtTXZhVzVrWlhndWRITWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzU1VGQlRTeFpRVUZaTEVkQlFUaENMRVZCUVVVc1EwRkJRenRCUVVOdVJDeEpRVUZOTEZsQlFWa3NSMEZCT0VJc1JVRkJSU3hEUVVGRE8wRkJSVzVFTEV0QlFVc3NTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJReXhGUVVGRkxFTkJRVU1zUjBGQlJ5eEhRVUZITEVWQlFVVXNRMEZCUXl4RlFVRkZMRVZCUVVVN1NVRkROVUlzU1VGQlNTeFhRVUZYTEVkQlFVY3NRMEZCUXl4RFFVRkRMRkZCUVZFc1EwRkJReXhGUVVGRkxFTkJRVU1zUTBGQlF5eFhRVUZYTEVWQlFVVXNRMEZCUXp0SlFVTXZReXhKUVVGSkxGZEJRVmNzUTBGQlF5eE5RVUZOTEV0QlFVc3NRMEZCUXl4RlFVRkZPMUZCUXpWQ0xGZEJRVmNzUjBGQlJ5eE5RVUZKTEZkQlFXRXNRMEZCUXp0TFFVTnFRenRKUVVWRUxGbEJRVmtzUTBGQlF5eERRVUZETEVOQlFVTXNSMEZCUnl4WFFVRlhMRU5CUVVNN1NVRkRPVUlzV1VGQldTeERRVUZETEZkQlFWY3NRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJRenREUVVNdlFqdEJRVVZFT3pzN08wZEJTVWM3UVVGRFNDeE5RVUZOTEZWQlFWVXNUMEZCVHl4RFFVRkRMRTlCUVdVN1NVRkRja01zU1VGQlNTeFBRVUZQTEVOQlFVTXNUVUZCVFN4SFFVRkhMRU5CUVVNc1MwRkJTeXhEUVVGRExFVkJRVVU3VVVGRE5VSXNUVUZCVFN4SlFVRkpMRXRCUVVzc1EwRkJReXh4UkVGQmNVUXNRMEZCUXl4RFFVRkRPMHRCUTNoRk8wbEJSVVFzU1VGQlRTeEhRVUZITEVkQlFVY3NTVUZCU1N4VlFVRlZMRU5CUVVNc1QwRkJUeXhEUVVGRExFMUJRVTBzUjBGQlJ5eERRVUZETEVOQlFVTXNRMEZCUXp0SlFVTXZReXhMUVVGTExFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNSVUZCUlN4RFFVRkRMRWRCUVVjc1QwRkJUeXhEUVVGRExFMUJRVTBzUlVGQlJTeERRVUZETEVsQlFVa3NRMEZCUXl4RlFVRkZPMUZCUXpGRExFbEJRVTBzVjBGQlZ5eEhRVUZITEU5QlFVOHNRMEZCUXl4TlFVRk5MRU5CUVVNc1EwRkJReXhGUVVGRkxFTkJRVU1zUTBGQlF5eERRVUZETEZkQlFWY3NSVUZCUlN4RFFVRkRPMUZCUTNaRUxFbEJRVWtzVjBGQlZ5eEpRVUZKTEZsQlFWa3NSVUZCUlR0WlFVTXZRaXhIUVVGSExFTkJRVU1zUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXl4SFFVRkhMRmxCUVZrc1EwRkJReXhYUVVGWExFTkJRVU1zUTBGQlF6dFRRVU40UXp0aFFVRk5PMWxCUTB3c1RVRkJUU3hKUVVGSkxFdEJRVXNzUTBGQlF5eDVRMEZCZFVNc1YwRkJWeXh2UWtGQmFVSXNRMEZCUXl4RFFVRkRPMU5CUTNSR08wdEJRMFk3U1VGRlJDeFBRVUZQTEVkQlFVY3NRMEZCUXp0QlFVTmlMRU5CUVVNN1FVRkZSRHM3T3p0SFFVbEhPMEZCUTBnc1RVRkJUU3hWUVVGVkxFdEJRVXNzUTBGQlF5eExRVUZwUWp0SlFVTnlReXhKUVVGSkxFZEJRVWNzUjBGQlJ5eEZRVUZGTEVOQlFVTTdTVUZEWWl4TFFVRkxMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUlVGQlJTeERRVUZETEVkQlFVY3NTMEZCU3l4RFFVRkRMRlZCUVZVc1JVRkJSU3hEUVVGRExFVkJRVVVzUlVGQlJUdFJRVU42UXl4SFFVRkhMRWxCUVVrc1dVRkJXU3hEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMHRCUXk5Q08wbEJSVVFzVDBGQlR5eEhRVUZITEVOQlFVTTdRVUZEWWl4RFFVRkRJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpWTI5dWMzUWdVMGhQVWxSZlZFOWZTRVZZT2lCN0lGdHJaWGs2SUc1MWJXSmxjbDA2SUhOMGNtbHVaeUI5SUQwZ2UzMDdYRzVqYjI1emRDQklSVmhmVkU5ZlUwaFBVbFE2SUhzZ1cydGxlVG9nYzNSeWFXNW5YVG9nYm5WdFltVnlJSDBnUFNCN2ZUdGNibHh1Wm05eUlDaHNaWFFnYVNBOUlEQTdJR2tnUENBeU5UWTdJR2tyS3lrZ2UxeHVJQ0JzWlhRZ1pXNWpiMlJsWkVKNWRHVWdQU0JwTG5SdlUzUnlhVzVuS0RFMktTNTBiMHh2ZDJWeVEyRnpaU2dwTzF4dUlDQnBaaUFvWlc1amIyUmxaRUo1ZEdVdWJHVnVaM1JvSUQwOVBTQXhLU0I3WEc0Z0lDQWdaVzVqYjJSbFpFSjVkR1VnUFNCZ01DUjdaVzVqYjJSbFpFSjVkR1Y5WUR0Y2JpQWdmVnh1WEc0Z0lGTklUMUpVWDFSUFgwaEZXRnRwWFNBOUlHVnVZMjlrWldSQ2VYUmxPMXh1SUNCSVJWaGZWRTlmVTBoUFVsUmJaVzVqYjJSbFpFSjVkR1ZkSUQwZ2FUdGNibjFjYmx4dUx5b3FYRzRnS2lCRGIyNTJaWEowY3lCaElHaGxlR0ZrWldOcGJXRnNJR1Z1WTI5a1pXUWdjM1J5YVc1bklIUnZJR0VnVldsdWREaEJjbkpoZVNCdlppQmllWFJsY3k1Y2JpQXFYRzRnS2lCQWNHRnlZVzBnWlc1amIyUmxaQ0JVYUdVZ2FHVjRZV1JsWTJsdFlXd2daVzVqYjJSbFpDQnpkSEpwYm1kY2JpQXFMMXh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJR1p5YjIxSVpYZ29aVzVqYjJSbFpEb2djM1J5YVc1bktUb2dWV2x1ZERoQmNuSmhlU0I3WEc0Z0lHbG1JQ2hsYm1OdlpHVmtMbXhsYm1kMGFDQWxJRElnSVQwOUlEQXBJSHRjYmlBZ0lDQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb1hDSklaWGdnWlc1amIyUmxaQ0J6ZEhKcGJtZHpJRzExYzNRZ2FHRjJaU0JoYmlCbGRtVnVJRzUxYldKbGNpQnNaVzVuZEdoY0lpazdYRzRnSUgxY2JseHVJQ0JqYjI1emRDQnZkWFFnUFNCdVpYY2dWV2x1ZERoQmNuSmhlU2hsYm1OdlpHVmtMbXhsYm1kMGFDQXZJRElwTzF4dUlDQm1iM0lnS0d4bGRDQnBJRDBnTURzZ2FTQThJR1Z1WTI5a1pXUXViR1Z1WjNSb095QnBJQ3M5SURJcElIdGNiaUFnSUNCamIyNXpkQ0JsYm1OdlpHVmtRbmwwWlNBOUlHVnVZMjlrWldRdWMzVmljM1J5S0drc0lESXBMblJ2VEc5M1pYSkRZWE5sS0NrN1hHNGdJQ0FnYVdZZ0tHVnVZMjlrWldSQ2VYUmxJR2x1SUVoRldGOVVUMTlUU0U5U1ZDa2dlMXh1SUNBZ0lDQWdiM1YwVzJrZ0x5QXlYU0E5SUVoRldGOVVUMTlUU0U5U1ZGdGxibU52WkdWa1FubDBaVjA3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2loZ1EyRnVibTkwSUdSbFkyOWtaU0IxYm5KbFkyOW5ibWw2WldRZ2MyVnhkV1Z1WTJVZ0pIdGxibU52WkdWa1FubDBaWDBnWVhNZ2FHVjRZV1JsWTJsdFlXeGdLVHRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0J5WlhSMWNtNGdiM1YwTzF4dWZWeHVYRzR2S2lwY2JpQXFJRU52Ym5abGNuUnpJR0VnVldsdWREaEJjbkpoZVNCdlppQmlhVzVoY25rZ1pHRjBZU0IwYnlCaElHaGxlR0ZrWldOcGJXRnNJR1Z1WTI5a1pXUWdjM1J5YVc1bkxseHVJQ3BjYmlBcUlFQndZWEpoYlNCaWVYUmxjeUJVYUdVZ1ltbHVZWEo1SUdSaGRHRWdkRzhnWlc1amIyUmxYRzRnS2k5Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCMGIwaGxlQ2hpZVhSbGN6b2dWV2x1ZERoQmNuSmhlU2s2SUhOMGNtbHVaeUI3WEc0Z0lHeGxkQ0J2ZFhRZ1BTQmNJbHdpTzF4dUlDQm1iM0lnS0d4bGRDQnBJRDBnTURzZ2FTQThJR0o1ZEdWekxtSjVkR1ZNWlc1bmRHZzdJR2tyS3lrZ2UxeHVJQ0FnSUc5MWRDQXJQU0JUU0U5U1ZGOVVUMTlJUlZoYllubDBaWE5iYVYxZE8xeHVJQ0I5WEc1Y2JpQWdjbVYwZFhKdUlHOTFkRHRjYm4xY2JpSmRmUT09Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/util-hex-encoding/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/util-uri-escape/dist/es/escape-uri-path.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@aws-sdk/util-uri-escape/dist/es/escape-uri-path.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   escapeUriPath: () => (/* binding */ escapeUriPath)\n/* harmony export */ });\n/* harmony import */ var _escape_uri__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./escape-uri */ \"(ssr)/./node_modules/@aws-sdk/util-uri-escape/dist/es/escape-uri.js\");\n\nvar escapeUriPath = function (uri) { return uri.split(\"/\").map(_escape_uri__WEBPACK_IMPORTED_MODULE_0__.escapeUri).join(\"/\"); };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXNjYXBlLXVyaS1wYXRoLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2VzY2FwZS11cmktcGF0aC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBRXpDLE1BQU0sQ0FBQyxJQUFNLGFBQWEsR0FBRyxVQUFDLEdBQVcsSUFBYSxPQUFBLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBdkMsQ0FBdUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGVzY2FwZVVyaSB9IGZyb20gXCIuL2VzY2FwZS11cmlcIjtcblxuZXhwb3J0IGNvbnN0IGVzY2FwZVVyaVBhdGggPSAodXJpOiBzdHJpbmcpOiBzdHJpbmcgPT4gdXJpLnNwbGl0KFwiL1wiKS5tYXAoZXNjYXBlVXJpKS5qb2luKFwiL1wiKTtcbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvdXRpbC11cmktZXNjYXBlL2Rpc3QvZXMvZXNjYXBlLXVyaS1wYXRoLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlDO0FBQ2xDLHFDQUFxQywwQkFBMEIsa0RBQVM7QUFDL0UsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay91dGlsLXVyaS1lc2NhcGUvZGlzdC9lcy9lc2NhcGUtdXJpLXBhdGguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZXNjYXBlVXJpIH0gZnJvbSBcIi4vZXNjYXBlLXVyaVwiO1xuZXhwb3J0IHZhciBlc2NhcGVVcmlQYXRoID0gZnVuY3Rpb24gKHVyaSkgeyByZXR1cm4gdXJpLnNwbGl0KFwiL1wiKS5tYXAoZXNjYXBlVXJpKS5qb2luKFwiL1wiKTsgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVpYTmpZWEJsTFhWeWFTMXdZWFJvTG1weklpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhNaU9sc2lMaTR2TGk0dmMzSmpMMlZ6WTJGd1pTMTFjbWt0Y0dGMGFDNTBjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4UFFVRlBMRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzWTBGQll5eERRVUZETzBGQlJYcERMRTFCUVUwc1EwRkJReXhKUVVGTkxHRkJRV0VzUjBGQlJ5eFZRVUZETEVkQlFWY3NTVUZCWVN4UFFVRkJMRWRCUVVjc1EwRkJReXhMUVVGTExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRk5CUVZNc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNSVUZCZGtNc1EwRkJkVU1zUTBGQlF5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbWx0Y0c5eWRDQjdJR1Z6WTJGd1pWVnlhU0I5SUdaeWIyMGdYQ0l1TDJWelkyRndaUzExY21sY0lqdGNibHh1Wlhod2IzSjBJR052Ym5OMElHVnpZMkZ3WlZWeWFWQmhkR2dnUFNBb2RYSnBPaUJ6ZEhKcGJtY3BPaUJ6ZEhKcGJtY2dQVDRnZFhKcExuTndiR2wwS0Z3aUwxd2lLUzV0WVhBb1pYTmpZWEJsVlhKcEtTNXFiMmx1S0Z3aUwxd2lLVHRjYmlKZGZRPT0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/util-uri-escape/dist/es/escape-uri-path.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/util-uri-escape/dist/es/escape-uri.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@aws-sdk/util-uri-escape/dist/es/escape-uri.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   escapeUri: () => (/* binding */ escapeUri)\n/* harmony export */ });\nvar escapeUri = function (uri) {\n    // AWS percent-encodes some extra non-standard characters in a URI\n    return encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\n};\nvar hexEncode = function (c) { return \"%\" + c.charCodeAt(0).toString(16).toUpperCase(); };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXNjYXBlLXVyaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lc2NhcGUtdXJpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQyxJQUFNLFNBQVMsR0FBRyxVQUFDLEdBQVc7SUFDbkMsa0VBQWtFO0lBQ2xFLE9BQUEsa0JBQWtCLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLFVBQVUsRUFBRSxTQUFTLENBQUM7QUFBdEQsQ0FBc0QsQ0FBQztBQUV6RCxJQUFNLFNBQVMsR0FBRyxVQUFDLENBQVMsSUFBSyxPQUFBLE1BQUksQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsV0FBVyxFQUFJLEVBQWhELENBQWdELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZXNjYXBlVXJpID0gKHVyaTogc3RyaW5nKTogc3RyaW5nID0+XG4gIC8vIEFXUyBwZXJjZW50LWVuY29kZXMgc29tZSBleHRyYSBub24tc3RhbmRhcmQgY2hhcmFjdGVycyBpbiBhIFVSSVxuICBlbmNvZGVVUklDb21wb25lbnQodXJpKS5yZXBsYWNlKC9bIScoKSpdL2csIGhleEVuY29kZSk7XG5cbmNvbnN0IGhleEVuY29kZSA9IChjOiBzdHJpbmcpID0+IGAlJHtjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKCl9YDtcbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvdXRpbC11cmktZXNjYXBlL2Rpc3QvZXMvZXNjYXBlLXVyaS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0IsMkNBQTJDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLXNkay91dGlsLXVyaS1lc2NhcGUvZGlzdC9lcy9lc2NhcGUtdXJpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgZXNjYXBlVXJpID0gZnVuY3Rpb24gKHVyaSkge1xuICAgIC8vIEFXUyBwZXJjZW50LWVuY29kZXMgc29tZSBleHRyYSBub24tc3RhbmRhcmQgY2hhcmFjdGVycyBpbiBhIFVSSVxuICAgIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQodXJpKS5yZXBsYWNlKC9bIScoKSpdL2csIGhleEVuY29kZSk7XG59O1xudmFyIGhleEVuY29kZSA9IGZ1bmN0aW9uIChjKSB7IHJldHVybiBcIiVcIiArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKTsgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVpYTmpZWEJsTFhWeWFTNXFjeUlzSW5OdmRYSmpaVkp2YjNRaU9pSWlMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMM055WXk5bGMyTmhjR1V0ZFhKcExuUnpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCTEUxQlFVMHNRMEZCUXl4SlFVRk5MRk5CUVZNc1IwRkJSeXhWUVVGRExFZEJRVmM3U1VGRGJrTXNhMFZCUVd0Rk8wbEJRMnhGTEU5QlFVRXNhMEpCUVd0Q0xFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNUMEZCVHl4RFFVRkRMRlZCUVZVc1JVRkJSU3hUUVVGVExFTkJRVU03UVVGQmRFUXNRMEZCYzBRc1EwRkJRenRCUVVWNlJDeEpRVUZOTEZOQlFWTXNSMEZCUnl4VlFVRkRMRU5CUVZNc1NVRkJTeXhQUVVGQkxFMUJRVWtzUTBGQlF5eERRVUZETEZWQlFWVXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhSUVVGUkxFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTXNWMEZCVnl4RlFVRkpMRVZCUVdoRUxFTkJRV2RFTEVOQlFVTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpsZUhCdmNuUWdZMjl1YzNRZ1pYTmpZWEJsVlhKcElEMGdLSFZ5YVRvZ2MzUnlhVzVuS1RvZ2MzUnlhVzVuSUQwK1hHNGdJQzh2SUVGWFV5QndaWEpqWlc1MExXVnVZMjlrWlhNZ2MyOXRaU0JsZUhSeVlTQnViMjR0YzNSaGJtUmhjbVFnWTJoaGNtRmpkR1Z5Y3lCcGJpQmhJRlZTU1Z4dUlDQmxibU52WkdWVlVrbERiMjF3YjI1bGJuUW9kWEpwS1M1eVpYQnNZV05sS0M5YklTY29LU3BkTDJjc0lHaGxlRVZ1WTI5a1pTazdYRzVjYm1OdmJuTjBJR2hsZUVWdVkyOWtaU0E5SUNoak9pQnpkSEpwYm1jcElEMCtJR0FsSkh0akxtTm9ZWEpEYjJSbFFYUW9NQ2t1ZEc5VGRISnBibWNvTVRZcExuUnZWWEJ3WlhKRFlYTmxLQ2w5WUR0Y2JpSmRmUT09Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/util-uri-escape/dist/es/escape-uri.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/util-uri-escape/dist/es/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@aws-sdk/util-uri-escape/dist/es/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   escapeUri: () => (/* reexport safe */ _escape_uri__WEBPACK_IMPORTED_MODULE_0__.escapeUri),\n/* harmony export */   escapeUriPath: () => (/* reexport safe */ _escape_uri_path__WEBPACK_IMPORTED_MODULE_1__.escapeUriPath)\n/* harmony export */ });\n/* harmony import */ var _escape_uri__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./escape-uri */ \"(ssr)/./node_modules/@aws-sdk/util-uri-escape/dist/es/escape-uri.js\");\n/* harmony import */ var _escape_uri_path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./escape-uri-path */ \"(ssr)/./node_modules/@aws-sdk/util-uri-escape/dist/es/escape-uri-path.js\");\n\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxjQUFjLENBQUM7QUFDN0IsY0FBYyxtQkFBbUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2VzY2FwZS11cmlcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2VzY2FwZS11cmktcGF0aFwiO1xuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvdXRpbC11cmktZXNjYXBlL2Rpc3QvZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE2QjtBQUNLO0FBQ2xDLDJDQUEyQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1zZGsvdXRpbC11cmktZXNjYXBlL2Rpc3QvZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vZXNjYXBlLXVyaVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vZXNjYXBlLXVyaS1wYXRoXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lhVzVrWlhndWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12YVc1a1pYZ3VkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1kwRkJZeXhqUVVGakxFTkJRVU03UVVGRE4wSXNZMEZCWXl4dFFrRkJiVUlzUTBGQlF5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbVY0Y0c5eWRDQXFJR1p5YjIwZ1hDSXVMMlZ6WTJGd1pTMTFjbWxjSWp0Y2JtVjRjRzl5ZENBcUlHWnliMjBnWENJdUwyVnpZMkZ3WlMxMWNta3RjR0YwYUZ3aU8xeHVJbDE5Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/util-uri-escape/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/util-user-agent-node/dist/es/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@aws-sdk/util-user-agent-node/dist/es/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UA_APP_ID_ENV_NAME: () => (/* binding */ UA_APP_ID_ENV_NAME),\n/* harmony export */   UA_APP_ID_INI_NAME: () => (/* binding */ UA_APP_ID_INI_NAME),\n/* harmony export */   defaultUserAgent: () => (/* binding */ defaultUserAgent)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@aws-sdk/util-user-agent-node/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _aws_sdk_node_config_provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/node-config-provider */ \"(ssr)/./node_modules/@aws-sdk/node-config-provider/dist/es/index.js\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! os */ \"os\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var process__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! process */ \"process\");\n/* harmony import */ var process__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(process__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\nvar UA_APP_ID_ENV_NAME = \"AWS_SDK_UA_APP_ID\";\nvar UA_APP_ID_INI_NAME = \"sdk-ua-app-id\";\n/**\n * Collect metrics from runtime to put into user agent.\n */\nvar defaultUserAgent = function (_a) {\n    var serviceId = _a.serviceId, clientVersion = _a.clientVersion;\n    return function () { return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(void 0, void 0, void 0, function () {\n        var sections, appId;\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    sections = [\n                        // sdk-metadata\n                        [\"aws-sdk-js\", clientVersion],\n                        // os-metadata\n                        [\"os/\" + (0,os__WEBPACK_IMPORTED_MODULE_1__.platform)(), (0,os__WEBPACK_IMPORTED_MODULE_1__.release)()],\n                        // language-metadata\n                        // ECMAScript edition doesn't matter in JS, so no version needed.\n                        [\"lang/js\"],\n                        [\"md/nodejs\", \"\" + process__WEBPACK_IMPORTED_MODULE_2__.versions.node],\n                    ];\n                    if (serviceId) {\n                        // api-metadata\n                        // service Id may not appear in non-AWS clients\n                        sections.push([\"api/\" + serviceId, clientVersion]);\n                    }\n                    if (process__WEBPACK_IMPORTED_MODULE_2__.env.AWS_EXECUTION_ENV) {\n                        // env-metadata\n                        sections.push([\"exec-env/\" + process__WEBPACK_IMPORTED_MODULE_2__.env.AWS_EXECUTION_ENV]);\n                    }\n                    return [4 /*yield*/, (0,_aws_sdk_node_config_provider__WEBPACK_IMPORTED_MODULE_0__.loadConfig)({\n                            environmentVariableSelector: function (env) { return env[UA_APP_ID_ENV_NAME]; },\n                            configFileSelector: function (profile) { return profile[UA_APP_ID_INI_NAME]; },\n                            default: undefined,\n                        })()];\n                case 1:\n                    appId = _a.sent();\n                    if (appId) {\n                        sections.push([\"app/\" + appId]);\n                    }\n                    return [2 /*return*/, sections];\n            }\n        });\n    }); };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUUzRCxPQUFPLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRSxNQUFNLElBQUksQ0FBQztBQUN2QyxPQUFPLEVBQUUsR0FBRyxFQUFFLFFBQVEsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUV4QyxNQUFNLENBQUMsSUFBTSxrQkFBa0IsR0FBRyxtQkFBbUIsQ0FBQztBQUN0RCxNQUFNLENBQUMsSUFBTSxrQkFBa0IsR0FBRyxlQUFlLENBQUM7QUFPbEQ7O0dBRUc7QUFDSCxNQUFNLENBQUMsSUFBTSxnQkFBZ0IsR0FBRyxVQUFDLEVBR1A7UUFGeEIsU0FBUyxlQUFBLEVBQ1QsYUFBYSxtQkFBQTtJQUNxQyxPQUFBOzs7OztvQkFDNUMsUUFBUSxHQUFjO3dCQUMxQixlQUFlO3dCQUNmLENBQUMsWUFBWSxFQUFFLGFBQWEsQ0FBQzt3QkFDN0IsY0FBYzt3QkFDZCxDQUFDLFFBQU0sUUFBUSxFQUFJLEVBQUUsT0FBTyxFQUFFLENBQUM7d0JBQy9CLG9CQUFvQjt3QkFDcEIsaUVBQWlFO3dCQUNqRSxDQUFDLFNBQVMsQ0FBQzt3QkFDWCxDQUFDLFdBQVcsRUFBRSxLQUFHLFFBQVEsQ0FBQyxJQUFNLENBQUM7cUJBQ2xDLENBQUM7b0JBRUYsSUFBSSxTQUFTLEVBQUU7d0JBQ2IsZUFBZTt3QkFDZiwrQ0FBK0M7d0JBQy9DLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxTQUFPLFNBQVcsRUFBRSxhQUFhLENBQUMsQ0FBQyxDQUFDO3FCQUNwRDtvQkFFRCxJQUFJLEdBQUcsQ0FBQyxpQkFBaUIsRUFBRTt3QkFDekIsZUFBZTt3QkFDZixRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsY0FBWSxHQUFHLENBQUMsaUJBQW1CLENBQUMsQ0FBQyxDQUFDO3FCQUN0RDtvQkFFYSxxQkFBTSxVQUFVLENBQXFCOzRCQUNqRCwyQkFBMkIsRUFBRSxVQUFDLEdBQUcsSUFBSyxPQUFBLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQyxFQUF2QixDQUF1Qjs0QkFDN0Qsa0JBQWtCLEVBQUUsVUFBQyxPQUFPLElBQUssT0FBQSxPQUFPLENBQUMsa0JBQWtCLENBQUMsRUFBM0IsQ0FBMkI7NEJBQzVELE9BQU8sRUFBRSxTQUFTO3lCQUNuQixDQUFDLEVBQUUsRUFBQTs7b0JBSkUsS0FBSyxHQUFHLFNBSVY7b0JBQ0osSUFBSSxLQUFLLEVBQUU7d0JBQ1QsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLFNBQU8sS0FBTyxDQUFDLENBQUMsQ0FBQztxQkFDakM7b0JBRUQsc0JBQU8sUUFBUSxFQUFDOzs7U0FDakI7QUFqQ21ELENBaUNuRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbG9hZENvbmZpZyB9IGZyb20gXCJAYXdzLXNkay9ub2RlLWNvbmZpZy1wcm92aWRlclwiO1xuaW1wb3J0IHsgUHJvdmlkZXIsIFVzZXJBZ2VudCB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuaW1wb3J0IHsgcGxhdGZvcm0sIHJlbGVhc2UgfSBmcm9tIFwib3NcIjtcbmltcG9ydCB7IGVudiwgdmVyc2lvbnMgfSBmcm9tIFwicHJvY2Vzc1wiO1xuXG5leHBvcnQgY29uc3QgVUFfQVBQX0lEX0VOVl9OQU1FID0gXCJBV1NfU0RLX1VBX0FQUF9JRFwiO1xuZXhwb3J0IGNvbnN0IFVBX0FQUF9JRF9JTklfTkFNRSA9IFwic2RrLXVhLWFwcC1pZFwiO1xuXG5pbnRlcmZhY2UgRGVmYXVsdFVzZXJBZ2VudE9wdGlvbnMge1xuICBzZXJ2aWNlSWQ/OiBzdHJpbmc7XG4gIGNsaWVudFZlcnNpb246IHN0cmluZztcbn1cblxuLyoqXG4gKiBDb2xsZWN0IG1ldHJpY3MgZnJvbSBydW50aW1lIHRvIHB1dCBpbnRvIHVzZXIgYWdlbnQuXG4gKi9cbmV4cG9ydCBjb25zdCBkZWZhdWx0VXNlckFnZW50ID0gKHtcbiAgc2VydmljZUlkLFxuICBjbGllbnRWZXJzaW9uLFxufTogRGVmYXVsdFVzZXJBZ2VudE9wdGlvbnMpOiBQcm92aWRlcjxVc2VyQWdlbnQ+ID0+IGFzeW5jICgpID0+IHtcbiAgY29uc3Qgc2VjdGlvbnM6IFVzZXJBZ2VudCA9IFtcbiAgICAvLyBzZGstbWV0YWRhdGFcbiAgICBbXCJhd3Mtc2RrLWpzXCIsIGNsaWVudFZlcnNpb25dLFxuICAgIC8vIG9zLW1ldGFkYXRhXG4gICAgW2Bvcy8ke3BsYXRmb3JtKCl9YCwgcmVsZWFzZSgpXSxcbiAgICAvLyBsYW5ndWFnZS1tZXRhZGF0YVxuICAgIC8vIEVDTUFTY3JpcHQgZWRpdGlvbiBkb2Vzbid0IG1hdHRlciBpbiBKUywgc28gbm8gdmVyc2lvbiBuZWVkZWQuXG4gICAgW1wibGFuZy9qc1wiXSxcbiAgICBbXCJtZC9ub2RlanNcIiwgYCR7dmVyc2lvbnMubm9kZX1gXSxcbiAgXTtcblxuICBpZiAoc2VydmljZUlkKSB7XG4gICAgLy8gYXBpLW1ldGFkYXRhXG4gICAgLy8gc2VydmljZSBJZCBtYXkgbm90IGFwcGVhciBpbiBub24tQVdTIGNsaWVudHNcbiAgICBzZWN0aW9ucy5wdXNoKFtgYXBpLyR7c2VydmljZUlkfWAsIGNsaWVudFZlcnNpb25dKTtcbiAgfVxuXG4gIGlmIChlbnYuQVdTX0VYRUNVVElPTl9FTlYpIHtcbiAgICAvLyBlbnYtbWV0YWRhdGFcbiAgICBzZWN0aW9ucy5wdXNoKFtgZXhlYy1lbnYvJHtlbnYuQVdTX0VYRUNVVElPTl9FTlZ9YF0pO1xuICB9XG5cbiAgY29uc3QgYXBwSWQgPSBhd2FpdCBsb2FkQ29uZmlnPHN0cmluZyB8IHVuZGVmaW5lZD4oe1xuICAgIGVudmlyb25tZW50VmFyaWFibGVTZWxlY3RvcjogKGVudikgPT4gZW52W1VBX0FQUF9JRF9FTlZfTkFNRV0sXG4gICAgY29uZmlnRmlsZVNlbGVjdG9yOiAocHJvZmlsZSkgPT4gcHJvZmlsZVtVQV9BUFBfSURfSU5JX05BTUVdLFxuICAgIGRlZmF1bHQ6IHVuZGVmaW5lZCxcbiAgfSkoKTtcbiAgaWYgKGFwcElkKSB7XG4gICAgc2VjdGlvbnMucHVzaChbYGFwcC8ke2FwcElkfWBdKTtcbiAgfVxuXG4gIHJldHVybiBzZWN0aW9ucztcbn07XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/util-user-agent-node/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/util-user-agent-node/node_modules/tslib/tslib.es6.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/util-user-agent-node/node_modules/tslib/tslib.es6.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/util-user-agent-node/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-sdk/util-utf8-node/dist/es/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@aws-sdk/util-utf8-node/dist/es/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromUtf8: () => (/* binding */ fromUtf8),\n/* harmony export */   toUtf8: () => (/* binding */ toUtf8)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_util_buffer_from__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/util-buffer-from */ \"(ssr)/./node_modules/@aws-sdk/util-buffer-from/dist/es/index.js\");\n\nvar fromUtf8 = function (input) {\n    var buf = (0,_aws_sdk_util_buffer_from__WEBPACK_IMPORTED_MODULE_0__.fromString)(input, \"utf8\");\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n};\nvar toUtf8 = function (input) {\n    return (0,_aws_sdk_util_buffer_from__WEBPACK_IMPORTED_MODULE_0__.fromArrayBuffer)(input.buffer, input.byteOffset, input.byteLength).toString(\"utf8\");\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGVBQWUsRUFBRSxVQUFVLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUV4RSxNQUFNLENBQUMsSUFBTSxRQUFRLEdBQUcsVUFBQyxLQUFhO0lBQ3BDLElBQU0sR0FBRyxHQUFHLFVBQVUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDdEMsT0FBTyxJQUFJLFVBQVUsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxVQUFVLEVBQUUsR0FBRyxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUMsaUJBQWlCLENBQUMsQ0FBQztBQUNuRyxDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSxNQUFNLEdBQUcsVUFBQyxLQUFpQjtJQUN0QyxPQUFBLGVBQWUsQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUM7QUFBbEYsQ0FBa0YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZyb21BcnJheUJ1ZmZlciwgZnJvbVN0cmluZyB9IGZyb20gXCJAYXdzLXNkay91dGlsLWJ1ZmZlci1mcm9tXCI7XG5cbmV4cG9ydCBjb25zdCBmcm9tVXRmOCA9IChpbnB1dDogc3RyaW5nKTogVWludDhBcnJheSA9PiB7XG4gIGNvbnN0IGJ1ZiA9IGZyb21TdHJpbmcoaW5wdXQsIFwidXRmOFwiKTtcbiAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGJ1Zi5idWZmZXIsIGJ1Zi5ieXRlT2Zmc2V0LCBidWYuYnl0ZUxlbmd0aCAvIFVpbnQ4QXJyYXkuQllURVNfUEVSX0VMRU1FTlQpO1xufTtcblxuZXhwb3J0IGNvbnN0IHRvVXRmOCA9IChpbnB1dDogVWludDhBcnJheSk6IHN0cmluZyA9PlxuICBmcm9tQXJyYXlCdWZmZXIoaW5wdXQuYnVmZmVyLCBpbnB1dC5ieXRlT2Zmc2V0LCBpbnB1dC5ieXRlTGVuZ3RoKS50b1N0cmluZyhcInV0ZjhcIik7XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvdXRpbC11dGY4LW5vZGUvZGlzdC9lcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0U7QUFDakU7QUFDUCxjQUFjLHFFQUFVO0FBQ3hCO0FBQ0E7QUFDTztBQUNQLFdBQVcsMEVBQWU7QUFDMUI7QUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL3V0aWwtdXRmOC1ub2RlL2Rpc3QvZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZnJvbUFycmF5QnVmZmVyLCBmcm9tU3RyaW5nIH0gZnJvbSBcIkBhd3Mtc2RrL3V0aWwtYnVmZmVyLWZyb21cIjtcbmV4cG9ydCB2YXIgZnJvbVV0ZjggPSBmdW5jdGlvbiAoaW5wdXQpIHtcbiAgICB2YXIgYnVmID0gZnJvbVN0cmluZyhpbnB1dCwgXCJ1dGY4XCIpO1xuICAgIHJldHVybiBuZXcgVWludDhBcnJheShidWYuYnVmZmVyLCBidWYuYnl0ZU9mZnNldCwgYnVmLmJ5dGVMZW5ndGggLyBVaW50OEFycmF5LkJZVEVTX1BFUl9FTEVNRU5UKTtcbn07XG5leHBvcnQgdmFyIHRvVXRmOCA9IGZ1bmN0aW9uIChpbnB1dCkge1xuICAgIHJldHVybiBmcm9tQXJyYXlCdWZmZXIoaW5wdXQuYnVmZmVyLCBpbnB1dC5ieXRlT2Zmc2V0LCBpbnB1dC5ieXRlTGVuZ3RoKS50b1N0cmluZyhcInV0ZjhcIik7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYVc1a1pYZ3Vhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOHVMaTl6Y21NdmFXNWtaWGd1ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRXNUMEZCVHl4RlFVRkZMR1ZCUVdVc1JVRkJSU3hWUVVGVkxFVkJRVVVzVFVGQlRTd3lRa0ZCTWtJc1EwRkJRenRCUVVWNFJTeE5RVUZOTEVOQlFVTXNTVUZCVFN4UlFVRlJMRWRCUVVjc1ZVRkJReXhMUVVGaE8wbEJRM0JETEVsQlFVMHNSMEZCUnl4SFFVRkhMRlZCUVZVc1EwRkJReXhMUVVGTExFVkJRVVVzVFVGQlRTeERRVUZETEVOQlFVTTdTVUZEZEVNc1QwRkJUeXhKUVVGSkxGVkJRVlVzUTBGQlF5eEhRVUZITEVOQlFVTXNUVUZCVFN4RlFVRkZMRWRCUVVjc1EwRkJReXhWUVVGVkxFVkJRVVVzUjBGQlJ5eERRVUZETEZWQlFWVXNSMEZCUnl4VlFVRlZMRU5CUVVNc2FVSkJRV2xDTEVOQlFVTXNRMEZCUXp0QlFVTnVSeXhEUVVGRExFTkJRVU03UVVGRlJpeE5RVUZOTEVOQlFVTXNTVUZCVFN4TlFVRk5MRWRCUVVjc1ZVRkJReXhMUVVGcFFqdEpRVU4wUXl4UFFVRkJMR1ZCUVdVc1EwRkJReXhMUVVGTExFTkJRVU1zVFVGQlRTeEZRVUZGTEV0QlFVc3NRMEZCUXl4VlFVRlZMRVZCUVVVc1MwRkJTeXhEUVVGRExGVkJRVlVzUTBGQlF5eERRVUZETEZGQlFWRXNRMEZCUXl4TlFVRk5MRU5CUVVNN1FVRkJiRVlzUTBGQmEwWXNRMEZCUXlJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYkltbHRjRzl5ZENCN0lHWnliMjFCY25KaGVVSjFabVpsY2l3Z1puSnZiVk4wY21sdVp5QjlJR1p5YjIwZ1hDSkFZWGR6TFhOa2F5OTFkR2xzTFdKMVptWmxjaTFtY205dFhDSTdYRzVjYm1WNGNHOXlkQ0JqYjI1emRDQm1jbTl0VlhSbU9DQTlJQ2hwYm5CMWREb2djM1J5YVc1bktUb2dWV2x1ZERoQmNuSmhlU0E5UGlCN1hHNGdJR052Ym5OMElHSjFaaUE5SUdaeWIyMVRkSEpwYm1jb2FXNXdkWFFzSUZ3aWRYUm1PRndpS1R0Y2JpQWdjbVYwZFhKdUlHNWxkeUJWYVc1ME9FRnljbUY1S0dKMVppNWlkV1ptWlhJc0lHSjFaaTVpZVhSbFQyWm1jMlYwTENCaWRXWXVZbmwwWlV4bGJtZDBhQ0F2SUZWcGJuUTRRWEp5WVhrdVFsbFVSVk5mVUVWU1gwVk1SVTFGVGxRcE8xeHVmVHRjYmx4dVpYaHdiM0owSUdOdmJuTjBJSFJ2VlhSbU9DQTlJQ2hwYm5CMWREb2dWV2x1ZERoQmNuSmhlU2s2SUhOMGNtbHVaeUE5UGx4dUlDQm1jbTl0UVhKeVlYbENkV1ptWlhJb2FXNXdkWFF1WW5WbVptVnlMQ0JwYm5CMWRDNWllWFJsVDJabWMyVjBMQ0JwYm5CMWRDNWllWFJsVEdWdVozUm9LUzUwYjFOMGNtbHVaeWhjSW5WMFpqaGNJaWs3WEc0aVhYMD0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-sdk/util-utf8-node/dist/es/index.js\n");

/***/ })

};
;