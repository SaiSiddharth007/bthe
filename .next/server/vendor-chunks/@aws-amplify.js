"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@aws-amplify";
exports.ids = ["vendor-chunks/@aws-amplify"];
exports.modules = {

/***/ "(rsc)/./node_modules/@aws-amplify/core/lib-esm/Amplify.js":
/*!***********************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/Amplify.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Amplify: () => (/* binding */ Amplify),\n/* harmony export */   AmplifyClass: () => (/* binding */ AmplifyClass),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Logger */ \"(rsc)/./node_modules/@aws-amplify/core/lib-esm/Logger/ConsoleLogger.js\");\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n\nvar logger = new _Logger__WEBPACK_IMPORTED_MODULE_0__.ConsoleLogger('Amplify');\nvar AmplifyClass = /** @class */ (function () {\n    function AmplifyClass() {\n        // Everything that is `register`ed is tracked here\n        this._components = [];\n        this._config = {};\n        // All modules (with `getModuleName()`) are stored here for dependency injection\n        this._modules = {};\n        // for backward compatibility to avoid breaking change\n        // if someone is using like Amplify.Auth\n        this.Auth = null;\n        this.Analytics = null;\n        this.API = null;\n        this.Credentials = null;\n        this.Storage = null;\n        this.I18n = null;\n        this.Cache = null;\n        this.PubSub = null;\n        this.Interactions = null;\n        this.Pushnotification = null;\n        this.UI = null;\n        this.XR = null;\n        this.Predictions = null;\n        this.DataStore = null;\n        this.Geo = null;\n        this.Logger = _Logger__WEBPACK_IMPORTED_MODULE_0__.ConsoleLogger;\n        this.ServiceWorker = null;\n    }\n    AmplifyClass.prototype.register = function (comp) {\n        logger.debug('component registered in amplify', comp);\n        this._components.push(comp);\n        if (typeof comp.getModuleName === 'function') {\n            this._modules[comp.getModuleName()] = comp;\n            this[comp.getModuleName()] = comp;\n        }\n        else {\n            logger.debug('no getModuleName method for component', comp);\n        }\n        // Finally configure this new component(category) loaded\n        // With the new modularization changes in Amplify V3, all the Amplify\n        // component are not loaded/registered right away but when they are\n        // imported (and hence instantiated) in the client's app. This ensures\n        // that all new components imported get correctly configured with the\n        // configuration that Amplify.configure() was called with.\n        comp.configure(this._config);\n    };\n    AmplifyClass.prototype.configure = function (config) {\n        var _this = this;\n        if (!config)\n            return this._config;\n        this._config = Object.assign(this._config, config);\n        logger.debug('amplify config', this._config);\n        // Dependency Injection via property-setting.\n        // This avoids introducing a public method/interface/setter that's difficult to remove later.\n        // Plus, it reduces `if` statements within the `constructor` and `configure` of each module\n        Object.entries(this._modules).forEach(function (_a) {\n            var _b = __read(_a, 2), Name = _b[0], comp = _b[1];\n            // e.g. Auth.*\n            Object.keys(comp).forEach(function (property) {\n                // e.g. Auth[\"Credentials\"] = this._modules[\"Credentials\"] when set\n                if (_this._modules[property]) {\n                    comp[property] = _this._modules[property];\n                }\n            });\n        });\n        this._components.map(function (comp) {\n            comp.configure(_this._config);\n        });\n        return this._config;\n    };\n    AmplifyClass.prototype.addPluggable = function (pluggable) {\n        if (pluggable &&\n            pluggable['getCategory'] &&\n            typeof pluggable['getCategory'] === 'function') {\n            this._components.map(function (comp) {\n                if (comp['addPluggable'] &&\n                    typeof comp['addPluggable'] === 'function') {\n                    comp.addPluggable(pluggable);\n                }\n            });\n        }\n    };\n    return AmplifyClass;\n}());\n\nvar Amplify = new AmplifyClass();\n/**\n * @deprecated use named import\n */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Amplify);\n//# sourceMappingURL=Amplify.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1hbXBsaWZ5L2NvcmUvbGliLWVzbS9BbXBsaWZ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxjQUFjLFNBQUksSUFBSSxTQUFJO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixNQUFNO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUN3RDtBQUN4RCxpQkFBaUIsa0RBQVc7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGtEQUFXO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUN1QjtBQUNqQjtBQUNQO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLE9BQU8sRUFBQztBQUN2QiIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1hbXBsaWZ5L2NvcmUvbGliLWVzbS9BbXBsaWZ5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX3JlYWQgPSAodGhpcyAmJiB0aGlzLl9fcmVhZCkgfHwgZnVuY3Rpb24gKG8sIG4pIHtcbiAgICB2YXIgbSA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvW1N5bWJvbC5pdGVyYXRvcl07XG4gICAgaWYgKCFtKSByZXR1cm4gbztcbiAgICB2YXIgaSA9IG0uY2FsbChvKSwgciwgYXIgPSBbXSwgZTtcbiAgICB0cnkge1xuICAgICAgICB3aGlsZSAoKG4gPT09IHZvaWQgMCB8fCBuLS0gPiAwKSAmJiAhKHIgPSBpLm5leHQoKSkuZG9uZSkgYXIucHVzaChyLnZhbHVlKTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7IGUgPSB7IGVycm9yOiBlcnJvciB9OyB9XG4gICAgZmluYWxseSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAociAmJiAhci5kb25lICYmIChtID0gaVtcInJldHVyblwiXSkpIG0uY2FsbChpKTtcbiAgICAgICAgfVxuICAgICAgICBmaW5hbGx5IHsgaWYgKGUpIHRocm93IGUuZXJyb3I7IH1cbiAgICB9XG4gICAgcmV0dXJuIGFyO1xufTtcbmltcG9ydCB7IENvbnNvbGVMb2dnZXIgYXMgTG9nZ2VyQ2xhc3MgfSBmcm9tICcuL0xvZ2dlcic7XG52YXIgbG9nZ2VyID0gbmV3IExvZ2dlckNsYXNzKCdBbXBsaWZ5Jyk7XG52YXIgQW1wbGlmeUNsYXNzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEFtcGxpZnlDbGFzcygpIHtcbiAgICAgICAgLy8gRXZlcnl0aGluZyB0aGF0IGlzIGByZWdpc3RlcmBlZCBpcyB0cmFja2VkIGhlcmVcbiAgICAgICAgdGhpcy5fY29tcG9uZW50cyA9IFtdO1xuICAgICAgICB0aGlzLl9jb25maWcgPSB7fTtcbiAgICAgICAgLy8gQWxsIG1vZHVsZXMgKHdpdGggYGdldE1vZHVsZU5hbWUoKWApIGFyZSBzdG9yZWQgaGVyZSBmb3IgZGVwZW5kZW5jeSBpbmplY3Rpb25cbiAgICAgICAgdGhpcy5fbW9kdWxlcyA9IHt9O1xuICAgICAgICAvLyBmb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eSB0byBhdm9pZCBicmVha2luZyBjaGFuZ2VcbiAgICAgICAgLy8gaWYgc29tZW9uZSBpcyB1c2luZyBsaWtlIEFtcGxpZnkuQXV0aFxuICAgICAgICB0aGlzLkF1dGggPSBudWxsO1xuICAgICAgICB0aGlzLkFuYWx5dGljcyA9IG51bGw7XG4gICAgICAgIHRoaXMuQVBJID0gbnVsbDtcbiAgICAgICAgdGhpcy5DcmVkZW50aWFscyA9IG51bGw7XG4gICAgICAgIHRoaXMuU3RvcmFnZSA9IG51bGw7XG4gICAgICAgIHRoaXMuSTE4biA9IG51bGw7XG4gICAgICAgIHRoaXMuQ2FjaGUgPSBudWxsO1xuICAgICAgICB0aGlzLlB1YlN1YiA9IG51bGw7XG4gICAgICAgIHRoaXMuSW50ZXJhY3Rpb25zID0gbnVsbDtcbiAgICAgICAgdGhpcy5QdXNobm90aWZpY2F0aW9uID0gbnVsbDtcbiAgICAgICAgdGhpcy5VSSA9IG51bGw7XG4gICAgICAgIHRoaXMuWFIgPSBudWxsO1xuICAgICAgICB0aGlzLlByZWRpY3Rpb25zID0gbnVsbDtcbiAgICAgICAgdGhpcy5EYXRhU3RvcmUgPSBudWxsO1xuICAgICAgICB0aGlzLkdlbyA9IG51bGw7XG4gICAgICAgIHRoaXMuTG9nZ2VyID0gTG9nZ2VyQ2xhc3M7XG4gICAgICAgIHRoaXMuU2VydmljZVdvcmtlciA9IG51bGw7XG4gICAgfVxuICAgIEFtcGxpZnlDbGFzcy5wcm90b3R5cGUucmVnaXN0ZXIgPSBmdW5jdGlvbiAoY29tcCkge1xuICAgICAgICBsb2dnZXIuZGVidWcoJ2NvbXBvbmVudCByZWdpc3RlcmVkIGluIGFtcGxpZnknLCBjb21wKTtcbiAgICAgICAgdGhpcy5fY29tcG9uZW50cy5wdXNoKGNvbXApO1xuICAgICAgICBpZiAodHlwZW9mIGNvbXAuZ2V0TW9kdWxlTmFtZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgdGhpcy5fbW9kdWxlc1tjb21wLmdldE1vZHVsZU5hbWUoKV0gPSBjb21wO1xuICAgICAgICAgICAgdGhpc1tjb21wLmdldE1vZHVsZU5hbWUoKV0gPSBjb21wO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbG9nZ2VyLmRlYnVnKCdubyBnZXRNb2R1bGVOYW1lIG1ldGhvZCBmb3IgY29tcG9uZW50JywgY29tcCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gRmluYWxseSBjb25maWd1cmUgdGhpcyBuZXcgY29tcG9uZW50KGNhdGVnb3J5KSBsb2FkZWRcbiAgICAgICAgLy8gV2l0aCB0aGUgbmV3IG1vZHVsYXJpemF0aW9uIGNoYW5nZXMgaW4gQW1wbGlmeSBWMywgYWxsIHRoZSBBbXBsaWZ5XG4gICAgICAgIC8vIGNvbXBvbmVudCBhcmUgbm90IGxvYWRlZC9yZWdpc3RlcmVkIHJpZ2h0IGF3YXkgYnV0IHdoZW4gdGhleSBhcmVcbiAgICAgICAgLy8gaW1wb3J0ZWQgKGFuZCBoZW5jZSBpbnN0YW50aWF0ZWQpIGluIHRoZSBjbGllbnQncyBhcHAuIFRoaXMgZW5zdXJlc1xuICAgICAgICAvLyB0aGF0IGFsbCBuZXcgY29tcG9uZW50cyBpbXBvcnRlZCBnZXQgY29ycmVjdGx5IGNvbmZpZ3VyZWQgd2l0aCB0aGVcbiAgICAgICAgLy8gY29uZmlndXJhdGlvbiB0aGF0IEFtcGxpZnkuY29uZmlndXJlKCkgd2FzIGNhbGxlZCB3aXRoLlxuICAgICAgICBjb21wLmNvbmZpZ3VyZSh0aGlzLl9jb25maWcpO1xuICAgIH07XG4gICAgQW1wbGlmeUNsYXNzLnByb3RvdHlwZS5jb25maWd1cmUgPSBmdW5jdGlvbiAoY29uZmlnKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIGlmICghY29uZmlnKVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZztcbiAgICAgICAgdGhpcy5fY29uZmlnID0gT2JqZWN0LmFzc2lnbih0aGlzLl9jb25maWcsIGNvbmZpZyk7XG4gICAgICAgIGxvZ2dlci5kZWJ1ZygnYW1wbGlmeSBjb25maWcnLCB0aGlzLl9jb25maWcpO1xuICAgICAgICAvLyBEZXBlbmRlbmN5IEluamVjdGlvbiB2aWEgcHJvcGVydHktc2V0dGluZy5cbiAgICAgICAgLy8gVGhpcyBhdm9pZHMgaW50cm9kdWNpbmcgYSBwdWJsaWMgbWV0aG9kL2ludGVyZmFjZS9zZXR0ZXIgdGhhdCdzIGRpZmZpY3VsdCB0byByZW1vdmUgbGF0ZXIuXG4gICAgICAgIC8vIFBsdXMsIGl0IHJlZHVjZXMgYGlmYCBzdGF0ZW1lbnRzIHdpdGhpbiB0aGUgYGNvbnN0cnVjdG9yYCBhbmQgYGNvbmZpZ3VyZWAgb2YgZWFjaCBtb2R1bGVcbiAgICAgICAgT2JqZWN0LmVudHJpZXModGhpcy5fbW9kdWxlcykuZm9yRWFjaChmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgIHZhciBfYiA9IF9fcmVhZChfYSwgMiksIE5hbWUgPSBfYlswXSwgY29tcCA9IF9iWzFdO1xuICAgICAgICAgICAgLy8gZS5nLiBBdXRoLipcbiAgICAgICAgICAgIE9iamVjdC5rZXlzKGNvbXApLmZvckVhY2goZnVuY3Rpb24gKHByb3BlcnR5KSB7XG4gICAgICAgICAgICAgICAgLy8gZS5nLiBBdXRoW1wiQ3JlZGVudGlhbHNcIl0gPSB0aGlzLl9tb2R1bGVzW1wiQ3JlZGVudGlhbHNcIl0gd2hlbiBzZXRcbiAgICAgICAgICAgICAgICBpZiAoX3RoaXMuX21vZHVsZXNbcHJvcGVydHldKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbXBbcHJvcGVydHldID0gX3RoaXMuX21vZHVsZXNbcHJvcGVydHldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5fY29tcG9uZW50cy5tYXAoZnVuY3Rpb24gKGNvbXApIHtcbiAgICAgICAgICAgIGNvbXAuY29uZmlndXJlKF90aGlzLl9jb25maWcpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZztcbiAgICB9O1xuICAgIEFtcGxpZnlDbGFzcy5wcm90b3R5cGUuYWRkUGx1Z2dhYmxlID0gZnVuY3Rpb24gKHBsdWdnYWJsZSkge1xuICAgICAgICBpZiAocGx1Z2dhYmxlICYmXG4gICAgICAgICAgICBwbHVnZ2FibGVbJ2dldENhdGVnb3J5J10gJiZcbiAgICAgICAgICAgIHR5cGVvZiBwbHVnZ2FibGVbJ2dldENhdGVnb3J5J10gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHRoaXMuX2NvbXBvbmVudHMubWFwKGZ1bmN0aW9uIChjb21wKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNvbXBbJ2FkZFBsdWdnYWJsZSddICYmXG4gICAgICAgICAgICAgICAgICAgIHR5cGVvZiBjb21wWydhZGRQbHVnZ2FibGUnXSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICBjb21wLmFkZFBsdWdnYWJsZShwbHVnZ2FibGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gQW1wbGlmeUNsYXNzO1xufSgpKTtcbmV4cG9ydCB7IEFtcGxpZnlDbGFzcyB9O1xuZXhwb3J0IHZhciBBbXBsaWZ5ID0gbmV3IEFtcGxpZnlDbGFzcygpO1xuLyoqXG4gKiBAZGVwcmVjYXRlZCB1c2UgbmFtZWQgaW1wb3J0XG4gKi9cbmV4cG9ydCBkZWZhdWx0IEFtcGxpZnk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BbXBsaWZ5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-amplify/core/lib-esm/Amplify.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-amplify/core/lib-esm/Logger/ConsoleLogger.js":
/*!************************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/Logger/ConsoleLogger.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConsoleLogger: () => (/* binding */ ConsoleLogger),\n/* harmony export */   LOG_TYPE: () => (/* binding */ LOG_TYPE)\n/* harmony export */ });\n/* harmony import */ var _Util_Constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Util/Constants */ \"(rsc)/./node_modules/@aws-amplify/core/lib-esm/Util/Constants.js\");\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __values = (undefined && undefined.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (undefined && undefined.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\n\nvar LOG_LEVELS = {\n    VERBOSE: 1,\n    DEBUG: 2,\n    INFO: 3,\n    WARN: 4,\n    ERROR: 5,\n};\nvar LOG_TYPE;\n(function (LOG_TYPE) {\n    LOG_TYPE[\"DEBUG\"] = \"DEBUG\";\n    LOG_TYPE[\"ERROR\"] = \"ERROR\";\n    LOG_TYPE[\"INFO\"] = \"INFO\";\n    LOG_TYPE[\"WARN\"] = \"WARN\";\n    LOG_TYPE[\"VERBOSE\"] = \"VERBOSE\";\n})(LOG_TYPE || (LOG_TYPE = {}));\n/**\n * Write logs\n * @class Logger\n */\nvar ConsoleLogger = /** @class */ (function () {\n    /**\n     * @constructor\n     * @param {string} name - Name of the logger\n     */\n    function ConsoleLogger(name, level) {\n        if (level === void 0) { level = LOG_TYPE.WARN; }\n        this.name = name;\n        this.level = level;\n        this._pluggables = [];\n    }\n    ConsoleLogger.prototype._padding = function (n) {\n        return n < 10 ? '0' + n : '' + n;\n    };\n    ConsoleLogger.prototype._ts = function () {\n        var dt = new Date();\n        return ([this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(':') +\n            '.' +\n            dt.getMilliseconds());\n    };\n    ConsoleLogger.prototype.configure = function (config) {\n        if (!config)\n            return this._config;\n        this._config = config;\n        return this._config;\n    };\n    /**\n     * Write log\n     * @method\n     * @memeberof Logger\n     * @param {LOG_TYPE|string} type - log type, default INFO\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype._log = function (type) {\n        var e_1, _a;\n        var msg = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            msg[_i - 1] = arguments[_i];\n        }\n        var logger_level_name = this.level;\n        if (ConsoleLogger.LOG_LEVEL) {\n            logger_level_name = ConsoleLogger.LOG_LEVEL;\n        }\n        if (typeof window !== 'undefined' && window.LOG_LEVEL) {\n            logger_level_name = window.LOG_LEVEL;\n        }\n        var logger_level = LOG_LEVELS[logger_level_name];\n        var type_level = LOG_LEVELS[type];\n        if (!(type_level >= logger_level)) {\n            // Do nothing if type is not greater than or equal to logger level (handle undefined)\n            return;\n        }\n        var log = console.log.bind(console);\n        if (type === LOG_TYPE.ERROR && console.error) {\n            log = console.error.bind(console);\n        }\n        if (type === LOG_TYPE.WARN && console.warn) {\n            log = console.warn.bind(console);\n        }\n        var prefix = \"[\" + type + \"] \" + this._ts() + \" \" + this.name;\n        var message = '';\n        if (msg.length === 1 && typeof msg[0] === 'string') {\n            message = prefix + \" - \" + msg[0];\n            log(message);\n        }\n        else if (msg.length === 1) {\n            message = prefix + \" \" + msg[0];\n            log(prefix, msg[0]);\n        }\n        else if (typeof msg[0] === 'string') {\n            var obj = msg.slice(1);\n            if (obj.length === 1) {\n                obj = obj[0];\n            }\n            message = prefix + \" - \" + msg[0] + \" \" + obj;\n            log(prefix + \" - \" + msg[0], obj);\n        }\n        else {\n            message = prefix + \" \" + msg;\n            log(prefix, msg);\n        }\n        try {\n            for (var _b = __values(this._pluggables), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var plugin = _c.value;\n                var logEvent = { message: message, timestamp: Date.now() };\n                plugin.pushLogs([logEvent]);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /**\n     * Write General log. Default to INFO\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype.log = function () {\n        var msg = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            msg[_i] = arguments[_i];\n        }\n        this._log.apply(this, __spread([LOG_TYPE.INFO], msg));\n    };\n    /**\n     * Write INFO log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype.info = function () {\n        var msg = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            msg[_i] = arguments[_i];\n        }\n        this._log.apply(this, __spread([LOG_TYPE.INFO], msg));\n    };\n    /**\n     * Write WARN log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype.warn = function () {\n        var msg = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            msg[_i] = arguments[_i];\n        }\n        this._log.apply(this, __spread([LOG_TYPE.WARN], msg));\n    };\n    /**\n     * Write ERROR log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype.error = function () {\n        var msg = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            msg[_i] = arguments[_i];\n        }\n        this._log.apply(this, __spread([LOG_TYPE.ERROR], msg));\n    };\n    /**\n     * Write DEBUG log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype.debug = function () {\n        var msg = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            msg[_i] = arguments[_i];\n        }\n        this._log.apply(this, __spread([LOG_TYPE.DEBUG], msg));\n    };\n    /**\n     * Write VERBOSE log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype.verbose = function () {\n        var msg = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            msg[_i] = arguments[_i];\n        }\n        this._log.apply(this, __spread([LOG_TYPE.VERBOSE], msg));\n    };\n    ConsoleLogger.prototype.addPluggable = function (pluggable) {\n        if (pluggable && pluggable.getCategoryName() === _Util_Constants__WEBPACK_IMPORTED_MODULE_0__.AWS_CLOUDWATCH_CATEGORY) {\n            this._pluggables.push(pluggable);\n            pluggable.configure(this._config);\n        }\n    };\n    ConsoleLogger.prototype.listPluggables = function () {\n        return this._pluggables;\n    };\n    ConsoleLogger.LOG_LEVEL = null;\n    return ConsoleLogger;\n}());\n\n//# sourceMappingURL=ConsoleLogger.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-amplify/core/lib-esm/Logger/ConsoleLogger.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-amplify/core/lib-esm/Util/Constants.js":
/*!******************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/Util/Constants.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AWS_CLOUDWATCH_BASE_BUFFER_SIZE: () => (/* binding */ AWS_CLOUDWATCH_BASE_BUFFER_SIZE),\n/* harmony export */   AWS_CLOUDWATCH_CATEGORY: () => (/* binding */ AWS_CLOUDWATCH_CATEGORY),\n/* harmony export */   AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE: () => (/* binding */ AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE),\n/* harmony export */   AWS_CLOUDWATCH_MAX_EVENT_SIZE: () => (/* binding */ AWS_CLOUDWATCH_MAX_EVENT_SIZE),\n/* harmony export */   AWS_CLOUDWATCH_PROVIDER_NAME: () => (/* binding */ AWS_CLOUDWATCH_PROVIDER_NAME),\n/* harmony export */   NO_CREDS_ERROR_STRING: () => (/* binding */ NO_CREDS_ERROR_STRING),\n/* harmony export */   RETRY_ERROR_CODES: () => (/* binding */ RETRY_ERROR_CODES)\n/* harmony export */ });\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// Logging constants\nvar AWS_CLOUDWATCH_BASE_BUFFER_SIZE = 26;\nvar AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE = 1048576;\nvar AWS_CLOUDWATCH_MAX_EVENT_SIZE = 256000;\nvar AWS_CLOUDWATCH_CATEGORY = 'Logging';\nvar AWS_CLOUDWATCH_PROVIDER_NAME = 'AWSCloudWatch';\nvar NO_CREDS_ERROR_STRING = 'No credentials';\nvar RETRY_ERROR_CODES = [\n    'ResourceNotFoundException',\n    'InvalidSequenceTokenException',\n];\n\n//# sourceMappingURL=Constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1hbXBsaWZ5L2NvcmUvbGliLWVzbS9VdGlsL0NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNpTjtBQUNqTiIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1hbXBsaWZ5L2NvcmUvbGliLWVzbS9VdGlsL0NvbnN0YW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMTctMjAxOSBBbWF6b24uY29tLCBJbmMuIG9yIGl0cyBhZmZpbGlhdGVzLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIikuIFlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aFxuICogdGhlIExpY2Vuc2UuIEEgY29weSBvZiB0aGUgTGljZW5zZSBpcyBsb2NhdGVkIGF0XG4gKlxuICogICAgIGh0dHA6Ly9hd3MuYW1hem9uLmNvbS9hcGFjaGUyLjAvXG4gKlxuICogb3IgaW4gdGhlIFwibGljZW5zZVwiIGZpbGUgYWNjb21wYW55aW5nIHRoaXMgZmlsZS4gVGhpcyBmaWxlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SXG4gKiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnNcbiAqIGFuZCBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuLy8gTG9nZ2luZyBjb25zdGFudHNcbnZhciBBV1NfQ0xPVURXQVRDSF9CQVNFX0JVRkZFUl9TSVpFID0gMjY7XG52YXIgQVdTX0NMT1VEV0FUQ0hfTUFYX0JBVENIX0VWRU5UX1NJWkUgPSAxMDQ4NTc2O1xudmFyIEFXU19DTE9VRFdBVENIX01BWF9FVkVOVF9TSVpFID0gMjU2MDAwO1xudmFyIEFXU19DTE9VRFdBVENIX0NBVEVHT1JZID0gJ0xvZ2dpbmcnO1xudmFyIEFXU19DTE9VRFdBVENIX1BST1ZJREVSX05BTUUgPSAnQVdTQ2xvdWRXYXRjaCc7XG52YXIgTk9fQ1JFRFNfRVJST1JfU1RSSU5HID0gJ05vIGNyZWRlbnRpYWxzJztcbnZhciBSRVRSWV9FUlJPUl9DT0RFUyA9IFtcbiAgICAnUmVzb3VyY2VOb3RGb3VuZEV4Y2VwdGlvbicsXG4gICAgJ0ludmFsaWRTZXF1ZW5jZVRva2VuRXhjZXB0aW9uJyxcbl07XG5leHBvcnQgeyBBV1NfQ0xPVURXQVRDSF9CQVNFX0JVRkZFUl9TSVpFLCBBV1NfQ0xPVURXQVRDSF9DQVRFR09SWSwgQVdTX0NMT1VEV0FUQ0hfTUFYX0JBVENIX0VWRU5UX1NJWkUsIEFXU19DTE9VRFdBVENIX01BWF9FVkVOVF9TSVpFLCBBV1NfQ0xPVURXQVRDSF9QUk9WSURFUl9OQU1FLCBOT19DUkVEU19FUlJPUl9TVFJJTkcsIFJFVFJZX0VSUk9SX0NPREVTLCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-amplify/core/lib-esm/Util/Constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-amplify/auth/lib-esm/Auth.js":
/*!********************************************************!*\
  !*** ./node_modules/@aws-amplify/auth/lib-esm/Auth.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Auth: () => (/* binding */ Auth),\n/* harmony export */   AuthClass: () => (/* binding */ AuthClass)\n/* harmony export */ });\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./types/Auth */ \"(ssr)/./node_modules/@aws-amplify/auth/lib-esm/types/Auth.js\");\n/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-amplify/core */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/Logger/ConsoleLogger.js\");\n/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-amplify/core */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/Hub.js\");\n/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-amplify/core */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/Credentials.js\");\n/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aws-amplify/core */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/Parser.js\");\n/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aws-amplify/core */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/UniversalStorage/index.js\");\n/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @aws-amplify/core */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/StorageHelper/index.js\");\n/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @aws-amplify/core */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/JS.js\");\n/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @aws-amplify/core */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/Util/StringUtils.js\");\n/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @aws-amplify/core */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/Amplify.js\");\n/* harmony import */ var amazon_cognito_identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! amazon-cognito-identity-js */ \"(ssr)/./node_modules/amazon-cognito-identity-js/es/index.js\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(url__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _OAuth_OAuth__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./OAuth/OAuth */ \"(ssr)/./node_modules/@aws-amplify/auth/lib-esm/OAuth/OAuth.js\");\n/* harmony import */ var _urlListener__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./urlListener */ \"(ssr)/./node_modules/@aws-amplify/auth/lib-esm/urlListener.js\");\n/* harmony import */ var _Errors__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Errors */ \"(ssr)/./node_modules/@aws-amplify/auth/lib-esm/Errors.js\");\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *\t http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n\n\n\n\n\n\n\n\nvar logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_2__.ConsoleLogger('AuthClass');\nvar USER_ADMIN_SCOPE = 'aws.cognito.signin.user.admin';\n// 10 sec, following this guide https://www.nngroup.com/articles/response-times-3-important-limits/\nvar OAUTH_FLOW_MS_TIMEOUT = 10 * 1000;\nvar AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function'\n    ? Symbol.for('amplify_default')\n    : '@@amplify_default');\nvar dispatchAuthEvent = function (event, data, message) {\n    _aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__.Hub.dispatch('auth', { event: event, data: data, message: message }, 'Auth', AMPLIFY_SYMBOL);\n};\n// Cognito Documentation for max device\n// tslint:disable-next-line:max-line-length\n// https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ListDevices.html#API_ListDevices_RequestSyntax\nvar MAX_DEVICES = 60;\nvar MAX_AUTOSIGNIN_POLLING_MS = 3 * 60 * 1000;\n/**\n * Provide authentication steps\n */\nvar AuthClass = /** @class */ (function () {\n    /**\n     * Initialize Auth with AWS configurations\n     * @param {Object} config - Configuration of the Auth\n     */\n    function AuthClass(config) {\n        var _this = this;\n        this.userPool = null;\n        this.user = null;\n        this.oAuthFlowInProgress = false;\n        this.autoSignInInitiated = false;\n        this.Credentials = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_4__.Credentials;\n        this.wrapRefreshSessionCallback = function (callback) {\n            var wrapped = function (error, data) {\n                if (data) {\n                    dispatchAuthEvent('tokenRefresh', undefined, \"New token retrieved\");\n                }\n                else {\n                    dispatchAuthEvent('tokenRefresh_failure', error, \"Failed to retrieve new token\");\n                }\n                return callback(error, data);\n            };\n            return wrapped;\n        }; // prettier-ignore\n        this.configure(config);\n        this.currentCredentials = this.currentCredentials.bind(this);\n        this.currentUserCredentials = this.currentUserCredentials.bind(this);\n        _aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__.Hub.listen('auth', function (_a) {\n            var payload = _a.payload;\n            var event = payload.event;\n            switch (event) {\n                case 'signIn':\n                    _this._storage.setItem('amplify-signin-with-hostedUI', 'false');\n                    break;\n                case 'signOut':\n                    _this._storage.removeItem('amplify-signin-with-hostedUI');\n                    break;\n                case 'cognitoHostedUI':\n                    _this._storage.setItem('amplify-signin-with-hostedUI', 'true');\n                    break;\n            }\n        });\n    }\n    AuthClass.prototype.getModuleName = function () {\n        return 'Auth';\n    };\n    AuthClass.prototype.configure = function (config) {\n        var _this = this;\n        if (!config)\n            return this._config || {};\n        logger.debug('configure Auth');\n        var conf = Object.assign({}, this._config, _aws_amplify_core__WEBPACK_IMPORTED_MODULE_5__.Parser.parseMobilehubConfig(config).Auth, config);\n        this._config = conf;\n        var _a = this._config, userPoolId = _a.userPoolId, userPoolWebClientId = _a.userPoolWebClientId, cookieStorage = _a.cookieStorage, oauth = _a.oauth, region = _a.region, identityPoolId = _a.identityPoolId, mandatorySignIn = _a.mandatorySignIn, refreshHandlers = _a.refreshHandlers, identityPoolRegion = _a.identityPoolRegion, clientMetadata = _a.clientMetadata, endpoint = _a.endpoint;\n        if (!this._config.storage) {\n            // backward compatability\n            if (cookieStorage)\n                this._storage = new amazon_cognito_identity_js__WEBPACK_IMPORTED_MODULE_0__.CookieStorage(cookieStorage);\n            else {\n                this._storage = config.ssr\n                    ? new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_6__.UniversalStorage()\n                    : new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_7__.StorageHelper().getStorage();\n            }\n        }\n        else {\n            if (!this._isValidAuthStorage(this._config.storage)) {\n                logger.error('The storage in the Auth config is not valid!');\n                throw new Error('Empty storage object');\n            }\n            this._storage = this._config.storage;\n        }\n        this._storageSync = Promise.resolve();\n        if (typeof this._storage['sync'] === 'function') {\n            this._storageSync = this._storage['sync']();\n        }\n        if (userPoolId) {\n            var userPoolData = {\n                UserPoolId: userPoolId,\n                ClientId: userPoolWebClientId,\n                endpoint: endpoint,\n            };\n            userPoolData.Storage = this._storage;\n            this.userPool = new amazon_cognito_identity_js__WEBPACK_IMPORTED_MODULE_0__.CognitoUserPool(userPoolData, this.wrapRefreshSessionCallback);\n        }\n        this.Credentials.configure({\n            mandatorySignIn: mandatorySignIn,\n            region: identityPoolRegion || region,\n            userPoolId: userPoolId,\n            identityPoolId: identityPoolId,\n            refreshHandlers: refreshHandlers,\n            storage: this._storage,\n        });\n        // initialize cognitoauth client if hosted ui options provided\n        // to keep backward compatibility:\n        var cognitoHostedUIConfig = oauth\n            ? (0,_types__WEBPACK_IMPORTED_MODULE_8__.isCognitoHostedOpts)(this._config.oauth)\n                ? oauth\n                : oauth.awsCognito\n            : undefined;\n        if (cognitoHostedUIConfig) {\n            var cognitoAuthParams = Object.assign({\n                cognitoClientId: userPoolWebClientId,\n                UserPoolId: userPoolId,\n                domain: cognitoHostedUIConfig['domain'],\n                scopes: cognitoHostedUIConfig['scope'],\n                redirectSignIn: cognitoHostedUIConfig['redirectSignIn'],\n                redirectSignOut: cognitoHostedUIConfig['redirectSignOut'],\n                responseType: cognitoHostedUIConfig['responseType'],\n                Storage: this._storage,\n                urlOpener: cognitoHostedUIConfig['urlOpener'],\n                clientMetadata: clientMetadata,\n            }, cognitoHostedUIConfig['options']);\n            this._oAuthHandler = new _OAuth_OAuth__WEBPACK_IMPORTED_MODULE_9__[\"default\"]({\n                scopes: cognitoAuthParams.scopes,\n                config: cognitoAuthParams,\n                cognitoClientId: cognitoAuthParams.cognitoClientId,\n            });\n            // **NOTE** - Remove this in a future major release as it is a breaking change\n            // Prevents _handleAuthResponse from being called multiple times in Expo\n            // See https://github.com/aws-amplify/amplify-js/issues/4388\n            var usedResponseUrls_1 = {};\n            (0,_urlListener__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(function (_a) {\n                var url = _a.url;\n                if (usedResponseUrls_1[url]) {\n                    return;\n                }\n                usedResponseUrls_1[url] = true;\n                _this._handleAuthResponse(url);\n            });\n        }\n        dispatchAuthEvent('configured', null, \"The Auth category has been configured successfully\");\n        if (!this.autoSignInInitiated &&\n            typeof this._storage['getItem'] === 'function') {\n            var pollingInitiated = this.isTrueStorageValue('amplify-polling-started');\n            if (pollingInitiated) {\n                dispatchAuthEvent('autoSignIn_failure', null, _types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.AutoSignInError);\n                this._storage.removeItem('amplify-auto-sign-in');\n            }\n            this._storage.removeItem('amplify-polling-started');\n        }\n        return this._config;\n    };\n    /**\n     * Sign up with username, password and other attributes like phone, email\n     * @param {String | object} params - The user attributes used for signin\n     * @param {String[]} restOfAttrs - for the backward compatability\n     * @return - A promise resolves callback data if success\n     */\n    AuthClass.prototype.signUp = function (params) {\n        var _this = this;\n        var restOfAttrs = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            restOfAttrs[_i - 1] = arguments[_i];\n        }\n        var _a, _b, _c;\n        if (!this.userPool) {\n            return this.rejectNoUserPool();\n        }\n        var username = null;\n        var password = null;\n        var attributes = [];\n        var validationData = null;\n        var clientMetadata;\n        var autoSignIn = { enabled: false };\n        var autoSignInValidationData = {};\n        var autoSignInClientMetaData = {};\n        if (params && typeof params === 'string') {\n            username = params;\n            password = restOfAttrs ? restOfAttrs[0] : null;\n            var email = restOfAttrs ? restOfAttrs[1] : null;\n            var phone_number = restOfAttrs ? restOfAttrs[2] : null;\n            if (email)\n                attributes.push(new amazon_cognito_identity_js__WEBPACK_IMPORTED_MODULE_0__.CognitoUserAttribute({ Name: 'email', Value: email }));\n            if (phone_number)\n                attributes.push(new amazon_cognito_identity_js__WEBPACK_IMPORTED_MODULE_0__.CognitoUserAttribute({\n                    Name: 'phone_number',\n                    Value: phone_number,\n                }));\n        }\n        else if (params && typeof params === 'object') {\n            username = params['username'];\n            password = params['password'];\n            if (params && params.clientMetadata) {\n                clientMetadata = params.clientMetadata;\n            }\n            else if (this._config.clientMetadata) {\n                clientMetadata = this._config.clientMetadata;\n            }\n            var attrs_1 = params['attributes'];\n            if (attrs_1) {\n                Object.keys(attrs_1).map(function (key) {\n                    attributes.push(new amazon_cognito_identity_js__WEBPACK_IMPORTED_MODULE_0__.CognitoUserAttribute({ Name: key, Value: attrs_1[key] }));\n                });\n            }\n            var validationDataObject_1 = params['validationData'];\n            if (validationDataObject_1) {\n                validationData = [];\n                Object.keys(validationDataObject_1).map(function (key) {\n                    validationData.push(new amazon_cognito_identity_js__WEBPACK_IMPORTED_MODULE_0__.CognitoUserAttribute({\n                        Name: key,\n                        Value: validationDataObject_1[key],\n                    }));\n                });\n            }\n            autoSignIn = (_a = params.autoSignIn) !== null && _a !== void 0 ? _a : { enabled: false };\n            if (autoSignIn.enabled) {\n                this._storage.setItem('amplify-auto-sign-in', 'true');\n                autoSignInValidationData = (_b = autoSignIn.validationData) !== null && _b !== void 0 ? _b : {};\n                autoSignInClientMetaData = (_c = autoSignIn.clientMetaData) !== null && _c !== void 0 ? _c : {};\n            }\n        }\n        else {\n            return this.rejectAuthError(_types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.SignUpError);\n        }\n        if (!username) {\n            return this.rejectAuthError(_types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.EmptyUsername);\n        }\n        if (!password) {\n            return this.rejectAuthError(_types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.EmptyPassword);\n        }\n        logger.debug('signUp attrs:', attributes);\n        logger.debug('signUp validation data:', validationData);\n        return new Promise(function (resolve, reject) {\n            _this.userPool.signUp(username, password, attributes, validationData, function (err, data) {\n                if (err) {\n                    dispatchAuthEvent('signUp_failure', err, username + \" failed to signup\");\n                    reject(err);\n                }\n                else {\n                    dispatchAuthEvent('signUp', data, username + \" has signed up successfully\");\n                    if (autoSignIn.enabled) {\n                        _this.handleAutoSignIn(username, password, autoSignInValidationData, autoSignInClientMetaData, data);\n                    }\n                    resolve(data);\n                }\n            }, clientMetadata);\n        });\n    };\n    AuthClass.prototype.handleAutoSignIn = function (username, password, validationData, clientMetadata, data) {\n        this.autoSignInInitiated = true;\n        var authDetails = new amazon_cognito_identity_js__WEBPACK_IMPORTED_MODULE_0__.AuthenticationDetails({\n            Username: username,\n            Password: password,\n            ValidationData: validationData,\n            ClientMetadata: clientMetadata,\n        });\n        if (data.userConfirmed) {\n            this.signInAfterUserConfirmed(authDetails);\n        }\n        else if (this._config.signUpVerificationMethod === 'link') {\n            this.handleLinkAutoSignIn(authDetails);\n        }\n        else {\n            this.handleCodeAutoSignIn(authDetails);\n        }\n    };\n    AuthClass.prototype.handleCodeAutoSignIn = function (authDetails) {\n        var _this = this;\n        var listenEvent = function (_a) {\n            var payload = _a.payload;\n            if (payload.event === 'confirmSignUp') {\n                _this.signInAfterUserConfirmed(authDetails, listenEvent);\n            }\n        };\n        _aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__.Hub.listen('auth', listenEvent);\n    };\n    AuthClass.prototype.handleLinkAutoSignIn = function (authDetails) {\n        var _this = this;\n        this._storage.setItem('amplify-polling-started', 'true');\n        var start = Date.now();\n        var autoSignInPollingIntervalId = setInterval(function () {\n            if (Date.now() - start > MAX_AUTOSIGNIN_POLLING_MS) {\n                clearInterval(autoSignInPollingIntervalId);\n                dispatchAuthEvent('autoSignIn_failure', null, 'Please confirm your account and use your credentials to sign in.');\n                _this._storage.removeItem('amplify-auto-sign-in');\n            }\n            else {\n                _this.signInAfterUserConfirmed(authDetails, null, autoSignInPollingIntervalId);\n            }\n        }, 5000);\n    };\n    AuthClass.prototype.signInAfterUserConfirmed = function (authDetails, listenEvent, autoSignInPollingIntervalId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var user, error_1;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        user = this.createCognitoUser(authDetails.getUsername());\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, user.authenticateUser(authDetails, this.authCallbacks(user, function (value) {\n                                dispatchAuthEvent('autoSignIn', value, authDetails.getUsername() + \" has signed in successfully\");\n                                if (listenEvent) {\n                                    _aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__.Hub.remove('auth', listenEvent);\n                                }\n                                if (autoSignInPollingIntervalId) {\n                                    clearInterval(autoSignInPollingIntervalId);\n                                    _this._storage.removeItem('amplify-polling-started');\n                                }\n                                _this._storage.removeItem('amplify-auto-sign-in');\n                            }, function (error) {\n                                logger.error(error);\n                                _this._storage.removeItem('amplify-auto-sign-in');\n                            }))];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_1 = _a.sent();\n                        logger.error(error_1);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Send the verification code to confirm sign up\n     * @param {String} username - The username to be confirmed\n     * @param {String} code - The verification code\n     * @param {ConfirmSignUpOptions} options - other options for confirm signup\n     * @return - A promise resolves callback data if success\n     */\n    AuthClass.prototype.confirmSignUp = function (username, code, options) {\n        var _this = this;\n        if (!this.userPool) {\n            return this.rejectNoUserPool();\n        }\n        if (!username) {\n            return this.rejectAuthError(_types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.EmptyUsername);\n        }\n        if (!code) {\n            return this.rejectAuthError(_types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.EmptyCode);\n        }\n        var user = this.createCognitoUser(username);\n        var forceAliasCreation = options && typeof options.forceAliasCreation === 'boolean'\n            ? options.forceAliasCreation\n            : true;\n        var clientMetadata;\n        if (options && options.clientMetadata) {\n            clientMetadata = options.clientMetadata;\n        }\n        else if (this._config.clientMetadata) {\n            clientMetadata = this._config.clientMetadata;\n        }\n        return new Promise(function (resolve, reject) {\n            user.confirmRegistration(code, forceAliasCreation, function (err, data) {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    dispatchAuthEvent('confirmSignUp', data, username + \" has been confirmed successfully\");\n                    var autoSignIn = _this.isTrueStorageValue('amplify-auto-sign-in');\n                    if (autoSignIn && !_this.autoSignInInitiated) {\n                        dispatchAuthEvent('autoSignIn_failure', null, _types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.AutoSignInError);\n                        _this._storage.removeItem('amplify-auto-sign-in');\n                    }\n                    resolve(data);\n                }\n            }, clientMetadata);\n        });\n    };\n    AuthClass.prototype.isTrueStorageValue = function (value) {\n        var item = this._storage.getItem(value);\n        return item ? item === 'true' : false;\n    };\n    /**\n     * Resend the verification code\n     * @param {String} username - The username to be confirmed\n     * @param {ClientMetadata} clientMetadata - Metadata to be passed to Cognito Lambda triggers\n     * @return - A promise resolves code delivery details if successful\n     */\n    AuthClass.prototype.resendSignUp = function (username, clientMetadata) {\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        if (!this.userPool) {\n            return this.rejectNoUserPool();\n        }\n        if (!username) {\n            return this.rejectAuthError(_types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.EmptyUsername);\n        }\n        var user = this.createCognitoUser(username);\n        return new Promise(function (resolve, reject) {\n            user.resendConfirmationCode(function (err, data) {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(data);\n                }\n            }, clientMetadata);\n        });\n    };\n    /**\n     * Sign in\n     * @param {String | SignInOpts} usernameOrSignInOpts - The username to be signed in or the sign in options\n     * @param {String} pw - The password of the username\n     * @param {ClientMetaData} clientMetadata - Client metadata for custom workflows\n     * @return - A promise resolves the CognitoUser\n     */\n    AuthClass.prototype.signIn = function (usernameOrSignInOpts, pw, clientMetadata) {\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        if (!this.userPool) {\n            return this.rejectNoUserPool();\n        }\n        var username = null;\n        var password = null;\n        var validationData = {};\n        // for backward compatibility\n        if (typeof usernameOrSignInOpts === 'string') {\n            username = usernameOrSignInOpts;\n            password = pw;\n        }\n        else if ((0,_types__WEBPACK_IMPORTED_MODULE_8__.isUsernamePasswordOpts)(usernameOrSignInOpts)) {\n            if (typeof pw !== 'undefined') {\n                logger.warn('The password should be defined under the first parameter object!');\n            }\n            username = usernameOrSignInOpts.username;\n            password = usernameOrSignInOpts.password;\n            validationData = usernameOrSignInOpts.validationData;\n        }\n        else {\n            return this.rejectAuthError(_types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.InvalidUsername);\n        }\n        if (!username) {\n            return this.rejectAuthError(_types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.EmptyUsername);\n        }\n        var authDetails = new amazon_cognito_identity_js__WEBPACK_IMPORTED_MODULE_0__.AuthenticationDetails({\n            Username: username,\n            Password: password,\n            ValidationData: validationData,\n            ClientMetadata: clientMetadata,\n        });\n        if (password) {\n            return this.signInWithPassword(authDetails);\n        }\n        else {\n            return this.signInWithoutPassword(authDetails);\n        }\n    };\n    /**\n     * Return an object with the authentication callbacks\n     * @param {CognitoUser} user - the cognito user object\n     * @param {} resolve - function called when resolving the current step\n     * @param {} reject - function called when rejecting the current step\n     * @return - an object with the callback methods for user authentication\n     */\n    AuthClass.prototype.authCallbacks = function (user, resolve, reject) {\n        var _this = this;\n        var that = this;\n        return {\n            onSuccess: function (session) { return __awaiter(_this, void 0, void 0, function () {\n                var cred, e_1, currentUser, e_2;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            logger.debug(session);\n                            delete user['challengeName'];\n                            delete user['challengeParam'];\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, 4, 5, 9]);\n                            return [4 /*yield*/, this.Credentials.clear()];\n                        case 2:\n                            _a.sent();\n                            return [4 /*yield*/, this.Credentials.set(session, 'session')];\n                        case 3:\n                            cred = _a.sent();\n                            logger.debug('succeed to get cognito credentials', cred);\n                            return [3 /*break*/, 9];\n                        case 4:\n                            e_1 = _a.sent();\n                            logger.debug('cannot get cognito credentials', e_1);\n                            return [3 /*break*/, 9];\n                        case 5:\n                            _a.trys.push([5, 7, , 8]);\n                            return [4 /*yield*/, this.currentUserPoolUser()];\n                        case 6:\n                            currentUser = _a.sent();\n                            that.user = currentUser;\n                            dispatchAuthEvent('signIn', currentUser, \"A user \" + user.getUsername() + \" has been signed in\");\n                            resolve(currentUser);\n                            return [3 /*break*/, 8];\n                        case 7:\n                            e_2 = _a.sent();\n                            logger.error('Failed to get the signed in user', e_2);\n                            reject(e_2);\n                            return [3 /*break*/, 8];\n                        case 8: return [7 /*endfinally*/];\n                        case 9: return [2 /*return*/];\n                    }\n                });\n            }); },\n            onFailure: function (err) {\n                logger.debug('signIn failure', err);\n                dispatchAuthEvent('signIn_failure', err, user.getUsername() + \" failed to signin\");\n                reject(err);\n            },\n            customChallenge: function (challengeParam) {\n                logger.debug('signIn custom challenge answer required');\n                user['challengeName'] = 'CUSTOM_CHALLENGE';\n                user['challengeParam'] = challengeParam;\n                resolve(user);\n            },\n            mfaRequired: function (challengeName, challengeParam) {\n                logger.debug('signIn MFA required');\n                user['challengeName'] = challengeName;\n                user['challengeParam'] = challengeParam;\n                resolve(user);\n            },\n            mfaSetup: function (challengeName, challengeParam) {\n                logger.debug('signIn mfa setup', challengeName);\n                user['challengeName'] = challengeName;\n                user['challengeParam'] = challengeParam;\n                resolve(user);\n            },\n            newPasswordRequired: function (userAttributes, requiredAttributes) {\n                logger.debug('signIn new password');\n                user['challengeName'] = 'NEW_PASSWORD_REQUIRED';\n                user['challengeParam'] = {\n                    userAttributes: userAttributes,\n                    requiredAttributes: requiredAttributes,\n                };\n                resolve(user);\n            },\n            totpRequired: function (challengeName, challengeParam) {\n                logger.debug('signIn totpRequired');\n                user['challengeName'] = challengeName;\n                user['challengeParam'] = challengeParam;\n                resolve(user);\n            },\n            selectMFAType: function (challengeName, challengeParam) {\n                logger.debug('signIn selectMFAType', challengeName);\n                user['challengeName'] = challengeName;\n                user['challengeParam'] = challengeParam;\n                resolve(user);\n            },\n        };\n    };\n    /**\n     * Sign in with a password\n     * @private\n     * @param {AuthenticationDetails} authDetails - the user sign in data\n     * @return - A promise resolves the CognitoUser object if success or mfa required\n     */\n    AuthClass.prototype.signInWithPassword = function (authDetails) {\n        var _this = this;\n        if (this.pendingSignIn) {\n            throw new Error('Pending sign-in attempt already in progress');\n        }\n        var user = this.createCognitoUser(authDetails.getUsername());\n        this.pendingSignIn = new Promise(function (resolve, reject) {\n            user.authenticateUser(authDetails, _this.authCallbacks(user, function (value) {\n                _this.pendingSignIn = null;\n                resolve(value);\n            }, function (error) {\n                _this.pendingSignIn = null;\n                reject(error);\n            }));\n        });\n        return this.pendingSignIn;\n    };\n    /**\n     * Sign in without a password\n     * @private\n     * @param {AuthenticationDetails} authDetails - the user sign in data\n     * @return - A promise resolves the CognitoUser object if success or mfa required\n     */\n    AuthClass.prototype.signInWithoutPassword = function (authDetails) {\n        var _this = this;\n        var user = this.createCognitoUser(authDetails.getUsername());\n        user.setAuthenticationFlowType('CUSTOM_AUTH');\n        return new Promise(function (resolve, reject) {\n            user.initiateAuth(authDetails, _this.authCallbacks(user, resolve, reject));\n        });\n    };\n    /**\n     * This was previously used by an authenticated user to get MFAOptions,\n     * but no longer returns a meaningful response. Refer to the documentation for\n     * how to setup and use MFA: https://docs.amplify.aws/lib/auth/mfa/q/platform/js\n     * @deprecated\n     * @param {CognitoUser} user - the current user\n     * @return - A promise resolves the current preferred mfa option if success\n     */\n    AuthClass.prototype.getMFAOptions = function (user) {\n        return new Promise(function (res, rej) {\n            user.getMFAOptions(function (err, mfaOptions) {\n                if (err) {\n                    logger.debug('get MFA Options failed', err);\n                    rej(err);\n                    return;\n                }\n                logger.debug('get MFA options success', mfaOptions);\n                res(mfaOptions);\n                return;\n            });\n        });\n    };\n    /**\n     * get preferred mfa method\n     * @param {CognitoUser} user - the current cognito user\n     * @param {GetPreferredMFAOpts} params - options for getting the current user preferred MFA\n     */\n    AuthClass.prototype.getPreferredMFA = function (user, params) {\n        var _this = this;\n        var that = this;\n        return new Promise(function (res, rej) {\n            var clientMetadata = _this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n            var bypassCache = params ? params.bypassCache : false;\n            user.getUserData(function (err, data) { return __awaiter(_this, void 0, void 0, function () {\n                var cleanUpError_1, mfaType;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (!err) return [3 /*break*/, 5];\n                            logger.debug('getting preferred mfa failed', err);\n                            if (!this.isSessionInvalid(err)) return [3 /*break*/, 4];\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, 3, , 4]);\n                            return [4 /*yield*/, this.cleanUpInvalidSession(user)];\n                        case 2:\n                            _a.sent();\n                            return [3 /*break*/, 4];\n                        case 3:\n                            cleanUpError_1 = _a.sent();\n                            rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_1.message));\n                            return [2 /*return*/];\n                        case 4:\n                            rej(err);\n                            return [2 /*return*/];\n                        case 5:\n                            mfaType = that._getMfaTypeFromUserData(data);\n                            if (!mfaType) {\n                                rej('invalid MFA Type');\n                                return [2 /*return*/];\n                            }\n                            else {\n                                res(mfaType);\n                                return [2 /*return*/];\n                            }\n                            return [2 /*return*/];\n                    }\n                });\n            }); }, { bypassCache: bypassCache, clientMetadata: clientMetadata });\n        });\n    };\n    AuthClass.prototype._getMfaTypeFromUserData = function (data) {\n        var ret = null;\n        var preferredMFA = data.PreferredMfaSetting;\n        // if the user has used Auth.setPreferredMFA() to setup the mfa type\n        // then the \"PreferredMfaSetting\" would exist in the response\n        if (preferredMFA) {\n            ret = preferredMFA;\n        }\n        else {\n            // if mfaList exists but empty, then its noMFA\n            var mfaList = data.UserMFASettingList;\n            if (!mfaList) {\n                // if SMS was enabled by using Auth.enableSMS(),\n                // the response would contain MFAOptions\n                // as for now Cognito only supports for SMS, so we will say it is 'SMS_MFA'\n                // if it does not exist, then it should be NOMFA\n                var MFAOptions = data.MFAOptions;\n                if (MFAOptions) {\n                    ret = 'SMS_MFA';\n                }\n                else {\n                    ret = 'NOMFA';\n                }\n            }\n            else if (mfaList.length === 0) {\n                ret = 'NOMFA';\n            }\n            else {\n                logger.debug('invalid case for getPreferredMFA', data);\n            }\n        }\n        return ret;\n    };\n    AuthClass.prototype._getUserData = function (user, params) {\n        var _this = this;\n        return new Promise(function (res, rej) {\n            user.getUserData(function (err, data) { return __awaiter(_this, void 0, void 0, function () {\n                var cleanUpError_2;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (!err) return [3 /*break*/, 5];\n                            logger.debug('getting user data failed', err);\n                            if (!this.isSessionInvalid(err)) return [3 /*break*/, 4];\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, 3, , 4]);\n                            return [4 /*yield*/, this.cleanUpInvalidSession(user)];\n                        case 2:\n                            _a.sent();\n                            return [3 /*break*/, 4];\n                        case 3:\n                            cleanUpError_2 = _a.sent();\n                            rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_2.message));\n                            return [2 /*return*/];\n                        case 4:\n                            rej(err);\n                            return [2 /*return*/];\n                        case 5:\n                            res(data);\n                            _a.label = 6;\n                        case 6: return [2 /*return*/];\n                    }\n                });\n            }); }, params);\n        });\n    };\n    /**\n     * set preferred MFA method\n     * @param {CognitoUser} user - the current Cognito user\n     * @param {string} mfaMethod - preferred mfa method\n     * @return - A promise resolve if success\n     */\n    AuthClass.prototype.setPreferredMFA = function (user, mfaMethod) {\n        return __awaiter(this, void 0, void 0, function () {\n            var clientMetadata, userData, smsMfaSettings, totpMfaSettings, _a, mfaList, currentMFAType, that;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        clientMetadata = this._config.clientMetadata;\n                        return [4 /*yield*/, this._getUserData(user, {\n                                bypassCache: true,\n                                clientMetadata: clientMetadata,\n                            })];\n                    case 1:\n                        userData = _b.sent();\n                        smsMfaSettings = null;\n                        totpMfaSettings = null;\n                        _a = mfaMethod;\n                        switch (_a) {\n                            case 'TOTP': return [3 /*break*/, 2];\n                            case 'SOFTWARE_TOKEN_MFA': return [3 /*break*/, 2];\n                            case 'SMS': return [3 /*break*/, 3];\n                            case 'SMS_MFA': return [3 /*break*/, 3];\n                            case 'NOMFA': return [3 /*break*/, 4];\n                        }\n                        return [3 /*break*/, 6];\n                    case 2:\n                        totpMfaSettings = {\n                            PreferredMfa: true,\n                            Enabled: true,\n                        };\n                        return [3 /*break*/, 7];\n                    case 3:\n                        smsMfaSettings = {\n                            PreferredMfa: true,\n                            Enabled: true,\n                        };\n                        return [3 /*break*/, 7];\n                    case 4:\n                        mfaList = userData['UserMFASettingList'];\n                        return [4 /*yield*/, this._getMfaTypeFromUserData(userData)];\n                    case 5:\n                        currentMFAType = _b.sent();\n                        if (currentMFAType === 'NOMFA') {\n                            return [2 /*return*/, Promise.resolve('No change for mfa type')];\n                        }\n                        else if (currentMFAType === 'SMS_MFA') {\n                            smsMfaSettings = {\n                                PreferredMfa: false,\n                                Enabled: false,\n                            };\n                        }\n                        else if (currentMFAType === 'SOFTWARE_TOKEN_MFA') {\n                            totpMfaSettings = {\n                                PreferredMfa: false,\n                                Enabled: false,\n                            };\n                        }\n                        else {\n                            return [2 /*return*/, this.rejectAuthError(_types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.InvalidMFA)];\n                        }\n                        // if there is a UserMFASettingList in the response\n                        // we need to disable every mfa type in that list\n                        if (mfaList && mfaList.length !== 0) {\n                            // to disable SMS or TOTP if exists in that list\n                            mfaList.forEach(function (mfaType) {\n                                if (mfaType === 'SMS_MFA') {\n                                    smsMfaSettings = {\n                                        PreferredMfa: false,\n                                        Enabled: false,\n                                    };\n                                }\n                                else if (mfaType === 'SOFTWARE_TOKEN_MFA') {\n                                    totpMfaSettings = {\n                                        PreferredMfa: false,\n                                        Enabled: false,\n                                    };\n                                }\n                            });\n                        }\n                        return [3 /*break*/, 7];\n                    case 6:\n                        logger.debug('no validmfa method provided');\n                        return [2 /*return*/, this.rejectAuthError(_types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.NoMFA)];\n                    case 7:\n                        that = this;\n                        return [2 /*return*/, new Promise(function (res, rej) {\n                                user.setUserMfaPreference(smsMfaSettings, totpMfaSettings, function (err, result) {\n                                    if (err) {\n                                        logger.debug('Set user mfa preference error', err);\n                                        return rej(err);\n                                    }\n                                    logger.debug('Set user mfa success', result);\n                                    logger.debug('Caching the latest user data into local');\n                                    // cache the latest result into user data\n                                    user.getUserData(function (err, data) { return __awaiter(_this, void 0, void 0, function () {\n                                        var cleanUpError_3;\n                                        return __generator(this, function (_a) {\n                                            switch (_a.label) {\n                                                case 0:\n                                                    if (!err) return [3 /*break*/, 5];\n                                                    logger.debug('getting user data failed', err);\n                                                    if (!this.isSessionInvalid(err)) return [3 /*break*/, 4];\n                                                    _a.label = 1;\n                                                case 1:\n                                                    _a.trys.push([1, 3, , 4]);\n                                                    return [4 /*yield*/, this.cleanUpInvalidSession(user)];\n                                                case 2:\n                                                    _a.sent();\n                                                    return [3 /*break*/, 4];\n                                                case 3:\n                                                    cleanUpError_3 = _a.sent();\n                                                    rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_3.message));\n                                                    return [2 /*return*/];\n                                                case 4: return [2 /*return*/, rej(err)];\n                                                case 5: return [2 /*return*/, res(result)];\n                                            }\n                                        });\n                                    }); }, {\n                                        bypassCache: true,\n                                        clientMetadata: clientMetadata,\n                                    });\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    /**\n     * disable SMS\n     * @deprecated\n     * @param {CognitoUser} user - the current user\n     * @return - A promise resolves is success\n     */\n    AuthClass.prototype.disableSMS = function (user) {\n        return new Promise(function (res, rej) {\n            user.disableMFA(function (err, data) {\n                if (err) {\n                    logger.debug('disable mfa failed', err);\n                    rej(err);\n                    return;\n                }\n                logger.debug('disable mfa succeed', data);\n                res(data);\n                return;\n            });\n        });\n    };\n    /**\n     * enable SMS\n     * @deprecated\n     * @param {CognitoUser} user - the current user\n     * @return - A promise resolves is success\n     */\n    AuthClass.prototype.enableSMS = function (user) {\n        return new Promise(function (res, rej) {\n            user.enableMFA(function (err, data) {\n                if (err) {\n                    logger.debug('enable mfa failed', err);\n                    rej(err);\n                    return;\n                }\n                logger.debug('enable mfa succeed', data);\n                res(data);\n                return;\n            });\n        });\n    };\n    /**\n     * Setup TOTP\n     * @param {CognitoUser} user - the current user\n     * @return - A promise resolves with the secret code if success\n     */\n    AuthClass.prototype.setupTOTP = function (user) {\n        return new Promise(function (res, rej) {\n            user.associateSoftwareToken({\n                onFailure: function (err) {\n                    logger.debug('associateSoftwareToken failed', err);\n                    rej(err);\n                    return;\n                },\n                associateSecretCode: function (secretCode) {\n                    logger.debug('associateSoftwareToken sucess', secretCode);\n                    res(secretCode);\n                    return;\n                },\n            });\n        });\n    };\n    /**\n     * verify TOTP setup\n     * @param {CognitoUser} user - the current user\n     * @param {string} challengeAnswer - challenge answer\n     * @return - A promise resolves is success\n     */\n    AuthClass.prototype.verifyTotpToken = function (user, challengeAnswer) {\n        logger.debug('verification totp token', user, challengeAnswer);\n        return new Promise(function (res, rej) {\n            user.verifySoftwareToken(challengeAnswer, 'My TOTP device', {\n                onFailure: function (err) {\n                    logger.debug('verifyTotpToken failed', err);\n                    rej(err);\n                    return;\n                },\n                onSuccess: function (data) {\n                    dispatchAuthEvent('signIn', user, \"A user \" + user.getUsername() + \" has been signed in\");\n                    logger.debug('verifyTotpToken success', data);\n                    res(data);\n                    return;\n                },\n            });\n        });\n    };\n    /**\n     * Send MFA code to confirm sign in\n     * @param {Object} user - The CognitoUser object\n     * @param {String} code - The confirmation code\n     */\n    AuthClass.prototype.confirmSignIn = function (user, code, mfaType, clientMetadata) {\n        var _this = this;\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        if (!code) {\n            return this.rejectAuthError(_types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.EmptyCode);\n        }\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            user.sendMFACode(code, {\n                onSuccess: function (session) { return __awaiter(_this, void 0, void 0, function () {\n                    var cred, e_3;\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                logger.debug(session);\n                                _a.label = 1;\n                            case 1:\n                                _a.trys.push([1, 4, 5, 6]);\n                                return [4 /*yield*/, this.Credentials.clear()];\n                            case 2:\n                                _a.sent();\n                                return [4 /*yield*/, this.Credentials.set(session, 'session')];\n                            case 3:\n                                cred = _a.sent();\n                                logger.debug('succeed to get cognito credentials', cred);\n                                return [3 /*break*/, 6];\n                            case 4:\n                                e_3 = _a.sent();\n                                logger.debug('cannot get cognito credentials', e_3);\n                                return [3 /*break*/, 6];\n                            case 5:\n                                that.user = user;\n                                dispatchAuthEvent('signIn', user, \"A user \" + user.getUsername() + \" has been signed in\");\n                                resolve(user);\n                                return [7 /*endfinally*/];\n                            case 6: return [2 /*return*/];\n                        }\n                    });\n                }); },\n                onFailure: function (err) {\n                    logger.debug('confirm signIn failure', err);\n                    reject(err);\n                },\n            }, mfaType, clientMetadata);\n        });\n    };\n    AuthClass.prototype.completeNewPassword = function (user, password, requiredAttributes, clientMetadata) {\n        var _this = this;\n        if (requiredAttributes === void 0) { requiredAttributes = {}; }\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        if (!password) {\n            return this.rejectAuthError(_types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.EmptyPassword);\n        }\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            user.completeNewPasswordChallenge(password, requiredAttributes, {\n                onSuccess: function (session) { return __awaiter(_this, void 0, void 0, function () {\n                    var cred, e_4;\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                logger.debug(session);\n                                _a.label = 1;\n                            case 1:\n                                _a.trys.push([1, 4, 5, 6]);\n                                return [4 /*yield*/, this.Credentials.clear()];\n                            case 2:\n                                _a.sent();\n                                return [4 /*yield*/, this.Credentials.set(session, 'session')];\n                            case 3:\n                                cred = _a.sent();\n                                logger.debug('succeed to get cognito credentials', cred);\n                                return [3 /*break*/, 6];\n                            case 4:\n                                e_4 = _a.sent();\n                                logger.debug('cannot get cognito credentials', e_4);\n                                return [3 /*break*/, 6];\n                            case 5:\n                                that.user = user;\n                                dispatchAuthEvent('signIn', user, \"A user \" + user.getUsername() + \" has been signed in\");\n                                resolve(user);\n                                return [7 /*endfinally*/];\n                            case 6: return [2 /*return*/];\n                        }\n                    });\n                }); },\n                onFailure: function (err) {\n                    logger.debug('completeNewPassword failure', err);\n                    dispatchAuthEvent('completeNewPassword_failure', err, _this.user + \" failed to complete the new password flow\");\n                    reject(err);\n                },\n                mfaRequired: function (challengeName, challengeParam) {\n                    logger.debug('signIn MFA required');\n                    user['challengeName'] = challengeName;\n                    user['challengeParam'] = challengeParam;\n                    resolve(user);\n                },\n                mfaSetup: function (challengeName, challengeParam) {\n                    logger.debug('signIn mfa setup', challengeName);\n                    user['challengeName'] = challengeName;\n                    user['challengeParam'] = challengeParam;\n                    resolve(user);\n                },\n                totpRequired: function (challengeName, challengeParam) {\n                    logger.debug('signIn mfa setup', challengeName);\n                    user['challengeName'] = challengeName;\n                    user['challengeParam'] = challengeParam;\n                    resolve(user);\n                },\n            }, clientMetadata);\n        });\n    };\n    /**\n     * Send the answer to a custom challenge\n     * @param {CognitoUser} user - The CognitoUser object\n     * @param {String} challengeResponses - The confirmation code\n     */\n    AuthClass.prototype.sendCustomChallengeAnswer = function (user, challengeResponses, clientMetadata) {\n        var _this = this;\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        if (!this.userPool) {\n            return this.rejectNoUserPool();\n        }\n        if (!challengeResponses) {\n            return this.rejectAuthError(_types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.EmptyChallengeResponse);\n        }\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            user.sendCustomChallengeAnswer(challengeResponses, _this.authCallbacks(user, resolve, reject), clientMetadata);\n        });\n    };\n    /**\n     * Delete an authenticated users' attributes\n     * @param {CognitoUser} - The currently logged in user object\n     * @return {Promise}\n     **/\n    AuthClass.prototype.deleteUserAttributes = function (user, attributeNames) {\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            that.userSession(user).then(function (session) {\n                user.deleteAttributes(attributeNames, function (err, result) {\n                    if (err) {\n                        return reject(err);\n                    }\n                    else {\n                        return resolve(result);\n                    }\n                });\n            });\n        });\n    };\n    /**\n     * Delete the current authenticated user\n     * @return {Promise}\n     **/\n    // TODO: Check return type void\n    AuthClass.prototype.deleteUser = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var e_5, isSignedInHostedUI;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this._storageSync];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        e_5 = _a.sent();\n                        logger.debug('Failed to sync cache info into memory', e_5);\n                        throw new Error(e_5);\n                    case 3:\n                        isSignedInHostedUI = this._oAuthHandler &&\n                            this._storage.getItem('amplify-signin-with-hostedUI') === 'true';\n                        return [2 /*return*/, new Promise(function (res, rej) { return __awaiter(_this, void 0, void 0, function () {\n                                var user_1;\n                                var _this = this;\n                                return __generator(this, function (_a) {\n                                    if (this.userPool) {\n                                        user_1 = this.userPool.getCurrentUser();\n                                        if (!user_1) {\n                                            logger.debug('Failed to get user from user pool');\n                                            return [2 /*return*/, rej(new Error('No current user.'))];\n                                        }\n                                        else {\n                                            user_1.getSession(function (err, session) { return __awaiter(_this, void 0, void 0, function () {\n                                                var cleanUpError_4;\n                                                var _this = this;\n                                                return __generator(this, function (_a) {\n                                                    switch (_a.label) {\n                                                        case 0:\n                                                            if (!err) return [3 /*break*/, 5];\n                                                            logger.debug('Failed to get the user session', err);\n                                                            if (!this.isSessionInvalid(err)) return [3 /*break*/, 4];\n                                                            _a.label = 1;\n                                                        case 1:\n                                                            _a.trys.push([1, 3, , 4]);\n                                                            return [4 /*yield*/, this.cleanUpInvalidSession(user_1)];\n                                                        case 2:\n                                                            _a.sent();\n                                                            return [3 /*break*/, 4];\n                                                        case 3:\n                                                            cleanUpError_4 = _a.sent();\n                                                            rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_4.message));\n                                                            return [2 /*return*/];\n                                                        case 4: return [2 /*return*/, rej(err)];\n                                                        case 5:\n                                                            user_1.deleteUser(function (err, result) {\n                                                                if (err) {\n                                                                    rej(err);\n                                                                }\n                                                                else {\n                                                                    dispatchAuthEvent('userDeleted', result, 'The authenticated user has been deleted.');\n                                                                    user_1.signOut();\n                                                                    _this.user = null;\n                                                                    try {\n                                                                        _this.cleanCachedItems(); // clean aws credentials\n                                                                    }\n                                                                    catch (e) {\n                                                                        // TODO: change to rejects in refactor\n                                                                        logger.debug('failed to clear cached items');\n                                                                    }\n                                                                    if (isSignedInHostedUI) {\n                                                                        _this.oAuthSignOutRedirect(res, rej);\n                                                                    }\n                                                                    else {\n                                                                        dispatchAuthEvent('signOut', _this.user, \"A user has been signed out\");\n                                                                        res(result);\n                                                                    }\n                                                                }\n                                                            });\n                                                            _a.label = 6;\n                                                        case 6: return [2 /*return*/];\n                                                    }\n                                                });\n                                            }); });\n                                        }\n                                    }\n                                    else {\n                                        logger.debug('no Congito User pool');\n                                        rej(new Error('Cognito User pool does not exist'));\n                                    }\n                                    return [2 /*return*/];\n                                });\n                            }); })];\n                }\n            });\n        });\n    };\n    /**\n     * Update an authenticated users' attributes\n     * @param {CognitoUser} - The currently logged in user object\n     * @return {Promise}\n     **/\n    AuthClass.prototype.updateUserAttributes = function (user, attributes, clientMetadata) {\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        var attributeList = [];\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            that.userSession(user).then(function (session) {\n                for (var key in attributes) {\n                    if (key !== 'sub' && key.indexOf('_verified') < 0) {\n                        var attr = {\n                            Name: key,\n                            Value: attributes[key],\n                        };\n                        attributeList.push(attr);\n                    }\n                }\n                user.updateAttributes(attributeList, function (err, result) {\n                    if (err) {\n                        return reject(err);\n                    }\n                    else {\n                        return resolve(result);\n                    }\n                }, clientMetadata);\n            });\n        });\n    };\n    /**\n     * Return user attributes\n     * @param {Object} user - The CognitoUser object\n     * @return - A promise resolves to user attributes if success\n     */\n    AuthClass.prototype.userAttributes = function (user) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.userSession(user).then(function (session) {\n                user.getUserAttributes(function (err, attributes) {\n                    if (err) {\n                        reject(err);\n                    }\n                    else {\n                        resolve(attributes);\n                    }\n                });\n            });\n        });\n    };\n    AuthClass.prototype.verifiedContact = function (user) {\n        var that = this;\n        return this.userAttributes(user).then(function (attributes) {\n            var attrs = that.attributesToObject(attributes);\n            var unverified = {};\n            var verified = {};\n            if (attrs['email']) {\n                if (attrs['email_verified']) {\n                    verified['email'] = attrs['email'];\n                }\n                else {\n                    unverified['email'] = attrs['email'];\n                }\n            }\n            if (attrs['phone_number']) {\n                if (attrs['phone_number_verified']) {\n                    verified['phone_number'] = attrs['phone_number'];\n                }\n                else {\n                    unverified['phone_number'] = attrs['phone_number'];\n                }\n            }\n            return {\n                verified: verified,\n                unverified: unverified,\n            };\n        });\n    };\n    AuthClass.prototype.isErrorWithMessage = function (err) {\n        return (typeof err === 'object' &&\n            Object.prototype.hasOwnProperty.call(err, 'message'));\n    };\n    // Session revoked by another app\n    AuthClass.prototype.isTokenRevokedError = function (err) {\n        return (this.isErrorWithMessage(err) &&\n            err.message === 'Access Token has been revoked');\n    };\n    AuthClass.prototype.isRefreshTokenRevokedError = function (err) {\n        return (this.isErrorWithMessage(err) &&\n            err.message === 'Refresh Token has been revoked');\n    };\n    AuthClass.prototype.isUserDisabledError = function (err) {\n        return this.isErrorWithMessage(err) && err.message === 'User is disabled.';\n    };\n    AuthClass.prototype.isUserDoesNotExistError = function (err) {\n        return (this.isErrorWithMessage(err) && err.message === 'User does not exist.');\n    };\n    AuthClass.prototype.isRefreshTokenExpiredError = function (err) {\n        return (this.isErrorWithMessage(err) &&\n            err.message === 'Refresh Token has expired');\n    };\n    AuthClass.prototype.isSignedInHostedUI = function () {\n        return (this._oAuthHandler &&\n            this._storage.getItem('amplify-signin-with-hostedUI') === 'true');\n    };\n    AuthClass.prototype.isSessionInvalid = function (err) {\n        return (this.isUserDisabledError(err) ||\n            this.isUserDoesNotExistError(err) ||\n            this.isTokenRevokedError(err) ||\n            this.isRefreshTokenRevokedError(err) ||\n            this.isRefreshTokenExpiredError(err));\n    };\n    AuthClass.prototype.cleanUpInvalidSession = function (user) {\n        return __awaiter(this, void 0, void 0, function () {\n            var e_6;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        user.signOut();\n                        this.user = null;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.cleanCachedItems()];\n                    case 2:\n                        _a.sent(); // clean aws credentials\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_6 = _a.sent();\n                        logger.debug('failed to clear cached items');\n                        return [3 /*break*/, 4];\n                    case 4:\n                        if (this.isSignedInHostedUI()) {\n                            return [2 /*return*/, new Promise(function (res, rej) {\n                                    _this.oAuthSignOutRedirect(res, rej);\n                                })];\n                        }\n                        else {\n                            dispatchAuthEvent('signOut', this.user, \"A user has been signed out\");\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Get current authenticated user\n     * @return - A promise resolves to current authenticated CognitoUser if success\n     */\n    AuthClass.prototype.currentUserPoolUser = function (params) {\n        var _this = this;\n        if (!this.userPool) {\n            return this.rejectNoUserPool();\n        }\n        return new Promise(function (res, rej) {\n            _this._storageSync\n                .then(function () { return __awaiter(_this, void 0, void 0, function () {\n                var user, clientMetadata;\n                var _this = this;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (!this.isOAuthInProgress()) return [3 /*break*/, 2];\n                            logger.debug('OAuth signIn in progress, waiting for resolution...');\n                            return [4 /*yield*/, new Promise(function (res) {\n                                    var timeoutId = setTimeout(function () {\n                                        logger.debug('OAuth signIn in progress timeout');\n                                        _aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__.Hub.remove('auth', hostedUISignCallback);\n                                        res();\n                                    }, OAUTH_FLOW_MS_TIMEOUT);\n                                    _aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__.Hub.listen('auth', hostedUISignCallback);\n                                    function hostedUISignCallback(_a) {\n                                        var payload = _a.payload;\n                                        var event = payload.event;\n                                        if (event === 'cognitoHostedUI' ||\n                                            event === 'cognitoHostedUI_failure') {\n                                            logger.debug(\"OAuth signIn resolved: \" + event);\n                                            clearTimeout(timeoutId);\n                                            _aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__.Hub.remove('auth', hostedUISignCallback);\n                                            res();\n                                        }\n                                    }\n                                })];\n                        case 1:\n                            _a.sent();\n                            _a.label = 2;\n                        case 2:\n                            user = this.userPool.getCurrentUser();\n                            if (!user) {\n                                logger.debug('Failed to get user from user pool');\n                                rej('No current user');\n                                return [2 /*return*/];\n                            }\n                            clientMetadata = this._config.clientMetadata;\n                            // refresh the session if the session expired.\n                            user.getSession(function (err, session) { return __awaiter(_this, void 0, void 0, function () {\n                                var cleanUpError_5, bypassCache, clientMetadata, _a, scope;\n                                var _this = this;\n                                return __generator(this, function (_b) {\n                                    switch (_b.label) {\n                                        case 0:\n                                            if (!err) return [3 /*break*/, 5];\n                                            logger.debug('Failed to get the user session', err);\n                                            if (!this.isSessionInvalid(err)) return [3 /*break*/, 4];\n                                            _b.label = 1;\n                                        case 1:\n                                            _b.trys.push([1, 3, , 4]);\n                                            return [4 /*yield*/, this.cleanUpInvalidSession(user)];\n                                        case 2:\n                                            _b.sent();\n                                            return [3 /*break*/, 4];\n                                        case 3:\n                                            cleanUpError_5 = _b.sent();\n                                            rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_5.message));\n                                            return [2 /*return*/];\n                                        case 4:\n                                            rej(err);\n                                            return [2 /*return*/];\n                                        case 5:\n                                            bypassCache = params ? params.bypassCache : false;\n                                            if (!bypassCache) return [3 /*break*/, 7];\n                                            return [4 /*yield*/, this.Credentials.clear()];\n                                        case 6:\n                                            _b.sent();\n                                            _b.label = 7;\n                                        case 7:\n                                            clientMetadata = this._config.clientMetadata;\n                                            _a = session.getAccessToken().decodePayload().scope, scope = _a === void 0 ? '' : _a;\n                                            if (scope.split(' ').includes(USER_ADMIN_SCOPE)) {\n                                                user.getUserData(function (err, data) { return __awaiter(_this, void 0, void 0, function () {\n                                                    var cleanUpError_6, preferredMFA, attributeList, i, attribute, userAttribute, attributes;\n                                                    return __generator(this, function (_a) {\n                                                        switch (_a.label) {\n                                                            case 0:\n                                                                if (!err) return [3 /*break*/, 7];\n                                                                logger.debug('getting user data failed', err);\n                                                                if (!this.isSessionInvalid(err)) return [3 /*break*/, 5];\n                                                                _a.label = 1;\n                                                            case 1:\n                                                                _a.trys.push([1, 3, , 4]);\n                                                                return [4 /*yield*/, this.cleanUpInvalidSession(user)];\n                                                            case 2:\n                                                                _a.sent();\n                                                                return [3 /*break*/, 4];\n                                                            case 3:\n                                                                cleanUpError_6 = _a.sent();\n                                                                rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_6.message));\n                                                                return [2 /*return*/];\n                                                            case 4:\n                                                                rej(err);\n                                                                return [3 /*break*/, 6];\n                                                            case 5:\n                                                                res(user);\n                                                                _a.label = 6;\n                                                            case 6: return [2 /*return*/];\n                                                            case 7:\n                                                                preferredMFA = data.PreferredMfaSetting || 'NOMFA';\n                                                                attributeList = [];\n                                                                for (i = 0; i < data.UserAttributes.length; i++) {\n                                                                    attribute = {\n                                                                        Name: data.UserAttributes[i].Name,\n                                                                        Value: data.UserAttributes[i].Value,\n                                                                    };\n                                                                    userAttribute = new amazon_cognito_identity_js__WEBPACK_IMPORTED_MODULE_0__.CognitoUserAttribute(attribute);\n                                                                    attributeList.push(userAttribute);\n                                                                }\n                                                                attributes = this.attributesToObject(attributeList);\n                                                                Object.assign(user, { attributes: attributes, preferredMFA: preferredMFA });\n                                                                return [2 /*return*/, res(user)];\n                                                        }\n                                                    });\n                                                }); }, { bypassCache: bypassCache, clientMetadata: clientMetadata });\n                                            }\n                                            else {\n                                                logger.debug(\"Unable to get the user data because the \" + USER_ADMIN_SCOPE + \" \" +\n                                                    \"is not in the scopes of the access token\");\n                                                return [2 /*return*/, res(user)];\n                                            }\n                                            return [2 /*return*/];\n                                    }\n                                });\n                            }); }, { clientMetadata: clientMetadata });\n                            return [2 /*return*/];\n                    }\n                });\n            }); })\n                .catch(function (e) {\n                logger.debug('Failed to sync cache info into memory', e);\n                return rej(e);\n            });\n        });\n    };\n    AuthClass.prototype.isOAuthInProgress = function () {\n        return this.oAuthFlowInProgress;\n    };\n    /**\n     * Get current authenticated user\n     * @param {CurrentUserOpts} - options for getting the current user\n     * @return - A promise resolves to current authenticated CognitoUser if success\n     */\n    AuthClass.prototype.currentAuthenticatedUser = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var federatedUser, e_7, federatedInfo, user, e_8;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        logger.debug('getting current authenticated user');\n                        federatedUser = null;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._storageSync];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_7 = _a.sent();\n                        logger.debug('Failed to sync cache info into memory', e_7);\n                        throw e_7;\n                    case 4:\n                        try {\n                            federatedInfo = JSON.parse(this._storage.getItem('aws-amplify-federatedInfo'));\n                            if (federatedInfo) {\n                                federatedUser = __assign(__assign({}, federatedInfo.user), { token: federatedInfo.token });\n                            }\n                        }\n                        catch (e) {\n                            logger.debug('cannot load federated user from auth storage');\n                        }\n                        if (!federatedUser) return [3 /*break*/, 5];\n                        this.user = federatedUser;\n                        logger.debug('get current authenticated federated user', this.user);\n                        return [2 /*return*/, this.user];\n                    case 5:\n                        logger.debug('get current authenticated userpool user');\n                        user = null;\n                        _a.label = 6;\n                    case 6:\n                        _a.trys.push([6, 8, , 9]);\n                        return [4 /*yield*/, this.currentUserPoolUser(params)];\n                    case 7:\n                        user = _a.sent();\n                        return [3 /*break*/, 9];\n                    case 8:\n                        e_8 = _a.sent();\n                        if (e_8 === 'No userPool') {\n                            logger.error('Cannot get the current user because the user pool is missing. ' +\n                                'Please make sure the Auth module is configured with a valid Cognito User Pool ID');\n                        }\n                        logger.debug('The user is not authenticated by the error', e_8);\n                        return [2 /*return*/, Promise.reject('The user is not authenticated')];\n                    case 9:\n                        this.user = user;\n                        return [2 /*return*/, this.user];\n                }\n            });\n        });\n    };\n    /**\n     * Get current user's session\n     * @return - A promise resolves to session object if success\n     */\n    AuthClass.prototype.currentSession = function () {\n        var that = this;\n        logger.debug('Getting current session');\n        // Purposely not calling the reject method here because we don't need a console error\n        if (!this.userPool) {\n            return Promise.reject(new Error('No User Pool in the configuration.'));\n        }\n        return new Promise(function (res, rej) {\n            that\n                .currentUserPoolUser()\n                .then(function (user) {\n                that\n                    .userSession(user)\n                    .then(function (session) {\n                    res(session);\n                    return;\n                })\n                    .catch(function (e) {\n                    logger.debug('Failed to get the current session', e);\n                    rej(e);\n                    return;\n                });\n            })\n                .catch(function (e) {\n                logger.debug('Failed to get the current user', e);\n                rej(e);\n                return;\n            });\n        });\n    };\n    /**\n     * Get the corresponding user session\n     * @param {Object} user - The CognitoUser object\n     * @return - A promise resolves to the session\n     */\n    AuthClass.prototype.userSession = function (user) {\n        var _this = this;\n        if (!user) {\n            logger.debug('the user is null');\n            return this.rejectAuthError(_types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.NoUserSession);\n        }\n        var clientMetadata = this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n        return new Promise(function (res, rej) {\n            logger.debug('Getting the session from this user:', user);\n            user.getSession(function (err, session) { return __awaiter(_this, void 0, void 0, function () {\n                var cleanUpError_7;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (!err) return [3 /*break*/, 5];\n                            logger.debug('Failed to get the session from user', user);\n                            if (!this.isSessionInvalid(err)) return [3 /*break*/, 4];\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, 3, , 4]);\n                            return [4 /*yield*/, this.cleanUpInvalidSession(user)];\n                        case 2:\n                            _a.sent();\n                            return [3 /*break*/, 4];\n                        case 3:\n                            cleanUpError_7 = _a.sent();\n                            rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_7.message));\n                            return [2 /*return*/];\n                        case 4:\n                            rej(err);\n                            return [2 /*return*/];\n                        case 5:\n                            logger.debug('Succeed to get the user session', session);\n                            res(session);\n                            return [2 /*return*/];\n                    }\n                });\n            }); }, { clientMetadata: clientMetadata });\n        });\n    };\n    /**\n     * Get authenticated credentials of current user.\n     * @return - A promise resolves to be current user's credentials\n     */\n    AuthClass.prototype.currentUserCredentials = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var e_9, federatedInfo;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        logger.debug('Getting current user credentials');\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._storageSync];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_9 = _a.sent();\n                        logger.debug('Failed to sync cache info into memory', e_9);\n                        throw e_9;\n                    case 4:\n                        federatedInfo = null;\n                        try {\n                            federatedInfo = JSON.parse(this._storage.getItem('aws-amplify-federatedInfo'));\n                        }\n                        catch (e) {\n                            logger.debug('failed to get or parse item aws-amplify-federatedInfo', e);\n                        }\n                        if (federatedInfo) {\n                            // refresh the jwt token here if necessary\n                            return [2 /*return*/, this.Credentials.refreshFederatedToken(federatedInfo)];\n                        }\n                        else {\n                            return [2 /*return*/, this.currentSession()\n                                    .then(function (session) {\n                                    logger.debug('getting session success', session);\n                                    return _this.Credentials.set(session, 'session');\n                                })\n                                    .catch(function () {\n                                    logger.debug('getting guest credentials');\n                                    return _this.Credentials.set(null, 'guest');\n                                })];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AuthClass.prototype.currentCredentials = function () {\n        logger.debug('getting current credentials');\n        return this.Credentials.get();\n    };\n    /**\n     * Initiate an attribute confirmation request\n     * @param {Object} user - The CognitoUser\n     * @param {Object} attr - The attributes to be verified\n     * @return - A promise resolves to callback data if success\n     */\n    AuthClass.prototype.verifyUserAttribute = function (user, attr, clientMetadata) {\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        return new Promise(function (resolve, reject) {\n            user.getAttributeVerificationCode(attr, {\n                onSuccess: function (success) {\n                    return resolve(success);\n                },\n                onFailure: function (err) {\n                    return reject(err);\n                },\n            }, clientMetadata);\n        });\n    };\n    /**\n     * Confirm an attribute using a confirmation code\n     * @param {Object} user - The CognitoUser\n     * @param {Object} attr - The attribute to be verified\n     * @param {String} code - The confirmation code\n     * @return - A promise resolves to callback data if success\n     */\n    AuthClass.prototype.verifyUserAttributeSubmit = function (user, attr, code) {\n        if (!code) {\n            return this.rejectAuthError(_types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.EmptyCode);\n        }\n        return new Promise(function (resolve, reject) {\n            user.verifyAttribute(attr, code, {\n                onSuccess: function (data) {\n                    resolve(data);\n                    return;\n                },\n                onFailure: function (err) {\n                    reject(err);\n                    return;\n                },\n            });\n        });\n    };\n    AuthClass.prototype.verifyCurrentUserAttribute = function (attr) {\n        var that = this;\n        return that\n            .currentUserPoolUser()\n            .then(function (user) { return that.verifyUserAttribute(user, attr); });\n    };\n    /**\n     * Confirm current user's attribute using a confirmation code\n     * @param {Object} attr - The attribute to be verified\n     * @param {String} code - The confirmation code\n     * @return - A promise resolves to callback data if success\n     */\n    AuthClass.prototype.verifyCurrentUserAttributeSubmit = function (attr, code) {\n        var that = this;\n        return that\n            .currentUserPoolUser()\n            .then(function (user) { return that.verifyUserAttributeSubmit(user, attr, code); });\n    };\n    AuthClass.prototype.cognitoIdentitySignOut = function (opts, user) {\n        return __awaiter(this, void 0, void 0, function () {\n            var e_10, isSignedInHostedUI;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this._storageSync];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        e_10 = _a.sent();\n                        logger.debug('Failed to sync cache info into memory', e_10);\n                        throw e_10;\n                    case 3:\n                        isSignedInHostedUI = this._oAuthHandler &&\n                            this._storage.getItem('amplify-signin-with-hostedUI') === 'true';\n                        return [2 /*return*/, new Promise(function (res, rej) {\n                                if (opts && opts.global) {\n                                    logger.debug('user global sign out', user);\n                                    // in order to use global signout\n                                    // we must validate the user as an authenticated user by using getSession\n                                    var clientMetadata = _this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n                                    user.getSession(function (err, result) { return __awaiter(_this, void 0, void 0, function () {\n                                        var cleanUpError_8;\n                                        var _this = this;\n                                        return __generator(this, function (_a) {\n                                            switch (_a.label) {\n                                                case 0:\n                                                    if (!err) return [3 /*break*/, 5];\n                                                    logger.debug('failed to get the user session', err);\n                                                    if (!this.isSessionInvalid(err)) return [3 /*break*/, 4];\n                                                    _a.label = 1;\n                                                case 1:\n                                                    _a.trys.push([1, 3, , 4]);\n                                                    return [4 /*yield*/, this.cleanUpInvalidSession(user)];\n                                                case 2:\n                                                    _a.sent();\n                                                    return [3 /*break*/, 4];\n                                                case 3:\n                                                    cleanUpError_8 = _a.sent();\n                                                    rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_8.message));\n                                                    return [2 /*return*/];\n                                                case 4: return [2 /*return*/, rej(err)];\n                                                case 5:\n                                                    user.globalSignOut({\n                                                        onSuccess: function (data) {\n                                                            logger.debug('global sign out success');\n                                                            if (isSignedInHostedUI) {\n                                                                _this.oAuthSignOutRedirect(res, rej);\n                                                            }\n                                                            else {\n                                                                return res();\n                                                            }\n                                                        },\n                                                        onFailure: function (err) {\n                                                            logger.debug('global sign out failed', err);\n                                                            return rej(err);\n                                                        },\n                                                    });\n                                                    return [2 /*return*/];\n                                            }\n                                        });\n                                    }); }, { clientMetadata: clientMetadata });\n                                }\n                                else {\n                                    logger.debug('user sign out', user);\n                                    user.signOut(function () {\n                                        if (isSignedInHostedUI) {\n                                            _this.oAuthSignOutRedirect(res, rej);\n                                        }\n                                        else {\n                                            return res();\n                                        }\n                                    });\n                                }\n                            })];\n                }\n            });\n        });\n    };\n    AuthClass.prototype.oAuthSignOutRedirect = function (resolve, reject) {\n        var isBrowser = (0,_aws_amplify_core__WEBPACK_IMPORTED_MODULE_11__.browserOrNode)().isBrowser;\n        if (isBrowser) {\n            this.oAuthSignOutRedirectOrReject(reject);\n        }\n        else {\n            this.oAuthSignOutAndResolve(resolve);\n        }\n    };\n    AuthClass.prototype.oAuthSignOutAndResolve = function (resolve) {\n        this._oAuthHandler.signOut();\n        resolve();\n    };\n    AuthClass.prototype.oAuthSignOutRedirectOrReject = function (reject) {\n        this._oAuthHandler.signOut(); // this method redirects url\n        // App should be redirected to another url otherwise it will reject\n        setTimeout(function () { return reject(Error('Signout timeout fail')); }, 3000);\n    };\n    /**\n     * Sign out method\n     * @\n     * @return - A promise resolved if success\n     */\n    AuthClass.prototype.signOut = function (opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var e_11, user;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.cleanCachedItems()];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        e_11 = _a.sent();\n                        logger.debug('failed to clear cached items');\n                        return [3 /*break*/, 3];\n                    case 3:\n                        if (!this.userPool) return [3 /*break*/, 7];\n                        user = this.userPool.getCurrentUser();\n                        if (!user) return [3 /*break*/, 5];\n                        return [4 /*yield*/, this.cognitoIdentitySignOut(opts, user)];\n                    case 4:\n                        _a.sent();\n                        return [3 /*break*/, 6];\n                    case 5:\n                        logger.debug('no current Cognito user');\n                        _a.label = 6;\n                    case 6: return [3 /*break*/, 8];\n                    case 7:\n                        logger.debug('no Cognito User pool');\n                        _a.label = 8;\n                    case 8:\n                        /**\n                         * Note for future refactor - no reliable way to get username with\n                         * Cognito User Pools vs Identity when federating with Social Providers\n                         * This is why we need a well structured session object that can be inspected\n                         * and information passed back in the message below for Hub dispatch\n                         */\n                        dispatchAuthEvent('signOut', this.user, \"A user has been signed out\");\n                        this.user = null;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AuthClass.prototype.cleanCachedItems = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: \n                    // clear cognito cached item\n                    return [4 /*yield*/, this.Credentials.clear()];\n                    case 1:\n                        // clear cognito cached item\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Change a password for an authenticated user\n     * @param {Object} user - The CognitoUser object\n     * @param {String} oldPassword - the current password\n     * @param {String} newPassword - the requested new password\n     * @return - A promise resolves if success\n     */\n    AuthClass.prototype.changePassword = function (user, oldPassword, newPassword, clientMetadata) {\n        var _this = this;\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        return new Promise(function (resolve, reject) {\n            _this.userSession(user).then(function (session) {\n                user.changePassword(oldPassword, newPassword, function (err, data) {\n                    if (err) {\n                        logger.debug('change password failure', err);\n                        return reject(err);\n                    }\n                    else {\n                        return resolve(data);\n                    }\n                }, clientMetadata);\n            });\n        });\n    };\n    /**\n     * Initiate a forgot password request\n     * @param {String} username - the username to change password\n     * @return - A promise resolves if success\n     */\n    AuthClass.prototype.forgotPassword = function (username, clientMetadata) {\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        if (!this.userPool) {\n            return this.rejectNoUserPool();\n        }\n        if (!username) {\n            return this.rejectAuthError(_types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.EmptyUsername);\n        }\n        var user = this.createCognitoUser(username);\n        return new Promise(function (resolve, reject) {\n            user.forgotPassword({\n                onSuccess: function () {\n                    resolve();\n                    return;\n                },\n                onFailure: function (err) {\n                    logger.debug('forgot password failure', err);\n                    dispatchAuthEvent('forgotPassword_failure', err, username + \" forgotPassword failed\");\n                    reject(err);\n                    return;\n                },\n                inputVerificationCode: function (data) {\n                    dispatchAuthEvent('forgotPassword', user, username + \" has initiated forgot password flow\");\n                    resolve(data);\n                    return;\n                },\n            }, clientMetadata);\n        });\n    };\n    /**\n     * Confirm a new password using a confirmation Code\n     * @param {String} username - The username\n     * @param {String} code - The confirmation code\n     * @param {String} password - The new password\n     * @return - A promise that resolves if success\n     */\n    AuthClass.prototype.forgotPasswordSubmit = function (username, code, password, clientMetadata) {\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        if (!this.userPool) {\n            return this.rejectNoUserPool();\n        }\n        if (!username) {\n            return this.rejectAuthError(_types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.EmptyUsername);\n        }\n        if (!code) {\n            return this.rejectAuthError(_types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.EmptyCode);\n        }\n        if (!password) {\n            return this.rejectAuthError(_types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.EmptyPassword);\n        }\n        var user = this.createCognitoUser(username);\n        return new Promise(function (resolve, reject) {\n            user.confirmPassword(code, password, {\n                onSuccess: function (success) {\n                    dispatchAuthEvent('forgotPasswordSubmit', user, username + \" forgotPasswordSubmit successful\");\n                    resolve(success);\n                    return;\n                },\n                onFailure: function (err) {\n                    dispatchAuthEvent('forgotPasswordSubmit_failure', err, username + \" forgotPasswordSubmit failed\");\n                    reject(err);\n                    return;\n                },\n            }, clientMetadata);\n        });\n    };\n    /**\n     * Get user information\n     * @async\n     * @return {Object }- current User's information\n     */\n    AuthClass.prototype.currentUserInfo = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var source, user, attributes, userAttrs, credentials, e_12, info, err_1, user;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        source = this.Credentials.getCredSource();\n                        if (!(!source || source === 'aws' || source === 'userPool')) return [3 /*break*/, 9];\n                        return [4 /*yield*/, this.currentUserPoolUser().catch(function (err) {\n                                return logger.error(err);\n                            })];\n                    case 1:\n                        user = _a.sent();\n                        if (!user) {\n                            return [2 /*return*/, null];\n                        }\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 8, , 9]);\n                        return [4 /*yield*/, this.userAttributes(user)];\n                    case 3:\n                        attributes = _a.sent();\n                        userAttrs = this.attributesToObject(attributes);\n                        credentials = null;\n                        _a.label = 4;\n                    case 4:\n                        _a.trys.push([4, 6, , 7]);\n                        return [4 /*yield*/, this.currentCredentials()];\n                    case 5:\n                        credentials = _a.sent();\n                        return [3 /*break*/, 7];\n                    case 6:\n                        e_12 = _a.sent();\n                        logger.debug('Failed to retrieve credentials while getting current user info', e_12);\n                        return [3 /*break*/, 7];\n                    case 7:\n                        info = {\n                            id: credentials ? credentials.identityId : undefined,\n                            username: user.getUsername(),\n                            attributes: userAttrs,\n                        };\n                        return [2 /*return*/, info];\n                    case 8:\n                        err_1 = _a.sent();\n                        logger.error('currentUserInfo error', err_1);\n                        return [2 /*return*/, {}];\n                    case 9:\n                        if (source === 'federated') {\n                            user = this.user;\n                            return [2 /*return*/, user ? user : {}];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AuthClass.prototype.federatedSignIn = function (providerOrOptions, response, user) {\n        return __awaiter(this, void 0, void 0, function () {\n            var options, provider, customState, client_id, redirect_uri, provider, loggedInUser, token, identity_id, expires_at, credentials, currentUser;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this._config.identityPoolId && !this._config.userPoolId) {\n                            throw new Error(\"Federation requires either a User Pool or Identity Pool in config\");\n                        }\n                        // Ensure backwards compatability\n                        if (typeof providerOrOptions === 'undefined') {\n                            if (this._config.identityPoolId && !this._config.userPoolId) {\n                                throw new Error(\"Federation with Identity Pools requires tokens passed as arguments\");\n                            }\n                        }\n                        if (!((0,_types__WEBPACK_IMPORTED_MODULE_8__.isFederatedSignInOptions)(providerOrOptions) ||\n                            (0,_types__WEBPACK_IMPORTED_MODULE_8__.isFederatedSignInOptionsCustom)(providerOrOptions) ||\n                            (0,_types__WEBPACK_IMPORTED_MODULE_8__.hasCustomState)(providerOrOptions) ||\n                            typeof providerOrOptions === 'undefined')) return [3 /*break*/, 1];\n                        options = providerOrOptions || {\n                            provider: _types__WEBPACK_IMPORTED_MODULE_8__.CognitoHostedUIIdentityProvider.Cognito,\n                        };\n                        provider = (0,_types__WEBPACK_IMPORTED_MODULE_8__.isFederatedSignInOptions)(options)\n                            ? options.provider\n                            : options.customProvider;\n                        customState = (0,_types__WEBPACK_IMPORTED_MODULE_8__.isFederatedSignInOptions)(options)\n                            ? options.customState\n                            : options.customState;\n                        if (this._config.userPoolId) {\n                            client_id = (0,_types__WEBPACK_IMPORTED_MODULE_8__.isCognitoHostedOpts)(this._config.oauth)\n                                ? this._config.userPoolWebClientId\n                                : this._config.oauth.clientID;\n                            redirect_uri = (0,_types__WEBPACK_IMPORTED_MODULE_8__.isCognitoHostedOpts)(this._config.oauth)\n                                ? this._config.oauth.redirectSignIn\n                                : this._config.oauth.redirectUri;\n                            this._oAuthHandler.oauthSignIn(this._config.oauth.responseType, this._config.oauth.domain, redirect_uri, client_id, provider, customState);\n                        }\n                        return [3 /*break*/, 4];\n                    case 1:\n                        provider = providerOrOptions;\n                        // To check if the user is already logged in\n                        try {\n                            loggedInUser = JSON.stringify(JSON.parse(this._storage.getItem('aws-amplify-federatedInfo')).user);\n                            if (loggedInUser) {\n                                logger.warn(\"There is already a signed in user: \" + loggedInUser + \" in your app.\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tYou should not call Auth.federatedSignIn method again as it may cause unexpected behavior.\");\n                            }\n                        }\n                        catch (e) { }\n                        token = response.token, identity_id = response.identity_id, expires_at = response.expires_at;\n                        return [4 /*yield*/, this.Credentials.set({ provider: provider, token: token, identity_id: identity_id, user: user, expires_at: expires_at }, 'federation')];\n                    case 2:\n                        credentials = _a.sent();\n                        return [4 /*yield*/, this.currentAuthenticatedUser()];\n                    case 3:\n                        currentUser = _a.sent();\n                        dispatchAuthEvent('signIn', currentUser, \"A user \" + currentUser.username + \" has been signed in\");\n                        logger.debug('federated sign in credentials', credentials);\n                        return [2 /*return*/, credentials];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Used to complete the OAuth flow with or without the Cognito Hosted UI\n     * @param {String} URL - optional parameter for customers to pass in the response URL\n     */\n    AuthClass.prototype._handleAuthResponse = function (URL) {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentUrl, hasCodeOrError, hasTokenOrError, _a, accessToken, idToken, refreshToken, state, session, credentials, isCustomStateIncluded, currentUser, customState, err_2;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (this.oAuthFlowInProgress) {\n                            logger.debug(\"Skipping URL \" + URL + \" current flow in progress\");\n                            return [2 /*return*/];\n                        }\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, , 8, 9]);\n                        this.oAuthFlowInProgress = true;\n                        if (!this._config.userPoolId) {\n                            throw new Error(\"OAuth responses require a User Pool defined in config\");\n                        }\n                        dispatchAuthEvent('parsingCallbackUrl', { url: URL }, \"The callback url is being parsed\");\n                        currentUrl = URL || ((0,_aws_amplify_core__WEBPACK_IMPORTED_MODULE_11__.browserOrNode)().isBrowser ? window.location.href : '');\n                        hasCodeOrError = !!((0,url__WEBPACK_IMPORTED_MODULE_1__.parse)(currentUrl).query || '')\n                            .split('&')\n                            .map(function (entry) { return entry.split('='); })\n                            .find(function (_a) {\n                            var _b = __read(_a, 1), k = _b[0];\n                            return k === 'code' || k === 'error';\n                        });\n                        hasTokenOrError = !!((0,url__WEBPACK_IMPORTED_MODULE_1__.parse)(currentUrl).hash || '#')\n                            .substr(1)\n                            .split('&')\n                            .map(function (entry) { return entry.split('='); })\n                            .find(function (_a) {\n                            var _b = __read(_a, 1), k = _b[0];\n                            return k === 'access_token' || k === 'error';\n                        });\n                        if (!(hasCodeOrError || hasTokenOrError)) return [3 /*break*/, 7];\n                        this._storage.setItem('amplify-redirected-from-hosted-ui', 'true');\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([2, 6, , 7]);\n                        return [4 /*yield*/, this._oAuthHandler.handleAuthResponse(currentUrl)];\n                    case 3:\n                        _a = _b.sent(), accessToken = _a.accessToken, idToken = _a.idToken, refreshToken = _a.refreshToken, state = _a.state;\n                        session = new amazon_cognito_identity_js__WEBPACK_IMPORTED_MODULE_0__.CognitoUserSession({\n                            IdToken: new amazon_cognito_identity_js__WEBPACK_IMPORTED_MODULE_0__.CognitoIdToken({ IdToken: idToken }),\n                            RefreshToken: new amazon_cognito_identity_js__WEBPACK_IMPORTED_MODULE_0__.CognitoRefreshToken({\n                                RefreshToken: refreshToken,\n                            }),\n                            AccessToken: new amazon_cognito_identity_js__WEBPACK_IMPORTED_MODULE_0__.CognitoAccessToken({\n                                AccessToken: accessToken,\n                            }),\n                        });\n                        credentials = void 0;\n                        if (!this._config.identityPoolId) return [3 /*break*/, 5];\n                        return [4 /*yield*/, this.Credentials.set(session, 'session')];\n                    case 4:\n                        credentials = _b.sent();\n                        logger.debug('AWS credentials', credentials);\n                        _b.label = 5;\n                    case 5:\n                        isCustomStateIncluded = /-/.test(state);\n                        currentUser = this.createCognitoUser(session.getIdToken().decodePayload()['cognito:username']);\n                        // This calls cacheTokens() in Cognito SDK\n                        currentUser.setSignInUserSession(session);\n                        if (window && typeof window.history !== 'undefined') {\n                            window.history.replaceState({}, null, this._config.oauth.redirectSignIn);\n                        }\n                        dispatchAuthEvent('signIn', currentUser, \"A user \" + currentUser.getUsername() + \" has been signed in\");\n                        dispatchAuthEvent('cognitoHostedUI', currentUser, \"A user \" + currentUser.getUsername() + \" has been signed in via Cognito Hosted UI\");\n                        if (isCustomStateIncluded) {\n                            customState = state.split('-').splice(1).join('-');\n                            dispatchAuthEvent('customOAuthState', (0,_aws_amplify_core__WEBPACK_IMPORTED_MODULE_12__.urlSafeDecode)(customState), \"State for user \" + currentUser.getUsername());\n                        }\n                        //#endregion\n                        return [2 /*return*/, credentials];\n                    case 6:\n                        err_2 = _b.sent();\n                        logger.debug('Error in cognito hosted auth response', err_2);\n                        // Just like a successful handling of `?code`, replace the window history to \"dispose\" of the `code`.\n                        // Otherwise, reloading the page will throw errors as the `code` has already been spent.\n                        if (window && typeof window.history !== 'undefined') {\n                            window.history.replaceState({}, null, this._config.oauth.redirectSignIn);\n                        }\n                        dispatchAuthEvent('signIn_failure', err_2, \"The OAuth response flow failed\");\n                        dispatchAuthEvent('cognitoHostedUI_failure', err_2, \"A failure occurred when returning to the Cognito Hosted UI\");\n                        dispatchAuthEvent('customState_failure', err_2, \"A failure occurred when returning state\");\n                        return [3 /*break*/, 7];\n                    case 7: return [3 /*break*/, 9];\n                    case 8:\n                        this.oAuthFlowInProgress = false;\n                        return [7 /*endfinally*/];\n                    case 9: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Compact version of credentials\n     * @param {Object} credentials\n     * @return {Object} - Credentials\n     */\n    AuthClass.prototype.essentialCredentials = function (credentials) {\n        return {\n            accessKeyId: credentials.accessKeyId,\n            sessionToken: credentials.sessionToken,\n            secretAccessKey: credentials.secretAccessKey,\n            identityId: credentials.identityId,\n            authenticated: credentials.authenticated,\n        };\n    };\n    AuthClass.prototype.attributesToObject = function (attributes) {\n        var _this = this;\n        var obj = {};\n        if (attributes) {\n            attributes.map(function (attribute) {\n                if (attribute.Name === 'email_verified' ||\n                    attribute.Name === 'phone_number_verified') {\n                    obj[attribute.Name] =\n                        _this.isTruthyString(attribute.Value) || attribute.Value === true;\n                }\n                else {\n                    obj[attribute.Name] = attribute.Value;\n                }\n            });\n        }\n        return obj;\n    };\n    AuthClass.prototype.isTruthyString = function (value) {\n        return (typeof value.toLowerCase === 'function' && value.toLowerCase() === 'true');\n    };\n    AuthClass.prototype.createCognitoUser = function (username) {\n        var userData = {\n            Username: username,\n            Pool: this.userPool,\n        };\n        userData.Storage = this._storage;\n        var authenticationFlowType = this._config.authenticationFlowType;\n        var user = new amazon_cognito_identity_js__WEBPACK_IMPORTED_MODULE_0__.CognitoUser(userData);\n        if (authenticationFlowType) {\n            user.setAuthenticationFlowType(authenticationFlowType);\n        }\n        return user;\n    };\n    AuthClass.prototype._isValidAuthStorage = function (obj) {\n        // We need to check if the obj has the functions of Storage\n        return (!!obj &&\n            typeof obj.getItem === 'function' &&\n            typeof obj.setItem === 'function' &&\n            typeof obj.removeItem === 'function' &&\n            typeof obj.clear === 'function');\n    };\n    AuthClass.prototype.noUserPoolErrorHandler = function (config) {\n        if (config) {\n            if (!config.userPoolId || !config.identityPoolId) {\n                return _types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.MissingAuthConfig;\n            }\n        }\n        return _types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.NoConfig;\n    };\n    AuthClass.prototype.rejectAuthError = function (type) {\n        return Promise.reject(new _Errors__WEBPACK_IMPORTED_MODULE_13__.AuthError(type));\n    };\n    AuthClass.prototype.rejectNoUserPool = function () {\n        var type = this.noUserPoolErrorHandler(this._config);\n        return Promise.reject(new _Errors__WEBPACK_IMPORTED_MODULE_13__.NoUserPoolError(type));\n    };\n    AuthClass.prototype.rememberDevice = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var currUser, error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.currentUserPoolUser()];\n                    case 1:\n                        currUser = _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_2 = _a.sent();\n                        logger.debug('The user is not authenticated by the error', error_2);\n                        return [2 /*return*/, Promise.reject('The user is not authenticated')];\n                    case 3:\n                        currUser.getCachedDeviceKeyAndPassword();\n                        return [2 /*return*/, new Promise(function (res, rej) {\n                                currUser.setDeviceStatusRemembered({\n                                    onSuccess: function (data) {\n                                        res(data);\n                                    },\n                                    onFailure: function (err) {\n                                        if (err.code === 'InvalidParameterException') {\n                                            rej(new _Errors__WEBPACK_IMPORTED_MODULE_13__.AuthError(_types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.DeviceConfig));\n                                        }\n                                        else if (err.code === 'NetworkError') {\n                                            rej(new _Errors__WEBPACK_IMPORTED_MODULE_13__.AuthError(_types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.NetworkError));\n                                        }\n                                        else {\n                                            rej(err);\n                                        }\n                                    },\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    AuthClass.prototype.forgetDevice = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var currUser, error_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.currentUserPoolUser()];\n                    case 1:\n                        currUser = _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_3 = _a.sent();\n                        logger.debug('The user is not authenticated by the error', error_3);\n                        return [2 /*return*/, Promise.reject('The user is not authenticated')];\n                    case 3:\n                        currUser.getCachedDeviceKeyAndPassword();\n                        return [2 /*return*/, new Promise(function (res, rej) {\n                                currUser.forgetDevice({\n                                    onSuccess: function (data) {\n                                        res(data);\n                                    },\n                                    onFailure: function (err) {\n                                        if (err.code === 'InvalidParameterException') {\n                                            rej(new _Errors__WEBPACK_IMPORTED_MODULE_13__.AuthError(_types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.DeviceConfig));\n                                        }\n                                        else if (err.code === 'NetworkError') {\n                                            rej(new _Errors__WEBPACK_IMPORTED_MODULE_13__.AuthError(_types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.NetworkError));\n                                        }\n                                        else {\n                                            rej(err);\n                                        }\n                                    },\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    AuthClass.prototype.fetchDevices = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var currUser, error_4;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.currentUserPoolUser()];\n                    case 1:\n                        currUser = _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_4 = _a.sent();\n                        logger.debug('The user is not authenticated by the error', error_4);\n                        throw new Error('The user is not authenticated');\n                    case 3:\n                        currUser.getCachedDeviceKeyAndPassword();\n                        return [2 /*return*/, new Promise(function (res, rej) {\n                                var cb = {\n                                    onSuccess: function (data) {\n                                        var deviceList = data.Devices.map(function (device) {\n                                            var deviceName = device.DeviceAttributes.find(function (_a) {\n                                                var Name = _a.Name;\n                                                return Name === 'device_name';\n                                            }) || {};\n                                            var deviceInfo = {\n                                                id: device.DeviceKey,\n                                                name: deviceName.Value,\n                                            };\n                                            return deviceInfo;\n                                        });\n                                        res(deviceList);\n                                    },\n                                    onFailure: function (err) {\n                                        if (err.code === 'InvalidParameterException') {\n                                            rej(new _Errors__WEBPACK_IMPORTED_MODULE_13__.AuthError(_types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.DeviceConfig));\n                                        }\n                                        else if (err.code === 'NetworkError') {\n                                            rej(new _Errors__WEBPACK_IMPORTED_MODULE_13__.AuthError(_types__WEBPACK_IMPORTED_MODULE_8__.AuthErrorTypes.NetworkError));\n                                        }\n                                        else {\n                                            rej(err);\n                                        }\n                                    },\n                                };\n                                currUser.listDevices(MAX_DEVICES, null, cb);\n                            })];\n                }\n            });\n        });\n    };\n    return AuthClass;\n}());\n\nvar Auth = new AuthClass(null);\n_aws_amplify_core__WEBPACK_IMPORTED_MODULE_14__.Amplify.register(Auth);\n//# sourceMappingURL=Auth.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-amplify/auth/lib-esm/Auth.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-amplify/auth/lib-esm/Errors.js":
/*!**********************************************************!*\
  !*** ./node_modules/@aws-amplify/auth/lib-esm/Errors.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthError: () => (/* binding */ AuthError),\n/* harmony export */   NoUserPoolError: () => (/* binding */ NoUserPoolError),\n/* harmony export */   authErrorMessages: () => (/* binding */ authErrorMessages)\n/* harmony export */ });\n/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-amplify/core */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/Logger/ConsoleLogger.js\");\n/* harmony import */ var _common_AuthErrorStrings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common/AuthErrorStrings */ \"(ssr)/./node_modules/@aws-amplify/auth/lib-esm/common/AuthErrorStrings.js\");\n/*\n * Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__.ConsoleLogger('AuthError');\nvar AuthError = /** @class */ (function (_super) {\n    __extends(AuthError, _super);\n    function AuthError(type) {\n        var _this = this;\n        var _a = authErrorMessages[type], message = _a.message, log = _a.log;\n        _this = _super.call(this, message) || this;\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        _this.constructor = AuthError;\n        Object.setPrototypeOf(_this, AuthError.prototype);\n        _this.name = 'AuthError';\n        _this.log = log || message;\n        logger.error(_this.log);\n        return _this;\n    }\n    return AuthError;\n}(Error));\n\nvar NoUserPoolError = /** @class */ (function (_super) {\n    __extends(NoUserPoolError, _super);\n    function NoUserPoolError(type) {\n        var _this = _super.call(this, type) || this;\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        _this.constructor = NoUserPoolError;\n        Object.setPrototypeOf(_this, NoUserPoolError.prototype);\n        _this.name = 'NoUserPoolError';\n        return _this;\n    }\n    return NoUserPoolError;\n}(AuthError));\n\nvar authErrorMessages = {\n    noConfig: {\n        message: _common_AuthErrorStrings__WEBPACK_IMPORTED_MODULE_1__.AuthErrorStrings.DEFAULT_MSG,\n        log: \"\\n            Error: Amplify has not been configured correctly.\\n            This error is typically caused by one of the following scenarios:\\n\\n            1. Make sure you're passing the awsconfig object to Amplify.configure() in your app's entry point\\n                See https://aws-amplify.github.io/docs/js/authentication#configure-your-app for more information\\n            \\n            2. There might be multiple conflicting versions of amplify packages in your node_modules.\\n\\t\\t\\t\\tRefer to our docs site for help upgrading Amplify packages (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js)\\n        \",\n    },\n    missingAuthConfig: {\n        message: _common_AuthErrorStrings__WEBPACK_IMPORTED_MODULE_1__.AuthErrorStrings.DEFAULT_MSG,\n        log: \"\\n            Error: Amplify has not been configured correctly. \\n            The configuration object is missing required auth properties.\\n            This error is typically caused by one of the following scenarios:\\n\\n            1. Did you run `amplify push` after adding auth via `amplify add auth`?\\n                See https://aws-amplify.github.io/docs/js/authentication#amplify-project-setup for more information\\n\\n            2. This could also be caused by multiple conflicting versions of amplify packages, see (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js) for help upgrading Amplify packages.\\n        \",\n    },\n    emptyUsername: {\n        message: _common_AuthErrorStrings__WEBPACK_IMPORTED_MODULE_1__.AuthErrorStrings.EMPTY_USERNAME,\n    },\n    // TODO: should include a list of valid sign-in types\n    invalidUsername: {\n        message: _common_AuthErrorStrings__WEBPACK_IMPORTED_MODULE_1__.AuthErrorStrings.INVALID_USERNAME,\n    },\n    emptyPassword: {\n        message: _common_AuthErrorStrings__WEBPACK_IMPORTED_MODULE_1__.AuthErrorStrings.EMPTY_PASSWORD,\n    },\n    emptyCode: {\n        message: _common_AuthErrorStrings__WEBPACK_IMPORTED_MODULE_1__.AuthErrorStrings.EMPTY_CODE,\n    },\n    signUpError: {\n        message: _common_AuthErrorStrings__WEBPACK_IMPORTED_MODULE_1__.AuthErrorStrings.SIGN_UP_ERROR,\n        log: 'The first parameter should either be non-null string or object',\n    },\n    noMFA: {\n        message: _common_AuthErrorStrings__WEBPACK_IMPORTED_MODULE_1__.AuthErrorStrings.NO_MFA,\n    },\n    invalidMFA: {\n        message: _common_AuthErrorStrings__WEBPACK_IMPORTED_MODULE_1__.AuthErrorStrings.INVALID_MFA,\n    },\n    emptyChallengeResponse: {\n        message: _common_AuthErrorStrings__WEBPACK_IMPORTED_MODULE_1__.AuthErrorStrings.EMPTY_CHALLENGE,\n    },\n    noUserSession: {\n        message: _common_AuthErrorStrings__WEBPACK_IMPORTED_MODULE_1__.AuthErrorStrings.NO_USER_SESSION,\n    },\n    deviceConfig: {\n        message: _common_AuthErrorStrings__WEBPACK_IMPORTED_MODULE_1__.AuthErrorStrings.DEVICE_CONFIG,\n    },\n    networkError: {\n        message: _common_AuthErrorStrings__WEBPACK_IMPORTED_MODULE_1__.AuthErrorStrings.NETWORK_ERROR,\n    },\n    autoSignInError: {\n        message: _common_AuthErrorStrings__WEBPACK_IMPORTED_MODULE_1__.AuthErrorStrings.AUTOSIGNIN_ERROR,\n    },\n    default: {\n        message: _common_AuthErrorStrings__WEBPACK_IMPORTED_MODULE_1__.AuthErrorStrings.DEFAULT_MSG,\n    },\n};\n//# sourceMappingURL=Errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1hbXBsaWZ5L2F1dGgvbGliLWVzbS9FcnJvcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsU0FBSSxJQUFJLFNBQUk7QUFDN0I7QUFDQTtBQUNBLGVBQWUsZ0JBQWdCLHNDQUFzQyxrQkFBa0I7QUFDdkYsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQSxDQUFDO0FBQzJEO0FBQ0M7QUFDN0QsaUJBQWlCLDREQUFNO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNvQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQzBCO0FBQ3BCO0FBQ1A7QUFDQSxpQkFBaUIsc0VBQWdCO0FBQ2pDO0FBQ0EsS0FBSztBQUNMO0FBQ0EsaUJBQWlCLHNFQUFnQjtBQUNqQztBQUNBLEtBQUs7QUFDTDtBQUNBLGlCQUFpQixzRUFBZ0I7QUFDakMsS0FBSztBQUNMO0FBQ0E7QUFDQSxpQkFBaUIsc0VBQWdCO0FBQ2pDLEtBQUs7QUFDTDtBQUNBLGlCQUFpQixzRUFBZ0I7QUFDakMsS0FBSztBQUNMO0FBQ0EsaUJBQWlCLHNFQUFnQjtBQUNqQyxLQUFLO0FBQ0w7QUFDQSxpQkFBaUIsc0VBQWdCO0FBQ2pDO0FBQ0EsS0FBSztBQUNMO0FBQ0EsaUJBQWlCLHNFQUFnQjtBQUNqQyxLQUFLO0FBQ0w7QUFDQSxpQkFBaUIsc0VBQWdCO0FBQ2pDLEtBQUs7QUFDTDtBQUNBLGlCQUFpQixzRUFBZ0I7QUFDakMsS0FBSztBQUNMO0FBQ0EsaUJBQWlCLHNFQUFnQjtBQUNqQyxLQUFLO0FBQ0w7QUFDQSxpQkFBaUIsc0VBQWdCO0FBQ2pDLEtBQUs7QUFDTDtBQUNBLGlCQUFpQixzRUFBZ0I7QUFDakMsS0FBSztBQUNMO0FBQ0EsaUJBQWlCLHNFQUFnQjtBQUNqQyxLQUFLO0FBQ0w7QUFDQSxpQkFBaUIsc0VBQWdCO0FBQ2pDLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLWFtcGxpZnkvYXV0aC9saWItZXNtL0Vycm9ycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMTktMjAyMCBBbWF6b24uY29tLCBJbmMuIG9yIGl0cyBhZmZpbGlhdGVzLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIikuIFlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aFxuICogdGhlIExpY2Vuc2UuIEEgY29weSBvZiB0aGUgTGljZW5zZSBpcyBsb2NhdGVkIGF0XG4gKlxuICogICAgIGh0dHA6Ly9hd3MuYW1hem9uLmNvbS9hcGFjaGUyLjAvXG4gKlxuICogb3IgaW4gdGhlIFwibGljZW5zZVwiIGZpbGUgYWNjb21wYW55aW5nIHRoaXMgZmlsZS4gVGhpcyBmaWxlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SXG4gKiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnNcbiAqIGFuZCBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgICAgIHJldHVybiBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgIH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5pbXBvcnQgeyBDb25zb2xlTG9nZ2VyIGFzIExvZ2dlciB9IGZyb20gJ0Bhd3MtYW1wbGlmeS9jb3JlJztcbmltcG9ydCB7IEF1dGhFcnJvclN0cmluZ3MgfSBmcm9tICcuL2NvbW1vbi9BdXRoRXJyb3JTdHJpbmdzJztcbnZhciBsb2dnZXIgPSBuZXcgTG9nZ2VyKCdBdXRoRXJyb3InKTtcbnZhciBBdXRoRXJyb3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKEF1dGhFcnJvciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBBdXRoRXJyb3IodHlwZSkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgX2EgPSBhdXRoRXJyb3JNZXNzYWdlc1t0eXBlXSwgbWVzc2FnZSA9IF9hLm1lc3NhZ2UsIGxvZyA9IF9hLmxvZztcbiAgICAgICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBtZXNzYWdlKSB8fCB0aGlzO1xuICAgICAgICAvLyBIYWNrIGZvciBtYWtpbmcgdGhlIGN1c3RvbSBlcnJvciBjbGFzcyB3b3JrIHdoZW4gdHJhbnNwaWxlZCB0byBlczVcbiAgICAgICAgLy8gVE9ETzogRGVsZXRlIHRoZSBmb2xsb3dpbmcgMiBsaW5lcyBhZnRlciB3ZSBjaGFuZ2UgdGhlIGJ1aWxkIHRhcmdldCB0byA+PSBlczIwMTVcbiAgICAgICAgX3RoaXMuY29uc3RydWN0b3IgPSBBdXRoRXJyb3I7XG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihfdGhpcywgQXV0aEVycm9yLnByb3RvdHlwZSk7XG4gICAgICAgIF90aGlzLm5hbWUgPSAnQXV0aEVycm9yJztcbiAgICAgICAgX3RoaXMubG9nID0gbG9nIHx8IG1lc3NhZ2U7XG4gICAgICAgIGxvZ2dlci5lcnJvcihfdGhpcy5sb2cpO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIHJldHVybiBBdXRoRXJyb3I7XG59KEVycm9yKSk7XG5leHBvcnQgeyBBdXRoRXJyb3IgfTtcbnZhciBOb1VzZXJQb29sRXJyb3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKE5vVXNlclBvb2xFcnJvciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBOb1VzZXJQb29sRXJyb3IodHlwZSkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCB0eXBlKSB8fCB0aGlzO1xuICAgICAgICAvLyBIYWNrIGZvciBtYWtpbmcgdGhlIGN1c3RvbSBlcnJvciBjbGFzcyB3b3JrIHdoZW4gdHJhbnNwaWxlZCB0byBlczVcbiAgICAgICAgLy8gVE9ETzogRGVsZXRlIHRoZSBmb2xsb3dpbmcgMiBsaW5lcyBhZnRlciB3ZSBjaGFuZ2UgdGhlIGJ1aWxkIHRhcmdldCB0byA+PSBlczIwMTVcbiAgICAgICAgX3RoaXMuY29uc3RydWN0b3IgPSBOb1VzZXJQb29sRXJyb3I7XG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihfdGhpcywgTm9Vc2VyUG9vbEVycm9yLnByb3RvdHlwZSk7XG4gICAgICAgIF90aGlzLm5hbWUgPSAnTm9Vc2VyUG9vbEVycm9yJztcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICByZXR1cm4gTm9Vc2VyUG9vbEVycm9yO1xufShBdXRoRXJyb3IpKTtcbmV4cG9ydCB7IE5vVXNlclBvb2xFcnJvciB9O1xuZXhwb3J0IHZhciBhdXRoRXJyb3JNZXNzYWdlcyA9IHtcbiAgICBub0NvbmZpZzoge1xuICAgICAgICBtZXNzYWdlOiBBdXRoRXJyb3JTdHJpbmdzLkRFRkFVTFRfTVNHLFxuICAgICAgICBsb2c6IFwiXFxuICAgICAgICAgICAgRXJyb3I6IEFtcGxpZnkgaGFzIG5vdCBiZWVuIGNvbmZpZ3VyZWQgY29ycmVjdGx5LlxcbiAgICAgICAgICAgIFRoaXMgZXJyb3IgaXMgdHlwaWNhbGx5IGNhdXNlZCBieSBvbmUgb2YgdGhlIGZvbGxvd2luZyBzY2VuYXJpb3M6XFxuXFxuICAgICAgICAgICAgMS4gTWFrZSBzdXJlIHlvdSdyZSBwYXNzaW5nIHRoZSBhd3Njb25maWcgb2JqZWN0IHRvIEFtcGxpZnkuY29uZmlndXJlKCkgaW4geW91ciBhcHAncyBlbnRyeSBwb2ludFxcbiAgICAgICAgICAgICAgICBTZWUgaHR0cHM6Ly9hd3MtYW1wbGlmeS5naXRodWIuaW8vZG9jcy9qcy9hdXRoZW50aWNhdGlvbiNjb25maWd1cmUteW91ci1hcHAgZm9yIG1vcmUgaW5mb3JtYXRpb25cXG4gICAgICAgICAgICBcXG4gICAgICAgICAgICAyLiBUaGVyZSBtaWdodCBiZSBtdWx0aXBsZSBjb25mbGljdGluZyB2ZXJzaW9ucyBvZiBhbXBsaWZ5IHBhY2thZ2VzIGluIHlvdXIgbm9kZV9tb2R1bGVzLlxcblxcdFxcdFxcdFxcdFJlZmVyIHRvIG91ciBkb2NzIHNpdGUgZm9yIGhlbHAgdXBncmFkaW5nIEFtcGxpZnkgcGFja2FnZXMgKGh0dHBzOi8vZG9jcy5hbXBsaWZ5LmF3cy9saWIvdHJvdWJsZXNob290aW5nL3VwZ3JhZGluZy9xL3BsYXRmb3JtL2pzKVxcbiAgICAgICAgXCIsXG4gICAgfSxcbiAgICBtaXNzaW5nQXV0aENvbmZpZzoge1xuICAgICAgICBtZXNzYWdlOiBBdXRoRXJyb3JTdHJpbmdzLkRFRkFVTFRfTVNHLFxuICAgICAgICBsb2c6IFwiXFxuICAgICAgICAgICAgRXJyb3I6IEFtcGxpZnkgaGFzIG5vdCBiZWVuIGNvbmZpZ3VyZWQgY29ycmVjdGx5LiBcXG4gICAgICAgICAgICBUaGUgY29uZmlndXJhdGlvbiBvYmplY3QgaXMgbWlzc2luZyByZXF1aXJlZCBhdXRoIHByb3BlcnRpZXMuXFxuICAgICAgICAgICAgVGhpcyBlcnJvciBpcyB0eXBpY2FsbHkgY2F1c2VkIGJ5IG9uZSBvZiB0aGUgZm9sbG93aW5nIHNjZW5hcmlvczpcXG5cXG4gICAgICAgICAgICAxLiBEaWQgeW91IHJ1biBgYW1wbGlmeSBwdXNoYCBhZnRlciBhZGRpbmcgYXV0aCB2aWEgYGFtcGxpZnkgYWRkIGF1dGhgP1xcbiAgICAgICAgICAgICAgICBTZWUgaHR0cHM6Ly9hd3MtYW1wbGlmeS5naXRodWIuaW8vZG9jcy9qcy9hdXRoZW50aWNhdGlvbiNhbXBsaWZ5LXByb2plY3Qtc2V0dXAgZm9yIG1vcmUgaW5mb3JtYXRpb25cXG5cXG4gICAgICAgICAgICAyLiBUaGlzIGNvdWxkIGFsc28gYmUgY2F1c2VkIGJ5IG11bHRpcGxlIGNvbmZsaWN0aW5nIHZlcnNpb25zIG9mIGFtcGxpZnkgcGFja2FnZXMsIHNlZSAoaHR0cHM6Ly9kb2NzLmFtcGxpZnkuYXdzL2xpYi90cm91Ymxlc2hvb3RpbmcvdXBncmFkaW5nL3EvcGxhdGZvcm0vanMpIGZvciBoZWxwIHVwZ3JhZGluZyBBbXBsaWZ5IHBhY2thZ2VzLlxcbiAgICAgICAgXCIsXG4gICAgfSxcbiAgICBlbXB0eVVzZXJuYW1lOiB7XG4gICAgICAgIG1lc3NhZ2U6IEF1dGhFcnJvclN0cmluZ3MuRU1QVFlfVVNFUk5BTUUsXG4gICAgfSxcbiAgICAvLyBUT0RPOiBzaG91bGQgaW5jbHVkZSBhIGxpc3Qgb2YgdmFsaWQgc2lnbi1pbiB0eXBlc1xuICAgIGludmFsaWRVc2VybmFtZToge1xuICAgICAgICBtZXNzYWdlOiBBdXRoRXJyb3JTdHJpbmdzLklOVkFMSURfVVNFUk5BTUUsXG4gICAgfSxcbiAgICBlbXB0eVBhc3N3b3JkOiB7XG4gICAgICAgIG1lc3NhZ2U6IEF1dGhFcnJvclN0cmluZ3MuRU1QVFlfUEFTU1dPUkQsXG4gICAgfSxcbiAgICBlbXB0eUNvZGU6IHtcbiAgICAgICAgbWVzc2FnZTogQXV0aEVycm9yU3RyaW5ncy5FTVBUWV9DT0RFLFxuICAgIH0sXG4gICAgc2lnblVwRXJyb3I6IHtcbiAgICAgICAgbWVzc2FnZTogQXV0aEVycm9yU3RyaW5ncy5TSUdOX1VQX0VSUk9SLFxuICAgICAgICBsb2c6ICdUaGUgZmlyc3QgcGFyYW1ldGVyIHNob3VsZCBlaXRoZXIgYmUgbm9uLW51bGwgc3RyaW5nIG9yIG9iamVjdCcsXG4gICAgfSxcbiAgICBub01GQToge1xuICAgICAgICBtZXNzYWdlOiBBdXRoRXJyb3JTdHJpbmdzLk5PX01GQSxcbiAgICB9LFxuICAgIGludmFsaWRNRkE6IHtcbiAgICAgICAgbWVzc2FnZTogQXV0aEVycm9yU3RyaW5ncy5JTlZBTElEX01GQSxcbiAgICB9LFxuICAgIGVtcHR5Q2hhbGxlbmdlUmVzcG9uc2U6IHtcbiAgICAgICAgbWVzc2FnZTogQXV0aEVycm9yU3RyaW5ncy5FTVBUWV9DSEFMTEVOR0UsXG4gICAgfSxcbiAgICBub1VzZXJTZXNzaW9uOiB7XG4gICAgICAgIG1lc3NhZ2U6IEF1dGhFcnJvclN0cmluZ3MuTk9fVVNFUl9TRVNTSU9OLFxuICAgIH0sXG4gICAgZGV2aWNlQ29uZmlnOiB7XG4gICAgICAgIG1lc3NhZ2U6IEF1dGhFcnJvclN0cmluZ3MuREVWSUNFX0NPTkZJRyxcbiAgICB9LFxuICAgIG5ldHdvcmtFcnJvcjoge1xuICAgICAgICBtZXNzYWdlOiBBdXRoRXJyb3JTdHJpbmdzLk5FVFdPUktfRVJST1IsXG4gICAgfSxcbiAgICBhdXRvU2lnbkluRXJyb3I6IHtcbiAgICAgICAgbWVzc2FnZTogQXV0aEVycm9yU3RyaW5ncy5BVVRPU0lHTklOX0VSUk9SLFxuICAgIH0sXG4gICAgZGVmYXVsdDoge1xuICAgICAgICBtZXNzYWdlOiBBdXRoRXJyb3JTdHJpbmdzLkRFRkFVTFRfTVNHLFxuICAgIH0sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RXJyb3JzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-amplify/auth/lib-esm/Errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-amplify/auth/lib-esm/OAuth/OAuth.js":
/*!***************************************************************!*\
  !*** ./node_modules/@aws-amplify/auth/lib-esm/OAuth/OAuth.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(url__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _urlOpener__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./urlOpener */ \"(ssr)/./node_modules/@aws-amplify/auth/lib-esm/OAuth/urlOpener.js\");\n/* harmony import */ var _oauthStorage__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./oauthStorage */ \"(ssr)/./node_modules/@aws-amplify/auth/lib-esm/OAuth/oauthStorage.js\");\n/* harmony import */ var _types_Auth__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../types/Auth */ \"(ssr)/./node_modules/@aws-amplify/auth/lib-esm/types/Auth.js\");\n/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-amplify/core */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/Hub.js\");\n/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-amplify/core */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/Logger/ConsoleLogger.js\");\n/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @aws-amplify/core */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/Util/StringUtils.js\");\n/* harmony import */ var crypto_js_sha256__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! crypto-js/sha256 */ \"(ssr)/./node_modules/crypto-js/sha256.js\");\n/* harmony import */ var crypto_js_sha256__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(crypto_js_sha256__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var crypto_js_enc_base64__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! crypto-js/enc-base64 */ \"(ssr)/./node_modules/crypto-js/enc-base64.js\");\n/* harmony import */ var crypto_js_enc_base64__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(crypto_js_enc_base64__WEBPACK_IMPORTED_MODULE_2__);\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n // Used for OAuth parsing of Cognito Hosted UI\n\n\n\n\n\n\nvar AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined' &&\n    typeof Symbol.for === 'function'\n    ? Symbol.for('amplify_default')\n    : '@@amplify_default');\nvar dispatchAuthEvent = function (event, data, message) {\n    _aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__.Hub.dispatch('auth', { event: event, data: data, message: message }, 'Auth', AMPLIFY_SYMBOL);\n};\nvar logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_4__.ConsoleLogger('OAuth');\nvar OAuth = /** @class */ (function () {\n    function OAuth(_a) {\n        var config = _a.config, cognitoClientId = _a.cognitoClientId, _b = _a.scopes, scopes = _b === void 0 ? [] : _b;\n        this._urlOpener = config.urlOpener || _urlOpener__WEBPACK_IMPORTED_MODULE_5__.launchUri;\n        this._config = config;\n        this._cognitoClientId = cognitoClientId;\n        if (!this.isValidScopes(scopes))\n            throw Error('scopes must be a String Array');\n        this._scopes = scopes;\n    }\n    OAuth.prototype.isValidScopes = function (scopes) {\n        return (Array.isArray(scopes) && scopes.every(function (scope) { return typeof scope === 'string'; }));\n    };\n    OAuth.prototype.oauthSignIn = function (responseType, domain, redirectSignIn, clientId, provider, customState) {\n        if (responseType === void 0) { responseType = 'code'; }\n        if (provider === void 0) { provider = _types_Auth__WEBPACK_IMPORTED_MODULE_6__.CognitoHostedUIIdentityProvider.Cognito; }\n        var generatedState = this._generateState(32);\n        /* encodeURIComponent is not URL safe, use urlSafeEncode instead. Cognito\n        single-encodes/decodes url on first sign in and double-encodes/decodes url\n        when user already signed in. Using encodeURIComponent, Base32, Base64 add\n        characters % or = which on further encoding becomes unsafe. '=' create issue\n        for parsing query params.\n        Refer: https://github.com/aws-amplify/amplify-js/issues/5218 */\n        var state = customState\n            ? generatedState + \"-\" + (0,_aws_amplify_core__WEBPACK_IMPORTED_MODULE_7__.urlSafeEncode)(customState)\n            : generatedState;\n        _oauthStorage__WEBPACK_IMPORTED_MODULE_8__.setState(state);\n        var pkce_key = this._generateRandom(128);\n        _oauthStorage__WEBPACK_IMPORTED_MODULE_8__.setPKCE(pkce_key);\n        var code_challenge = this._generateChallenge(pkce_key);\n        var code_challenge_method = 'S256';\n        var scopesString = this._scopes.join(' ');\n        var queryString = Object.entries(__assign(__assign({ redirect_uri: redirectSignIn, response_type: responseType, client_id: clientId, identity_provider: provider, scope: scopesString, state: state }, (responseType === 'code' ? { code_challenge: code_challenge } : {})), (responseType === 'code' ? { code_challenge_method: code_challenge_method } : {})))\n            .map(function (_a) {\n            var _b = __read(_a, 2), k = _b[0], v = _b[1];\n            return encodeURIComponent(k) + \"=\" + encodeURIComponent(v);\n        })\n            .join('&');\n        var URL = \"https://\" + domain + \"/oauth2/authorize?\" + queryString;\n        logger.debug(\"Redirecting to \" + URL);\n        this._urlOpener(URL, redirectSignIn);\n    };\n    OAuth.prototype._handleCodeFlow = function (currentUrl) {\n        return __awaiter(this, void 0, void 0, function () {\n            var code, currentUrlPathname, redirectSignInPathname, oAuthTokenEndpoint, client_id, redirect_uri, code_verifier, oAuthTokenBody, body, _a, access_token, refresh_token, id_token, error;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        code = ((0,url__WEBPACK_IMPORTED_MODULE_0__.parse)(currentUrl).query || '')\n                            .split('&')\n                            .map(function (pairings) { return pairings.split('='); })\n                            .reduce(function (accum, _a) {\n                            var _b;\n                            var _c = __read(_a, 2), k = _c[0], v = _c[1];\n                            return (__assign(__assign({}, accum), (_b = {}, _b[k] = v, _b)));\n                        }, { code: undefined }).code;\n                        currentUrlPathname = (0,url__WEBPACK_IMPORTED_MODULE_0__.parse)(currentUrl).pathname || '/';\n                        redirectSignInPathname = (0,url__WEBPACK_IMPORTED_MODULE_0__.parse)(this._config.redirectSignIn).pathname || '/';\n                        if (!code || currentUrlPathname !== redirectSignInPathname) {\n                            return [2 /*return*/];\n                        }\n                        oAuthTokenEndpoint = 'https://' + this._config.domain + '/oauth2/token';\n                        dispatchAuthEvent('codeFlow', {}, \"Retrieving tokens from \" + oAuthTokenEndpoint);\n                        client_id = (0,_types_Auth__WEBPACK_IMPORTED_MODULE_6__.isCognitoHostedOpts)(this._config)\n                            ? this._cognitoClientId\n                            : this._config.clientID;\n                        redirect_uri = (0,_types_Auth__WEBPACK_IMPORTED_MODULE_6__.isCognitoHostedOpts)(this._config)\n                            ? this._config.redirectSignIn\n                            : this._config.redirectUri;\n                        code_verifier = _oauthStorage__WEBPACK_IMPORTED_MODULE_8__.getPKCE();\n                        oAuthTokenBody = __assign({ grant_type: 'authorization_code', code: code,\n                            client_id: client_id,\n                            redirect_uri: redirect_uri }, (code_verifier ? { code_verifier: code_verifier } : {}));\n                        logger.debug(\"Calling token endpoint: \" + oAuthTokenEndpoint + \" with\", oAuthTokenBody);\n                        body = Object.entries(oAuthTokenBody)\n                            .map(function (_a) {\n                            var _b = __read(_a, 2), k = _b[0], v = _b[1];\n                            return encodeURIComponent(k) + \"=\" + encodeURIComponent(v);\n                        })\n                            .join('&');\n                        return [4 /*yield*/, fetch(oAuthTokenEndpoint, {\n                                method: 'POST',\n                                headers: {\n                                    'Content-Type': 'application/x-www-form-urlencoded',\n                                },\n                                body: body,\n                            })];\n                    case 1: return [4 /*yield*/, (_b.sent()).json()];\n                    case 2:\n                        _a = _b.sent(), access_token = _a.access_token, refresh_token = _a.refresh_token, id_token = _a.id_token, error = _a.error;\n                        if (error) {\n                            throw new Error(error);\n                        }\n                        return [2 /*return*/, {\n                                accessToken: access_token,\n                                refreshToken: refresh_token,\n                                idToken: id_token,\n                            }];\n                }\n            });\n        });\n    };\n    OAuth.prototype._handleImplicitFlow = function (currentUrl) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, id_token, access_token;\n            return __generator(this, function (_b) {\n                _a = ((0,url__WEBPACK_IMPORTED_MODULE_0__.parse)(currentUrl).hash || '#')\n                    .substr(1) // Remove # from returned code\n                    .split('&')\n                    .map(function (pairings) { return pairings.split('='); })\n                    .reduce(function (accum, _a) {\n                    var _b;\n                    var _c = __read(_a, 2), k = _c[0], v = _c[1];\n                    return (__assign(__assign({}, accum), (_b = {}, _b[k] = v, _b)));\n                }, {\n                    id_token: undefined,\n                    access_token: undefined,\n                }), id_token = _a.id_token, access_token = _a.access_token;\n                dispatchAuthEvent('implicitFlow', {}, \"Got tokens from \" + currentUrl);\n                logger.debug(\"Retrieving implicit tokens from \" + currentUrl + \" with\");\n                return [2 /*return*/, {\n                        accessToken: access_token,\n                        idToken: id_token,\n                        refreshToken: null,\n                    }];\n            });\n        });\n    };\n    OAuth.prototype.handleAuthResponse = function (currentUrl) {\n        return __awaiter(this, void 0, void 0, function () {\n            var urlParams, error, error_description, state, _a, _b, e_1;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _c.trys.push([0, 5, , 6]);\n                        urlParams = currentUrl\n                            ? __assign(__assign({}, ((0,url__WEBPACK_IMPORTED_MODULE_0__.parse)(currentUrl).hash || '#')\n                                .substr(1)\n                                .split('&')\n                                .map(function (entry) { return entry.split('='); })\n                                .reduce(function (acc, _a) {\n                                var _b = __read(_a, 2), k = _b[0], v = _b[1];\n                                return ((acc[k] = v), acc);\n                            }, {})), ((0,url__WEBPACK_IMPORTED_MODULE_0__.parse)(currentUrl).query || '')\n                                .split('&')\n                                .map(function (entry) { return entry.split('='); })\n                                .reduce(function (acc, _a) {\n                                var _b = __read(_a, 2), k = _b[0], v = _b[1];\n                                return ((acc[k] = v), acc);\n                            }, {}))\n                            : {};\n                        error = urlParams.error, error_description = urlParams.error_description;\n                        if (error) {\n                            throw new Error(error_description);\n                        }\n                        state = this._validateState(urlParams);\n                        logger.debug(\"Starting \" + this._config.responseType + \" flow with \" + currentUrl);\n                        if (!(this._config.responseType === 'code')) return [3 /*break*/, 2];\n                        _a = [{}];\n                        return [4 /*yield*/, this._handleCodeFlow(currentUrl)];\n                    case 1: return [2 /*return*/, __assign.apply(void 0, [__assign.apply(void 0, _a.concat([(_c.sent())])), { state: state }])];\n                    case 2:\n                        _b = [{}];\n                        return [4 /*yield*/, this._handleImplicitFlow(currentUrl)];\n                    case 3: return [2 /*return*/, __assign.apply(void 0, [__assign.apply(void 0, _b.concat([(_c.sent())])), { state: state }])];\n                    case 4: return [3 /*break*/, 6];\n                    case 5:\n                        e_1 = _c.sent();\n                        logger.error(\"Error handling auth response.\", e_1);\n                        throw e_1;\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    OAuth.prototype._validateState = function (urlParams) {\n        if (!urlParams) {\n            return;\n        }\n        var savedState = _oauthStorage__WEBPACK_IMPORTED_MODULE_8__.getState();\n        var returnedState = urlParams.state;\n        // This is because savedState only exists if the flow was initiated by Amplify\n        if (savedState && savedState !== returnedState) {\n            throw new Error('Invalid state in OAuth flow');\n        }\n        return returnedState;\n    };\n    OAuth.prototype.signOut = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var oAuthLogoutEndpoint, client_id, signout_uri;\n            return __generator(this, function (_a) {\n                oAuthLogoutEndpoint = 'https://' + this._config.domain + '/logout?';\n                client_id = (0,_types_Auth__WEBPACK_IMPORTED_MODULE_6__.isCognitoHostedOpts)(this._config)\n                    ? this._cognitoClientId\n                    : this._config.oauth.clientID;\n                signout_uri = (0,_types_Auth__WEBPACK_IMPORTED_MODULE_6__.isCognitoHostedOpts)(this._config)\n                    ? this._config.redirectSignOut\n                    : this._config.returnTo;\n                oAuthLogoutEndpoint += Object.entries({\n                    client_id: client_id,\n                    logout_uri: encodeURIComponent(signout_uri),\n                })\n                    .map(function (_a) {\n                    var _b = __read(_a, 2), k = _b[0], v = _b[1];\n                    return k + \"=\" + v;\n                })\n                    .join('&');\n                dispatchAuthEvent('oAuthSignOut', { oAuth: 'signOut' }, \"Signing out from \" + oAuthLogoutEndpoint);\n                logger.debug(\"Signing out from \" + oAuthLogoutEndpoint);\n                return [2 /*return*/, this._urlOpener(oAuthLogoutEndpoint, signout_uri)];\n            });\n        });\n    };\n    OAuth.prototype._generateState = function (length) {\n        var result = '';\n        var i = length;\n        var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        for (; i > 0; --i)\n            result += chars[Math.round(Math.random() * (chars.length - 1))];\n        return result;\n    };\n    OAuth.prototype._generateChallenge = function (code) {\n        return this._base64URL(crypto_js_sha256__WEBPACK_IMPORTED_MODULE_1___default()(code));\n    };\n    OAuth.prototype._base64URL = function (string) {\n        return string\n            .toString((crypto_js_enc_base64__WEBPACK_IMPORTED_MODULE_2___default()))\n            .replace(/=/g, '')\n            .replace(/\\+/g, '-')\n            .replace(/\\//g, '_');\n    };\n    OAuth.prototype._generateRandom = function (size) {\n        var CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n        var buffer = new Uint8Array(size);\n        if (typeof window !== 'undefined' && !!window.crypto) {\n            window.crypto.getRandomValues(buffer);\n        }\n        else {\n            for (var i = 0; i < size; i += 1) {\n                buffer[i] = (Math.random() * CHARSET.length) | 0;\n            }\n        }\n        return this._bufferToString(buffer);\n    };\n    OAuth.prototype._bufferToString = function (buffer) {\n        var CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var state = [];\n        for (var i = 0; i < buffer.byteLength; i += 1) {\n            var index = buffer[i] % CHARSET.length;\n            state.push(CHARSET[index]);\n        }\n        return state.join('');\n    };\n    return OAuth;\n}());\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (OAuth);\n//# sourceMappingURL=OAuth.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-amplify/auth/lib-esm/OAuth/OAuth.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-amplify/auth/lib-esm/OAuth/oauthStorage.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@aws-amplify/auth/lib-esm/OAuth/oauthStorage.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearAll: () => (/* binding */ clearAll),\n/* harmony export */   getPKCE: () => (/* binding */ getPKCE),\n/* harmony export */   getState: () => (/* binding */ getState),\n/* harmony export */   setPKCE: () => (/* binding */ setPKCE),\n/* harmony export */   setState: () => (/* binding */ setState)\n/* harmony export */ });\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar setState = function (state) {\n    window.sessionStorage.setItem('oauth_state', state);\n};\nvar getState = function () {\n    var oauth_state = window.sessionStorage.getItem('oauth_state');\n    window.sessionStorage.removeItem('oauth_state');\n    return oauth_state;\n};\nvar setPKCE = function (private_key) {\n    window.sessionStorage.setItem('ouath_pkce_key', private_key);\n};\nvar getPKCE = function () {\n    var ouath_pkce_key = window.sessionStorage.getItem('ouath_pkce_key');\n    window.sessionStorage.removeItem('ouath_pkce_key');\n    return ouath_pkce_key;\n};\nvar clearAll = function () {\n    window.sessionStorage.removeItem('ouath_pkce_key');\n    window.sessionStorage.removeItem('oauth_state');\n};\n//# sourceMappingURL=oauthStorage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1hbXBsaWZ5L2F1dGgvbGliLWVzbS9PQXV0aC9vYXV0aFN0b3JhZ2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3MtYW1wbGlmeS9hdXRoL2xpYi1lc20vT0F1dGgvb2F1dGhTdG9yYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgMjAxNy0yMDE3IEFtYXpvbi5jb20sIEluYy4gb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKS4gWW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoXG4gKiB0aGUgTGljZW5zZS4gQSBjb3B5IG9mIHRoZSBMaWNlbnNlIGlzIGxvY2F0ZWQgYXRcbiAqXG4gKiAgICAgaHR0cDovL2F3cy5hbWF6b24uY29tL2FwYWNoZTIuMC9cbiAqXG4gKiBvciBpbiB0aGUgXCJsaWNlbnNlXCIgZmlsZSBhY2NvbXBhbnlpbmcgdGhpcyBmaWxlLiBUaGlzIGZpbGUgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1JcbiAqIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9uc1xuICogYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5leHBvcnQgdmFyIHNldFN0YXRlID0gZnVuY3Rpb24gKHN0YXRlKSB7XG4gICAgd2luZG93LnNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ29hdXRoX3N0YXRlJywgc3RhdGUpO1xufTtcbmV4cG9ydCB2YXIgZ2V0U3RhdGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIG9hdXRoX3N0YXRlID0gd2luZG93LnNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ29hdXRoX3N0YXRlJyk7XG4gICAgd2luZG93LnNlc3Npb25TdG9yYWdlLnJlbW92ZUl0ZW0oJ29hdXRoX3N0YXRlJyk7XG4gICAgcmV0dXJuIG9hdXRoX3N0YXRlO1xufTtcbmV4cG9ydCB2YXIgc2V0UEtDRSA9IGZ1bmN0aW9uIChwcml2YXRlX2tleSkge1xuICAgIHdpbmRvdy5zZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCdvdWF0aF9wa2NlX2tleScsIHByaXZhdGVfa2V5KTtcbn07XG5leHBvcnQgdmFyIGdldFBLQ0UgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIG91YXRoX3BrY2Vfa2V5ID0gd2luZG93LnNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ291YXRoX3BrY2Vfa2V5Jyk7XG4gICAgd2luZG93LnNlc3Npb25TdG9yYWdlLnJlbW92ZUl0ZW0oJ291YXRoX3BrY2Vfa2V5Jyk7XG4gICAgcmV0dXJuIG91YXRoX3BrY2Vfa2V5O1xufTtcbmV4cG9ydCB2YXIgY2xlYXJBbGwgPSBmdW5jdGlvbiAoKSB7XG4gICAgd2luZG93LnNlc3Npb25TdG9yYWdlLnJlbW92ZUl0ZW0oJ291YXRoX3BrY2Vfa2V5Jyk7XG4gICAgd2luZG93LnNlc3Npb25TdG9yYWdlLnJlbW92ZUl0ZW0oJ29hdXRoX3N0YXRlJyk7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b2F1dGhTdG9yYWdlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-amplify/auth/lib-esm/OAuth/oauthStorage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-amplify/auth/lib-esm/OAuth/urlOpener.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@aws-amplify/auth/lib-esm/OAuth/urlOpener.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   launchUri: () => (/* binding */ launchUri)\n/* harmony export */ });\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar SELF = '_self';\nvar launchUri = function (url) {\n    var windowProxy = window.open(url, SELF);\n    if (windowProxy) {\n        return Promise.resolve(windowProxy);\n    }\n    else {\n        return Promise.reject();\n    }\n};\n//# sourceMappingURL=urlOpener.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1hbXBsaWZ5L2F1dGgvbGliLWVzbS9PQXV0aC91cmxPcGVuZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3MtYW1wbGlmeS9hdXRoL2xpYi1lc20vT0F1dGgvdXJsT3BlbmVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgMjAxNy0yMDE3IEFtYXpvbi5jb20sIEluYy4gb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKS4gWW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoXG4gKiB0aGUgTGljZW5zZS4gQSBjb3B5IG9mIHRoZSBMaWNlbnNlIGlzIGxvY2F0ZWQgYXRcbiAqXG4gKiAgICAgaHR0cDovL2F3cy5hbWF6b24uY29tL2FwYWNoZTIuMC9cbiAqXG4gKiBvciBpbiB0aGUgXCJsaWNlbnNlXCIgZmlsZSBhY2NvbXBhbnlpbmcgdGhpcyBmaWxlLiBUaGlzIGZpbGUgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1JcbiAqIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9uc1xuICogYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgU0VMRiA9ICdfc2VsZic7XG5leHBvcnQgdmFyIGxhdW5jaFVyaSA9IGZ1bmN0aW9uICh1cmwpIHtcbiAgICB2YXIgd2luZG93UHJveHkgPSB3aW5kb3cub3Blbih1cmwsIFNFTEYpO1xuICAgIGlmICh3aW5kb3dQcm94eSkge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHdpbmRvd1Byb3h5KTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgpO1xuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cmxPcGVuZXIuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-amplify/auth/lib-esm/OAuth/urlOpener.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-amplify/auth/lib-esm/common/AuthErrorStrings.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@aws-amplify/auth/lib-esm/common/AuthErrorStrings.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthErrorStrings: () => (/* binding */ AuthErrorStrings)\n/* harmony export */ });\nvar AuthErrorStrings;\n(function (AuthErrorStrings) {\n    AuthErrorStrings[\"DEFAULT_MSG\"] = \"Authentication Error\";\n    AuthErrorStrings[\"EMPTY_EMAIL\"] = \"Email cannot be empty\";\n    AuthErrorStrings[\"EMPTY_PHONE\"] = \"Phone number cannot be empty\";\n    AuthErrorStrings[\"EMPTY_USERNAME\"] = \"Username cannot be empty\";\n    AuthErrorStrings[\"INVALID_USERNAME\"] = \"The username should either be a string or one of the sign in types\";\n    AuthErrorStrings[\"EMPTY_PASSWORD\"] = \"Password cannot be empty\";\n    AuthErrorStrings[\"EMPTY_CODE\"] = \"Confirmation code cannot be empty\";\n    AuthErrorStrings[\"SIGN_UP_ERROR\"] = \"Error creating account\";\n    AuthErrorStrings[\"NO_MFA\"] = \"No valid MFA method provided\";\n    AuthErrorStrings[\"INVALID_MFA\"] = \"Invalid MFA type\";\n    AuthErrorStrings[\"EMPTY_CHALLENGE\"] = \"Challenge response cannot be empty\";\n    AuthErrorStrings[\"NO_USER_SESSION\"] = \"Failed to get the session because the user is empty\";\n    AuthErrorStrings[\"NETWORK_ERROR\"] = \"Network Error\";\n    AuthErrorStrings[\"DEVICE_CONFIG\"] = \"Device tracking has not been configured in this User Pool\";\n    AuthErrorStrings[\"AUTOSIGNIN_ERROR\"] = \"Please use your credentials to sign in\";\n})(AuthErrorStrings || (AuthErrorStrings = {}));\n//# sourceMappingURL=AuthErrorStrings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1hbXBsaWZ5L2F1dGgvbGliLWVzbS9jb21tb24vQXV0aEVycm9yU3RyaW5ncy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNENBQTRDO0FBQzdDIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLWFtcGxpZnkvYXV0aC9saWItZXNtL2NvbW1vbi9BdXRoRXJyb3JTdHJpbmdzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgQXV0aEVycm9yU3RyaW5ncztcbihmdW5jdGlvbiAoQXV0aEVycm9yU3RyaW5ncykge1xuICAgIEF1dGhFcnJvclN0cmluZ3NbXCJERUZBVUxUX01TR1wiXSA9IFwiQXV0aGVudGljYXRpb24gRXJyb3JcIjtcbiAgICBBdXRoRXJyb3JTdHJpbmdzW1wiRU1QVFlfRU1BSUxcIl0gPSBcIkVtYWlsIGNhbm5vdCBiZSBlbXB0eVwiO1xuICAgIEF1dGhFcnJvclN0cmluZ3NbXCJFTVBUWV9QSE9ORVwiXSA9IFwiUGhvbmUgbnVtYmVyIGNhbm5vdCBiZSBlbXB0eVwiO1xuICAgIEF1dGhFcnJvclN0cmluZ3NbXCJFTVBUWV9VU0VSTkFNRVwiXSA9IFwiVXNlcm5hbWUgY2Fubm90IGJlIGVtcHR5XCI7XG4gICAgQXV0aEVycm9yU3RyaW5nc1tcIklOVkFMSURfVVNFUk5BTUVcIl0gPSBcIlRoZSB1c2VybmFtZSBzaG91bGQgZWl0aGVyIGJlIGEgc3RyaW5nIG9yIG9uZSBvZiB0aGUgc2lnbiBpbiB0eXBlc1wiO1xuICAgIEF1dGhFcnJvclN0cmluZ3NbXCJFTVBUWV9QQVNTV09SRFwiXSA9IFwiUGFzc3dvcmQgY2Fubm90IGJlIGVtcHR5XCI7XG4gICAgQXV0aEVycm9yU3RyaW5nc1tcIkVNUFRZX0NPREVcIl0gPSBcIkNvbmZpcm1hdGlvbiBjb2RlIGNhbm5vdCBiZSBlbXB0eVwiO1xuICAgIEF1dGhFcnJvclN0cmluZ3NbXCJTSUdOX1VQX0VSUk9SXCJdID0gXCJFcnJvciBjcmVhdGluZyBhY2NvdW50XCI7XG4gICAgQXV0aEVycm9yU3RyaW5nc1tcIk5PX01GQVwiXSA9IFwiTm8gdmFsaWQgTUZBIG1ldGhvZCBwcm92aWRlZFwiO1xuICAgIEF1dGhFcnJvclN0cmluZ3NbXCJJTlZBTElEX01GQVwiXSA9IFwiSW52YWxpZCBNRkEgdHlwZVwiO1xuICAgIEF1dGhFcnJvclN0cmluZ3NbXCJFTVBUWV9DSEFMTEVOR0VcIl0gPSBcIkNoYWxsZW5nZSByZXNwb25zZSBjYW5ub3QgYmUgZW1wdHlcIjtcbiAgICBBdXRoRXJyb3JTdHJpbmdzW1wiTk9fVVNFUl9TRVNTSU9OXCJdID0gXCJGYWlsZWQgdG8gZ2V0IHRoZSBzZXNzaW9uIGJlY2F1c2UgdGhlIHVzZXIgaXMgZW1wdHlcIjtcbiAgICBBdXRoRXJyb3JTdHJpbmdzW1wiTkVUV09SS19FUlJPUlwiXSA9IFwiTmV0d29yayBFcnJvclwiO1xuICAgIEF1dGhFcnJvclN0cmluZ3NbXCJERVZJQ0VfQ09ORklHXCJdID0gXCJEZXZpY2UgdHJhY2tpbmcgaGFzIG5vdCBiZWVuIGNvbmZpZ3VyZWQgaW4gdGhpcyBVc2VyIFBvb2xcIjtcbiAgICBBdXRoRXJyb3JTdHJpbmdzW1wiQVVUT1NJR05JTl9FUlJPUlwiXSA9IFwiUGxlYXNlIHVzZSB5b3VyIGNyZWRlbnRpYWxzIHRvIHNpZ24gaW5cIjtcbn0pKEF1dGhFcnJvclN0cmluZ3MgfHwgKEF1dGhFcnJvclN0cmluZ3MgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXV0aEVycm9yU3RyaW5ncy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-amplify/auth/lib-esm/common/AuthErrorStrings.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-amplify/auth/lib-esm/types/Auth.js":
/*!**************************************************************!*\
  !*** ./node_modules/@aws-amplify/auth/lib-esm/types/Auth.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthErrorTypes: () => (/* binding */ AuthErrorTypes),\n/* harmony export */   CognitoHostedUIIdentityProvider: () => (/* binding */ CognitoHostedUIIdentityProvider),\n/* harmony export */   GRAPHQL_AUTH_MODE: () => (/* binding */ GRAPHQL_AUTH_MODE),\n/* harmony export */   hasCustomState: () => (/* binding */ hasCustomState),\n/* harmony export */   isCognitoHostedOpts: () => (/* binding */ isCognitoHostedOpts),\n/* harmony export */   isFederatedSignInOptions: () => (/* binding */ isFederatedSignInOptions),\n/* harmony export */   isFederatedSignInOptionsCustom: () => (/* binding */ isFederatedSignInOptionsCustom),\n/* harmony export */   isUsernamePasswordOpts: () => (/* binding */ isUsernamePasswordOpts)\n/* harmony export */ });\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar CognitoHostedUIIdentityProvider;\n(function (CognitoHostedUIIdentityProvider) {\n    CognitoHostedUIIdentityProvider[\"Cognito\"] = \"COGNITO\";\n    CognitoHostedUIIdentityProvider[\"Google\"] = \"Google\";\n    CognitoHostedUIIdentityProvider[\"Facebook\"] = \"Facebook\";\n    CognitoHostedUIIdentityProvider[\"Amazon\"] = \"LoginWithAmazon\";\n    CognitoHostedUIIdentityProvider[\"Apple\"] = \"SignInWithApple\";\n})(CognitoHostedUIIdentityProvider || (CognitoHostedUIIdentityProvider = {}));\nfunction isFederatedSignInOptions(obj) {\n    var keys = ['provider'];\n    return obj && !!keys.find(function (k) { return obj.hasOwnProperty(k); });\n}\nfunction isFederatedSignInOptionsCustom(obj) {\n    var keys = ['customProvider'];\n    return obj && !!keys.find(function (k) { return obj.hasOwnProperty(k); });\n}\nfunction hasCustomState(obj) {\n    var keys = ['customState'];\n    return obj && !!keys.find(function (k) { return obj.hasOwnProperty(k); });\n}\nfunction isCognitoHostedOpts(oauth) {\n    return oauth.redirectSignIn !== undefined;\n}\nvar AuthErrorTypes;\n(function (AuthErrorTypes) {\n    AuthErrorTypes[\"NoConfig\"] = \"noConfig\";\n    AuthErrorTypes[\"MissingAuthConfig\"] = \"missingAuthConfig\";\n    AuthErrorTypes[\"EmptyUsername\"] = \"emptyUsername\";\n    AuthErrorTypes[\"InvalidUsername\"] = \"invalidUsername\";\n    AuthErrorTypes[\"EmptyPassword\"] = \"emptyPassword\";\n    AuthErrorTypes[\"EmptyCode\"] = \"emptyCode\";\n    AuthErrorTypes[\"SignUpError\"] = \"signUpError\";\n    AuthErrorTypes[\"NoMFA\"] = \"noMFA\";\n    AuthErrorTypes[\"InvalidMFA\"] = \"invalidMFA\";\n    AuthErrorTypes[\"EmptyChallengeResponse\"] = \"emptyChallengeResponse\";\n    AuthErrorTypes[\"NoUserSession\"] = \"noUserSession\";\n    AuthErrorTypes[\"Default\"] = \"default\";\n    AuthErrorTypes[\"DeviceConfig\"] = \"deviceConfig\";\n    AuthErrorTypes[\"NetworkError\"] = \"networkError\";\n    AuthErrorTypes[\"AutoSignInError\"] = \"autoSignInError\";\n})(AuthErrorTypes || (AuthErrorTypes = {}));\nfunction isUsernamePasswordOpts(obj) {\n    return !!obj.username;\n}\nvar GRAPHQL_AUTH_MODE;\n(function (GRAPHQL_AUTH_MODE) {\n    GRAPHQL_AUTH_MODE[\"API_KEY\"] = \"API_KEY\";\n    GRAPHQL_AUTH_MODE[\"AWS_IAM\"] = \"AWS_IAM\";\n    GRAPHQL_AUTH_MODE[\"OPENID_CONNECT\"] = \"OPENID_CONNECT\";\n    GRAPHQL_AUTH_MODE[\"AMAZON_COGNITO_USER_POOLS\"] = \"AMAZON_COGNITO_USER_POOLS\";\n    GRAPHQL_AUTH_MODE[\"AWS_LAMBDA\"] = \"AWS_LAMBDA\";\n})(GRAPHQL_AUTH_MODE || (GRAPHQL_AUTH_MODE = {}));\n//# sourceMappingURL=Auth.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1hbXBsaWZ5L2F1dGgvbGliLWVzbS90eXBlcy9BdXRoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDBFQUEwRTtBQUNwRTtBQUNQO0FBQ0EsNkNBQTZDLCtCQUErQjtBQUM1RTtBQUNPO0FBQ1A7QUFDQSw2Q0FBNkMsK0JBQStCO0FBQzVFO0FBQ087QUFDUDtBQUNBLDZDQUE2QywrQkFBK0I7QUFDNUU7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx3Q0FBd0M7QUFDbEM7QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhDQUE4QztBQUMvQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1hbXBsaWZ5L2F1dGgvbGliLWVzbS90eXBlcy9BdXRoLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgMjAxNy0yMDE3IEFtYXpvbi5jb20sIEluYy4gb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKS4gWW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoXG4gKiB0aGUgTGljZW5zZS4gQSBjb3B5IG9mIHRoZSBMaWNlbnNlIGlzIGxvY2F0ZWQgYXRcbiAqXG4gKiAgICAgaHR0cDovL2F3cy5hbWF6b24uY29tL2FwYWNoZTIuMC9cbiAqXG4gKiBvciBpbiB0aGUgXCJsaWNlbnNlXCIgZmlsZSBhY2NvbXBhbnlpbmcgdGhpcyBmaWxlLiBUaGlzIGZpbGUgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1JcbiAqIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9uc1xuICogYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5leHBvcnQgdmFyIENvZ25pdG9Ib3N0ZWRVSUlkZW50aXR5UHJvdmlkZXI7XG4oZnVuY3Rpb24gKENvZ25pdG9Ib3N0ZWRVSUlkZW50aXR5UHJvdmlkZXIpIHtcbiAgICBDb2duaXRvSG9zdGVkVUlJZGVudGl0eVByb3ZpZGVyW1wiQ29nbml0b1wiXSA9IFwiQ09HTklUT1wiO1xuICAgIENvZ25pdG9Ib3N0ZWRVSUlkZW50aXR5UHJvdmlkZXJbXCJHb29nbGVcIl0gPSBcIkdvb2dsZVwiO1xuICAgIENvZ25pdG9Ib3N0ZWRVSUlkZW50aXR5UHJvdmlkZXJbXCJGYWNlYm9va1wiXSA9IFwiRmFjZWJvb2tcIjtcbiAgICBDb2duaXRvSG9zdGVkVUlJZGVudGl0eVByb3ZpZGVyW1wiQW1hem9uXCJdID0gXCJMb2dpbldpdGhBbWF6b25cIjtcbiAgICBDb2duaXRvSG9zdGVkVUlJZGVudGl0eVByb3ZpZGVyW1wiQXBwbGVcIl0gPSBcIlNpZ25JbldpdGhBcHBsZVwiO1xufSkoQ29nbml0b0hvc3RlZFVJSWRlbnRpdHlQcm92aWRlciB8fCAoQ29nbml0b0hvc3RlZFVJSWRlbnRpdHlQcm92aWRlciA9IHt9KSk7XG5leHBvcnQgZnVuY3Rpb24gaXNGZWRlcmF0ZWRTaWduSW5PcHRpb25zKG9iaikge1xuICAgIHZhciBrZXlzID0gWydwcm92aWRlciddO1xuICAgIHJldHVybiBvYmogJiYgISFrZXlzLmZpbmQoZnVuY3Rpb24gKGspIHsgcmV0dXJuIG9iai5oYXNPd25Qcm9wZXJ0eShrKTsgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNGZWRlcmF0ZWRTaWduSW5PcHRpb25zQ3VzdG9tKG9iaikge1xuICAgIHZhciBrZXlzID0gWydjdXN0b21Qcm92aWRlciddO1xuICAgIHJldHVybiBvYmogJiYgISFrZXlzLmZpbmQoZnVuY3Rpb24gKGspIHsgcmV0dXJuIG9iai5oYXNPd25Qcm9wZXJ0eShrKTsgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaGFzQ3VzdG9tU3RhdGUob2JqKSB7XG4gICAgdmFyIGtleXMgPSBbJ2N1c3RvbVN0YXRlJ107XG4gICAgcmV0dXJuIG9iaiAmJiAhIWtleXMuZmluZChmdW5jdGlvbiAoaykgeyByZXR1cm4gb2JqLmhhc093blByb3BlcnR5KGspOyB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0NvZ25pdG9Ib3N0ZWRPcHRzKG9hdXRoKSB7XG4gICAgcmV0dXJuIG9hdXRoLnJlZGlyZWN0U2lnbkluICE9PSB1bmRlZmluZWQ7XG59XG5leHBvcnQgdmFyIEF1dGhFcnJvclR5cGVzO1xuKGZ1bmN0aW9uIChBdXRoRXJyb3JUeXBlcykge1xuICAgIEF1dGhFcnJvclR5cGVzW1wiTm9Db25maWdcIl0gPSBcIm5vQ29uZmlnXCI7XG4gICAgQXV0aEVycm9yVHlwZXNbXCJNaXNzaW5nQXV0aENvbmZpZ1wiXSA9IFwibWlzc2luZ0F1dGhDb25maWdcIjtcbiAgICBBdXRoRXJyb3JUeXBlc1tcIkVtcHR5VXNlcm5hbWVcIl0gPSBcImVtcHR5VXNlcm5hbWVcIjtcbiAgICBBdXRoRXJyb3JUeXBlc1tcIkludmFsaWRVc2VybmFtZVwiXSA9IFwiaW52YWxpZFVzZXJuYW1lXCI7XG4gICAgQXV0aEVycm9yVHlwZXNbXCJFbXB0eVBhc3N3b3JkXCJdID0gXCJlbXB0eVBhc3N3b3JkXCI7XG4gICAgQXV0aEVycm9yVHlwZXNbXCJFbXB0eUNvZGVcIl0gPSBcImVtcHR5Q29kZVwiO1xuICAgIEF1dGhFcnJvclR5cGVzW1wiU2lnblVwRXJyb3JcIl0gPSBcInNpZ25VcEVycm9yXCI7XG4gICAgQXV0aEVycm9yVHlwZXNbXCJOb01GQVwiXSA9IFwibm9NRkFcIjtcbiAgICBBdXRoRXJyb3JUeXBlc1tcIkludmFsaWRNRkFcIl0gPSBcImludmFsaWRNRkFcIjtcbiAgICBBdXRoRXJyb3JUeXBlc1tcIkVtcHR5Q2hhbGxlbmdlUmVzcG9uc2VcIl0gPSBcImVtcHR5Q2hhbGxlbmdlUmVzcG9uc2VcIjtcbiAgICBBdXRoRXJyb3JUeXBlc1tcIk5vVXNlclNlc3Npb25cIl0gPSBcIm5vVXNlclNlc3Npb25cIjtcbiAgICBBdXRoRXJyb3JUeXBlc1tcIkRlZmF1bHRcIl0gPSBcImRlZmF1bHRcIjtcbiAgICBBdXRoRXJyb3JUeXBlc1tcIkRldmljZUNvbmZpZ1wiXSA9IFwiZGV2aWNlQ29uZmlnXCI7XG4gICAgQXV0aEVycm9yVHlwZXNbXCJOZXR3b3JrRXJyb3JcIl0gPSBcIm5ldHdvcmtFcnJvclwiO1xuICAgIEF1dGhFcnJvclR5cGVzW1wiQXV0b1NpZ25JbkVycm9yXCJdID0gXCJhdXRvU2lnbkluRXJyb3JcIjtcbn0pKEF1dGhFcnJvclR5cGVzIHx8IChBdXRoRXJyb3JUeXBlcyA9IHt9KSk7XG5leHBvcnQgZnVuY3Rpb24gaXNVc2VybmFtZVBhc3N3b3JkT3B0cyhvYmopIHtcbiAgICByZXR1cm4gISFvYmoudXNlcm5hbWU7XG59XG5leHBvcnQgdmFyIEdSQVBIUUxfQVVUSF9NT0RFO1xuKGZ1bmN0aW9uIChHUkFQSFFMX0FVVEhfTU9ERSkge1xuICAgIEdSQVBIUUxfQVVUSF9NT0RFW1wiQVBJX0tFWVwiXSA9IFwiQVBJX0tFWVwiO1xuICAgIEdSQVBIUUxfQVVUSF9NT0RFW1wiQVdTX0lBTVwiXSA9IFwiQVdTX0lBTVwiO1xuICAgIEdSQVBIUUxfQVVUSF9NT0RFW1wiT1BFTklEX0NPTk5FQ1RcIl0gPSBcIk9QRU5JRF9DT05ORUNUXCI7XG4gICAgR1JBUEhRTF9BVVRIX01PREVbXCJBTUFaT05fQ09HTklUT19VU0VSX1BPT0xTXCJdID0gXCJBTUFaT05fQ09HTklUT19VU0VSX1BPT0xTXCI7XG4gICAgR1JBUEhRTF9BVVRIX01PREVbXCJBV1NfTEFNQkRBXCJdID0gXCJBV1NfTEFNQkRBXCI7XG59KShHUkFQSFFMX0FVVEhfTU9ERSB8fCAoR1JBUEhRTF9BVVRIX01PREUgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXV0aC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-amplify/auth/lib-esm/types/Auth.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-amplify/auth/lib-esm/urlListener.js":
/*!***************************************************************!*\
  !*** ./node_modules/@aws-amplify/auth/lib-esm/urlListener.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-amplify/core */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/JS.js\");\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (function (callback) {\n    if ((0,_aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__.browserOrNode)().isBrowser && window.location) {\n        var url = window.location.href;\n        callback({ url: url });\n    }\n    else if ((0,_aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__.browserOrNode)().isNode) {\n        // continue building on ssr\n        (function () { }); // noop\n    }\n    else {\n        throw new Error('Not supported');\n    }\n});\n//# sourceMappingURL=urlListener.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1hbXBsaWZ5L2F1dGgvbGliLWVzbS91cmxMaXN0ZW5lci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNrRDtBQUNsRCxpRUFBZ0I7QUFDaEIsUUFBUSxnRUFBYTtBQUNyQjtBQUNBLG1CQUFtQixVQUFVO0FBQzdCO0FBQ0EsYUFBYSxnRUFBYTtBQUMxQjtBQUNBLHdCQUF3QixHQUFHO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFFO0FBQ0giLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3MtYW1wbGlmeS9hdXRoL2xpYi1lc20vdXJsTGlzdGVuZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAyMDE3LTIwMTkgQW1hem9uLmNvbSwgSW5jLiBvciBpdHMgYWZmaWxpYXRlcy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpLiBZb3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGhcbiAqIHRoZSBMaWNlbnNlLiBBIGNvcHkgb2YgdGhlIExpY2Vuc2UgaXMgbG9jYXRlZCBhdFxuICpcbiAqICAgICBodHRwOi8vYXdzLmFtYXpvbi5jb20vYXBhY2hlMi4wL1xuICpcbiAqIG9yIGluIHRoZSBcImxpY2Vuc2VcIiBmaWxlIGFjY29tcGFueWluZyB0aGlzIGZpbGUuIFRoaXMgZmlsZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUlxuICogQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zXG4gKiBhbmQgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCB7IGJyb3dzZXJPck5vZGUgfSBmcm9tICdAYXdzLWFtcGxpZnkvY29yZSc7XG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgaWYgKGJyb3dzZXJPck5vZGUoKS5pc0Jyb3dzZXIgJiYgd2luZG93LmxvY2F0aW9uKSB7XG4gICAgICAgIHZhciB1cmwgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgICAgICAgY2FsbGJhY2soeyB1cmw6IHVybCB9KTtcbiAgICB9XG4gICAgZWxzZSBpZiAoYnJvd3Nlck9yTm9kZSgpLmlzTm9kZSkge1xuICAgICAgICAvLyBjb250aW51ZSBidWlsZGluZyBvbiBzc3JcbiAgICAgICAgKGZ1bmN0aW9uICgpIHsgfSk7IC8vIG5vb3BcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm90IHN1cHBvcnRlZCcpO1xuICAgIH1cbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXJsTGlzdGVuZXIuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-amplify/auth/lib-esm/urlListener.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-amplify/core/lib-esm/Amplify.js":
/*!***********************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/Amplify.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Amplify: () => (/* binding */ Amplify),\n/* harmony export */   AmplifyClass: () => (/* binding */ AmplifyClass),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Logger */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/Logger/ConsoleLogger.js\");\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n\nvar logger = new _Logger__WEBPACK_IMPORTED_MODULE_0__.ConsoleLogger('Amplify');\nvar AmplifyClass = /** @class */ (function () {\n    function AmplifyClass() {\n        // Everything that is `register`ed is tracked here\n        this._components = [];\n        this._config = {};\n        // All modules (with `getModuleName()`) are stored here for dependency injection\n        this._modules = {};\n        // for backward compatibility to avoid breaking change\n        // if someone is using like Amplify.Auth\n        this.Auth = null;\n        this.Analytics = null;\n        this.API = null;\n        this.Credentials = null;\n        this.Storage = null;\n        this.I18n = null;\n        this.Cache = null;\n        this.PubSub = null;\n        this.Interactions = null;\n        this.Pushnotification = null;\n        this.UI = null;\n        this.XR = null;\n        this.Predictions = null;\n        this.DataStore = null;\n        this.Geo = null;\n        this.Logger = _Logger__WEBPACK_IMPORTED_MODULE_0__.ConsoleLogger;\n        this.ServiceWorker = null;\n    }\n    AmplifyClass.prototype.register = function (comp) {\n        logger.debug('component registered in amplify', comp);\n        this._components.push(comp);\n        if (typeof comp.getModuleName === 'function') {\n            this._modules[comp.getModuleName()] = comp;\n            this[comp.getModuleName()] = comp;\n        }\n        else {\n            logger.debug('no getModuleName method for component', comp);\n        }\n        // Finally configure this new component(category) loaded\n        // With the new modularization changes in Amplify V3, all the Amplify\n        // component are not loaded/registered right away but when they are\n        // imported (and hence instantiated) in the client's app. This ensures\n        // that all new components imported get correctly configured with the\n        // configuration that Amplify.configure() was called with.\n        comp.configure(this._config);\n    };\n    AmplifyClass.prototype.configure = function (config) {\n        var _this = this;\n        if (!config)\n            return this._config;\n        this._config = Object.assign(this._config, config);\n        logger.debug('amplify config', this._config);\n        // Dependency Injection via property-setting.\n        // This avoids introducing a public method/interface/setter that's difficult to remove later.\n        // Plus, it reduces `if` statements within the `constructor` and `configure` of each module\n        Object.entries(this._modules).forEach(function (_a) {\n            var _b = __read(_a, 2), Name = _b[0], comp = _b[1];\n            // e.g. Auth.*\n            Object.keys(comp).forEach(function (property) {\n                // e.g. Auth[\"Credentials\"] = this._modules[\"Credentials\"] when set\n                if (_this._modules[property]) {\n                    comp[property] = _this._modules[property];\n                }\n            });\n        });\n        this._components.map(function (comp) {\n            comp.configure(_this._config);\n        });\n        return this._config;\n    };\n    AmplifyClass.prototype.addPluggable = function (pluggable) {\n        if (pluggable &&\n            pluggable['getCategory'] &&\n            typeof pluggable['getCategory'] === 'function') {\n            this._components.map(function (comp) {\n                if (comp['addPluggable'] &&\n                    typeof comp['addPluggable'] === 'function') {\n                    comp.addPluggable(pluggable);\n                }\n            });\n        }\n    };\n    return AmplifyClass;\n}());\n\nvar Amplify = new AmplifyClass();\n/**\n * @deprecated use named import\n */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Amplify);\n//# sourceMappingURL=Amplify.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1hbXBsaWZ5L2NvcmUvbGliLWVzbS9BbXBsaWZ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxjQUFjLFNBQUksSUFBSSxTQUFJO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixNQUFNO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUN3RDtBQUN4RCxpQkFBaUIsa0RBQVc7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGtEQUFXO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUN1QjtBQUNqQjtBQUNQO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLE9BQU8sRUFBQztBQUN2QiIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1hbXBsaWZ5L2NvcmUvbGliLWVzbS9BbXBsaWZ5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX3JlYWQgPSAodGhpcyAmJiB0aGlzLl9fcmVhZCkgfHwgZnVuY3Rpb24gKG8sIG4pIHtcbiAgICB2YXIgbSA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvW1N5bWJvbC5pdGVyYXRvcl07XG4gICAgaWYgKCFtKSByZXR1cm4gbztcbiAgICB2YXIgaSA9IG0uY2FsbChvKSwgciwgYXIgPSBbXSwgZTtcbiAgICB0cnkge1xuICAgICAgICB3aGlsZSAoKG4gPT09IHZvaWQgMCB8fCBuLS0gPiAwKSAmJiAhKHIgPSBpLm5leHQoKSkuZG9uZSkgYXIucHVzaChyLnZhbHVlKTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7IGUgPSB7IGVycm9yOiBlcnJvciB9OyB9XG4gICAgZmluYWxseSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAociAmJiAhci5kb25lICYmIChtID0gaVtcInJldHVyblwiXSkpIG0uY2FsbChpKTtcbiAgICAgICAgfVxuICAgICAgICBmaW5hbGx5IHsgaWYgKGUpIHRocm93IGUuZXJyb3I7IH1cbiAgICB9XG4gICAgcmV0dXJuIGFyO1xufTtcbmltcG9ydCB7IENvbnNvbGVMb2dnZXIgYXMgTG9nZ2VyQ2xhc3MgfSBmcm9tICcuL0xvZ2dlcic7XG52YXIgbG9nZ2VyID0gbmV3IExvZ2dlckNsYXNzKCdBbXBsaWZ5Jyk7XG52YXIgQW1wbGlmeUNsYXNzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEFtcGxpZnlDbGFzcygpIHtcbiAgICAgICAgLy8gRXZlcnl0aGluZyB0aGF0IGlzIGByZWdpc3RlcmBlZCBpcyB0cmFja2VkIGhlcmVcbiAgICAgICAgdGhpcy5fY29tcG9uZW50cyA9IFtdO1xuICAgICAgICB0aGlzLl9jb25maWcgPSB7fTtcbiAgICAgICAgLy8gQWxsIG1vZHVsZXMgKHdpdGggYGdldE1vZHVsZU5hbWUoKWApIGFyZSBzdG9yZWQgaGVyZSBmb3IgZGVwZW5kZW5jeSBpbmplY3Rpb25cbiAgICAgICAgdGhpcy5fbW9kdWxlcyA9IHt9O1xuICAgICAgICAvLyBmb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eSB0byBhdm9pZCBicmVha2luZyBjaGFuZ2VcbiAgICAgICAgLy8gaWYgc29tZW9uZSBpcyB1c2luZyBsaWtlIEFtcGxpZnkuQXV0aFxuICAgICAgICB0aGlzLkF1dGggPSBudWxsO1xuICAgICAgICB0aGlzLkFuYWx5dGljcyA9IG51bGw7XG4gICAgICAgIHRoaXMuQVBJID0gbnVsbDtcbiAgICAgICAgdGhpcy5DcmVkZW50aWFscyA9IG51bGw7XG4gICAgICAgIHRoaXMuU3RvcmFnZSA9IG51bGw7XG4gICAgICAgIHRoaXMuSTE4biA9IG51bGw7XG4gICAgICAgIHRoaXMuQ2FjaGUgPSBudWxsO1xuICAgICAgICB0aGlzLlB1YlN1YiA9IG51bGw7XG4gICAgICAgIHRoaXMuSW50ZXJhY3Rpb25zID0gbnVsbDtcbiAgICAgICAgdGhpcy5QdXNobm90aWZpY2F0aW9uID0gbnVsbDtcbiAgICAgICAgdGhpcy5VSSA9IG51bGw7XG4gICAgICAgIHRoaXMuWFIgPSBudWxsO1xuICAgICAgICB0aGlzLlByZWRpY3Rpb25zID0gbnVsbDtcbiAgICAgICAgdGhpcy5EYXRhU3RvcmUgPSBudWxsO1xuICAgICAgICB0aGlzLkdlbyA9IG51bGw7XG4gICAgICAgIHRoaXMuTG9nZ2VyID0gTG9nZ2VyQ2xhc3M7XG4gICAgICAgIHRoaXMuU2VydmljZVdvcmtlciA9IG51bGw7XG4gICAgfVxuICAgIEFtcGxpZnlDbGFzcy5wcm90b3R5cGUucmVnaXN0ZXIgPSBmdW5jdGlvbiAoY29tcCkge1xuICAgICAgICBsb2dnZXIuZGVidWcoJ2NvbXBvbmVudCByZWdpc3RlcmVkIGluIGFtcGxpZnknLCBjb21wKTtcbiAgICAgICAgdGhpcy5fY29tcG9uZW50cy5wdXNoKGNvbXApO1xuICAgICAgICBpZiAodHlwZW9mIGNvbXAuZ2V0TW9kdWxlTmFtZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgdGhpcy5fbW9kdWxlc1tjb21wLmdldE1vZHVsZU5hbWUoKV0gPSBjb21wO1xuICAgICAgICAgICAgdGhpc1tjb21wLmdldE1vZHVsZU5hbWUoKV0gPSBjb21wO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbG9nZ2VyLmRlYnVnKCdubyBnZXRNb2R1bGVOYW1lIG1ldGhvZCBmb3IgY29tcG9uZW50JywgY29tcCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gRmluYWxseSBjb25maWd1cmUgdGhpcyBuZXcgY29tcG9uZW50KGNhdGVnb3J5KSBsb2FkZWRcbiAgICAgICAgLy8gV2l0aCB0aGUgbmV3IG1vZHVsYXJpemF0aW9uIGNoYW5nZXMgaW4gQW1wbGlmeSBWMywgYWxsIHRoZSBBbXBsaWZ5XG4gICAgICAgIC8vIGNvbXBvbmVudCBhcmUgbm90IGxvYWRlZC9yZWdpc3RlcmVkIHJpZ2h0IGF3YXkgYnV0IHdoZW4gdGhleSBhcmVcbiAgICAgICAgLy8gaW1wb3J0ZWQgKGFuZCBoZW5jZSBpbnN0YW50aWF0ZWQpIGluIHRoZSBjbGllbnQncyBhcHAuIFRoaXMgZW5zdXJlc1xuICAgICAgICAvLyB0aGF0IGFsbCBuZXcgY29tcG9uZW50cyBpbXBvcnRlZCBnZXQgY29ycmVjdGx5IGNvbmZpZ3VyZWQgd2l0aCB0aGVcbiAgICAgICAgLy8gY29uZmlndXJhdGlvbiB0aGF0IEFtcGxpZnkuY29uZmlndXJlKCkgd2FzIGNhbGxlZCB3aXRoLlxuICAgICAgICBjb21wLmNvbmZpZ3VyZSh0aGlzLl9jb25maWcpO1xuICAgIH07XG4gICAgQW1wbGlmeUNsYXNzLnByb3RvdHlwZS5jb25maWd1cmUgPSBmdW5jdGlvbiAoY29uZmlnKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIGlmICghY29uZmlnKVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZztcbiAgICAgICAgdGhpcy5fY29uZmlnID0gT2JqZWN0LmFzc2lnbih0aGlzLl9jb25maWcsIGNvbmZpZyk7XG4gICAgICAgIGxvZ2dlci5kZWJ1ZygnYW1wbGlmeSBjb25maWcnLCB0aGlzLl9jb25maWcpO1xuICAgICAgICAvLyBEZXBlbmRlbmN5IEluamVjdGlvbiB2aWEgcHJvcGVydHktc2V0dGluZy5cbiAgICAgICAgLy8gVGhpcyBhdm9pZHMgaW50cm9kdWNpbmcgYSBwdWJsaWMgbWV0aG9kL2ludGVyZmFjZS9zZXR0ZXIgdGhhdCdzIGRpZmZpY3VsdCB0byByZW1vdmUgbGF0ZXIuXG4gICAgICAgIC8vIFBsdXMsIGl0IHJlZHVjZXMgYGlmYCBzdGF0ZW1lbnRzIHdpdGhpbiB0aGUgYGNvbnN0cnVjdG9yYCBhbmQgYGNvbmZpZ3VyZWAgb2YgZWFjaCBtb2R1bGVcbiAgICAgICAgT2JqZWN0LmVudHJpZXModGhpcy5fbW9kdWxlcykuZm9yRWFjaChmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgIHZhciBfYiA9IF9fcmVhZChfYSwgMiksIE5hbWUgPSBfYlswXSwgY29tcCA9IF9iWzFdO1xuICAgICAgICAgICAgLy8gZS5nLiBBdXRoLipcbiAgICAgICAgICAgIE9iamVjdC5rZXlzKGNvbXApLmZvckVhY2goZnVuY3Rpb24gKHByb3BlcnR5KSB7XG4gICAgICAgICAgICAgICAgLy8gZS5nLiBBdXRoW1wiQ3JlZGVudGlhbHNcIl0gPSB0aGlzLl9tb2R1bGVzW1wiQ3JlZGVudGlhbHNcIl0gd2hlbiBzZXRcbiAgICAgICAgICAgICAgICBpZiAoX3RoaXMuX21vZHVsZXNbcHJvcGVydHldKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbXBbcHJvcGVydHldID0gX3RoaXMuX21vZHVsZXNbcHJvcGVydHldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5fY29tcG9uZW50cy5tYXAoZnVuY3Rpb24gKGNvbXApIHtcbiAgICAgICAgICAgIGNvbXAuY29uZmlndXJlKF90aGlzLl9jb25maWcpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZztcbiAgICB9O1xuICAgIEFtcGxpZnlDbGFzcy5wcm90b3R5cGUuYWRkUGx1Z2dhYmxlID0gZnVuY3Rpb24gKHBsdWdnYWJsZSkge1xuICAgICAgICBpZiAocGx1Z2dhYmxlICYmXG4gICAgICAgICAgICBwbHVnZ2FibGVbJ2dldENhdGVnb3J5J10gJiZcbiAgICAgICAgICAgIHR5cGVvZiBwbHVnZ2FibGVbJ2dldENhdGVnb3J5J10gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHRoaXMuX2NvbXBvbmVudHMubWFwKGZ1bmN0aW9uIChjb21wKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNvbXBbJ2FkZFBsdWdnYWJsZSddICYmXG4gICAgICAgICAgICAgICAgICAgIHR5cGVvZiBjb21wWydhZGRQbHVnZ2FibGUnXSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICBjb21wLmFkZFBsdWdnYWJsZShwbHVnZ2FibGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gQW1wbGlmeUNsYXNzO1xufSgpKTtcbmV4cG9ydCB7IEFtcGxpZnlDbGFzcyB9O1xuZXhwb3J0IHZhciBBbXBsaWZ5ID0gbmV3IEFtcGxpZnlDbGFzcygpO1xuLyoqXG4gKiBAZGVwcmVjYXRlZCB1c2UgbmFtZWQgaW1wb3J0XG4gKi9cbmV4cG9ydCBkZWZhdWx0IEFtcGxpZnk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BbXBsaWZ5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-amplify/core/lib-esm/Amplify.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-amplify/core/lib-esm/Credentials.js":
/*!***************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/Credentials.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Credentials: () => (/* binding */ Credentials),\n/* harmony export */   CredentialsClass: () => (/* binding */ CredentialsClass),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Logger */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/Logger/ConsoleLogger.js\");\n/* harmony import */ var _StorageHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./StorageHelper */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/StorageHelper/index.js\");\n/* harmony import */ var _JS__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./JS */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/JS.js\");\n/* harmony import */ var _OAuthHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./OAuthHelper */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/OAuthHelper/index.js\");\n/* harmony import */ var _Util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Util */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/Util/Retry.js\");\n/* harmony import */ var _Amplify__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Amplify */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/Amplify.js\");\n/* harmony import */ var _aws_sdk_credential_provider_cognito_identity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @aws-sdk/credential-provider-cognito-identity */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/fromCognitoIdentity.js\");\n/* harmony import */ var _aws_sdk_credential_provider_cognito_identity__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @aws-sdk/credential-provider-cognito-identity */ \"(ssr)/./node_modules/@aws-sdk/credential-provider-cognito-identity/dist/es/fromCognitoIdentityPool.js\");\n/* harmony import */ var _aws_sdk_client_cognito_identity__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @aws-sdk/client-cognito-identity */ \"(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/commands/GetIdCommand.js\");\n/* harmony import */ var _aws_sdk_client_cognito_identity__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @aws-sdk/client-cognito-identity */ \"(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/commands/GetCredentialsForIdentityCommand.js\");\n/* harmony import */ var _Util_CognitoIdentityClient__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Util/CognitoIdentityClient */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/Util/CognitoIdentityClient.js\");\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\n\n\n\n\n\n\nvar logger = new _Logger__WEBPACK_IMPORTED_MODULE_0__.ConsoleLogger('Credentials');\nvar CREDENTIALS_TTL = 50 * 60 * 1000; // 50 min, can be modified on config if required in the future\nvar COGNITO_IDENTITY_KEY_PREFIX = 'CognitoIdentityId-';\nvar CredentialsClass = /** @class */ (function () {\n    function CredentialsClass(config) {\n        this._gettingCredPromise = null;\n        this._refreshHandlers = {};\n        // Allow `Auth` to be injected for SSR, but Auth isn't a required dependency for Credentials\n        this.Auth = undefined;\n        this.configure(config);\n        this._refreshHandlers['google'] = _OAuthHelper__WEBPACK_IMPORTED_MODULE_1__.GoogleOAuth.refreshGoogleToken;\n        this._refreshHandlers['facebook'] = _OAuthHelper__WEBPACK_IMPORTED_MODULE_1__.FacebookOAuth.refreshFacebookToken;\n    }\n    CredentialsClass.prototype.getModuleName = function () {\n        return 'Credentials';\n    };\n    CredentialsClass.prototype.getCredSource = function () {\n        return this._credentials_source;\n    };\n    CredentialsClass.prototype.configure = function (config) {\n        if (!config)\n            return this._config || {};\n        this._config = Object.assign({}, this._config, config);\n        var refreshHandlers = this._config.refreshHandlers;\n        // If the developer has provided an object of refresh handlers,\n        // then we can merge the provided handlers with the current handlers.\n        if (refreshHandlers) {\n            this._refreshHandlers = __assign(__assign({}, this._refreshHandlers), refreshHandlers);\n        }\n        this._storage = this._config.storage;\n        if (!this._storage) {\n            this._storage = new _StorageHelper__WEBPACK_IMPORTED_MODULE_2__.StorageHelper().getStorage();\n        }\n        this._storageSync = Promise.resolve();\n        if (typeof this._storage['sync'] === 'function') {\n            this._storageSync = this._storage['sync']();\n        }\n        return this._config;\n    };\n    CredentialsClass.prototype.get = function () {\n        logger.debug('getting credentials');\n        return this._pickupCredentials();\n    };\n    // currently we only store the guest identity in local storage\n    CredentialsClass.prototype._getCognitoIdentityIdStorageKey = function (identityPoolId) {\n        return \"\" + COGNITO_IDENTITY_KEY_PREFIX + identityPoolId;\n    };\n    CredentialsClass.prototype._pickupCredentials = function () {\n        logger.debug('picking up credentials');\n        if (!this._gettingCredPromise || !this._gettingCredPromise.isPending()) {\n            logger.debug('getting new cred promise');\n            this._gettingCredPromise = (0,_JS__WEBPACK_IMPORTED_MODULE_3__.makeQuerablePromise)(this._keepAlive());\n        }\n        else {\n            logger.debug('getting old cred promise');\n        }\n        return this._gettingCredPromise;\n    };\n    CredentialsClass.prototype._keepAlive = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var cred, _a, Auth, user_1, session, refreshToken_1, refreshRequest, err_1;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        logger.debug('checking if credentials exists and not expired');\n                        cred = this._credentials;\n                        if (cred && !this._isExpired(cred) && !this._isPastTTL()) {\n                            logger.debug('credentials not changed and not expired, directly return');\n                            return [2 /*return*/, Promise.resolve(cred)];\n                        }\n                        logger.debug('need to get a new credential or refresh the existing one');\n                        _a = this.Auth, Auth = _a === void 0 ? _Amplify__WEBPACK_IMPORTED_MODULE_4__.Amplify.Auth : _a;\n                        if (!Auth || typeof Auth.currentUserCredentials !== 'function') {\n                            return [2 /*return*/, Promise.reject('No Auth module registered in Amplify')];\n                        }\n                        if (!(!this._isExpired(cred) && this._isPastTTL())) return [3 /*break*/, 6];\n                        logger.debug('ttl has passed but token is not yet expired');\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 5, , 6]);\n                        return [4 /*yield*/, Auth.currentUserPoolUser()];\n                    case 2:\n                        user_1 = _b.sent();\n                        return [4 /*yield*/, Auth.currentSession()];\n                    case 3:\n                        session = _b.sent();\n                        refreshToken_1 = session.refreshToken;\n                        refreshRequest = new Promise(function (res, rej) {\n                            user_1.refreshSession(refreshToken_1, function (err, data) {\n                                return err ? rej(err) : res(data);\n                            });\n                        });\n                        return [4 /*yield*/, refreshRequest];\n                    case 4:\n                        _b.sent(); // note that rejections will be caught and handled in the catch block.\n                        return [3 /*break*/, 6];\n                    case 5:\n                        err_1 = _b.sent();\n                        // should not throw because user might just be on guest access or is authenticated through federation\n                        logger.debug('Error attempting to refreshing the session', err_1);\n                        return [3 /*break*/, 6];\n                    case 6: return [2 /*return*/, Auth.currentUserCredentials()];\n                }\n            });\n        });\n    };\n    CredentialsClass.prototype.refreshFederatedToken = function (federatedInfo) {\n        logger.debug('Getting federated credentials');\n        var provider = federatedInfo.provider, user = federatedInfo.user, token = federatedInfo.token, identity_id = federatedInfo.identity_id;\n        var expires_at = federatedInfo.expires_at;\n        // Make sure expires_at is in millis\n        expires_at =\n            new Date(expires_at).getFullYear() === 1970\n                ? expires_at * 1000\n                : expires_at;\n        var that = this;\n        logger.debug('checking if federated jwt token expired');\n        if (expires_at > new Date().getTime()) {\n            // if not expired\n            logger.debug('token not expired');\n            return this._setCredentialsFromFederation({\n                provider: provider,\n                token: token,\n                user: user,\n                identity_id: identity_id,\n                expires_at: expires_at,\n            });\n        }\n        else {\n            // if refresh handler exists\n            if (that._refreshHandlers[provider] &&\n                typeof that._refreshHandlers[provider] === 'function') {\n                logger.debug('getting refreshed jwt token from federation provider');\n                return this._providerRefreshWithRetry({\n                    refreshHandler: that._refreshHandlers[provider],\n                    provider: provider,\n                    user: user,\n                });\n            }\n            else {\n                logger.debug('no refresh handler for provider:', provider);\n                this.clear();\n                return Promise.reject('no refresh handler for provider');\n            }\n        }\n    };\n    CredentialsClass.prototype._providerRefreshWithRetry = function (_a) {\n        var _this = this;\n        var refreshHandler = _a.refreshHandler, provider = _a.provider, user = _a.user;\n        var MAX_DELAY_MS = 10 * 1000;\n        // refreshHandler will retry network errors, otherwise it will\n        // return NonRetryableError to break out of jitteredExponentialRetry\n        return (0,_Util__WEBPACK_IMPORTED_MODULE_5__.jitteredExponentialRetry)(refreshHandler, [], MAX_DELAY_MS)\n            .then(function (data) {\n            logger.debug('refresh federated token sucessfully', data);\n            return _this._setCredentialsFromFederation({\n                provider: provider,\n                token: data.token,\n                user: user,\n                identity_id: data.identity_id,\n                expires_at: data.expires_at,\n            });\n        })\n            .catch(function (e) {\n            var isNetworkError = typeof e === 'string' &&\n                e.toLowerCase().lastIndexOf('network error', e.length) === 0;\n            if (!isNetworkError) {\n                _this.clear();\n            }\n            logger.debug('refresh federated token failed', e);\n            return Promise.reject('refreshing federation token failed: ' + e);\n        });\n    };\n    CredentialsClass.prototype._isExpired = function (credentials) {\n        if (!credentials) {\n            logger.debug('no credentials for expiration check');\n            return true;\n        }\n        logger.debug('are these credentials expired?', credentials);\n        var ts = Date.now();\n        /* returns date object.\n            https://github.com/aws/aws-sdk-js-v3/blob/v1.0.0-beta.1/packages/types/src/credentials.ts#L26\n        */\n        var expiration = credentials.expiration;\n        return expiration.getTime() <= ts;\n    };\n    CredentialsClass.prototype._isPastTTL = function () {\n        return this._nextCredentialsRefresh <= Date.now();\n    };\n    CredentialsClass.prototype._setCredentialsForGuest = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, identityPoolId, region, mandatorySignIn, identityId, _b, cognitoClient, credentials, cognitoIdentityParams, credentialsProvider;\n            var _this = this;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        logger.debug('setting credentials for guest');\n                        _a = this._config, identityPoolId = _a.identityPoolId, region = _a.region, mandatorySignIn = _a.mandatorySignIn;\n                        if (mandatorySignIn) {\n                            return [2 /*return*/, Promise.reject('cannot get guest credentials when mandatory signin enabled')];\n                        }\n                        if (!identityPoolId) {\n                            logger.debug('No Cognito Identity pool provided for unauthenticated access');\n                            return [2 /*return*/, Promise.reject('No Cognito Identity pool provided for unauthenticated access')];\n                        }\n                        if (!region) {\n                            logger.debug('region is not configured for getting the credentials');\n                            return [2 /*return*/, Promise.reject('region is not configured for getting the credentials')];\n                        }\n                        _b = this;\n                        return [4 /*yield*/, this._getGuestIdentityId()];\n                    case 1:\n                        identityId = (_b._identityId = _c.sent());\n                        cognitoClient = (0,_Util_CognitoIdentityClient__WEBPACK_IMPORTED_MODULE_6__.createCognitoIdentityClient)({\n                            region: region,\n                        });\n                        credentials = undefined;\n                        if (identityId) {\n                            cognitoIdentityParams = {\n                                identityId: identityId,\n                                client: cognitoClient,\n                            };\n                            credentials = (0,_aws_sdk_credential_provider_cognito_identity__WEBPACK_IMPORTED_MODULE_7__.fromCognitoIdentity)(cognitoIdentityParams)();\n                        }\n                        else {\n                            credentialsProvider = function () { return __awaiter(_this, void 0, void 0, function () {\n                                var IdentityId, cognitoIdentityParams, credentialsFromCognitoIdentity;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0: return [4 /*yield*/, cognitoClient.send(new _aws_sdk_client_cognito_identity__WEBPACK_IMPORTED_MODULE_8__.GetIdCommand({\n                                                IdentityPoolId: identityPoolId,\n                                            }))];\n                                        case 1:\n                                            IdentityId = (_a.sent()).IdentityId;\n                                            this._identityId = IdentityId;\n                                            cognitoIdentityParams = {\n                                                client: cognitoClient,\n                                                identityId: IdentityId,\n                                            };\n                                            credentialsFromCognitoIdentity = (0,_aws_sdk_credential_provider_cognito_identity__WEBPACK_IMPORTED_MODULE_7__.fromCognitoIdentity)(cognitoIdentityParams);\n                                            return [2 /*return*/, credentialsFromCognitoIdentity()];\n                                    }\n                                });\n                            }); };\n                            credentials = credentialsProvider().catch(function (err) { return __awaiter(_this, void 0, void 0, function () {\n                                return __generator(this, function (_a) {\n                                    throw err;\n                                });\n                            }); });\n                        }\n                        return [2 /*return*/, this._loadCredentials(credentials, 'guest', false, null)\n                                .then(function (res) {\n                                return res;\n                            })\n                                .catch(function (e) { return __awaiter(_this, void 0, void 0, function () {\n                                var credentialsProvider;\n                                var _this = this;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0:\n                                            if (!(e.name === 'ResourceNotFoundException' &&\n                                                e.message === \"Identity '\" + identityId + \"' not found.\")) return [3 /*break*/, 2];\n                                            logger.debug('Failed to load guest credentials');\n                                            return [4 /*yield*/, this._removeGuestIdentityId()];\n                                        case 1:\n                                            _a.sent();\n                                            credentialsProvider = function () { return __awaiter(_this, void 0, void 0, function () {\n                                                var IdentityId, cognitoIdentityParams, credentialsFromCognitoIdentity;\n                                                return __generator(this, function (_a) {\n                                                    switch (_a.label) {\n                                                        case 0: return [4 /*yield*/, cognitoClient.send(new _aws_sdk_client_cognito_identity__WEBPACK_IMPORTED_MODULE_8__.GetIdCommand({\n                                                                IdentityPoolId: identityPoolId,\n                                                            }))];\n                                                        case 1:\n                                                            IdentityId = (_a.sent()).IdentityId;\n                                                            this._identityId = IdentityId;\n                                                            cognitoIdentityParams = {\n                                                                client: cognitoClient,\n                                                                identityId: IdentityId,\n                                                            };\n                                                            credentialsFromCognitoIdentity = (0,_aws_sdk_credential_provider_cognito_identity__WEBPACK_IMPORTED_MODULE_7__.fromCognitoIdentity)(cognitoIdentityParams);\n                                                            return [2 /*return*/, credentialsFromCognitoIdentity()];\n                                                    }\n                                                });\n                                            }); };\n                                            credentials = credentialsProvider().catch(function (err) { return __awaiter(_this, void 0, void 0, function () {\n                                                return __generator(this, function (_a) {\n                                                    throw err;\n                                                });\n                                            }); });\n                                            return [2 /*return*/, this._loadCredentials(credentials, 'guest', false, null)];\n                                        case 2: return [2 /*return*/, e];\n                                    }\n                                });\n                            }); })];\n                }\n            });\n        });\n    };\n    CredentialsClass.prototype._setCredentialsFromFederation = function (params) {\n        var provider = params.provider, token = params.token, identity_id = params.identity_id;\n        var domains = {\n            google: 'accounts.google.com',\n            facebook: 'graph.facebook.com',\n            amazon: 'www.amazon.com',\n            developer: 'cognito-identity.amazonaws.com',\n        };\n        // Use custom provider url instead of the predefined ones\n        var domain = domains[provider] || provider;\n        if (!domain) {\n            return Promise.reject('You must specify a federated provider');\n        }\n        var logins = {};\n        logins[domain] = token;\n        var _a = this._config, identityPoolId = _a.identityPoolId, region = _a.region;\n        if (!identityPoolId) {\n            logger.debug('No Cognito Federated Identity pool provided');\n            return Promise.reject('No Cognito Federated Identity pool provided');\n        }\n        if (!region) {\n            logger.debug('region is not configured for getting the credentials');\n            return Promise.reject('region is not configured for getting the credentials');\n        }\n        var cognitoClient = (0,_Util_CognitoIdentityClient__WEBPACK_IMPORTED_MODULE_6__.createCognitoIdentityClient)({\n            region: region,\n        });\n        var credentials = undefined;\n        if (identity_id) {\n            var cognitoIdentityParams = {\n                identityId: identity_id,\n                logins: logins,\n                client: cognitoClient,\n            };\n            credentials = (0,_aws_sdk_credential_provider_cognito_identity__WEBPACK_IMPORTED_MODULE_7__.fromCognitoIdentity)(cognitoIdentityParams)();\n        }\n        else {\n            var cognitoIdentityParams = {\n                logins: logins,\n                identityPoolId: identityPoolId,\n                client: cognitoClient,\n            };\n            credentials = (0,_aws_sdk_credential_provider_cognito_identity__WEBPACK_IMPORTED_MODULE_9__.fromCognitoIdentityPool)(cognitoIdentityParams)();\n        }\n        return this._loadCredentials(credentials, 'federated', true, params);\n    };\n    CredentialsClass.prototype._setCredentialsFromSession = function (session) {\n        var _this = this;\n        logger.debug('set credentials from session');\n        var idToken = session.getIdToken().getJwtToken();\n        var _a = this._config, region = _a.region, userPoolId = _a.userPoolId, identityPoolId = _a.identityPoolId;\n        if (!identityPoolId) {\n            logger.debug('No Cognito Federated Identity pool provided');\n            return Promise.reject('No Cognito Federated Identity pool provided');\n        }\n        if (!region) {\n            logger.debug('region is not configured for getting the credentials');\n            return Promise.reject('region is not configured for getting the credentials');\n        }\n        var key = 'cognito-idp.' + region + '.amazonaws.com/' + userPoolId;\n        var logins = {};\n        logins[key] = idToken;\n        var cognitoClient = (0,_Util_CognitoIdentityClient__WEBPACK_IMPORTED_MODULE_6__.createCognitoIdentityClient)({\n            region: region,\n        });\n        /*\n            Retreiving identityId with GetIdCommand to mimic the behavior in the following code in aws-sdk-v3:\n            https://git.io/JeDxU\n\n            Note: Retreive identityId from CredentialsProvider once aws-sdk-js v3 supports this.\n        */\n        var credentialsProvider = function () { return __awaiter(_this, void 0, void 0, function () {\n            var guestIdentityId, generatedOrRetrievedIdentityId, IdentityId, _a, _b, AccessKeyId, Expiration, SecretKey, SessionToken, primaryIdentityId;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this._getGuestIdentityId()];\n                    case 1:\n                        guestIdentityId = _c.sent();\n                        if (!!guestIdentityId) return [3 /*break*/, 3];\n                        return [4 /*yield*/, cognitoClient.send(new _aws_sdk_client_cognito_identity__WEBPACK_IMPORTED_MODULE_8__.GetIdCommand({\n                                IdentityPoolId: identityPoolId,\n                                Logins: logins,\n                            }))];\n                    case 2:\n                        IdentityId = (_c.sent()).IdentityId;\n                        generatedOrRetrievedIdentityId = IdentityId;\n                        _c.label = 3;\n                    case 3: return [4 /*yield*/, cognitoClient.send(new _aws_sdk_client_cognito_identity__WEBPACK_IMPORTED_MODULE_10__.GetCredentialsForIdentityCommand({\n                            IdentityId: guestIdentityId || generatedOrRetrievedIdentityId,\n                            Logins: logins,\n                        }))];\n                    case 4:\n                        _a = _c.sent(), _b = _a.Credentials, AccessKeyId = _b.AccessKeyId, Expiration = _b.Expiration, SecretKey = _b.SecretKey, SessionToken = _b.SessionToken, primaryIdentityId = _a.IdentityId;\n                        this._identityId = primaryIdentityId;\n                        if (!guestIdentityId) return [3 /*break*/, 6];\n                        // if guestIdentity is found and used by GetCredentialsForIdentity\n                        // it will be linked to the logins provided, and disqualified as an unauth identity\n                        logger.debug(\"The guest identity \" + guestIdentityId + \" has been successfully linked to the logins\");\n                        if (guestIdentityId === primaryIdentityId) {\n                            logger.debug(\"The guest identity \" + guestIdentityId + \" has become the primary identity\");\n                        }\n                        // remove it from local storage to avoid being used as a guest Identity by _setCredentialsForGuest\n                        return [4 /*yield*/, this._removeGuestIdentityId()];\n                    case 5:\n                        // remove it from local storage to avoid being used as a guest Identity by _setCredentialsForGuest\n                        _c.sent();\n                        _c.label = 6;\n                    case 6: \n                    // https://github.com/aws/aws-sdk-js-v3/blob/main/packages/credential-provider-cognito-identity/src/fromCognitoIdentity.ts#L40\n                    return [2 /*return*/, {\n                            accessKeyId: AccessKeyId,\n                            secretAccessKey: SecretKey,\n                            sessionToken: SessionToken,\n                            expiration: Expiration,\n                            identityId: primaryIdentityId,\n                        }];\n                }\n            });\n        }); };\n        var credentials = credentialsProvider().catch(function (err) { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw err;\n            });\n        }); });\n        return this._loadCredentials(credentials, 'userPool', true, null);\n    };\n    CredentialsClass.prototype._loadCredentials = function (credentials, source, authenticated, info) {\n        var _this = this;\n        var that = this;\n        return new Promise(function (res, rej) {\n            credentials\n                .then(function (credentials) { return __awaiter(_this, void 0, void 0, function () {\n                var user, provider, token, expires_at, identity_id;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            logger.debug('Load credentials successfully', credentials);\n                            if (this._identityId && !credentials.identityId) {\n                                credentials['identityId'] = this._identityId;\n                            }\n                            that._credentials = credentials;\n                            that._credentials.authenticated = authenticated;\n                            that._credentials_source = source;\n                            that._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n                            if (source === 'federated') {\n                                user = Object.assign({ id: this._credentials.identityId }, info.user);\n                                provider = info.provider, token = info.token, expires_at = info.expires_at, identity_id = info.identity_id;\n                                try {\n                                    this._storage.setItem('aws-amplify-federatedInfo', JSON.stringify({\n                                        provider: provider,\n                                        token: token,\n                                        user: user,\n                                        expires_at: expires_at,\n                                        identity_id: identity_id,\n                                    }));\n                                }\n                                catch (e) {\n                                    logger.debug('Failed to put federated info into auth storage', e);\n                                }\n                            }\n                            if (!(source === 'guest')) return [3 /*break*/, 2];\n                            return [4 /*yield*/, this._setGuestIdentityId(credentials.identityId)];\n                        case 1:\n                            _a.sent();\n                            _a.label = 2;\n                        case 2:\n                            res(that._credentials);\n                            return [2 /*return*/];\n                    }\n                });\n            }); })\n                .catch(function (err) {\n                if (err) {\n                    logger.debug('Failed to load credentials', credentials);\n                    logger.debug('Error loading credentials', err);\n                    rej(err);\n                    return;\n                }\n            });\n        });\n    };\n    CredentialsClass.prototype.set = function (params, source) {\n        if (source === 'session') {\n            return this._setCredentialsFromSession(params);\n        }\n        else if (source === 'federation') {\n            return this._setCredentialsFromFederation(params);\n        }\n        else if (source === 'guest') {\n            return this._setCredentialsForGuest();\n        }\n        else {\n            logger.debug('no source specified for setting credentials');\n            return Promise.reject('invalid source');\n        }\n    };\n    CredentialsClass.prototype.clear = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this._credentials = null;\n                this._credentials_source = null;\n                logger.debug('removing aws-amplify-federatedInfo from storage');\n                this._storage.removeItem('aws-amplify-federatedInfo');\n                return [2 /*return*/];\n            });\n        });\n    };\n    /* operations on local stored guest identity */\n    CredentialsClass.prototype._getGuestIdentityId = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var identityPoolId, e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        identityPoolId = this._config.identityPoolId;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._storageSync];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/, this._storage.getItem(this._getCognitoIdentityIdStorageKey(identityPoolId))];\n                    case 3:\n                        e_1 = _a.sent();\n                        logger.debug('Failed to get the cached guest identityId', e_1);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    CredentialsClass.prototype._setGuestIdentityId = function (identityId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var identityPoolId, e_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        identityPoolId = this._config.identityPoolId;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._storageSync];\n                    case 2:\n                        _a.sent();\n                        this._storage.setItem(this._getCognitoIdentityIdStorageKey(identityPoolId), identityId);\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_2 = _a.sent();\n                        logger.debug('Failed to cache guest identityId', e_2);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    CredentialsClass.prototype._removeGuestIdentityId = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var identityPoolId;\n            return __generator(this, function (_a) {\n                identityPoolId = this._config.identityPoolId;\n                logger.debug(\"removing \" + this._getCognitoIdentityIdStorageKey(identityPoolId) + \" from storage\");\n                this._storage.removeItem(this._getCognitoIdentityIdStorageKey(identityPoolId));\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Compact version of credentials\n     * @param {Object} credentials\n     * @return {Object} - Credentials\n     */\n    CredentialsClass.prototype.shear = function (credentials) {\n        return {\n            accessKeyId: credentials.accessKeyId,\n            sessionToken: credentials.sessionToken,\n            secretAccessKey: credentials.secretAccessKey,\n            identityId: credentials.identityId,\n            authenticated: credentials.authenticated,\n        };\n    };\n    return CredentialsClass;\n}());\n\nvar Credentials = new CredentialsClass(null);\n_Amplify__WEBPACK_IMPORTED_MODULE_4__.Amplify.register(Credentials);\n/**\n * @deprecated use named import\n */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Credentials);\n//# sourceMappingURL=Credentials.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-amplify/core/lib-esm/Credentials.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-amplify/core/lib-esm/Hub.js":
/*!*******************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/Hub.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hub: () => (/* binding */ Hub),\n/* harmony export */   HubClass: () => (/* binding */ HubClass),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Logger */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/Logger/ConsoleLogger.js\");\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (undefined && undefined.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\n\nvar logger = new _Logger__WEBPACK_IMPORTED_MODULE_0__.ConsoleLogger('Hub');\nvar AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined' &&\n    typeof Symbol.for === 'function'\n    ? Symbol.for('amplify_default')\n    : '@@amplify_default');\nfunction isLegacyCallback(callback) {\n    return callback.onHubCapsule !== undefined;\n}\nvar HubClass = /** @class */ (function () {\n    function HubClass(name) {\n        this.listeners = [];\n        this.patterns = [];\n        this.protectedChannels = [\n            'core',\n            'auth',\n            'api',\n            'analytics',\n            'interactions',\n            'pubsub',\n            'storage',\n            'ui',\n            'xr',\n        ];\n        this.name = name;\n    }\n    // Note - Need to pass channel as a reference for removal to work and not anonymous function\n    HubClass.prototype.remove = function (channel, listener) {\n        if (channel instanceof RegExp) {\n            var pattern_1 = this.patterns.find(function (_a) {\n                var pattern = _a.pattern;\n                return pattern.source === channel.source;\n            });\n            if (!pattern_1) {\n                logger.warn(\"No listeners for \" + channel);\n                return;\n            }\n            this.patterns = __spread(this.patterns.filter(function (x) { return x !== pattern_1; }));\n        }\n        else {\n            var holder = this.listeners[channel];\n            if (!holder) {\n                logger.warn(\"No listeners for \" + channel);\n                return;\n            }\n            this.listeners[channel] = __spread(holder.filter(function (_a) {\n                var callback = _a.callback;\n                return callback !== listener;\n            }));\n        }\n    };\n    HubClass.prototype.dispatch = function (channel, payload, source, ampSymbol) {\n        if (source === void 0) { source = ''; }\n        if (this.protectedChannels.indexOf(channel) > -1) {\n            var hasAccess = ampSymbol === AMPLIFY_SYMBOL;\n            if (!hasAccess) {\n                logger.warn(\"WARNING: \" + channel + \" is protected and dispatching on it can have unintended consequences\");\n            }\n        }\n        var capsule = {\n            channel: channel,\n            payload: __assign({}, payload),\n            source: source,\n            patternInfo: [],\n        };\n        try {\n            this._toListeners(capsule);\n        }\n        catch (e) {\n            logger.error(e);\n        }\n    };\n    HubClass.prototype.listen = function (channel, callback, listenerName) {\n        var _this = this;\n        if (listenerName === void 0) { listenerName = 'noname'; }\n        var cb;\n        // Check for legacy onHubCapsule callback for backwards compatability\n        if (isLegacyCallback(callback)) {\n            logger.warn(\"WARNING onHubCapsule is Deprecated. Please pass in a callback.\");\n            cb = callback.onHubCapsule.bind(callback);\n        }\n        else if (typeof callback !== 'function') {\n            throw new Error('No callback supplied to Hub');\n        }\n        else {\n            cb = callback;\n        }\n        if (channel instanceof RegExp) {\n            this.patterns.push({\n                pattern: channel,\n                callback: cb,\n            });\n        }\n        else {\n            var holder = this.listeners[channel];\n            if (!holder) {\n                holder = [];\n                this.listeners[channel] = holder;\n            }\n            holder.push({\n                name: listenerName,\n                callback: cb,\n            });\n        }\n        return function () {\n            _this.remove(channel, cb);\n        };\n    };\n    HubClass.prototype._toListeners = function (capsule) {\n        var channel = capsule.channel, payload = capsule.payload;\n        var holder = this.listeners[channel];\n        if (holder) {\n            holder.forEach(function (listener) {\n                logger.debug(\"Dispatching to \" + channel + \" with \", payload);\n                try {\n                    listener.callback(capsule);\n                }\n                catch (e) {\n                    logger.error(e);\n                }\n            });\n        }\n        if (this.patterns.length > 0) {\n            if (!payload.message) {\n                logger.warn(\"Cannot perform pattern matching without a message key\");\n                return;\n            }\n            var payloadStr_1 = payload.message;\n            this.patterns.forEach(function (pattern) {\n                var match = payloadStr_1.match(pattern.pattern);\n                if (match) {\n                    var _a = __read(match), groups = _a.slice(1);\n                    var dispatchingCapsule = __assign(__assign({}, capsule), { patternInfo: groups });\n                    try {\n                        pattern.callback(dispatchingCapsule);\n                    }\n                    catch (e) {\n                        logger.error(e);\n                    }\n                }\n            });\n        }\n    };\n    return HubClass;\n}());\n\n/*We export a __default__ instance of HubClass to use it as a\npseudo Singleton for the main messaging bus, however you can still create\nyour own instance of HubClass() for a separate \"private bus\" of events.*/\nvar Hub = new HubClass('__default__');\n/**\n * @deprecated use named import\n */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Hub);\n//# sourceMappingURL=Hub.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-amplify/core/lib-esm/Hub.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-amplify/core/lib-esm/JS.js":
/*!******************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/JS.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JS: () => (/* binding */ JS),\n/* harmony export */   browserOrNode: () => (/* binding */ browserOrNode),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   filenameToContentType: () => (/* binding */ filenameToContentType),\n/* harmony export */   generateRandomString: () => (/* binding */ generateRandomString),\n/* harmony export */   isEmpty: () => (/* binding */ isEmpty),\n/* harmony export */   isStrictObject: () => (/* binding */ isStrictObject),\n/* harmony export */   isTextFile: () => (/* binding */ isTextFile),\n/* harmony export */   isWebWorker: () => (/* binding */ isWebWorker),\n/* harmony export */   makeQuerablePromise: () => (/* binding */ makeQuerablePromise),\n/* harmony export */   objectLessAttributes: () => (/* binding */ objectLessAttributes),\n/* harmony export */   sortByField: () => (/* binding */ sortByField),\n/* harmony export */   transferKeyToLowerCase: () => (/* binding */ transferKeyToLowerCase),\n/* harmony export */   transferKeyToUpperCase: () => (/* binding */ transferKeyToUpperCase)\n/* harmony export */ });\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar MIME_MAP = [\n    { type: 'text/plain', ext: 'txt' },\n    { type: 'text/html', ext: 'html' },\n    { type: 'text/javascript', ext: 'js' },\n    { type: 'text/css', ext: 'css' },\n    { type: 'text/csv', ext: 'csv' },\n    { type: 'text/yaml', ext: 'yml' },\n    { type: 'text/yaml', ext: 'yaml' },\n    { type: 'text/calendar', ext: 'ics' },\n    { type: 'text/calendar', ext: 'ical' },\n    { type: 'image/apng', ext: 'apng' },\n    { type: 'image/bmp', ext: 'bmp' },\n    { type: 'image/gif', ext: 'gif' },\n    { type: 'image/x-icon', ext: 'ico' },\n    { type: 'image/x-icon', ext: 'cur' },\n    { type: 'image/jpeg', ext: 'jpg' },\n    { type: 'image/jpeg', ext: 'jpeg' },\n    { type: 'image/jpeg', ext: 'jfif' },\n    { type: 'image/jpeg', ext: 'pjp' },\n    { type: 'image/jpeg', ext: 'pjpeg' },\n    { type: 'image/png', ext: 'png' },\n    { type: 'image/svg+xml', ext: 'svg' },\n    { type: 'image/tiff', ext: 'tif' },\n    { type: 'image/tiff', ext: 'tiff' },\n    { type: 'image/webp', ext: 'webp' },\n    { type: 'application/json', ext: 'json' },\n    { type: 'application/xml', ext: 'xml' },\n    { type: 'application/x-sh', ext: 'sh' },\n    { type: 'application/zip', ext: 'zip' },\n    { type: 'application/x-rar-compressed', ext: 'rar' },\n    { type: 'application/x-tar', ext: 'tar' },\n    { type: 'application/x-bzip', ext: 'bz' },\n    { type: 'application/x-bzip2', ext: 'bz2' },\n    { type: 'application/pdf', ext: 'pdf' },\n    { type: 'application/java-archive', ext: 'jar' },\n    { type: 'application/msword', ext: 'doc' },\n    { type: 'application/vnd.ms-excel', ext: 'xls' },\n    { type: 'application/vnd.ms-excel', ext: 'xlsx' },\n    { type: 'message/rfc822', ext: 'eml' },\n];\nvar isEmpty = function (obj) {\n    if (obj === void 0) { obj = {}; }\n    return Object.keys(obj).length === 0;\n};\nvar sortByField = function (list, field, dir) {\n    if (!list || !list.sort) {\n        return false;\n    }\n    var dirX = dir && dir === 'desc' ? -1 : 1;\n    list.sort(function (a, b) {\n        var a_val = a[field];\n        var b_val = b[field];\n        if (typeof b_val === 'undefined') {\n            return typeof a_val === 'undefined' ? 0 : 1 * dirX;\n        }\n        if (typeof a_val === 'undefined') {\n            return -1 * dirX;\n        }\n        if (a_val < b_val) {\n            return -1 * dirX;\n        }\n        if (a_val > b_val) {\n            return 1 * dirX;\n        }\n        return 0;\n    });\n    return true;\n};\nvar objectLessAttributes = function (obj, less) {\n    var ret = Object.assign({}, obj);\n    if (less) {\n        if (typeof less === 'string') {\n            delete ret[less];\n        }\n        else {\n            less.forEach(function (attr) {\n                delete ret[attr];\n            });\n        }\n    }\n    return ret;\n};\nvar filenameToContentType = function (filename, defVal) {\n    if (defVal === void 0) { defVal = 'application/octet-stream'; }\n    var name = filename.toLowerCase();\n    var filtered = MIME_MAP.filter(function (mime) { return name.endsWith('.' + mime.ext); });\n    return filtered.length > 0 ? filtered[0].type : defVal;\n};\nvar isTextFile = function (contentType) {\n    var type = contentType.toLowerCase();\n    if (type.startsWith('text/')) {\n        return true;\n    }\n    return ('application/json' === type ||\n        'application/xml' === type ||\n        'application/sh' === type);\n};\nvar generateRandomString = function () {\n    var result = '';\n    var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    for (var i = 32; i > 0; i -= 1) {\n        result += chars[Math.floor(Math.random() * chars.length)];\n    }\n    return result;\n};\nvar makeQuerablePromise = function (promise) {\n    if (promise.isResolved)\n        return promise;\n    var isPending = true;\n    var isRejected = false;\n    var isFullfilled = false;\n    var result = promise.then(function (data) {\n        isFullfilled = true;\n        isPending = false;\n        return data;\n    }, function (e) {\n        isRejected = true;\n        isPending = false;\n        throw e;\n    });\n    result.isFullfilled = function () { return isFullfilled; };\n    result.isPending = function () { return isPending; };\n    result.isRejected = function () { return isRejected; };\n    return result;\n};\nvar isWebWorker = function () {\n    if (typeof self === 'undefined') {\n        return false;\n    }\n    var selfContext = self;\n    return typeof selfContext.WorkerGlobalScope !== 'undefined' &&\n        self instanceof selfContext.WorkerGlobalScope;\n};\nvar browserOrNode = function () {\n    var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n    var isNode = typeof process !== 'undefined' &&\n        process.versions != null &&\n        process.versions.node != null;\n    return {\n        isBrowser: isBrowser,\n        isNode: isNode,\n    };\n};\n/**\n * transfer the first letter of the keys to lowercase\n * @param {Object} obj - the object need to be transferred\n * @param {Array} whiteListForItself - whitelist itself from being transferred\n * @param {Array} whiteListForChildren - whitelist its children keys from being transferred\n */\nvar transferKeyToLowerCase = function (obj, whiteListForItself, whiteListForChildren) {\n    if (whiteListForItself === void 0) { whiteListForItself = []; }\n    if (whiteListForChildren === void 0) { whiteListForChildren = []; }\n    if (!isStrictObject(obj))\n        return obj;\n    var ret = {};\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            var transferedKey = whiteListForItself.includes(key)\n                ? key\n                : key[0].toLowerCase() + key.slice(1);\n            ret[transferedKey] = whiteListForChildren.includes(key)\n                ? obj[key]\n                : transferKeyToLowerCase(obj[key], whiteListForItself, whiteListForChildren);\n        }\n    }\n    return ret;\n};\n/**\n * transfer the first letter of the keys to lowercase\n * @param {Object} obj - the object need to be transferred\n * @param {Array} whiteListForItself - whitelist itself from being transferred\n * @param {Array} whiteListForChildren - whitelist its children keys from being transferred\n */\nvar transferKeyToUpperCase = function (obj, whiteListForItself, whiteListForChildren) {\n    if (whiteListForItself === void 0) { whiteListForItself = []; }\n    if (whiteListForChildren === void 0) { whiteListForChildren = []; }\n    if (!isStrictObject(obj))\n        return obj;\n    var ret = {};\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            var transferredKey = whiteListForItself.includes(key)\n                ? key\n                : key[0].toUpperCase() + key.slice(1);\n            ret[transferredKey] = whiteListForChildren.includes(key)\n                ? obj[key]\n                : transferKeyToUpperCase(obj[key], whiteListForItself, whiteListForChildren);\n        }\n    }\n    return ret;\n};\n/**\n * Return true if the object is a strict object\n * which means it's not Array, Function, Number, String, Boolean or Null\n * @param obj the Object\n */\nvar isStrictObject = function (obj) {\n    return (obj instanceof Object &&\n        !(obj instanceof Array) &&\n        !(obj instanceof Function) &&\n        !(obj instanceof Number) &&\n        !(obj instanceof String) &&\n        !(obj instanceof Boolean));\n};\n/**\n * @deprecated use per-function imports\n */\nvar JS = /** @class */ (function () {\n    function JS() {\n    }\n    JS.isEmpty = isEmpty;\n    JS.sortByField = sortByField;\n    JS.objectLessAttributes = objectLessAttributes;\n    JS.filenameToContentType = filenameToContentType;\n    JS.isTextFile = isTextFile;\n    JS.generateRandomString = generateRandomString;\n    JS.makeQuerablePromise = makeQuerablePromise;\n    JS.isWebWorker = isWebWorker;\n    JS.browserOrNode = browserOrNode;\n    JS.transferKeyToLowerCase = transferKeyToLowerCase;\n    JS.transferKeyToUpperCase = transferKeyToUpperCase;\n    JS.isStrictObject = isStrictObject;\n    return JS;\n}());\n\n/**\n * @deprecated use per-function imports\n */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (JS);\n//# sourceMappingURL=JS.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-amplify/core/lib-esm/JS.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-amplify/core/lib-esm/Logger/ConsoleLogger.js":
/*!************************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/Logger/ConsoleLogger.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConsoleLogger: () => (/* binding */ ConsoleLogger),\n/* harmony export */   LOG_TYPE: () => (/* binding */ LOG_TYPE)\n/* harmony export */ });\n/* harmony import */ var _Util_Constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Util/Constants */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/Util/Constants.js\");\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __values = (undefined && undefined.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (undefined && undefined.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\n\nvar LOG_LEVELS = {\n    VERBOSE: 1,\n    DEBUG: 2,\n    INFO: 3,\n    WARN: 4,\n    ERROR: 5,\n};\nvar LOG_TYPE;\n(function (LOG_TYPE) {\n    LOG_TYPE[\"DEBUG\"] = \"DEBUG\";\n    LOG_TYPE[\"ERROR\"] = \"ERROR\";\n    LOG_TYPE[\"INFO\"] = \"INFO\";\n    LOG_TYPE[\"WARN\"] = \"WARN\";\n    LOG_TYPE[\"VERBOSE\"] = \"VERBOSE\";\n})(LOG_TYPE || (LOG_TYPE = {}));\n/**\n * Write logs\n * @class Logger\n */\nvar ConsoleLogger = /** @class */ (function () {\n    /**\n     * @constructor\n     * @param {string} name - Name of the logger\n     */\n    function ConsoleLogger(name, level) {\n        if (level === void 0) { level = LOG_TYPE.WARN; }\n        this.name = name;\n        this.level = level;\n        this._pluggables = [];\n    }\n    ConsoleLogger.prototype._padding = function (n) {\n        return n < 10 ? '0' + n : '' + n;\n    };\n    ConsoleLogger.prototype._ts = function () {\n        var dt = new Date();\n        return ([this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(':') +\n            '.' +\n            dt.getMilliseconds());\n    };\n    ConsoleLogger.prototype.configure = function (config) {\n        if (!config)\n            return this._config;\n        this._config = config;\n        return this._config;\n    };\n    /**\n     * Write log\n     * @method\n     * @memeberof Logger\n     * @param {LOG_TYPE|string} type - log type, default INFO\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype._log = function (type) {\n        var e_1, _a;\n        var msg = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            msg[_i - 1] = arguments[_i];\n        }\n        var logger_level_name = this.level;\n        if (ConsoleLogger.LOG_LEVEL) {\n            logger_level_name = ConsoleLogger.LOG_LEVEL;\n        }\n        if (typeof window !== 'undefined' && window.LOG_LEVEL) {\n            logger_level_name = window.LOG_LEVEL;\n        }\n        var logger_level = LOG_LEVELS[logger_level_name];\n        var type_level = LOG_LEVELS[type];\n        if (!(type_level >= logger_level)) {\n            // Do nothing if type is not greater than or equal to logger level (handle undefined)\n            return;\n        }\n        var log = console.log.bind(console);\n        if (type === LOG_TYPE.ERROR && console.error) {\n            log = console.error.bind(console);\n        }\n        if (type === LOG_TYPE.WARN && console.warn) {\n            log = console.warn.bind(console);\n        }\n        var prefix = \"[\" + type + \"] \" + this._ts() + \" \" + this.name;\n        var message = '';\n        if (msg.length === 1 && typeof msg[0] === 'string') {\n            message = prefix + \" - \" + msg[0];\n            log(message);\n        }\n        else if (msg.length === 1) {\n            message = prefix + \" \" + msg[0];\n            log(prefix, msg[0]);\n        }\n        else if (typeof msg[0] === 'string') {\n            var obj = msg.slice(1);\n            if (obj.length === 1) {\n                obj = obj[0];\n            }\n            message = prefix + \" - \" + msg[0] + \" \" + obj;\n            log(prefix + \" - \" + msg[0], obj);\n        }\n        else {\n            message = prefix + \" \" + msg;\n            log(prefix, msg);\n        }\n        try {\n            for (var _b = __values(this._pluggables), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var plugin = _c.value;\n                var logEvent = { message: message, timestamp: Date.now() };\n                plugin.pushLogs([logEvent]);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /**\n     * Write General log. Default to INFO\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype.log = function () {\n        var msg = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            msg[_i] = arguments[_i];\n        }\n        this._log.apply(this, __spread([LOG_TYPE.INFO], msg));\n    };\n    /**\n     * Write INFO log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype.info = function () {\n        var msg = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            msg[_i] = arguments[_i];\n        }\n        this._log.apply(this, __spread([LOG_TYPE.INFO], msg));\n    };\n    /**\n     * Write WARN log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype.warn = function () {\n        var msg = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            msg[_i] = arguments[_i];\n        }\n        this._log.apply(this, __spread([LOG_TYPE.WARN], msg));\n    };\n    /**\n     * Write ERROR log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype.error = function () {\n        var msg = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            msg[_i] = arguments[_i];\n        }\n        this._log.apply(this, __spread([LOG_TYPE.ERROR], msg));\n    };\n    /**\n     * Write DEBUG log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype.debug = function () {\n        var msg = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            msg[_i] = arguments[_i];\n        }\n        this._log.apply(this, __spread([LOG_TYPE.DEBUG], msg));\n    };\n    /**\n     * Write VERBOSE log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype.verbose = function () {\n        var msg = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            msg[_i] = arguments[_i];\n        }\n        this._log.apply(this, __spread([LOG_TYPE.VERBOSE], msg));\n    };\n    ConsoleLogger.prototype.addPluggable = function (pluggable) {\n        if (pluggable && pluggable.getCategoryName() === _Util_Constants__WEBPACK_IMPORTED_MODULE_0__.AWS_CLOUDWATCH_CATEGORY) {\n            this._pluggables.push(pluggable);\n            pluggable.configure(this._config);\n        }\n    };\n    ConsoleLogger.prototype.listPluggables = function () {\n        return this._pluggables;\n    };\n    ConsoleLogger.LOG_LEVEL = null;\n    return ConsoleLogger;\n}());\n\n//# sourceMappingURL=ConsoleLogger.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-amplify/core/lib-esm/Logger/ConsoleLogger.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-amplify/core/lib-esm/OAuthHelper/FacebookOAuth.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/OAuthHelper/FacebookOAuth.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FacebookOAuth: () => (/* binding */ FacebookOAuth),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Logger */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/Logger/ConsoleLogger.js\");\n/* harmony import */ var _JS__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../JS */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/JS.js\");\n/* harmony import */ var _Util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Util */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/Util/Retry.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n\n\nvar logger = new _Logger__WEBPACK_IMPORTED_MODULE_0__.ConsoleLogger('CognitoCredentials');\nvar waitForInit = new Promise(function (res, rej) {\n    if (!(0,_JS__WEBPACK_IMPORTED_MODULE_1__.browserOrNode)().isBrowser) {\n        logger.debug('not in the browser, directly resolved');\n        return res();\n    }\n    var fb = window['FB'];\n    if (fb) {\n        logger.debug('FB SDK already loaded');\n        return res();\n    }\n    else {\n        setTimeout(function () {\n            return res();\n        }, 2000);\n    }\n});\nvar FacebookOAuth = /** @class */ (function () {\n    function FacebookOAuth() {\n        this.initialized = false;\n        this.refreshFacebookToken = this.refreshFacebookToken.bind(this);\n        this._refreshFacebookTokenImpl = this._refreshFacebookTokenImpl.bind(this);\n    }\n    FacebookOAuth.prototype.refreshFacebookToken = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!this.initialized) return [3 /*break*/, 2];\n                        logger.debug('need to wait for the Facebook SDK loaded');\n                        return [4 /*yield*/, waitForInit];\n                    case 1:\n                        _a.sent();\n                        this.initialized = true;\n                        logger.debug('finish waiting');\n                        _a.label = 2;\n                    case 2: return [2 /*return*/, this._refreshFacebookTokenImpl()];\n                }\n            });\n        });\n    };\n    FacebookOAuth.prototype._refreshFacebookTokenImpl = function () {\n        var fb = null;\n        if ((0,_JS__WEBPACK_IMPORTED_MODULE_1__.browserOrNode)().isBrowser)\n            fb = window['FB'];\n        if (!fb) {\n            var errorMessage = 'no fb sdk available';\n            logger.debug(errorMessage);\n            return Promise.reject(new _Util__WEBPACK_IMPORTED_MODULE_2__.NonRetryableError(errorMessage));\n        }\n        return new Promise(function (res, rej) {\n            fb.getLoginStatus(function (fbResponse) {\n                if (!fbResponse || !fbResponse.authResponse) {\n                    var errorMessage = 'no response from facebook when refreshing the jwt token';\n                    logger.debug(errorMessage);\n                    // There is no definitive indication for a network error in\n                    // fbResponse, so we are treating it as an invalid token.\n                    rej(new _Util__WEBPACK_IMPORTED_MODULE_2__.NonRetryableError(errorMessage));\n                }\n                else {\n                    var response = fbResponse.authResponse;\n                    var accessToken = response.accessToken, expiresIn = response.expiresIn;\n                    var date = new Date();\n                    var expires_at = expiresIn * 1000 + date.getTime();\n                    if (!accessToken) {\n                        var errorMessage = 'the jwtToken is undefined';\n                        logger.debug(errorMessage);\n                        rej(new _Util__WEBPACK_IMPORTED_MODULE_2__.NonRetryableError(errorMessage));\n                    }\n                    res({\n                        token: accessToken,\n                        expires_at: expires_at,\n                    });\n                }\n            }, { scope: 'public_profile,email' });\n        });\n    };\n    return FacebookOAuth;\n}());\n\n/**\n * @deprecated use named import\n */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FacebookOAuth);\n//# sourceMappingURL=FacebookOAuth.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-amplify/core/lib-esm/OAuthHelper/FacebookOAuth.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-amplify/core/lib-esm/OAuthHelper/GoogleOAuth.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/OAuthHelper/GoogleOAuth.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GoogleOAuth: () => (/* binding */ GoogleOAuth),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Logger */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/Logger/ConsoleLogger.js\");\n/* harmony import */ var _JS__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../JS */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/JS.js\");\n/* harmony import */ var _Util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Util */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/Util/Retry.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n\n\nvar logger = new _Logger__WEBPACK_IMPORTED_MODULE_0__.ConsoleLogger('CognitoCredentials');\nvar waitForInit = new Promise(function (res, rej) {\n    if (!(0,_JS__WEBPACK_IMPORTED_MODULE_1__.browserOrNode)().isBrowser) {\n        logger.debug('not in the browser, directly resolved');\n        return res();\n    }\n    var ga = window['gapi'] && window['gapi'].auth2 ? window['gapi'].auth2 : null;\n    if (ga) {\n        logger.debug('google api already loaded');\n        return res();\n    }\n    else {\n        setTimeout(function () {\n            return res();\n        }, 2000);\n    }\n});\nvar GoogleOAuth = /** @class */ (function () {\n    function GoogleOAuth() {\n        this.initialized = false;\n        this.refreshGoogleToken = this.refreshGoogleToken.bind(this);\n        this._refreshGoogleTokenImpl = this._refreshGoogleTokenImpl.bind(this);\n    }\n    GoogleOAuth.prototype.refreshGoogleToken = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!this.initialized) return [3 /*break*/, 2];\n                        logger.debug('need to wait for the Google SDK loaded');\n                        return [4 /*yield*/, waitForInit];\n                    case 1:\n                        _a.sent();\n                        this.initialized = true;\n                        logger.debug('finish waiting');\n                        _a.label = 2;\n                    case 2: return [2 /*return*/, this._refreshGoogleTokenImpl()];\n                }\n            });\n        });\n    };\n    GoogleOAuth.prototype._refreshGoogleTokenImpl = function () {\n        var ga = null;\n        if ((0,_JS__WEBPACK_IMPORTED_MODULE_1__.browserOrNode)().isBrowser)\n            ga = window['gapi'] && window['gapi'].auth2 ? window['gapi'].auth2 : null;\n        if (!ga) {\n            logger.debug('no gapi auth2 available');\n            return Promise.reject('no gapi auth2 available');\n        }\n        return new Promise(function (res, rej) {\n            ga.getAuthInstance()\n                .then(function (googleAuth) {\n                if (!googleAuth) {\n                    logger.debug('google Auth undefined');\n                    rej(new _Util__WEBPACK_IMPORTED_MODULE_2__.NonRetryableError('google Auth undefined'));\n                }\n                var googleUser = googleAuth.currentUser.get();\n                // refresh the token\n                if (googleUser.isSignedIn()) {\n                    logger.debug('refreshing the google access token');\n                    googleUser\n                        .reloadAuthResponse()\n                        .then(function (authResponse) {\n                        var id_token = authResponse.id_token, expires_at = authResponse.expires_at;\n                        res({ token: id_token, expires_at: expires_at });\n                    })\n                        .catch(function (err) {\n                        if (err && err.error === 'network_error') {\n                            // Not using NonRetryableError so handler will be retried\n                            rej('Network error reloading google auth response');\n                        }\n                        else {\n                            rej(new _Util__WEBPACK_IMPORTED_MODULE_2__.NonRetryableError('Failed to reload google auth response'));\n                        }\n                    });\n                }\n                else {\n                    rej(new _Util__WEBPACK_IMPORTED_MODULE_2__.NonRetryableError('User is not signed in with Google'));\n                }\n            })\n                .catch(function (err) {\n                logger.debug('Failed to refresh google token', err);\n                rej(new _Util__WEBPACK_IMPORTED_MODULE_2__.NonRetryableError('Failed to refresh google token'));\n            });\n        });\n    };\n    return GoogleOAuth;\n}());\n\n/**\n * @deprecated use named import\n */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GoogleOAuth);\n//# sourceMappingURL=GoogleOAuth.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-amplify/core/lib-esm/OAuthHelper/GoogleOAuth.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-amplify/core/lib-esm/OAuthHelper/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/OAuthHelper/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FacebookOAuth: () => (/* binding */ FacebookOAuth),\n/* harmony export */   GoogleOAuth: () => (/* binding */ GoogleOAuth)\n/* harmony export */ });\n/* harmony import */ var _GoogleOAuth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GoogleOAuth */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/OAuthHelper/GoogleOAuth.js\");\n/* harmony import */ var _FacebookOAuth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FacebookOAuth */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/OAuthHelper/FacebookOAuth.js\");\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n\nvar GoogleOAuth = new _GoogleOAuth__WEBPACK_IMPORTED_MODULE_0__.GoogleOAuth();\nvar FacebookOAuth = new _FacebookOAuth__WEBPACK_IMPORTED_MODULE_1__.FacebookOAuth();\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1hbXBsaWZ5L2NvcmUvbGliLWVzbS9PQXV0aEhlbHBlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2dFO0FBQ007QUFDL0Qsc0JBQXNCLHFEQUFnQjtBQUN0Qyx3QkFBd0IseURBQWtCO0FBQ2pEIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLWFtcGxpZnkvY29yZS9saWItZXNtL09BdXRoSGVscGVyL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgMjAxNy0yMDE3IEFtYXpvbi5jb20sIEluYy4gb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKS4gWW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoXG4gKiB0aGUgTGljZW5zZS4gQSBjb3B5IG9mIHRoZSBMaWNlbnNlIGlzIGxvY2F0ZWQgYXRcbiAqXG4gKiAgICAgaHR0cDovL2F3cy5hbWF6b24uY29tL2FwYWNoZTIuMC9cbiAqXG4gKiBvciBpbiB0aGUgXCJsaWNlbnNlXCIgZmlsZSBhY2NvbXBhbnlpbmcgdGhpcyBmaWxlLiBUaGlzIGZpbGUgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1JcbiAqIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9uc1xuICogYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgeyBHb29nbGVPQXV0aCBhcyBHb29nbGVPQXV0aENsYXNzIH0gZnJvbSAnLi9Hb29nbGVPQXV0aCc7XG5pbXBvcnQgeyBGYWNlYm9va09BdXRoIGFzIEZhY2Vib29rT0F1dGhDbGFzcyB9IGZyb20gJy4vRmFjZWJvb2tPQXV0aCc7XG5leHBvcnQgdmFyIEdvb2dsZU9BdXRoID0gbmV3IEdvb2dsZU9BdXRoQ2xhc3MoKTtcbmV4cG9ydCB2YXIgRmFjZWJvb2tPQXV0aCA9IG5ldyBGYWNlYm9va09BdXRoQ2xhc3MoKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-amplify/core/lib-esm/OAuthHelper/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-amplify/core/lib-esm/Parser.js":
/*!**********************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/Parser.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Parser: () => (/* binding */ Parser),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   parseMobileHubConfig: () => (/* binding */ parseMobileHubConfig)\n/* harmony export */ });\n/* harmony import */ var _Logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Logger */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/Logger/ConsoleLogger.js\");\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n\nvar logger = new _Logger__WEBPACK_IMPORTED_MODULE_0__.ConsoleLogger('Parser');\nvar parseMobileHubConfig = function (config) {\n    var amplifyConfig = {};\n    // Analytics\n    if (config['aws_mobile_analytics_app_id']) {\n        var Analytics = {\n            AWSPinpoint: {\n                appId: config['aws_mobile_analytics_app_id'],\n                region: config['aws_mobile_analytics_app_region'],\n            },\n        };\n        amplifyConfig.Analytics = Analytics;\n    }\n    // Auth\n    if (config['aws_cognito_identity_pool_id'] || config['aws_user_pools_id']) {\n        amplifyConfig.Auth = {\n            userPoolId: config['aws_user_pools_id'],\n            userPoolWebClientId: config['aws_user_pools_web_client_id'],\n            region: config['aws_cognito_region'],\n            identityPoolId: config['aws_cognito_identity_pool_id'],\n            identityPoolRegion: config['aws_cognito_region'],\n            mandatorySignIn: config['aws_mandatory_sign_in'] === 'enable',\n            signUpVerificationMethod: config['aws_cognito_sign_up_verification_method'] || 'code',\n        };\n    }\n    // Storage\n    var storageConfig;\n    if (config['aws_user_files_s3_bucket']) {\n        storageConfig = {\n            AWSS3: {\n                bucket: config['aws_user_files_s3_bucket'],\n                region: config['aws_user_files_s3_bucket_region'],\n                dangerouslyConnectToHttpEndpointForTesting: config['aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing'],\n            },\n        };\n    }\n    else {\n        storageConfig = config ? config.Storage || config : {};\n    }\n    // Logging\n    if (config['Logging']) {\n        amplifyConfig.Logging = __assign(__assign({}, config['Logging']), { region: config['aws_project_region'] });\n    }\n    // Geo\n    if (config['geo']) {\n        amplifyConfig.Geo = Object.assign({}, config.geo);\n        if (config.geo['amazon_location_service']) {\n            amplifyConfig.Geo = {\n                AmazonLocationService: config.geo['amazon_location_service'],\n            };\n        }\n    }\n    amplifyConfig.Analytics = Object.assign({}, amplifyConfig.Analytics, config.Analytics);\n    amplifyConfig.Auth = Object.assign({}, amplifyConfig.Auth, config.Auth);\n    amplifyConfig.Storage = Object.assign({}, storageConfig);\n    amplifyConfig.Logging = Object.assign({}, amplifyConfig.Logging, config.Logging);\n    logger.debug('parse config', config, 'to amplifyconfig', amplifyConfig);\n    return amplifyConfig;\n};\n/**\n * @deprecated use per-function export\n */\nvar Parser = /** @class */ (function () {\n    function Parser() {\n    }\n    Parser.parseMobilehubConfig = parseMobileHubConfig;\n    return Parser;\n}());\n\n/**\n * @deprecated use per-function export\n */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Parser);\n//# sourceMappingURL=Parser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1hbXBsaWZ5L2NvcmUvbGliLWVzbS9QYXJzZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLGdCQUFnQixTQUFJLElBQUksU0FBSTtBQUM1QjtBQUNBLGlEQUFpRCxPQUFPO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDbUQ7QUFDbkQsaUJBQWlCLGtEQUFNO0FBQ2hCO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCx3QkFBd0Isc0NBQXNDO0FBQ2xIO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEM7QUFDOUMseUNBQXlDO0FBQ3pDLDRDQUE0QztBQUM1Qyw0Q0FBNEM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDaUI7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsaUVBQWUsTUFBTSxFQUFDO0FBQ3RCIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLWFtcGxpZnkvY29yZS9saWItZXNtL1BhcnNlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuaW1wb3J0IHsgQ29uc29sZUxvZ2dlciBhcyBMb2dnZXIgfSBmcm9tICcuL0xvZ2dlcic7XG52YXIgbG9nZ2VyID0gbmV3IExvZ2dlcignUGFyc2VyJyk7XG5leHBvcnQgdmFyIHBhcnNlTW9iaWxlSHViQ29uZmlnID0gZnVuY3Rpb24gKGNvbmZpZykge1xuICAgIHZhciBhbXBsaWZ5Q29uZmlnID0ge307XG4gICAgLy8gQW5hbHl0aWNzXG4gICAgaWYgKGNvbmZpZ1snYXdzX21vYmlsZV9hbmFseXRpY3NfYXBwX2lkJ10pIHtcbiAgICAgICAgdmFyIEFuYWx5dGljcyA9IHtcbiAgICAgICAgICAgIEFXU1BpbnBvaW50OiB7XG4gICAgICAgICAgICAgICAgYXBwSWQ6IGNvbmZpZ1snYXdzX21vYmlsZV9hbmFseXRpY3NfYXBwX2lkJ10sXG4gICAgICAgICAgICAgICAgcmVnaW9uOiBjb25maWdbJ2F3c19tb2JpbGVfYW5hbHl0aWNzX2FwcF9yZWdpb24nXSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgICAgIGFtcGxpZnlDb25maWcuQW5hbHl0aWNzID0gQW5hbHl0aWNzO1xuICAgIH1cbiAgICAvLyBBdXRoXG4gICAgaWYgKGNvbmZpZ1snYXdzX2NvZ25pdG9faWRlbnRpdHlfcG9vbF9pZCddIHx8IGNvbmZpZ1snYXdzX3VzZXJfcG9vbHNfaWQnXSkge1xuICAgICAgICBhbXBsaWZ5Q29uZmlnLkF1dGggPSB7XG4gICAgICAgICAgICB1c2VyUG9vbElkOiBjb25maWdbJ2F3c191c2VyX3Bvb2xzX2lkJ10sXG4gICAgICAgICAgICB1c2VyUG9vbFdlYkNsaWVudElkOiBjb25maWdbJ2F3c191c2VyX3Bvb2xzX3dlYl9jbGllbnRfaWQnXSxcbiAgICAgICAgICAgIHJlZ2lvbjogY29uZmlnWydhd3NfY29nbml0b19yZWdpb24nXSxcbiAgICAgICAgICAgIGlkZW50aXR5UG9vbElkOiBjb25maWdbJ2F3c19jb2duaXRvX2lkZW50aXR5X3Bvb2xfaWQnXSxcbiAgICAgICAgICAgIGlkZW50aXR5UG9vbFJlZ2lvbjogY29uZmlnWydhd3NfY29nbml0b19yZWdpb24nXSxcbiAgICAgICAgICAgIG1hbmRhdG9yeVNpZ25JbjogY29uZmlnWydhd3NfbWFuZGF0b3J5X3NpZ25faW4nXSA9PT0gJ2VuYWJsZScsXG4gICAgICAgICAgICBzaWduVXBWZXJpZmljYXRpb25NZXRob2Q6IGNvbmZpZ1snYXdzX2NvZ25pdG9fc2lnbl91cF92ZXJpZmljYXRpb25fbWV0aG9kJ10gfHwgJ2NvZGUnLFxuICAgICAgICB9O1xuICAgIH1cbiAgICAvLyBTdG9yYWdlXG4gICAgdmFyIHN0b3JhZ2VDb25maWc7XG4gICAgaWYgKGNvbmZpZ1snYXdzX3VzZXJfZmlsZXNfczNfYnVja2V0J10pIHtcbiAgICAgICAgc3RvcmFnZUNvbmZpZyA9IHtcbiAgICAgICAgICAgIEFXU1MzOiB7XG4gICAgICAgICAgICAgICAgYnVja2V0OiBjb25maWdbJ2F3c191c2VyX2ZpbGVzX3MzX2J1Y2tldCddLFxuICAgICAgICAgICAgICAgIHJlZ2lvbjogY29uZmlnWydhd3NfdXNlcl9maWxlc19zM19idWNrZXRfcmVnaW9uJ10sXG4gICAgICAgICAgICAgICAgZGFuZ2Vyb3VzbHlDb25uZWN0VG9IdHRwRW5kcG9pbnRGb3JUZXN0aW5nOiBjb25maWdbJ2F3c191c2VyX2ZpbGVzX3MzX2Rhbmdlcm91c2x5X2Nvbm5lY3RfdG9faHR0cF9lbmRwb2ludF9mb3JfdGVzdGluZyddLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHN0b3JhZ2VDb25maWcgPSBjb25maWcgPyBjb25maWcuU3RvcmFnZSB8fCBjb25maWcgOiB7fTtcbiAgICB9XG4gICAgLy8gTG9nZ2luZ1xuICAgIGlmIChjb25maWdbJ0xvZ2dpbmcnXSkge1xuICAgICAgICBhbXBsaWZ5Q29uZmlnLkxvZ2dpbmcgPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgY29uZmlnWydMb2dnaW5nJ10pLCB7IHJlZ2lvbjogY29uZmlnWydhd3NfcHJvamVjdF9yZWdpb24nXSB9KTtcbiAgICB9XG4gICAgLy8gR2VvXG4gICAgaWYgKGNvbmZpZ1snZ2VvJ10pIHtcbiAgICAgICAgYW1wbGlmeUNvbmZpZy5HZW8gPSBPYmplY3QuYXNzaWduKHt9LCBjb25maWcuZ2VvKTtcbiAgICAgICAgaWYgKGNvbmZpZy5nZW9bJ2FtYXpvbl9sb2NhdGlvbl9zZXJ2aWNlJ10pIHtcbiAgICAgICAgICAgIGFtcGxpZnlDb25maWcuR2VvID0ge1xuICAgICAgICAgICAgICAgIEFtYXpvbkxvY2F0aW9uU2VydmljZTogY29uZmlnLmdlb1snYW1hem9uX2xvY2F0aW9uX3NlcnZpY2UnXSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9XG4gICAgYW1wbGlmeUNvbmZpZy5BbmFseXRpY3MgPSBPYmplY3QuYXNzaWduKHt9LCBhbXBsaWZ5Q29uZmlnLkFuYWx5dGljcywgY29uZmlnLkFuYWx5dGljcyk7XG4gICAgYW1wbGlmeUNvbmZpZy5BdXRoID0gT2JqZWN0LmFzc2lnbih7fSwgYW1wbGlmeUNvbmZpZy5BdXRoLCBjb25maWcuQXV0aCk7XG4gICAgYW1wbGlmeUNvbmZpZy5TdG9yYWdlID0gT2JqZWN0LmFzc2lnbih7fSwgc3RvcmFnZUNvbmZpZyk7XG4gICAgYW1wbGlmeUNvbmZpZy5Mb2dnaW5nID0gT2JqZWN0LmFzc2lnbih7fSwgYW1wbGlmeUNvbmZpZy5Mb2dnaW5nLCBjb25maWcuTG9nZ2luZyk7XG4gICAgbG9nZ2VyLmRlYnVnKCdwYXJzZSBjb25maWcnLCBjb25maWcsICd0byBhbXBsaWZ5Y29uZmlnJywgYW1wbGlmeUNvbmZpZyk7XG4gICAgcmV0dXJuIGFtcGxpZnlDb25maWc7XG59O1xuLyoqXG4gKiBAZGVwcmVjYXRlZCB1c2UgcGVyLWZ1bmN0aW9uIGV4cG9ydFxuICovXG52YXIgUGFyc2VyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFBhcnNlcigpIHtcbiAgICB9XG4gICAgUGFyc2VyLnBhcnNlTW9iaWxlaHViQ29uZmlnID0gcGFyc2VNb2JpbGVIdWJDb25maWc7XG4gICAgcmV0dXJuIFBhcnNlcjtcbn0oKSk7XG5leHBvcnQgeyBQYXJzZXIgfTtcbi8qKlxuICogQGRlcHJlY2F0ZWQgdXNlIHBlci1mdW5jdGlvbiBleHBvcnRcbiAqL1xuZXhwb3J0IGRlZmF1bHQgUGFyc2VyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UGFyc2VyLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-amplify/core/lib-esm/Parser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-amplify/core/lib-esm/Platform/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/Platform/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Platform: () => (/* binding */ Platform),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getAmplifyUserAgent: () => (/* binding */ getAmplifyUserAgent)\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/Platform/version.js\");\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nvar BASE_USER_AGENT = \"aws-amplify/\" + _version__WEBPACK_IMPORTED_MODULE_0__.version;\nvar Platform = {\n    userAgent: BASE_USER_AGENT + \" js\",\n    product: '',\n    navigator: null,\n    isReactNative: false,\n};\nif (typeof navigator !== 'undefined' && navigator.product) {\n    Platform.product = navigator.product || '';\n    Platform.navigator = navigator || null;\n    switch (navigator.product) {\n        case 'ReactNative':\n            Platform.userAgent = BASE_USER_AGENT + \" react-native\";\n            Platform.isReactNative = true;\n            break;\n        default:\n            Platform.userAgent = BASE_USER_AGENT + \" js\";\n            Platform.isReactNative = false;\n            break;\n    }\n}\nvar getAmplifyUserAgent = function (content) {\n    return \"\" + Platform.userAgent + (content ? content : '');\n};\n/**\n * @deprecated use named import\n */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Platform);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1hbXBsaWZ5L2NvcmUvbGliLWVzbS9QbGF0Zm9ybS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ29DO0FBQ3BDLHVDQUF1Qyw2Q0FBTztBQUN2QztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWUsUUFBUSxFQUFDO0FBQ3hCIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLWFtcGxpZnkvY29yZS9saWItZXNtL1BsYXRmb3JtL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgMjAxNy0yMDE3IEFtYXpvbi5jb20sIEluYy4gb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKS4gWW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoXG4gKiB0aGUgTGljZW5zZS4gQSBjb3B5IG9mIHRoZSBMaWNlbnNlIGlzIGxvY2F0ZWQgYXRcbiAqXG4gKiAgICAgaHR0cDovL2F3cy5hbWF6b24uY29tL2FwYWNoZTIuMC9cbiAqXG4gKiBvciBpbiB0aGUgXCJsaWNlbnNlXCIgZmlsZSBhY2NvbXBhbnlpbmcgdGhpcyBmaWxlLiBUaGlzIGZpbGUgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1JcbiAqIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9uc1xuICogYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSAnLi92ZXJzaW9uJztcbnZhciBCQVNFX1VTRVJfQUdFTlQgPSBcImF3cy1hbXBsaWZ5L1wiICsgdmVyc2lvbjtcbmV4cG9ydCB2YXIgUGxhdGZvcm0gPSB7XG4gICAgdXNlckFnZW50OiBCQVNFX1VTRVJfQUdFTlQgKyBcIiBqc1wiLFxuICAgIHByb2R1Y3Q6ICcnLFxuICAgIG5hdmlnYXRvcjogbnVsbCxcbiAgICBpc1JlYWN0TmF0aXZlOiBmYWxzZSxcbn07XG5pZiAodHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgbmF2aWdhdG9yLnByb2R1Y3QpIHtcbiAgICBQbGF0Zm9ybS5wcm9kdWN0ID0gbmF2aWdhdG9yLnByb2R1Y3QgfHwgJyc7XG4gICAgUGxhdGZvcm0ubmF2aWdhdG9yID0gbmF2aWdhdG9yIHx8IG51bGw7XG4gICAgc3dpdGNoIChuYXZpZ2F0b3IucHJvZHVjdCkge1xuICAgICAgICBjYXNlICdSZWFjdE5hdGl2ZSc6XG4gICAgICAgICAgICBQbGF0Zm9ybS51c2VyQWdlbnQgPSBCQVNFX1VTRVJfQUdFTlQgKyBcIiByZWFjdC1uYXRpdmVcIjtcbiAgICAgICAgICAgIFBsYXRmb3JtLmlzUmVhY3ROYXRpdmUgPSB0cnVlO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBQbGF0Zm9ybS51c2VyQWdlbnQgPSBCQVNFX1VTRVJfQUdFTlQgKyBcIiBqc1wiO1xuICAgICAgICAgICAgUGxhdGZvcm0uaXNSZWFjdE5hdGl2ZSA9IGZhbHNlO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgfVxufVxuZXhwb3J0IHZhciBnZXRBbXBsaWZ5VXNlckFnZW50ID0gZnVuY3Rpb24gKGNvbnRlbnQpIHtcbiAgICByZXR1cm4gXCJcIiArIFBsYXRmb3JtLnVzZXJBZ2VudCArIChjb250ZW50ID8gY29udGVudCA6ICcnKTtcbn07XG4vKipcbiAqIEBkZXByZWNhdGVkIHVzZSBuYW1lZCBpbXBvcnRcbiAqL1xuZXhwb3J0IGRlZmF1bHQgUGxhdGZvcm07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-amplify/core/lib-esm/Platform/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-amplify/core/lib-esm/Platform/version.js":
/*!********************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/Platform/version.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\n// generated by genversion\nvar version = '4.7.14';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1hbXBsaWZ5L2NvcmUvbGliLWVzbS9QbGF0Zm9ybS92ZXJzaW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNPO0FBQ1AiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3MtYW1wbGlmeS9jb3JlL2xpYi1lc20vUGxhdGZvcm0vdmVyc2lvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBnZW5lcmF0ZWQgYnkgZ2VudmVyc2lvblxuZXhwb3J0IHZhciB2ZXJzaW9uID0gJzQuNy4xNCc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-amplify/core/lib-esm/Platform/version.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-amplify/core/lib-esm/StorageHelper/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/StorageHelper/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MemoryStorage: () => (/* binding */ MemoryStorage),\n/* harmony export */   StorageHelper: () => (/* binding */ StorageHelper),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar dataMemory = {};\n/** @class */\nvar MemoryStorage = /** @class */ (function () {\n    function MemoryStorage() {\n    }\n    /**\n     * This is used to set a specific item in storage\n     * @param {string} key - the key for the item\n     * @param {object} value - the value\n     * @returns {string} value that was set\n     */\n    MemoryStorage.setItem = function (key, value) {\n        dataMemory[key] = value;\n        return dataMemory[key];\n    };\n    /**\n     * This is used to get a specific key from storage\n     * @param {string} key - the key for the item\n     * This is used to clear the storage\n     * @returns {string} the data item\n     */\n    MemoryStorage.getItem = function (key) {\n        return Object.prototype.hasOwnProperty.call(dataMemory, key)\n            ? dataMemory[key]\n            : undefined;\n    };\n    /**\n     * This is used to remove an item from storage\n     * @param {string} key - the key being set\n     * @returns {string} value - value that was deleted\n     */\n    MemoryStorage.removeItem = function (key) {\n        return delete dataMemory[key];\n    };\n    /**\n     * This is used to clear the storage\n     * @returns {string} nothing\n     */\n    MemoryStorage.clear = function () {\n        dataMemory = {};\n        return dataMemory;\n    };\n    return MemoryStorage;\n}());\n\nvar StorageHelper = /** @class */ (function () {\n    /**\n     * This is used to get a storage object\n     * @returns {object} the storage\n     */\n    function StorageHelper() {\n        try {\n            this.storageWindow = window.localStorage;\n            this.storageWindow.setItem('aws.amplify.test-ls', 1);\n            this.storageWindow.removeItem('aws.amplify.test-ls');\n        }\n        catch (exception) {\n            this.storageWindow = MemoryStorage;\n        }\n    }\n    /**\n     * This is used to return the storage\n     * @returns {object} the storage\n     */\n    StorageHelper.prototype.getStorage = function () {\n        return this.storageWindow;\n    };\n    return StorageHelper;\n}());\n\n/**\n * @deprecated use named import\n */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (StorageHelper);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1hbXBsaWZ5L2NvcmUvbGliLWVzbS9TdG9yYWdlSGVscGVyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUN3QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ3dCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLGFBQWEsRUFBQztBQUM3QiIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1hbXBsaWZ5L2NvcmUvbGliLWVzbS9TdG9yYWdlSGVscGVyL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgMjAxNy0yMDE3IEFtYXpvbi5jb20sIEluYy4gb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKS4gWW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoXG4gKiB0aGUgTGljZW5zZS4gQSBjb3B5IG9mIHRoZSBMaWNlbnNlIGlzIGxvY2F0ZWQgYXRcbiAqXG4gKiAgICAgaHR0cDovL2F3cy5hbWF6b24uY29tL2FwYWNoZTIuMC9cbiAqXG4gKiBvciBpbiB0aGUgXCJsaWNlbnNlXCIgZmlsZSBhY2NvbXBhbnlpbmcgdGhpcyBmaWxlLiBUaGlzIGZpbGUgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1JcbiAqIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9uc1xuICogYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgZGF0YU1lbW9yeSA9IHt9O1xuLyoqIEBjbGFzcyAqL1xudmFyIE1lbW9yeVN0b3JhZ2UgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTWVtb3J5U3RvcmFnZSgpIHtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhpcyBpcyB1c2VkIHRvIHNldCBhIHNwZWNpZmljIGl0ZW0gaW4gc3RvcmFnZVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgLSB0aGUga2V5IGZvciB0aGUgaXRlbVxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSB2YWx1ZSAtIHRoZSB2YWx1ZVxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IHZhbHVlIHRoYXQgd2FzIHNldFxuICAgICAqL1xuICAgIE1lbW9yeVN0b3JhZ2Uuc2V0SXRlbSA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gICAgICAgIGRhdGFNZW1vcnlba2V5XSA9IHZhbHVlO1xuICAgICAgICByZXR1cm4gZGF0YU1lbW9yeVtrZXldO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogVGhpcyBpcyB1c2VkIHRvIGdldCBhIHNwZWNpZmljIGtleSBmcm9tIHN0b3JhZ2VcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5IC0gdGhlIGtleSBmb3IgdGhlIGl0ZW1cbiAgICAgKiBUaGlzIGlzIHVzZWQgdG8gY2xlYXIgdGhlIHN0b3JhZ2VcbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSB0aGUgZGF0YSBpdGVtXG4gICAgICovXG4gICAgTWVtb3J5U3RvcmFnZS5nZXRJdGVtID0gZnVuY3Rpb24gKGtleSkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGRhdGFNZW1vcnksIGtleSlcbiAgICAgICAgICAgID8gZGF0YU1lbW9yeVtrZXldXG4gICAgICAgICAgICA6IHVuZGVmaW5lZDtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFRoaXMgaXMgdXNlZCB0byByZW1vdmUgYW4gaXRlbSBmcm9tIHN0b3JhZ2VcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5IC0gdGhlIGtleSBiZWluZyBzZXRcbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSB2YWx1ZSAtIHZhbHVlIHRoYXQgd2FzIGRlbGV0ZWRcbiAgICAgKi9cbiAgICBNZW1vcnlTdG9yYWdlLnJlbW92ZUl0ZW0gPSBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHJldHVybiBkZWxldGUgZGF0YU1lbW9yeVtrZXldO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogVGhpcyBpcyB1c2VkIHRvIGNsZWFyIHRoZSBzdG9yYWdlXG4gICAgICogQHJldHVybnMge3N0cmluZ30gbm90aGluZ1xuICAgICAqL1xuICAgIE1lbW9yeVN0b3JhZ2UuY2xlYXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGRhdGFNZW1vcnkgPSB7fTtcbiAgICAgICAgcmV0dXJuIGRhdGFNZW1vcnk7XG4gICAgfTtcbiAgICByZXR1cm4gTWVtb3J5U3RvcmFnZTtcbn0oKSk7XG5leHBvcnQgeyBNZW1vcnlTdG9yYWdlIH07XG52YXIgU3RvcmFnZUhlbHBlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICAvKipcbiAgICAgKiBUaGlzIGlzIHVzZWQgdG8gZ2V0IGEgc3RvcmFnZSBvYmplY3RcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSB0aGUgc3RvcmFnZVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIFN0b3JhZ2VIZWxwZXIoKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICB0aGlzLnN0b3JhZ2VXaW5kb3cgPSB3aW5kb3cubG9jYWxTdG9yYWdlO1xuICAgICAgICAgICAgdGhpcy5zdG9yYWdlV2luZG93LnNldEl0ZW0oJ2F3cy5hbXBsaWZ5LnRlc3QtbHMnLCAxKTtcbiAgICAgICAgICAgIHRoaXMuc3RvcmFnZVdpbmRvdy5yZW1vdmVJdGVtKCdhd3MuYW1wbGlmeS50ZXN0LWxzJyk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGV4Y2VwdGlvbikge1xuICAgICAgICAgICAgdGhpcy5zdG9yYWdlV2luZG93ID0gTWVtb3J5U3RvcmFnZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGlzIGlzIHVzZWQgdG8gcmV0dXJuIHRoZSBzdG9yYWdlXG4gICAgICogQHJldHVybnMge29iamVjdH0gdGhlIHN0b3JhZ2VcbiAgICAgKi9cbiAgICBTdG9yYWdlSGVscGVyLnByb3RvdHlwZS5nZXRTdG9yYWdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdG9yYWdlV2luZG93O1xuICAgIH07XG4gICAgcmV0dXJuIFN0b3JhZ2VIZWxwZXI7XG59KCkpO1xuZXhwb3J0IHsgU3RvcmFnZUhlbHBlciB9O1xuLyoqXG4gKiBAZGVwcmVjYXRlZCB1c2UgbmFtZWQgaW1wb3J0XG4gKi9cbmV4cG9ydCBkZWZhdWx0IFN0b3JhZ2VIZWxwZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-amplify/core/lib-esm/StorageHelper/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-amplify/core/lib-esm/UniversalStorage/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/UniversalStorage/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UniversalStorage: () => (/* binding */ UniversalStorage)\n/* harmony export */ });\n/* harmony import */ var universal_cookie__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! universal-cookie */ \"(ssr)/./node_modules/universal-cookie/es6/index.js\");\n/* harmony import */ var _JS__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../JS */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/JS.js\");\n\n\nvar isBrowser = (0,_JS__WEBPACK_IMPORTED_MODULE_0__.browserOrNode)().isBrowser;\nvar UniversalStorage = /** @class */ (function () {\n    function UniversalStorage(context) {\n        if (context === void 0) { context = {}; }\n        this.cookies = new universal_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n        this.store = isBrowser ? window.localStorage : Object.create(null);\n        this.cookies = context.req\n            ? new universal_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"](context.req.headers.cookie)\n            : new universal_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n        Object.assign(this.store, this.cookies.getAll());\n    }\n    Object.defineProperty(UniversalStorage.prototype, \"length\", {\n        get: function () {\n            return Object.entries(this.store).length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    UniversalStorage.prototype.clear = function () {\n        var _this = this;\n        Array.from(new Array(this.length))\n            .map(function (_, i) { return _this.key(i); })\n            .forEach(function (key) { return _this.removeItem(key); });\n    };\n    UniversalStorage.prototype.getItem = function (key) {\n        return this.getLocalItem(key);\n    };\n    UniversalStorage.prototype.getLocalItem = function (key) {\n        return Object.prototype.hasOwnProperty.call(this.store, key)\n            ? this.store[key]\n            : null;\n    };\n    UniversalStorage.prototype.getUniversalItem = function (key) {\n        return this.cookies.get(key);\n    };\n    UniversalStorage.prototype.key = function (index) {\n        return Object.keys(this.store)[index];\n    };\n    UniversalStorage.prototype.removeItem = function (key) {\n        this.removeLocalItem(key);\n        this.removeUniversalItem(key);\n    };\n    UniversalStorage.prototype.removeLocalItem = function (key) {\n        delete this.store[key];\n    };\n    UniversalStorage.prototype.removeUniversalItem = function (key) {\n        this.cookies.remove(key, {\n            path: '/',\n        });\n    };\n    UniversalStorage.prototype.setItem = function (key, value) {\n        this.setLocalItem(key, value);\n        // keys take the shape:\n        //  1. `${ProviderPrefix}.${userPoolClientId}.${username}.${tokenType}\n        //  2. `${ProviderPrefix}.${userPoolClientId}.LastAuthUser\n        var tokenType = key.split('.').pop();\n        switch (tokenType) {\n            // LastAuthUser is needed for computing other key names\n            case 'LastAuthUser':\n            // accessToken is required for CognitoUserSession\n            case 'accessToken':\n            // refreshToken originates on the client, but SSR pages won't fail when this expires\n            // Note: the new `accessToken` will also be refreshed on the client (since Amplify doesn't set server-side cookies)\n            case 'refreshToken':\n            // Required for CognitoUserSession\n            case 'idToken':\n                isBrowser\n                    ? this.setUniversalItem(key, value)\n                    : this.setLocalItem(key, value);\n            // userData is used when `Auth.currentAuthenticatedUser({ bypassCache: false })`.\n            // Can be persisted to speed up calls to `Auth.currentAuthenticatedUser()`\n            // case 'userData':\n            // Ignoring clockDrift on the server for now, but needs testing\n            // case 'clockDrift':\n        }\n    };\n    UniversalStorage.prototype.setLocalItem = function (key, value) {\n        this.store[key] = value;\n    };\n    UniversalStorage.prototype.setUniversalItem = function (key, value) {\n        this.cookies.set(key, value, {\n            path: '/',\n            // `httpOnly` cannot be set via JavaScript: https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#JavaScript_access_using_Document.cookie\n            sameSite: true,\n            // Allow unsecure requests to http://localhost:3000/ when in development.\n            secure: window.location.hostname === 'localhost' ? false : true,\n        });\n    };\n    return UniversalStorage;\n}());\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1hbXBsaWZ5L2NvcmUvbGliLWVzbS9Vbml2ZXJzYWxTdG9yYWdlL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF1QztBQUNEO0FBQ3RDLGdCQUFnQixrREFBYTtBQUM3QjtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDLDJCQUEyQix3REFBTztBQUNsQztBQUNBO0FBQ0Esa0JBQWtCLHdEQUFPO0FBQ3pCLGtCQUFrQix3REFBTztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLHNCQUFzQjtBQUN6RCxzQ0FBc0MsK0JBQStCO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGVBQWUsR0FBRyxpQkFBaUIsR0FBRyxTQUFTLEdBQUc7QUFDcEUsa0JBQWtCLGVBQWUsR0FBRyxpQkFBaUI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNFQUFzRSxvQkFBb0I7QUFDMUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLENBQUM7QUFDMkI7QUFDNUIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3MtYW1wbGlmeS9jb3JlL2xpYi1lc20vVW5pdmVyc2FsU3RvcmFnZS9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29va2llcyBmcm9tICd1bml2ZXJzYWwtY29va2llJztcbmltcG9ydCB7IGJyb3dzZXJPck5vZGUgfSBmcm9tICcuLi9KUyc7XG52YXIgaXNCcm93c2VyID0gYnJvd3Nlck9yTm9kZSgpLmlzQnJvd3NlcjtcbnZhciBVbml2ZXJzYWxTdG9yYWdlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFVuaXZlcnNhbFN0b3JhZ2UoY29udGV4dCkge1xuICAgICAgICBpZiAoY29udGV4dCA9PT0gdm9pZCAwKSB7IGNvbnRleHQgPSB7fTsgfVxuICAgICAgICB0aGlzLmNvb2tpZXMgPSBuZXcgQ29va2llcygpO1xuICAgICAgICB0aGlzLnN0b3JlID0gaXNCcm93c2VyID8gd2luZG93LmxvY2FsU3RvcmFnZSA6IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgICAgIHRoaXMuY29va2llcyA9IGNvbnRleHQucmVxXG4gICAgICAgICAgICA/IG5ldyBDb29raWVzKGNvbnRleHQucmVxLmhlYWRlcnMuY29va2llKVxuICAgICAgICAgICAgOiBuZXcgQ29va2llcygpO1xuICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMuc3RvcmUsIHRoaXMuY29va2llcy5nZXRBbGwoKSk7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShVbml2ZXJzYWxTdG9yYWdlLnByb3RvdHlwZSwgXCJsZW5ndGhcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuZW50cmllcyh0aGlzLnN0b3JlKS5sZW5ndGg7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIFVuaXZlcnNhbFN0b3JhZ2UucHJvdG90eXBlLmNsZWFyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBBcnJheS5mcm9tKG5ldyBBcnJheSh0aGlzLmxlbmd0aCkpXG4gICAgICAgICAgICAubWFwKGZ1bmN0aW9uIChfLCBpKSB7IHJldHVybiBfdGhpcy5rZXkoaSk7IH0pXG4gICAgICAgICAgICAuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IHJldHVybiBfdGhpcy5yZW1vdmVJdGVtKGtleSk7IH0pO1xuICAgIH07XG4gICAgVW5pdmVyc2FsU3RvcmFnZS5wcm90b3R5cGUuZ2V0SXRlbSA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0TG9jYWxJdGVtKGtleSk7XG4gICAgfTtcbiAgICBVbml2ZXJzYWxTdG9yYWdlLnByb3RvdHlwZS5nZXRMb2NhbEl0ZW0gPSBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodGhpcy5zdG9yZSwga2V5KVxuICAgICAgICAgICAgPyB0aGlzLnN0b3JlW2tleV1cbiAgICAgICAgICAgIDogbnVsbDtcbiAgICB9O1xuICAgIFVuaXZlcnNhbFN0b3JhZ2UucHJvdG90eXBlLmdldFVuaXZlcnNhbEl0ZW0gPSBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvb2tpZXMuZ2V0KGtleSk7XG4gICAgfTtcbiAgICBVbml2ZXJzYWxTdG9yYWdlLnByb3RvdHlwZS5rZXkgPSBmdW5jdGlvbiAoaW5kZXgpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMuc3RvcmUpW2luZGV4XTtcbiAgICB9O1xuICAgIFVuaXZlcnNhbFN0b3JhZ2UucHJvdG90eXBlLnJlbW92ZUl0ZW0gPSBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHRoaXMucmVtb3ZlTG9jYWxJdGVtKGtleSk7XG4gICAgICAgIHRoaXMucmVtb3ZlVW5pdmVyc2FsSXRlbShrZXkpO1xuICAgIH07XG4gICAgVW5pdmVyc2FsU3RvcmFnZS5wcm90b3R5cGUucmVtb3ZlTG9jYWxJdGVtID0gZnVuY3Rpb24gKGtleSkge1xuICAgICAgICBkZWxldGUgdGhpcy5zdG9yZVtrZXldO1xuICAgIH07XG4gICAgVW5pdmVyc2FsU3RvcmFnZS5wcm90b3R5cGUucmVtb3ZlVW5pdmVyc2FsSXRlbSA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgdGhpcy5jb29raWVzLnJlbW92ZShrZXksIHtcbiAgICAgICAgICAgIHBhdGg6ICcvJyxcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBVbml2ZXJzYWxTdG9yYWdlLnByb3RvdHlwZS5zZXRJdGVtID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgICAgICAgdGhpcy5zZXRMb2NhbEl0ZW0oa2V5LCB2YWx1ZSk7XG4gICAgICAgIC8vIGtleXMgdGFrZSB0aGUgc2hhcGU6XG4gICAgICAgIC8vICAxLiBgJHtQcm92aWRlclByZWZpeH0uJHt1c2VyUG9vbENsaWVudElkfS4ke3VzZXJuYW1lfS4ke3Rva2VuVHlwZX1cbiAgICAgICAgLy8gIDIuIGAke1Byb3ZpZGVyUHJlZml4fS4ke3VzZXJQb29sQ2xpZW50SWR9Lkxhc3RBdXRoVXNlclxuICAgICAgICB2YXIgdG9rZW5UeXBlID0ga2V5LnNwbGl0KCcuJykucG9wKCk7XG4gICAgICAgIHN3aXRjaCAodG9rZW5UeXBlKSB7XG4gICAgICAgICAgICAvLyBMYXN0QXV0aFVzZXIgaXMgbmVlZGVkIGZvciBjb21wdXRpbmcgb3RoZXIga2V5IG5hbWVzXG4gICAgICAgICAgICBjYXNlICdMYXN0QXV0aFVzZXInOlxuICAgICAgICAgICAgLy8gYWNjZXNzVG9rZW4gaXMgcmVxdWlyZWQgZm9yIENvZ25pdG9Vc2VyU2Vzc2lvblxuICAgICAgICAgICAgY2FzZSAnYWNjZXNzVG9rZW4nOlxuICAgICAgICAgICAgLy8gcmVmcmVzaFRva2VuIG9yaWdpbmF0ZXMgb24gdGhlIGNsaWVudCwgYnV0IFNTUiBwYWdlcyB3b24ndCBmYWlsIHdoZW4gdGhpcyBleHBpcmVzXG4gICAgICAgICAgICAvLyBOb3RlOiB0aGUgbmV3IGBhY2Nlc3NUb2tlbmAgd2lsbCBhbHNvIGJlIHJlZnJlc2hlZCBvbiB0aGUgY2xpZW50IChzaW5jZSBBbXBsaWZ5IGRvZXNuJ3Qgc2V0IHNlcnZlci1zaWRlIGNvb2tpZXMpXG4gICAgICAgICAgICBjYXNlICdyZWZyZXNoVG9rZW4nOlxuICAgICAgICAgICAgLy8gUmVxdWlyZWQgZm9yIENvZ25pdG9Vc2VyU2Vzc2lvblxuICAgICAgICAgICAgY2FzZSAnaWRUb2tlbic6XG4gICAgICAgICAgICAgICAgaXNCcm93c2VyXG4gICAgICAgICAgICAgICAgICAgID8gdGhpcy5zZXRVbml2ZXJzYWxJdGVtKGtleSwgdmFsdWUpXG4gICAgICAgICAgICAgICAgICAgIDogdGhpcy5zZXRMb2NhbEl0ZW0oa2V5LCB2YWx1ZSk7XG4gICAgICAgICAgICAvLyB1c2VyRGF0YSBpcyB1c2VkIHdoZW4gYEF1dGguY3VycmVudEF1dGhlbnRpY2F0ZWRVc2VyKHsgYnlwYXNzQ2FjaGU6IGZhbHNlIH0pYC5cbiAgICAgICAgICAgIC8vIENhbiBiZSBwZXJzaXN0ZWQgdG8gc3BlZWQgdXAgY2FsbHMgdG8gYEF1dGguY3VycmVudEF1dGhlbnRpY2F0ZWRVc2VyKClgXG4gICAgICAgICAgICAvLyBjYXNlICd1c2VyRGF0YSc6XG4gICAgICAgICAgICAvLyBJZ25vcmluZyBjbG9ja0RyaWZ0IG9uIHRoZSBzZXJ2ZXIgZm9yIG5vdywgYnV0IG5lZWRzIHRlc3RpbmdcbiAgICAgICAgICAgIC8vIGNhc2UgJ2Nsb2NrRHJpZnQnOlxuICAgICAgICB9XG4gICAgfTtcbiAgICBVbml2ZXJzYWxTdG9yYWdlLnByb3RvdHlwZS5zZXRMb2NhbEl0ZW0gPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICAgICAgICB0aGlzLnN0b3JlW2tleV0gPSB2YWx1ZTtcbiAgICB9O1xuICAgIFVuaXZlcnNhbFN0b3JhZ2UucHJvdG90eXBlLnNldFVuaXZlcnNhbEl0ZW0gPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICAgICAgICB0aGlzLmNvb2tpZXMuc2V0KGtleSwgdmFsdWUsIHtcbiAgICAgICAgICAgIHBhdGg6ICcvJyxcbiAgICAgICAgICAgIC8vIGBodHRwT25seWAgY2Fubm90IGJlIHNldCB2aWEgSmF2YVNjcmlwdDogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRUUC9Db29raWVzI0phdmFTY3JpcHRfYWNjZXNzX3VzaW5nX0RvY3VtZW50LmNvb2tpZVxuICAgICAgICAgICAgc2FtZVNpdGU6IHRydWUsXG4gICAgICAgICAgICAvLyBBbGxvdyB1bnNlY3VyZSByZXF1ZXN0cyB0byBodHRwOi8vbG9jYWxob3N0OjMwMDAvIHdoZW4gaW4gZGV2ZWxvcG1lbnQuXG4gICAgICAgICAgICBzZWN1cmU6IHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZSA9PT0gJ2xvY2FsaG9zdCcgPyBmYWxzZSA6IHRydWUsXG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgcmV0dXJuIFVuaXZlcnNhbFN0b3JhZ2U7XG59KCkpO1xuZXhwb3J0IHsgVW5pdmVyc2FsU3RvcmFnZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-amplify/core/lib-esm/UniversalStorage/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-amplify/core/lib-esm/Util/CognitoIdentityClient.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/Util/CognitoIdentityClient.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCognitoIdentityClient: () => (/* binding */ createCognitoIdentityClient),\n/* harmony export */   middlewareArgs: () => (/* binding */ middlewareArgs)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_client_cognito_identity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/client-cognito-identity */ \"(ssr)/./node_modules/@aws-sdk/client-cognito-identity/dist/es/CognitoIdentityClient.js\");\n/* harmony import */ var _Platform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Platform */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/Platform/index.js\");\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n\n\n/**\n * Returns a CognitoIdentityClient with middleware\n * @param {CognitoIdentityClientConfig} config\n * @return {CognitoIdentityClient}\n */\nfunction createCognitoIdentityClient(config) {\n    var client = new _aws_sdk_client_cognito_identity__WEBPACK_IMPORTED_MODULE_0__.CognitoIdentityClient({\n        region: config.region,\n        customUserAgent: (0,_Platform__WEBPACK_IMPORTED_MODULE_1__.getAmplifyUserAgent)(),\n    });\n    client.middlewareStack.add(function (next, _) { return function (args) {\n        return next(middlewareArgs(args));\n    }; }, {\n        step: 'build',\n        name: 'cacheControlMiddleWare',\n    });\n    return client;\n}\nfunction middlewareArgs(args) {\n    return __assign(__assign({}, args), { request: __assign(__assign({}, args.request), { headers: __assign(__assign({}, args.request.headers), { 'cache-control': 'no-store' }) }) });\n}\n//# sourceMappingURL=CognitoIdentityClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1hbXBsaWZ5L2NvcmUvbGliLWVzbS9VdGlsL0NvZ25pdG9JZGVudGl0eUNsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBLGdCQUFnQixTQUFJLElBQUksU0FBSTtBQUM1QjtBQUNBLGlEQUFpRCxPQUFPO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDMEU7QUFDeEI7QUFDbEQ7QUFDQTtBQUNBLFdBQVcsNkJBQTZCO0FBQ3hDLFlBQVk7QUFDWjtBQUNPO0FBQ1AscUJBQXFCLG1GQUFxQjtBQUMxQztBQUNBLHlCQUF5Qiw4REFBbUI7QUFDNUMsS0FBSztBQUNMLG9EQUFvRDtBQUNwRDtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDTztBQUNQLCtCQUErQixXQUFXLDZCQUE2QixtQkFBbUIsNkJBQTZCLDJCQUEyQiw2QkFBNkIsR0FBRyxHQUFHO0FBQ3JMO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWlzaWRkaGFydGgvRG93bmxvYWRzL2J5dGV4LWh5ZHJvaGVyby00L2J0aGUvbm9kZV9tb2R1bGVzL0Bhd3MtYW1wbGlmeS9jb3JlL2xpYi1lc20vVXRpbC9Db2duaXRvSWRlbnRpdHlDbGllbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEFtYXpvbi5jb20sIEluYy4gb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbmltcG9ydCB7IENvZ25pdG9JZGVudGl0eUNsaWVudCwgfSBmcm9tICdAYXdzLXNkay9jbGllbnQtY29nbml0by1pZGVudGl0eSc7XG5pbXBvcnQgeyBnZXRBbXBsaWZ5VXNlckFnZW50IH0gZnJvbSAnLi4vUGxhdGZvcm0nO1xuLyoqXG4gKiBSZXR1cm5zIGEgQ29nbml0b0lkZW50aXR5Q2xpZW50IHdpdGggbWlkZGxld2FyZVxuICogQHBhcmFtIHtDb2duaXRvSWRlbnRpdHlDbGllbnRDb25maWd9IGNvbmZpZ1xuICogQHJldHVybiB7Q29nbml0b0lkZW50aXR5Q2xpZW50fVxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29nbml0b0lkZW50aXR5Q2xpZW50KGNvbmZpZykge1xuICAgIHZhciBjbGllbnQgPSBuZXcgQ29nbml0b0lkZW50aXR5Q2xpZW50KHtcbiAgICAgICAgcmVnaW9uOiBjb25maWcucmVnaW9uLFxuICAgICAgICBjdXN0b21Vc2VyQWdlbnQ6IGdldEFtcGxpZnlVc2VyQWdlbnQoKSxcbiAgICB9KTtcbiAgICBjbGllbnQubWlkZGxld2FyZVN0YWNrLmFkZChmdW5jdGlvbiAobmV4dCwgXykgeyByZXR1cm4gZnVuY3Rpb24gKGFyZ3MpIHtcbiAgICAgICAgcmV0dXJuIG5leHQobWlkZGxld2FyZUFyZ3MoYXJncykpO1xuICAgIH07IH0sIHtcbiAgICAgICAgc3RlcDogJ2J1aWxkJyxcbiAgICAgICAgbmFtZTogJ2NhY2hlQ29udHJvbE1pZGRsZVdhcmUnLFxuICAgIH0pO1xuICAgIHJldHVybiBjbGllbnQ7XG59XG5leHBvcnQgZnVuY3Rpb24gbWlkZGxld2FyZUFyZ3MoYXJncykge1xuICAgIHJldHVybiBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgYXJncyksIHsgcmVxdWVzdDogX19hc3NpZ24oX19hc3NpZ24oe30sIGFyZ3MucmVxdWVzdCksIHsgaGVhZGVyczogX19hc3NpZ24oX19hc3NpZ24oe30sIGFyZ3MucmVxdWVzdC5oZWFkZXJzKSwgeyAnY2FjaGUtY29udHJvbCc6ICduby1zdG9yZScgfSkgfSkgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db2duaXRvSWRlbnRpdHlDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-amplify/core/lib-esm/Util/CognitoIdentityClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-amplify/core/lib-esm/Util/Constants.js":
/*!******************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/Util/Constants.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AWS_CLOUDWATCH_BASE_BUFFER_SIZE: () => (/* binding */ AWS_CLOUDWATCH_BASE_BUFFER_SIZE),\n/* harmony export */   AWS_CLOUDWATCH_CATEGORY: () => (/* binding */ AWS_CLOUDWATCH_CATEGORY),\n/* harmony export */   AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE: () => (/* binding */ AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE),\n/* harmony export */   AWS_CLOUDWATCH_MAX_EVENT_SIZE: () => (/* binding */ AWS_CLOUDWATCH_MAX_EVENT_SIZE),\n/* harmony export */   AWS_CLOUDWATCH_PROVIDER_NAME: () => (/* binding */ AWS_CLOUDWATCH_PROVIDER_NAME),\n/* harmony export */   NO_CREDS_ERROR_STRING: () => (/* binding */ NO_CREDS_ERROR_STRING),\n/* harmony export */   RETRY_ERROR_CODES: () => (/* binding */ RETRY_ERROR_CODES)\n/* harmony export */ });\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// Logging constants\nvar AWS_CLOUDWATCH_BASE_BUFFER_SIZE = 26;\nvar AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE = 1048576;\nvar AWS_CLOUDWATCH_MAX_EVENT_SIZE = 256000;\nvar AWS_CLOUDWATCH_CATEGORY = 'Logging';\nvar AWS_CLOUDWATCH_PROVIDER_NAME = 'AWSCloudWatch';\nvar NO_CREDS_ERROR_STRING = 'No credentials';\nvar RETRY_ERROR_CODES = [\n    'ResourceNotFoundException',\n    'InvalidSequenceTokenException',\n];\n\n//# sourceMappingURL=Constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1hbXBsaWZ5L2NvcmUvbGliLWVzbS9VdGlsL0NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNpTjtBQUNqTiIsInNvdXJjZXMiOlsiL1VzZXJzL3NhaXNpZGRoYXJ0aC9Eb3dubG9hZHMvYnl0ZXgtaHlkcm9oZXJvLTQvYnRoZS9ub2RlX21vZHVsZXMvQGF3cy1hbXBsaWZ5L2NvcmUvbGliLWVzbS9VdGlsL0NvbnN0YW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMTctMjAxOSBBbWF6b24uY29tLCBJbmMuIG9yIGl0cyBhZmZpbGlhdGVzLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIikuIFlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aFxuICogdGhlIExpY2Vuc2UuIEEgY29weSBvZiB0aGUgTGljZW5zZSBpcyBsb2NhdGVkIGF0XG4gKlxuICogICAgIGh0dHA6Ly9hd3MuYW1hem9uLmNvbS9hcGFjaGUyLjAvXG4gKlxuICogb3IgaW4gdGhlIFwibGljZW5zZVwiIGZpbGUgYWNjb21wYW55aW5nIHRoaXMgZmlsZS4gVGhpcyBmaWxlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SXG4gKiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnNcbiAqIGFuZCBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuLy8gTG9nZ2luZyBjb25zdGFudHNcbnZhciBBV1NfQ0xPVURXQVRDSF9CQVNFX0JVRkZFUl9TSVpFID0gMjY7XG52YXIgQVdTX0NMT1VEV0FUQ0hfTUFYX0JBVENIX0VWRU5UX1NJWkUgPSAxMDQ4NTc2O1xudmFyIEFXU19DTE9VRFdBVENIX01BWF9FVkVOVF9TSVpFID0gMjU2MDAwO1xudmFyIEFXU19DTE9VRFdBVENIX0NBVEVHT1JZID0gJ0xvZ2dpbmcnO1xudmFyIEFXU19DTE9VRFdBVENIX1BST1ZJREVSX05BTUUgPSAnQVdTQ2xvdWRXYXRjaCc7XG52YXIgTk9fQ1JFRFNfRVJST1JfU1RSSU5HID0gJ05vIGNyZWRlbnRpYWxzJztcbnZhciBSRVRSWV9FUlJPUl9DT0RFUyA9IFtcbiAgICAnUmVzb3VyY2VOb3RGb3VuZEV4Y2VwdGlvbicsXG4gICAgJ0ludmFsaWRTZXF1ZW5jZVRva2VuRXhjZXB0aW9uJyxcbl07XG5leHBvcnQgeyBBV1NfQ0xPVURXQVRDSF9CQVNFX0JVRkZFUl9TSVpFLCBBV1NfQ0xPVURXQVRDSF9DQVRFR09SWSwgQVdTX0NMT1VEV0FUQ0hfTUFYX0JBVENIX0VWRU5UX1NJWkUsIEFXU19DTE9VRFdBVENIX01BWF9FVkVOVF9TSVpFLCBBV1NfQ0xPVURXQVRDSF9QUk9WSURFUl9OQU1FLCBOT19DUkVEU19FUlJPUl9TVFJJTkcsIFJFVFJZX0VSUk9SX0NPREVTLCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-amplify/core/lib-esm/Util/Constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-amplify/core/lib-esm/Util/Retry.js":
/*!**************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/Util/Retry.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NonRetryableError: () => (/* binding */ NonRetryableError),\n/* harmony export */   jitteredBackoff: () => (/* binding */ jitteredBackoff),\n/* harmony export */   jitteredExponentialRetry: () => (/* binding */ jitteredExponentialRetry),\n/* harmony export */   retry: () => (/* binding */ retry)\n/* harmony export */ });\n/* harmony import */ var _Logger_ConsoleLogger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Logger/ConsoleLogger */ \"(ssr)/./node_modules/@aws-amplify/core/lib-esm/Logger/ConsoleLogger.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (undefined && undefined.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\n\nvar logger = new _Logger_ConsoleLogger__WEBPACK_IMPORTED_MODULE_0__.ConsoleLogger('Util');\nvar NonRetryableError = /** @class */ (function (_super) {\n    __extends(NonRetryableError, _super);\n    function NonRetryableError(message) {\n        var _this = _super.call(this, message) || this;\n        _this.nonRetryable = true;\n        return _this;\n    }\n    return NonRetryableError;\n}(Error));\n\nvar isNonRetryableError = function (obj) {\n    var key = 'nonRetryable';\n    return obj && obj[key];\n};\n/**\n * @private\n * Internal use of Amplify only\n */\nfunction retry(functionToRetry, args, delayFn, onTerminate) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _this = this;\n        return __generator(this, function (_a) {\n            if (typeof functionToRetry !== 'function') {\n                throw Error('functionToRetry must be a function');\n            }\n            return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\n                    var attempt, terminated, timeout, wakeUp, lastError, _loop_1, state_1;\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                attempt = 0;\n                                terminated = false;\n                                wakeUp = function () { };\n                                onTerminate &&\n                                    onTerminate.then(function () {\n                                        // signal not to try anymore.\n                                        terminated = true;\n                                        // stop sleeping if we're sleeping.\n                                        clearTimeout(timeout);\n                                        wakeUp();\n                                    });\n                                _loop_1 = function () {\n                                    var _a, _b, err_1, retryIn_1;\n                                    return __generator(this, function (_c) {\n                                        switch (_c.label) {\n                                            case 0:\n                                                attempt++;\n                                                logger.debug(functionToRetry.name + \" attempt #\" + attempt + \" with this vars: \" + JSON.stringify(args));\n                                                _c.label = 1;\n                                            case 1:\n                                                _c.trys.push([1, 3, , 7]);\n                                                _a = {};\n                                                _b = resolve;\n                                                return [4 /*yield*/, functionToRetry.apply(void 0, __spread(args))];\n                                            case 2: return [2 /*return*/, (_a.value = _b.apply(void 0, [_c.sent()]), _a)];\n                                            case 3:\n                                                err_1 = _c.sent();\n                                                lastError = err_1;\n                                                logger.debug(\"error on \" + functionToRetry.name, err_1);\n                                                if (isNonRetryableError(err_1)) {\n                                                    logger.debug(functionToRetry.name + \" non retryable error\", err_1);\n                                                    return [2 /*return*/, { value: reject(err_1) }];\n                                                }\n                                                retryIn_1 = delayFn(attempt, args, err_1);\n                                                logger.debug(functionToRetry.name + \" retrying in \" + retryIn_1 + \" ms\");\n                                                if (!(retryIn_1 === false || terminated)) return [3 /*break*/, 4];\n                                                return [2 /*return*/, { value: reject(err_1) }];\n                                            case 4: return [4 /*yield*/, new Promise(function (r) {\n                                                    wakeUp = r; // export wakeUp for onTerminate handling\n                                                    timeout = setTimeout(wakeUp, retryIn_1);\n                                                })];\n                                            case 5:\n                                                _c.sent();\n                                                _c.label = 6;\n                                            case 6: return [3 /*break*/, 7];\n                                            case 7: return [2 /*return*/];\n                                        }\n                                    });\n                                };\n                                _a.label = 1;\n                            case 1:\n                                if (!!terminated) return [3 /*break*/, 3];\n                                return [5 /*yield**/, _loop_1()];\n                            case 2:\n                                state_1 = _a.sent();\n                                if (typeof state_1 === \"object\")\n                                    return [2 /*return*/, state_1.value];\n                                return [3 /*break*/, 1];\n                            case 3:\n                                // reached if terminated while waiting for a timer.\n                                reject(lastError);\n                                return [2 /*return*/];\n                        }\n                    });\n                }); })];\n        });\n    });\n}\nvar MAX_DELAY_MS = 5 * 60 * 1000;\n/**\n * @private\n * Internal use of Amplify only\n */\nfunction jitteredBackoff(maxDelayMs) {\n    if (maxDelayMs === void 0) { maxDelayMs = MAX_DELAY_MS; }\n    var BASE_TIME_MS = 100;\n    var JITTER_FACTOR = 100;\n    return function (attempt) {\n        var delay = Math.pow(2, attempt) * BASE_TIME_MS + JITTER_FACTOR * Math.random();\n        return delay > maxDelayMs ? false : delay;\n    };\n}\n/**\n * @private\n * Internal use of Amplify only\n */\nvar jitteredExponentialRetry = function (functionToRetry, args, maxDelayMs, onTerminate) {\n    if (maxDelayMs === void 0) { maxDelayMs = MAX_DELAY_MS; }\n    return retry(functionToRetry, args, jitteredBackoff(maxDelayMs), onTerminate);\n};\n//# sourceMappingURL=Retry.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-amplify/core/lib-esm/Util/Retry.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@aws-amplify/core/lib-esm/Util/StringUtils.js":
/*!********************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/Util/StringUtils.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   urlSafeDecode: () => (/* binding */ urlSafeDecode),\n/* harmony export */   urlSafeEncode: () => (/* binding */ urlSafeEncode)\n/* harmony export */ });\nfunction urlSafeEncode(str) {\n    return str\n        .split('')\n        .map(function (char) {\n        return char\n            .charCodeAt(0)\n            .toString(16)\n            .padStart(2, '0');\n    })\n        .join('');\n}\nfunction urlSafeDecode(hex) {\n    return hex\n        .match(/.{2}/g)\n        .map(function (char) { return String.fromCharCode(parseInt(char, 16)); })\n        .join('');\n}\n//# sourceMappingURL=StringUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF3cy1hbXBsaWZ5L2NvcmUvbGliLWVzbS9VdGlsL1N0cmluZ1V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ087QUFDUDtBQUNBLGtCQUFrQixFQUFFO0FBQ3BCLCtCQUErQixpREFBaUQ7QUFDaEY7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2Fpc2lkZGhhcnRoL0Rvd25sb2Fkcy9ieXRleC1oeWRyb2hlcm8tNC9idGhlL25vZGVfbW9kdWxlcy9AYXdzLWFtcGxpZnkvY29yZS9saWItZXNtL1V0aWwvU3RyaW5nVXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHVybFNhZmVFbmNvZGUoc3RyKSB7XG4gICAgcmV0dXJuIHN0clxuICAgICAgICAuc3BsaXQoJycpXG4gICAgICAgIC5tYXAoZnVuY3Rpb24gKGNoYXIpIHtcbiAgICAgICAgcmV0dXJuIGNoYXJcbiAgICAgICAgICAgIC5jaGFyQ29kZUF0KDApXG4gICAgICAgICAgICAudG9TdHJpbmcoMTYpXG4gICAgICAgICAgICAucGFkU3RhcnQoMiwgJzAnKTtcbiAgICB9KVxuICAgICAgICAuam9pbignJyk7XG59XG5leHBvcnQgZnVuY3Rpb24gdXJsU2FmZURlY29kZShoZXgpIHtcbiAgICByZXR1cm4gaGV4XG4gICAgICAgIC5tYXRjaCgvLnsyfS9nKVxuICAgICAgICAubWFwKGZ1bmN0aW9uIChjaGFyKSB7IHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKHBhcnNlSW50KGNoYXIsIDE2KSk7IH0pXG4gICAgICAgIC5qb2luKCcnKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVN0cmluZ1V0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aws-amplify/core/lib-esm/Util/StringUtils.js\n");

/***/ })

};
;